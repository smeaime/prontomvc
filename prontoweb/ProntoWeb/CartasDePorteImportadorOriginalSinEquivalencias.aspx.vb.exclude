Imports System
Imports System.Data.SqlClient
Imports System.Reflection
Imports System.IO
Imports System.Web.UI.WebControls
Imports Pronto.ERP.Bll
Imports Pronto.ERP.BO
Imports Pronto.ERP.Bll.EntidadManager
Imports Microsoft.Office.Interop.Excel
Imports System.Text
Imports System.Data
Imports System.Diagnostics
Imports System.Web.UI
Imports Excel = Microsoft.Office.Interop.Excel


Partial Class CartasDePorteImportador
    Inherits System.Web.UI.Page

    'Tecnicas de importacion de excel a gridview
    ' 
    'http://forums.asp.net/p/1192930/2057005.aspx#2057005
    'http://forums.asp.net/t/1195205.aspx
    'Una tecnica puede ser usar un ODS  http://forums.asp.net/t/995531.aspx

    'http://www.4guysfromrolla.com/articles/031208-1.aspx
    'http://www.aspboy.com/Categories/GridArticles/Excel_Like_GridView.aspx


    'http://www.codeproject.com/KB/webforms/BulkEditGridView.aspx

    'voy a necesitar eliminacion de columnas y desplazamiento de columnas?

    'copy paste
    'http://forums.asp.net/t/1092548.aspx

    'asuntos del render
    'http://forums.asp.net/p/901776/986762.aspx#986762

    'asuntos con el teclado (las flechitas)
    'http://forums.asp.net/t/1522647.aspx
    'http://codeasp.net/articles/gridview-rows-navigation-using-arrow-up-down-keys/137/gridview-rows-navigation-using-arrow-up-down-keys

    'VINCE XU
    'Hi, There are two approach for achieving it.
    'One is using Excel Object(Microsoft.Office.Interop.Excel) to retrieve it into DataSet.
    'The following post is retrieving excel file and import into GridView by using Microsoft.Office.Interop.Excel: http://forums.asp.net/p/1192930/2057005.aspx#2057005
    'Another is using OLEDB to retrieve excel into DataSet which can be convert into database. It's easier and more appropriated for you.


    Private DIRFTP As String = "C:\"

    Private IdComparativa As Integer = -1
    Private mKey As String, SC As String
    Private mAltaItem As Boolean
    Private usuario As Usuario = Nothing



    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load

        'If Not (Request.QueryString.Get("Id") Is Nothing) Then 'si trajo el parametro ID, lo guardo aparte
        '    IdComparativa = Convert.ToInt32(Request.QueryString.Get("Id"))
        '    Me.IdEntity = IdComparativa
        'End If
        'mKey = "Comparativa_" & Me.IdEntity.ToString
        'mAltaItem = False
        usuario = New Usuario
        usuario = Session("USUARIO")

        'que pasa si el usuario es Nothing? Qué se rompió?
        If usuario Is Nothing Then Response.Redirect(String.Format("../Login.aspx"))

        SC = usuario.StringConnection


        DIRFTP = System.IO.Path.GetTempPath()

        '///////////////////////////
        '///////////////////////////
        'DEBUG
        'Dim ds As DataSet = GetExcel("C:\Rasic Monte.xls") '("C:\williamsf11.xls") '   (DIRFTP + FileUpLoad2.FileName)
        'GridView1.DataSource = ds
        'GridView1.DataBind()
        'GridView2.DataSource = ds
        'GridView2.DataBind()
        '///////////////////////////
        '///////////////////////////


    End Sub




    Const MAXFILAS = 150

    Public Function GetExcel(ByVal fileName As String, Optional ByVal SheetNumero As Integer = 1) As DataSet
        'traido de http://www.devcurry.com/2009/07/import-excel-data-into-aspnet-gridview_06.html

        Dim oXL As Application
        Dim oWB As Workbook
        Dim oSheet As Worksheet
        Dim oRng As Range
        Dim oWBs As Workbooks

        Try
            '  creat a Application object
            oXL = New ApplicationClass()
            '   get   WorkBook  object
            oWBs = oXL.Workbooks
            oWB = oWBs.Open(fileName, Missing.Value, Missing.Value, _
Missing.Value, Missing.Value, Missing.Value, Missing.Value, Missing.Value, _
Missing.Value, Missing.Value, Missing.Value, Missing.Value, Missing.Value, _
Missing.Value, Missing.Value)

            '   get   WorkSheet object
            oSheet = CType(oWB.Sheets(SheetNumero),  _
            Microsoft.Office.Interop.Excel.Worksheet)
            Dim dt As New System.Data.DataTable("dtExcel")
            Dim ds As New DataSet()
            ds.Tables.Add(dt)
            Dim dr As DataRow

            Dim sb As New StringBuilder()
            Dim jValue As Integer = 25  'oSheet.UsedRange.Cells.Columns.Count
            Dim iValue As Integer = IIf(oSheet.UsedRange.Cells.Rows.Count > MAXFILAS, MAXFILAS, oSheet.UsedRange.Cells.Rows.Count)


            dt.Columns.Add("Estado", System.Type.GetType("System.String")) 'para el check
            dt.Columns.Add("check1", System.Type.GetType("System.String")) 'para el check
            dt.Columns.Add("URLgenerada", System.Type.GetType("System.String")) 'para el check

            dt.Columns.Add("IdTitular", System.Type.GetType("System.Int32")) 'para el color de validacion
            dt.Columns.Add("IdIntermediario", System.Type.GetType("System.Int32")) 'para el color de validacion
            dt.Columns.Add("IdRComercial", System.Type.GetType("System.Int32")) 'para el color de validacion
            dt.Columns.Add("IdCorredor", System.Type.GetType("System.Int32")) 'para el color de validacion
            dt.Columns.Add("IdDestinatario", System.Type.GetType("System.Int32")) 'para el color de validacion
            dt.Columns.Add("IdChofer", System.Type.GetType("System.Int32")) 'para el color de validacion






            '  get data columns
            For j As Integer = 1 To jValue
                dt.Columns.Add("column" & j, _
                               System.Type.GetType("System.String"))
            Next j

            '  get data in cell
            For i As Integer = 1 To iValue
                dr = ds.Tables("dtExcel").NewRow()

                For j As Integer = 1 To jValue

                    oRng = CType(oSheet.Cells(i, j), Microsoft.Office.Interop.Excel.Range)
                    Dim strValue As String = oRng.Text.ToString()
                    dr("column" & j) = strValue

                Next j

                ds.Tables("dtExcel").Rows.Add(dr)
            Next i
            Return ds
        Catch ex As Exception
            ErrHandler2.WriteError("No pudo extraer el excel. " + ex.ToString)
            Return Nothing


            '            1. In DCOMCNFG, right click on the My Computer and select properties.
            '2. Choose the COM Securities tab
            '3. In Access Permissions, click "Edit Defaults" and add Network Service to it and give it "Allow local access" permission. Do the same for <Machine_name>
            '  \Users.
            '  4. In launch and Activation Permissions, click "Edit Defaults" and add Network Service to it and give it "Local launch" and "Local Activation" permission. Do the same for <Machine_name>
            '    \Users
            '   Press OK and thats it. i can run my application now
        Finally
            Try
                'The service (excel.exe) will continue to run
                If Not oWB Is Nothing Then oWB.Close(False)
                NAR(oWB)
                oWBs.Close()
                NAR(oWBs)
                'quit and dispose app
                oXL.Quit()
                NAR(oXL)
                'VERY IMPORTANT
                GC.Collect()

                'Dispose()  'este me arruinaba todo, me hacia aparecer el cartelote del Prerender
            Catch ex As Exception
                ErrHandler2.WriteError("No pudo cerrar el servicio excel. " + ex.ToString)
            End Try
        End Try
    End Function




    'Protected Sub Button1_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles Button1.Click
    '    Dim update = "update XXX name='{0}', .... where id={0}"

    '    For Each r As GridViewRow In GridView1.Rows
    '        'dim name = ((TextBox)r.FindControl("txtName")).Text;
    '        'dim id = ((TextBox)r.FindControl("txtId")).Text;

    '        'dim SqlCommand cmd = new SqlCommand(string.Format(update,name,...,id),"Your Connection"))
    '        '      cmd.ExecuteNoneQuery()

    '        '      'Re-databinding now here...
    '        '      GridView.DataSource = XXXX
    '        '      GridView.DataBind()
    '    Next

    'End Sub







    Public Overrides Sub VerifyRenderingInServerForm(ByVal control As Control)
        'esto es necesario para que  se pueda hacer render de la grilla (parece que es un bug de la gridview)
        'http://forums.asp.net/p/901776/986762.aspx#986762
        ''
    End Sub




    'Código original de importacion

    Public Sub ImportacionComprobantesFondoFijo2()

        Dim oAp 
        Dim oCP 'As ComPronto.ComprobanteProveedor 
        Dim oPr 'As ComPronto.Proveedor 
        Dim oPar 'As ComPronto.Parametro 
        Dim oOP 'As ComPronto.OrdenPago 
        Dim oRsAux1 As adodb.Recordset
        Dim oRsAux2 As adodb.Recordset
        Dim oEx As Excel.Application

        Dim mOk As Boolean, mConProblemas As Boolean

        If Not mOk Then Exit Sub

        oEx = CreateObject("Excel.Application")

        With oEx

            With .Workbooks.Open("asdasd.xls")
                With .ActiveSheet
                    Do While True

                        'If mNumeroRendicion = 0 And IsNumeric(.Cells(2, 16)) Then mNumeroRendicion = .Cells(2, 16)
                        'mContador = mContador + 1


                        'mTipo = .Cells(fl, 4)
                        'If Len(.Cells(fl, 5)) > 0 Then
                        '    mIdTipoComprobante = .Cells(fl, 5)
                        'Else
                        '    mIdTipoComprobante = mIdTipoComprobanteFacturaCompra
                        'End If


                        'If IsDate(.Cells(fl, 19)) Then
                        '    mFechaVencimientoCAI = CDate(.Cells(fl, 19))
                        'Else
                        '         "-" & Format(mNumeroComprobante2, "00000000") & ", fila " & fl & "  - Fecha es anterior al ultimo cierre contable : " & mComprobante
                        '    fl = fl + 1
                        'End If
                        '    Else
                        'Exit Do
                        '    End If
                    Loop
                End With
                .Close(False)
            End With
            .Quit()
        End With

        'If Len(mError) > 0 Then
        '    MsgBoxAjax(Me, "Los siguientes comprobantes no se importaron :" & vbCrLf & mError, vbExclamation)
        'End If

    End Sub



    '////////////////////////////////////////////////////////////////////////////////////////////////
    '////////////////////////////////////////////////////////////////////////////////////////////////
    '////////////////////////////////////////////////////////////////////////////////////////////////



    'linkbutton de descarga del encabezado 
    Protected Sub lnkAdjunto1_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles lnkAdjunto1.Click
        Dim FilePath As String = lnkAdjunto1.Text  'si lo grabó el pronto, va a venir con el directorio original...
        Dim FileName As String = System.IO.Path.GetFileName(FilePath)

        'System.IO.Path.GetFileName(FilePath)
        'System.IO.Path.GetDirectoryName()

        'EL BOTON DE DESCARGA DEBE ESTAR AFUERA DE LOS UPDATEPANEL!!!!!!!
        If FilePath <> "" Then
            Dim MyFile As New FileInfo(FilePath)
            If MyFile.Exists Then
                'Set the appropriate ContentType.
                Try
                    Response.ContentType = "application/octet-stream"
                    Response.AddHeader("Content-Disposition", "attachment; filename=" & FileName)
                    'Write the file directly to the HTTP output stream.
                    Response.TransmitFile(FilePath)
                    Response.End()
                Catch ex As Exception
                    MsgBoxAjax(Me, ex.ToString)
                End Try
            End If
        Else
            MsgBoxAjax(Me, "No se encuentra el archivo")
            Exit Sub
        End If

    End Sub

    'subida de adjunto del encabezado
    Protected Sub btnAdjuntoSubir_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnAdjuntoSubir.Click

        'http://forums.asp.net/t/1048832.aspx  'COMO SUBIr de a varios!!!

        'if (FileUpLoad1.HasFile) {

        'http://mattberseth.com/blog/2008/07/aspnet_file_upload_with_realti_1.html

        'http://geekswithblogs.net/ranganh/archive/2008/04/01/file-upload-in-updatepanel-asp.net-ajax.aspx
        If FileUpLoad2.FileName <> "" Then
            Try


                Dim MyFile1 As New FileInfo(DIRFTP + FileUpLoad2.FileName)
                Try
                    If MyFile1.Exists Then
                        MyFile1.Delete()
                    End If
                Catch ex As Exception
                End Try


                FileUpLoad2.SaveAs(DIRFTP + FileUpLoad2.FileName)
                lnkAdjunto1.Text = DIRFTP + FileUpLoad2.FileName

                'oculto y muestro los controles hasta que se me ocurra una manera más piola
                MostrarBotonesParaAdjuntar(False)

                RefrescaGrilla()

            Catch ex As Exception
                MsgBoxAlert(ex.ToString)
            End Try
        Else
            'FileUpLoad2.click 'estaría bueno que se pudiese hacer esto, es decir, llamar al click
        End If
    End Sub

    Sub MostrarBotonesParaAdjuntar(ByVal mostrar As Boolean)
        lnkAdjunto1.Visible = Not mostrar
        lnkBorrarAdjunto.Visible = Not mostrar And lnkAdjunto1.Text <> "" 'si no hay arhcivo, no hay borrar

        FileUpLoad2.Visible = mostrar
        btnAdjuntoSubir.Visible = mostrar
    End Sub

    Protected Sub lnkBorrarAdjunto_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles lnkBorrarAdjunto.Click
        lnkAdjunto1.Text = ""
        MostrarBotonesParaAdjuntar(True)
    End Sub


    Sub RefrescaGrilla()

        Dim ds As DataSet = GetExcel(lnkAdjunto1.Text) '   (DIRFTP + FileUpLoad2.FileName)
        If ds Is Nothing Then Exit Sub




        Dim row As DataRow

        Dim renglonDeTitulos As Integer

        'busco el renglon con los titulos para despues hacer el macheo
        For j = ds.Tables(0).Rows.Count - 1 To 0 Step -1
            row = ds.Tables(0).Rows(j)
            If row.Item("column1").ToString.ToUpper = "PRODUCTO" Then
                renglonDeTitulos = j
            End If
        Next

        '//////////////////////////////////////////
        '//////////////////////////////////////////
        'machear las columnas 
        For j = ds.Tables(0).Rows.Count - 1 To renglonDeTitulos + 1 Step -1
            row = ds.Tables(0).Rows(j)
            If row.Item("column1").ToString.ToUpper = "PRODUCTO" Then 'busco la fila donde estan descriptas las columnas


                For i = ds.Tables(0).Columns.Count - 1 To 0 Step -1
                    Select Case row.Item(i).ToString.ToUpper

                        Case "PRODUCTO", "PROD.", "MERC.", "MER"
                            ds.Tables(0).Columns(i).ColumnName = "column1"

                        Case "VENDEDOR", "CARGADOR", "TITULAR DE CARTA DE PORTE", "REMITENTE"
                            ds.Tables(0).Columns(i).ColumnName = "column2"

                        Case "CUENTA ORDEN 1", "1º CTA./Orden", "CY O 1", "INTERMEDIARIO"
                            ds.Tables(0).Columns(i).ColumnName = "column3"

                        Case "CUENTA ORDEN 2", "2º CTA./Orden", "CY O 2", "REMITENTE COMERCIAL"
                            ds.Tables(0).Columns(i).ColumnName = "column4"

                        Case "CORREDOR"
                            ds.Tables(0).Columns(i).ColumnName = "column5"

                        Case "DESTINATARIO", "ENTREGADOR", "EXPORTADOR", "EXPORT.", "COMPRADOR"

                            'ds.Tables(0).Columns(i).ColumnName = "column5"

                        Case "CARTA PORTE", "C/PORTE", "C. PORTE", "C.PORTE", "C. P.", "CCPP"
                            ds.Tables(0).Columns(i).ColumnName = "column7"





                        Case "PROCEDENCIA", "PROCED", "PROCENDECIA"
                            ds.Tables(0).Columns(i).ColumnName = "column6"



                        Case "TURNO"
                            'ds.Tables(0).Columns(i).ColumnName = "column8"
                        Case "PATENTE", "PAT CHASIS"
                            ds.Tables(0).Columns(i).ColumnName = "column8"
                        Case "ACOPLADO"
                            ds.Tables(0).Columns(i).ColumnName = "column9"


                        Case "NETO PROC", "KG. PROC.", "KG,PROC", "KG P"
                            ds.Tables(0).Columns(i).ColumnName = "column10"
                        Case "CALIDAD", "CALID."
                            ds.Tables(0).Columns(i).ColumnName = "column11"

                        Case "BRUTO PTO"
                            ds.Tables(0).Columns(i).ColumnName = "column12"
                        Case "TARA PTO"
                            ds.Tables(0).Columns(i).ColumnName = "column13"
                        Case "NETO PTO", "NETO", "KG. DESC.", "KGS.", "KG.DESC"
                            ds.Tables(0).Columns(i).ColumnName = "column14"

                        Case "NETO FINAL"
                            ds.Tables(0).Columns(i).ColumnName = "column17"


                        Case "HUMEDAD"
                            ds.Tables(0).Columns(i).ColumnName = "column15"
                        Case "MERMA"
                            ds.Tables(0).Columns(i).ColumnName = "column16"
                        Case "F. DE CARGA"
                            ds.Tables(0).Columns(i).ColumnName = "column18"
                        Case "FECHA VTO."
                            ds.Tables(0).Columns(i).ColumnName = "column19"
                        Case "C.E.E"
                            ds.Tables(0).Columns(i).ColumnName = "column20"
                        Case "TRANSPORTISTA"
                            ds.Tables(0).Columns(i).ColumnName = "column21"
                            'Case "Cuit"
                            'ds.Tables(0).Columns(i).ColumnName = "column22"
                        Case "CHOFER"
                            ds.Tables(0).Columns(i).ColumnName = "column23"
                            'Case "Cuit"
                            'ds.Tables(0).Columns(i).ColumnName = "column24"
                        Case "OBSERVACIONES", "OBSERVACION"
                            ds.Tables(0).Columns(i).ColumnName = "column25"



                        Case "HORA", "SALIO"

                    End Select
                Next



            End If
        Next



        '//////////////////////////////////////////
        '//////////////////////////////////////////
        '//////////////////////////////////////////
        '//////////////////////////////////////////
        '//////////////////////////////////////////
        '//////////////////////////////////////////

        'repito los valores que son para todas las filas 

        Try
            ds.Tables(0).Columns.Add("Comprador") 'por si no esta macheada y hay que porlotanto crearla
        Catch ex As Exception
        End Try
        Try
            ds.Tables(0).Columns.Add("Destino") 'por si no esta macheada y hay que porlotanto crearla
        Catch ex As Exception
        End Try
        Try
            ds.Tables(0).Columns.Add("Subcontratista1") 'por si no esta macheada y hay que porlotanto crearla
        Catch ex As Exception
        End Try
        Try
            ds.Tables(0).Columns.Add("Subcontratista2") 'por si no esta macheada y hay que porlotanto crearla
        Catch ex As Exception
        End Try
        Try
            ds.Tables(0).Columns.Add("FechaDescarga") 'por si no esta macheada y hay que porlotanto crearla
        Catch ex As Exception
        End Try



        For j = renglonDeTitulos To 0 Step -1
            row = ds.Tables(0).Rows(j)
            Debug.Print(row.Item("column1").ToString.ToUpper)
            Select Case Trim(row.Item("column1").ToString.ToUpper)

                Case "DESTINATARIO", "ENTREGADOR", "EXPORTADOR", "EXPORT.", "COMPRADOR"

                    For i = renglonDeTitulos + 1 To ds.Tables(0).Rows.Count - 1 'lo copio en todas las filas
                        ds.Tables(0).Rows(i).Item("Comprador") = row.Item("column2").ToString
                    Next i

                Case "DESTINO"
                    For i = renglonDeTitulos + 1 To ds.Tables(0).Rows.Count - 1 'lo copio en todas las filas
                        ds.Tables(0).Rows(i).Item("Destino") = row.Item("column2").ToString
                    Next i

                Case "SUBCONTRATISTAS"

                    For i = renglonDeTitulos + 1 To ds.Tables(0).Rows.Count - 1 'lo copio en todas las filas
                        ds.Tables(0).Rows(i).Item("Subcontratista1") = row.Item("column2").ToString
                    Next i
                    For i = renglonDeTitulos + 1 To ds.Tables(0).Rows.Count - 1 'lo copio en todas las filas
                        ds.Tables(0).Rows(i).Item("Subcontratista2") = row.Item("column2").ToString
                    Next i

                Case "CALIDAD", "CALID."
                    For i = renglonDeTitulos + 1 To ds.Tables(0).Rows.Count - 1 'lo copio en todas las filas
                        ds.Tables(0).Rows(i).Item("column11") = row.Item("column2").ToString
                    Next i

                Case "F. DE CARGA"
                    For i = renglonDeTitulos + 1 To ds.Tables(0).Rows.Count - 1 'lo copio en todas las filas
                        ds.Tables(0).Rows(i).Item("column18") = row.Item("column2").ToString
                    Next i

                Case "F. DE DESCARGA", "FECHA"
                    For i = renglonDeTitulos + 1 To ds.Tables(0).Rows.Count - 1 'lo copio en todas las filas
                        ds.Tables(0).Rows(i).Item("FechaDescarga") = row.Item("column2").ToString
                    Next i

            End Select

        Next
        '//////////////////////////////////////////
        '//////////////////////////////////////////
        '//////////////////////////////////////////
        '//////////////////////////////////////////



        'saco renglones sin numero de carta de porte
        For j = ds.Tables(0).Rows.Count - 1 To 0 Step -1
            row = ds.Tables(0).Rows(j)
            If Not IsNumeric(Replace(row.Item("column7"), "-", "")) Then
                ds.Tables(0).Rows.Remove(row)
            End If
        Next




        '//////////////////////////////////////////
        '//////////////////////////////////////////


        DatatableToViewstate(ds.Tables(0))

        GridView2.DataSource = ds.Tables(0)
        GridView2.DataBind()

        'GridView1.DataSource = ds
        'GridView1.DataBind()

    End Sub

    Protected Sub GridView2_PageIndexChanging(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewPageEventArgs) Handles GridView2.PageIndexChanging

        GridView2.PageIndex = e.NewPageIndex
        gv2rebind()
    End Sub

    Protected Sub GridView2_RowCommand(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewCommandEventArgs) Handles GridView2.RowCommand
        If (e.CommandName.Equals("EditPopup")) Then
            ShowPopup()
        End If
    End Sub

    '////////////////////////////////////////////////////////////////////////////////////////////////////////////


    Protected Sub GridView2_RowDeleting(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewDeleteEventArgs) Handles GridView2.RowDeleting
        'Delete(HFSC.Value, GridView2.DataKeys(e.RowIndex).Values(0).ToString())
        'FillCustomerInGrid()
    End Sub

    Protected Sub GridView2_RowEditing(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewEditEventArgs) Handles GridView2.RowEditing
        GridView2.EditIndex = e.NewEditIndex
        gv2rebind()
        'FillCustomerInGrid()
    End Sub



    Sub gv2rebind(Optional ByVal dt As Data.DataTable = Nothing)

        If IsNothing(dt) Then
            GridView2.DataSource = ViewstateToDatatable()
        Else
            GridView2.DataSource = dt
        End If

        GridView2.DataBind()
    End Sub


    Sub DatatableToViewstate(ByVal dt As Data.DataTable)
        ViewState("MyData") = dt
    End Sub

    Function ViewstateToDatatable() As Data.DataTable

        Dim x As Data.DataTable

        x = CType(ViewState("MyData"), Data.DataTable)

        Return x
    End Function


    Protected Sub GridView2_RowUpdating(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewUpdateEventArgs) Handles GridView2.RowUpdating
        Dim dt = ViewstateToDatatable()


        'se aplican los cambios editados
        With GridView2.Rows(e.RowIndex)


            'Metodo con datatable
            'Dim Id = GridView2.DataKeys(e.RowIndex).Values(0).ToString()
            Dim dr = dt.Rows(e.RowIndex)


            dr.Item("column2") = TextoWebControl(.FindControl("txtName2")) 'IdNull(BuscaIdClientePreciso(TextoWebControl(.FindControl("txtName2")), SC))
            'dr.Item("CuentaOrden1") = IdNull(BuscaIdClientePreciso(TextoWebControl(.FindControl("txtCuentaOrden1")), HFSC.Value))
            'dr.Item("CuentaOrden2") = IdNull(BuscaIdClientePreciso(TextoWebControl(.FindControl("txtCuentaOrden2")), HFSC.Value))
            'dr.Item("Corredor") = IdNull(BuscaIdVendedorPreciso(TextoWebControl(.FindControl("txtCorredor")), HFSC.Value))
            'dr.Item("Entregador") = IdNull(BuscaIdClientePreciso(TextoWebControl(.FindControl("txtEntregador")), HFSC.Value))
            'dr.Item("Destino") = IdNull(BuscaIdWilliamsDestino(TextoWebControl(.FindControl("txtDestino")), HFSC.Value))
            'dr.Item("Procedencia") = IdNull(BuscaIdLocalidadPreciso(TextoWebControl(.FindControl("txtProcedencia")), HFSC.Value))

            'dr.Item("FechaDesde") = iisValidSqlDate(TextoWebControl(.FindControl("txtFechaDesde")), DBNull.Value)
            'dr.Item("FechaHasta") = iisValidSqlDate(TextoWebControl(.FindControl("txtFechaHasta")), DBNull.Value)

            'dr.Item("Modo") = TextoWebControl(.FindControl("cmbModo")) 'CType(.FindControl("cmbModo"), DropDownList).SelectedValue
            'dr.Item("EsPosicion") = (TextoWebControl(.FindControl("cmbPosicion")) = "Posicion")
            'dr.Item("IdArticulo") = IdNull(CType(.FindControl("cmbArticulo"), DropDownList).SelectedValue)

            'dr.Item("IdLocalidad") = IdNull(BuscaIdLocalidadPreciso(TextoWebControl(.FindControl("txtLocalidad")), HFSC.Value))

        End With

        GridView2.EditIndex = -1
        gv2rebind()
        DatatableToViewstate(dt)

    End Sub

    Protected Sub GridView2_RowCancelingEdit(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewCancelEditEventArgs) Handles GridView2.RowCancelingEdit
        GridView2.EditIndex = -1
        gv2rebind()
        'FillCustomerInGrid()
    End Sub


    '////////////////////////////////////////////////////////////////////////////////////////////////////////////

    Protected Sub Button1_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles Button1.Click
        RefrescaGrilla()
    End Sub


    Sub GrabaGrilla()
        Dim dt = ViewstateToDatatable()

        'For Each r As GridViewRow In GridView2.Rows
        For Each dr As DataRow In dt.Rows


            Dim myCartaDePorte As New Pronto.ERP.BO.CartaDePorte


            'If existeLaCarta Then
            Dim numeroCarta As Long = Val(Replace(dr.Item("column7"), "-", ""))
            myCartaDePorte = CartaDePorteManager.GetItemPorNumero(SC, numeroCarta)
            'End If

            With myCartaDePorte
                'Pinta que no hay otra manera de actualizar un dataset suelto http://forums.asp.net/p/755961/1012665.aspx
                .NumeroCartaDePorte = numeroCarta

                '/////////////////////////////////////////
                '/////////////////////////////////////////

                .Vendedor = BuscaIdClientePreciso(dr.Item("column2"), SC)
                '.Vendedor = BuscaIdCliente(dr.item( "Vendedor"), SC)
                dr.Item("IdTitular") = .Vendedor

                .CuentaOrden1 = BuscaIdClientePreciso(dr.Item("column3"), SC)
                dr.Item("IdIntermediario") = .CuentaOrden1


                .CuentaOrden2 = BuscaIdClientePreciso(dr.Item("column4"), SC)
                dr.Item("IdRComercial") = .CuentaOrden2


                .Corredor = BuscaIdVendedorPreciso(dr.Item("column5"), SC)
                dr.Item("IdCorredor") = .Corredor


                .Entregador = BuscaIdClientePreciso(dr.Item("Comprador"), SC)
                dr.Item("IdDestinatario") = .Entregador


                '/////////////////////////////////////////

                .IdArticulo = BuscaIdArticuloNET(dr.Item("column1"), SC)

                '/////////////////////////////////////////

                .Procedencia = BuscaIdLocalidadPreciso(RTrim(dr.Item("column6")), SC)


                .Destino = BuscaIdWilliamsDestinoPreciso(RTrim(dr.Item("Destino")), SC)



                '/////////////////////////////////////////


                .Subcontr1 = BuscaIdClientePreciso(dr.Item("Subcontratista1"), SC)



                .Subcontr2 = BuscaIdClientePreciso(dr.Item("Subcontratista2"), SC)




                '/////////////////////////////////////////


                .Patente = dr.Item("column8")
                .Acoplado = dr.Item("column9")


                .CalidadDe = BuscaIdCalidadPreciso(RTrim(dr.Item("column11")), SC)

                .NetoPto = StringToDecimal(dr.Item("column10"))

                .BrutoFinal = StringToDecimal(dr.Item("column12"))
                .TaraFinal = StringToDecimal(dr.Item("column13"))
                .NetoFinal = StringToDecimal(dr.Item("column14"))

                .NetoProc = StringToDecimal(dr.Item("column17"))



                .Humedad = StringToDecimal(dr.Item("column15"))
                .HumedadDesnormalizada = StringToDecimal(dr.Item("column16"))
                .CEE = Val(dr.Item("column20"))


                .FechaDeCarga = iisValidSqlDate(dr.Item("column18"))
                .FechaVencimiento = iisValidSqlDate(dr.Item("column19"))
                .FechaDescarga = iisValidSqlDate(dr.Item("FechaDescarga"))
                '.Merma = StringToDecimal(dr.Item("column16")) 'este es el otras mermas

                .IdTransportista = BuscaIdTransportistaPreciso(RTrim(dr.Item("column21")), SC)


                .IdChofer = BuscaIdChoferPreciso(RTrim(dr.Item("column23")), SC)
                dr.Item("IdChofer") = .IdChofer

                .Observaciones = dr.Item("column25")


            End With

            If CartaDePorteManager.IsValid(myCartaDePorte) Then
                '                Try
                If CartaDePorteManager.Save(SC, myCartaDePorte) = -1 Then
                    Debug.Print("No se pudo grabar el renglon n° " & myCartaDePorte.NumeroCartaDePorte)

                Else
                    'poner url hacia el ABM
                    'Response.Redirect(String.Format("CartaDePorte.aspx?Id={0}", IdCartaDePorte.ToString))

                    'Dim hl As WebControls.HyperLink = CType(r.Cells(getGridIDcolbyHeader("Ir a", GridView2)).Controls(1), WebControls.HyperLink)
                    'hl.NavigateUrl = String.Format("CartaDePorte.aspx?Id={0}", myCartaDePorte.Id.ToString)
                    dr.Item("URLgenerada") = String.Format("CartaDePorte.aspx?Id={0}", myCartaDePorte.Id.ToString)

                End If
            End If
        Next

        'DatatableToViewstate(dt)
        'gridView2.DataSource = ViewstateToDatatable()
        'GridView2.DataBind()
        gv2rebind(dt)

        ProntoFuncionesUIWeb.MsgBoxAlert("Grabación terminada")

    End Sub



    Sub GrabaGrillaOriginal() 'este usaba la grilla, en lugar del datatable
        Dim dt = ViewstateToDatatable()

        For Each r As GridViewRow In GridView2.Rows


            Dim myCartaDePorte As New Pronto.ERP.BO.CartaDePorte


            'If existeLaCarta Then
            Dim numeroCarta As Long = Val(Replace(renglon(r, "Carta Porte"), "-", ""))
            myCartaDePorte = CartaDePorteManager.GetItemPorNumero(SC, numeroCarta)
            'End If

            With myCartaDePorte
                'Pinta que no hay otra manera de actualizar un dataset suelto http://forums.asp.net/p/755961/1012665.aspx
                .NumeroCartaDePorte = numeroCarta
                If .NumeroCartaDePorte <= 0 Then
                    Debug.Print(renglon(r, "Carta Porte"))
                    renglonControl(r, "Carta Porte").BackColor = System.Drawing.Color.Red
                    Continue For
                End If



                '/////////////////////////////////////////
                '/////////////////////////////////////////

                .Vendedor = BuscaIdClientePreciso(renglon(r, "Titular"), SC)
                '.Vendedor = BuscaIdCliente(renglon(r, "Vendedor"), SC)
                dt.Rows(r.RowIndex).Item("IdTitular") = .Vendedor
                If .Vendedor = -1 Then
                    If Val(txtTolerancia.Text) > 0 Then .Vendedor = BuscaIdClienteAproximado(renglon(r, "Titular"), SC, Val(txtTolerancia.Text))

                    If .Vendedor <> -1 And renglon(r, "Titular") <> "" Then
                        renglonControl(r, "Titular").BackColor = System.Drawing.Color.Yellow
                    Else
                        renglonControl(r, "Titular").BackColor = System.Drawing.Color.Red
                    End If
                End If

                .CuentaOrden1 = BuscaIdClientePreciso(renglon(r, "Intermediario"), SC)
                dt.Rows(r.RowIndex).Item("IdIdntermediario") = .CuentaOrden1
                If .CuentaOrden1 = -1 And renglon(r, "Intermediario") <> "" Then
                    renglonControl(r, "Intermediario").BackColor = System.Drawing.Color.Red
                End If

                .CuentaOrden2 = BuscaIdClientePreciso(renglon(r, "R.Comercial"), SC)
                dt.Rows(r.RowIndex).Item("IdRComercial") = .CuentaOrden2
                If .CuentaOrden2 = -1 And renglon(r, "R.Comercial") <> "" Then
                    renglonControl(r, "R.Comercial").BackColor = System.Drawing.Color.Red
                End If

                .Corredor = BuscaIdVendedorPreciso(renglon(r, "Corredor"), SC)
                dt.Rows(r.RowIndex).Item("IdCorredor") = .Corredor
                If .Corredor = -1 Then
                    renglonControl(r, "Corredor").BackColor = System.Drawing.Color.Red
                End If

                .Entregador = BuscaIdClientePreciso(renglon(r, "Destinatario"), SC)
                dt.Rows(r.RowIndex).Item("IdDestinatario") = .Entregador
                If .Entregador = -1 Then
                    renglonControl(r, "Destinatario").BackColor = System.Drawing.Color.Red
                End If

                '/////////////////////////////////////////

                .IdArticulo = BuscaIdArticuloNET(renglon(r, "Producto"), SC)
                If .IdArticulo = -1 Then
                    renglonControl(r, "Producto").BackColor = System.Drawing.Color.Red
                End If



                '/////////////////////////////////////////

                .Procedencia = BuscaIdLocalidadPreciso(RTrim(renglon(r, "Procedencia")), SC)
                If .Procedencia = -1 Then
                    renglonControl(r, "Procedencia").BackColor = System.Drawing.Color.Red
                End If

                .Destino = BuscaIdWilliamsDestinoPreciso(RTrim(renglon(r, "Destino")), SC)
                If .Destino = -1 Then
                    renglonControl(r, "Destino").BackColor = System.Drawing.Color.Red
                End If


                '/////////////////////////////////////////


                .Subcontr1 = BuscaIdClientePreciso(renglon(r, "Subcontratista 1"), SC)
                If .Subcontr1 = -1 Then
                    renglonControl(r, "Subcontratista 1").BackColor = System.Drawing.Color.Red
                End If



                .Subcontr2 = BuscaIdClientePreciso(renglon(r, "Subcontratista 2"), SC)
                If .Subcontr2 = -1 Then
                    renglonControl(r, "Subcontratista 2").BackColor = System.Drawing.Color.Red
                End If




                '/////////////////////////////////////////


                .Patente = renglon(r, "Patente")
                .Acoplado = renglon(r, "Acoplado")


                .CalidadDe = BuscaIdCalidadPreciso(RTrim(renglon(r, "Calidad")), SC)
                If .CalidadDe = -1 Then
                    renglonControl(r, "Calidad").BackColor = System.Drawing.Color.Red
                End If





                .NetoPto = StringToDecimal(renglon(r, "Neto proc"))

                .BrutoFinal = StringToDecimal(renglon(r, "Bruto Pto"))
                .TaraFinal = StringToDecimal(renglon(r, "Tara pto"))
                .NetoFinal = StringToDecimal(renglon(r, "Neto pto"))

                .NetoProc = StringToDecimal(renglon(r, "Neto Final"))



                .Humedad = StringToDecimal(renglon(r, "Humedad"))
                .HumedadDesnormalizada = StringToDecimal(renglon(r, "Merma"))
                .CEE = Val(renglon(r, "C.E.E"))


                .FechaDeCarga = iisValidSqlDate(renglon(r, "F. de carga"))
                .FechaVencimiento = iisValidSqlDate(renglon(r, "Fecha vto."))
                .FechaDescarga = iisValidSqlDate(renglon(r, "F. de descarga"))
                .Merma = StringToDecimal(renglon(r, "Merma"))

                .IdTransportista = BuscaIdTransportistaPreciso(RTrim(renglon(r, "Transportista")), SC)
                If .IdTransportista = -1 Then
                    renglonControl(r, "Transportista").BackColor = System.Drawing.Color.Red
                End If



                .IdChofer = BuscaIdChoferPreciso(RTrim(renglon(r, "Chofer")), SC)
                dt.Rows(r.RowIndex).Item("IdChofer") = .IdChofer
                If .IdChofer = -1 Then
                    renglonControl(r, "Chofer").BackColor = System.Drawing.Color.Red
                End If

                '
                '.IdChofer=
                .Observaciones = renglon(r, "Observaciones")
            End With

            If CartaDePorteManager.IsValid(myCartaDePorte) Then
                '                Try

                'if ya existe la cdp then
                '    If incompleta vs completa then
                '        'no
                '        ElseIf
                '        ElseIf
                '        ElseIf
                '        ElseIf

                '    End If

                'End If


                    If CartaDePorteManager.Save(SC, myCartaDePorte) = -1 Then
                        Debug.Print("No se pudo grabar el renglon n° " & myCartaDePorte.NumeroCartaDePorte)

                    Else
                        'poner url hacia el ABM
                        'Response.Redirect(String.Format("CartaDePorte.aspx?Id={0}", IdCartaDePorte.ToString))

                        'Dim hl As WebControls.HyperLink = CType(r.Cells(getGridIDcolbyHeader("Ir a", GridView2)).Controls(1), WebControls.HyperLink)
                        'hl.NavigateUrl = String.Format("CartaDePorte.aspx?Id={0}", myCartaDePorte.Id.ToString)
                        dt.Rows(r.RowIndex).Item("URLgenerada") = String.Format("CartaDePorte.aspx?Id={0}", myCartaDePorte.Id.ToString)

                    End If
                End If
        Next

        'DatatableToViewstate(dt)
        'gridView2.DataSource = ViewstateToDatatable()
        'GridView2.DataBind()
        gv2rebind(dt)

        ProntoFuncionesUIWeb.MsgBoxAlert("Grabación terminada")

    End Sub






    Protected Sub Button3_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles Button3.Click
        GrabaGrilla()
    End Sub

    Function renglonControl(ByVal r As GridViewRow, ByVal sHeader As String) As WebControls.Label ' WebControls.TextBox
        If getGridIDcolbyHeader(sHeader, GridView2) = -1 Then Return New WebControls.Label 'si devuelvo Nothing para que no explote 

        Return CType(r.Cells(getGridIDcolbyHeader(sHeader, GridView2)).Controls(1), WebControls.Label)
    End Function

    Function renglon(ByVal r As GridViewRow, ByVal sHeader As String) As String
        If getGridIDcolbyHeader(sHeader, GridView2) = -1 Then Return Nothing

        'Return CType(r.Cells(getGridIDcolbyHeader(sHeader, GridView2)).Controls(1), WebControls.TextBox).Text()
        Return CType(r.Cells(getGridIDcolbyHeader(sHeader, GridView2)).Controls(1), WebControls.Label).Text()
    End Function

    Function renglon(ByVal r As GridViewRow, ByVal col As Integer) As String
        Return CType(r.Cells(col).Controls(1), WebControls.TextBox).Text()
    End Function


    Protected Sub Button2_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles Button2.Click
        'validar

        'ds.item("Estado") = "Falta Numero"

        ''colorear celda

        'ds.item("Estado") = "No se encuentra articulo"
        'ds.item("Estado") = "Ya existe"
        'ds.item("Estado") = "Bien"
        'ds.item("Estado") = "Cliente no se encuentra"


    End Sub


    Protected Sub Button4_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles Button4.Click
        GridViewExportUtil.Export("Grilla.xls", GridView2)
    End Sub


    'Sub ODS_To_Excel() 'nabo! si no estas usando un ODS!!!!
    '    ObjectDataSourc()
    'End Sub


    Sub ShowPopup()

        ViewState("IdDetallePresupuesto") = -1
        'txt_AC_Articulo.Text = ""
        'SelectedAutoCompleteIDArticulo.Value = 0
        'txtDetCantidad.Text = 0

        'UpdatePanelDetalle.Update()
        ModalPopupExtender3.Show()
    End Sub

    Sub SavePopup()

        'asd()

        'Me.ViewState.Add(mKey, myPresupuesto)
        'GridView1.DataSource = myPresupuesto.Detalles
        'GridView1.DataBind()

        'UpdatePanelGrilla.Update()

        'End If

        'MostrarElementos(False)
        mAltaItem = True
    End Sub



    Protected Sub GridView2_RowDataBound(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewRowEventArgs) Handles GridView2.RowDataBound
        Dim ac As AjaxControlToolkit.AutoCompleteExtender 'para que el autocomplete sepa la cadena de conexion

        If (e.Row.RowType = DataControlRowType.DataRow) Then

            'Hago el bind de los controles para EDICION


            ac = e.Row.FindControl("AutoCompleteExtender1")
            If Not IsNothing(ac) Then ac.ContextKey = SC

            'End If



        End If


        If (e.Row.RowType = DataControlRowType.Footer) Then


            'ac = e.Row.FindControl("AutoCompleteExtender7")
            'If Not IsNothing(ac) Then ac.ContextKey = SC

        End If
    End Sub




    Public Function ColorCode_CMBRET_SL(ByVal DataItem, ByVal d) As System.Drawing.Color
        'http://aspadvice.com/forums/thread/25659.aspx
        Dim cSL
        cSL = d

        If iisNull(cSL, 0) = -1 Then 'si no se intentó grabar todavía, es null. 
            'Return
            Return System.Drawing.Color.Red
        Else
            Return System.Drawing.Color.Transparent
        End If
    End Function
End Class


