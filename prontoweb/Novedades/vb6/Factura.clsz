VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
  Persistable = 0  'NotPersistable
  DataBindingBehavior = 0  'vbNone
  DataSourceBehavior  = 1  'vbDataSource
  MTSTransactionMode  = 0  'NotAnMTSObject
END
Attribute VB_Name = "Factura"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
Option Explicit
Const NombreTabla = "Facturas"
Private mvarID As Long
Public Registro As ador.Recordset
Public Event Actualizado(ByVal Estado As MisEstados, ByVal Id As Long)
Private mvarDetFacturas As DetFacturas
Private mvarDetFacturasProvincias As DetFacturasProvincias

Public Property Get DetFacturas() As DetFacturas
    
   If mvarDetFacturas Is Nothing Then
       Set mvarDetFacturas = New DetFacturas
       Set mvarDetFacturas.Parent = Me
   End If
   
   Set DetFacturas = mvarDetFacturas

End Property

Public Property Set DetFacturas(vData As DetFacturas)
    
   Set mvarDetFacturas = vData

End Property

Public Property Get DetFacturasProvincias() As DetFacturasProvincias
    
   If mvarDetFacturasProvincias Is Nothing Then
       Set mvarDetFacturasProvincias = New DetFacturasProvincias
       Set mvarDetFacturasProvincias.Parent = Me
   End If
   
   Set DetFacturasProvincias = mvarDetFacturasProvincias

End Property

Public Property Set DetFacturasProvincias(vData As DetFacturasProvincias)
    
   Set mvarDetFacturasProvincias = vData

End Property

Private Sub Class_Terminate()
    
   Set mvarDetFacturas = Nothing
   Set mvarDetFacturasProvincias = Nothing
   Set Registro = Nothing

End Sub

Public Function Guardar() As MisEstados

   Dim oSrv As MTSPronto.Factura
   Set oSrv = CreateObject("MTSPronto.Factura")
   
   On Error GoTo MalGuardar
   
   Registro.Update
   Guardar = oSrv.Guardar(Registro, Me.DetFacturas.Registros, _
                           Me.RegistroContable, Me.DetFacturas.RegistrosRemitos, _
                           Me.DetFacturas.RegistrosOrdenesCompra, _
                           Me.DetFacturasProvincias.Registros)
   Set oSrv = Nothing
   
   Exit Function

MalGuardar:
   Err.Raise Err.Number, Err.Source, Err.Description
   Resume

End Function

Public Function GuardarRegistroContable() As MisEstados

   Dim oSrv As MTSPronto.Factura
   Set oSrv = CreateObject("MTSPronto.Factura")
   
   On Error GoTo MalGuardar
   
   Registro.Update
   GuardarRegistroContable = oSrv.GuardarRegistroContable(Me.RegistroContable)
   Set oSrv = Nothing
   
   Exit Function

MalGuardar:
   Err.Raise Err.Number, Err.Source, Err.Description
   Resume

End Function

Public Property Let Id(ByVal vData As Long)

   Dim oSrv As InterFazMTS.iCompMTS
   Set oSrv = CreateObject("MTSPronto.Factura")
   mvarID = vData
   Set Registro = oSrv.LeerUno(NombreTabla, vData)
   Set oSrv = Nothing

End Property

Public Property Get Id() As Long

   Id = mvarID

End Property

Private Sub Class_GetDataMember(DataMember As String, Data As Object)

   Set Data = Registro

End Sub

Public Sub Eliminar()

   Dim oSrv As InterFazMTS.iCompMTS
   Set oSrv = CreateObject("MTSPronto.Factura")
   
   On Error GoTo MalElim
   
   Registro.Update
   If mvarID > 0 Then
      oSrv.Eliminar NombreTabla, mvarID
   End If
   Set oSrv = Nothing
   
   Exit Sub

MalElim:
   Err.Raise Err.Number, Err.Source, Err.Description
   Resume

End Sub

Public Function RegistroContable() As ador.Recordset

   Dim oSrv As InterFazMTS.iCompMTS
   Dim oRs As ador.Recordset
   Dim oRsAux As ador.Recordset
   Dim oRsCont As ador.Recordset
   Dim oRsDet As ador.Recordset
   Dim oRsDetBD As ador.Recordset
   Dim oFld As ador.Field
   Dim mvarEjercicio As Long, mvarCuentaVentas As Long, mvarCuentaCliente As Long, mvarCuentaBonificaciones As Long
   Dim mvarCuentaIvaInscripto As Long, mvarCuentaIvaNoInscripto As Long, mvarCuentaIvaSinDiscriminar As Long
   Dim mvarCuentaRetencionIBrutosBsAs As Long, mvarCuentaRetencionIBrutosCap As Long, mvarCuentaVentasTitulo As Long
   Dim mvarCuentaReventas As Long, mvarCuentaIvaInscripto1 As Long, mvarCuentaPercepcionIIBB As Long
   Dim mvarCuentaOtrasPercepciones1 As Long, mvarCuentaOtrasPercepciones2 As Long, mvarCuentaOtrasPercepciones3 As Long
   Dim mvarCuentaPercepcionesIVA As Long
   Dim mvarCuentaIvaVenta(4, 2) As Long
   Dim i As Integer, mvarIdMonedaPesos As Integer
   Dim mvarIvaNoDiscriminado As Double, mvarSubtotal As Double, mvarNetoGravadoItem As Double, mvarAjusteIva As Double
   Dim mvarNetoGravadoItemSuma As Double
   Dim mvarEsta As Boolean
   Dim mvarFecha As Date
   
   Set oSrv = CreateObject("MTSPronto.General")
   
   Set oRs = oSrv.LeerUno("Parametros", 1)
   mvarEjercicio = IIf(IsNull(oRs.Fields("EjercicioActual").Value), 0, oRs.Fields("EjercicioActual").Value)
   mvarCuentaVentas = IIf(IsNull(oRs.Fields("IdCuentaVentas").Value), 0, oRs.Fields("IdCuentaVentas").Value)
   mvarCuentaVentasTitulo = IIf(IsNull(oRs.Fields("IdCuentaVentasTitulo").Value), 0, oRs.Fields("IdCuentaVentasTitulo").Value)
   mvarCuentaBonificaciones = IIf(IsNull(oRs.Fields("IdCuentaBonificaciones").Value), 0, oRs.Fields("IdCuentaBonificaciones").Value)
   mvarCuentaIvaInscripto = IIf(IsNull(oRs.Fields("IdCuentaIvaInscripto").Value), 0, oRs.Fields("IdCuentaIvaInscripto").Value)
   mvarCuentaIvaNoInscripto = IIf(IsNull(oRs.Fields("IdCuentaIvaNoInscripto").Value), 0, oRs.Fields("IdCuentaIvaNoInscripto").Value)
   mvarCuentaIvaSinDiscriminar = IIf(IsNull(oRs.Fields("IdCuentaIvaSinDiscriminar").Value), 0, oRs.Fields("IdCuentaIvaSinDiscriminar").Value)
   mvarCuentaRetencionIBrutosBsAs = IIf(IsNull(oRs.Fields("IdCuentaRetencionIBrutosBsAs").Value), 0, oRs.Fields("IdCuentaRetencionIBrutosBsAs").Value)
   mvarCuentaRetencionIBrutosCap = IIf(IsNull(oRs.Fields("IdCuentaRetencionIBrutosCap").Value), 0, oRs.Fields("IdCuentaRetencionIBrutosCap").Value)
   mvarCuentaReventas = IIf(IsNull(oRs.Fields("IdCuentaReventas").Value), 0, oRs.Fields("IdCuentaReventas").Value)
   mvarCuentaOtrasPercepciones1 = IIf(IsNull(oRs.Fields("IdCuentaOtrasPercepciones1").Value), 0, oRs.Fields("IdCuentaOtrasPercepciones1").Value)
   mvarCuentaOtrasPercepciones2 = IIf(IsNull(oRs.Fields("IdCuentaOtrasPercepciones2").Value), 0, oRs.Fields("IdCuentaOtrasPercepciones2").Value)
   mvarCuentaOtrasPercepciones3 = IIf(IsNull(oRs.Fields("IdCuentaOtrasPercepciones3").Value), 0, oRs.Fields("IdCuentaOtrasPercepciones3").Value)
   mvarCuentaPercepcionesIVA = IIf(IsNull(oRs.Fields("IdCuentaPercepcionesIVA").Value), 0, oRs.Fields("IdCuentaPercepcionesIVA").Value)
   mvarCuentaCliente = IIf(IsNull(oRs.Fields("IdCuentaDeudoresVarios").Value), 0, oRs.Fields("IdCuentaDeudoresVarios").Value)
   mvarIdMonedaPesos = IIf(IsNull(oRs.Fields("IdMoneda").Value), 1, oRs.Fields("IdMoneda").Value)
   
   For i = 1 To 4
      If Not IsNull(oRs.Fields("IdCuentaIvaVentas" & i).Value) Then
         mvarCuentaIvaVenta(i, 0) = oRs.Fields("IdCuentaIvaVentas" & i).Value
         mvarCuentaIvaVenta(i, 1) = oRs.Fields("IVAVentasPorcentaje" & i).Value
      Else
         mvarCuentaIvaVenta(i, 0) = 0
         mvarCuentaIvaVenta(i, 1) = -1
      End If
   Next
   oRs.Close
   
   If Not IsNull(Registro.Fields("IdCliente").Value) Then
      Set oRs = oSrv.LeerUno("Clientes", Registro.Fields("IdCliente").Value)
      mvarCuentaCliente = IIf(IsNull(oRs.Fields("IdCuenta").Value), 0, oRs.Fields("IdCuenta").Value)
      If Registro.Fields("IdMoneda").Value <> mvarIdMonedaPesos And _
            Not IsNull(oRs.Fields("IdCuentaMonedaExt").Value) Then
         mvarCuentaCliente = oRs.Fields("IdCuentaMonedaExt").Value
      End If
      oRs.Close
   End If
   
   Set oRsCont = CreateObject("ADOR.Recordset")
   Set oRs = oSrv.TraerFiltrado("Subdiarios", "_Estructura")
   
   With oRs
      For Each oFld In .Fields
         With oFld
            oRsCont.Fields.Append .Name, .Type, .DefinedSize, .Attributes
            oRsCont.Fields.Item(.Name).Precision = .Precision
            oRsCont.Fields.Item(.Name).NumericScale = .NumericScale
         End With
      Next
      oRsCont.Open
   End With
   oRs.Close
   
   If Not IsNull(Registro.Fields("ContabilizarAFechaVencimiento").Value) And _
         Registro.Fields("ContabilizarAFechaVencimiento").Value = "SI" Then
      mvarFecha = Registro.Fields("FechaVencimiento").Value
   Else
      mvarFecha = Registro.Fields("FechaFactura").Value
   End If
   mvarSubtotal = (Registro.Fields("ImporteTotal").Value - Registro.Fields("ImporteIva1").Value - _
                   Registro.Fields("ImporteIva2").Value - Registro.Fields("RetencionIBrutos1").Value - _
                   Registro.Fields("RetencionIBrutos2").Value - Registro.Fields("RetencionIBrutos3").Value - _
                   IIf(IsNull(Registro.Fields("OtrasPercepciones1").Value), 0, Registro.Fields("OtrasPercepciones1").Value) - _
                   IIf(IsNull(Registro.Fields("OtrasPercepciones2").Value), 0, Registro.Fields("OtrasPercepciones2").Value) - _
                   IIf(IsNull(Registro.Fields("OtrasPercepciones3").Value), 0, Registro.Fields("OtrasPercepciones3").Value) - _
                   IIf(IsNull(Registro.Fields("PercepcionIVA").Value), 0, Registro.Fields("PercepcionIVA").Value) - _
                   IIf(IsNull(Registro.Fields("AjusteIva").Value), 0, Registro.Fields("AjusteIva").Value) + _
                   Registro.Fields("ImporteBonificacion").Value)
   mvarNetoGravadoItemSuma = 0

   With oRsCont
      .AddNew
      .Fields("Ejercicio").Value = mvarEjercicio
      .Fields("IdCuentaSubdiario").Value = mvarCuentaVentasTitulo
      .Fields("IdCuenta").Value = mvarCuentaCliente
      .Fields("IdTipoComprobante").Value = 1
      .Fields("NumeroComprobante").Value = Registro.Fields("NumeroFactura").Value
      .Fields("FechaComprobante").Value = mvarFecha
      .Fields("IdComprobante").Value = Registro.Fields(0).Value
      .Fields("Debe").Value = Registro.Fields("ImporteTotal").Value
      .Fields("IdMoneda").Value = Registro.Fields("IdMoneda").Value
      .Fields("CotizacionMoneda").Value = Registro.Fields("CotizacionMoneda").Value
      .Update
   End With
   
   If Not IsNull(Registro.Fields("ImporteBonificacion").Value) Then
      If Registro.Fields("ImporteBonificacion").Value <> 0 Then
         With oRsCont
            .AddNew
            .Fields("Ejercicio").Value = mvarEjercicio
            .Fields("IdCuentaSubdiario").Value = mvarCuentaVentasTitulo
            .Fields("IdCuenta").Value = mvarCuentaBonificaciones
            .Fields("IdTipoComprobante").Value = 1
            .Fields("NumeroComprobante").Value = Registro.Fields("NumeroFactura").Value
            .Fields("FechaComprobante").Value = mvarFecha
            .Fields("IdComprobante").Value = Registro.Fields(0).Value
            .Fields("Debe").Value = Registro.Fields("ImporteBonificacion").Value
            .Fields("IdMoneda").Value = Registro.Fields("IdMoneda").Value
            .Fields("CotizacionMoneda").Value = Registro.Fields("CotizacionMoneda").Value
            .Update
         End With
      End If
   End If
   
   If Not IsNull(Registro.Fields("ImporteIva1").Value) Then
      If Registro.Fields("ImporteIva1").Value <> 0 Then
         mvarCuentaIvaInscripto1 = mvarCuentaIvaInscripto
         For i = 1 To 4
            If Registro.Fields("PorcentajeIva1").Value = mvarCuentaIvaVenta(i, 1) Then
               mvarCuentaIvaInscripto1 = mvarCuentaIvaVenta(i, 0)
               Exit For
            End If
         Next
         With oRsCont
            .AddNew
            .Fields("Ejercicio").Value = mvarEjercicio
            .Fields("IdCuentaSubdiario").Value = mvarCuentaVentasTitulo
            .Fields("IdCuenta").Value = mvarCuentaIvaInscripto1
            .Fields("IdTipoComprobante").Value = 1
            .Fields("NumeroComprobante").Value = Registro.Fields("NumeroFactura").Value
            .Fields("FechaComprobante").Value = mvarFecha
            .Fields("IdComprobante").Value = Registro.Fields(0).Value
            .Fields("Haber").Value = Registro.Fields("ImporteIva1").Value
            .Fields("IdMoneda").Value = Registro.Fields("IdMoneda").Value
            .Fields("CotizacionMoneda").Value = Registro.Fields("CotizacionMoneda").Value
            .Update
         End With
      End If
   End If
   
   mvarIvaNoDiscriminado = 0
   If Not IsNull(Registro.Fields("IvaNoDiscriminado").Value) Then
      If Registro.Fields("IvaNoDiscriminado").Value <> 0 Then
         mvarIvaNoDiscriminado = Registro.Fields("IvaNoDiscriminado").Value
         With oRsCont
            .AddNew
            .Fields("Ejercicio").Value = mvarEjercicio
            .Fields("IdCuentaSubdiario").Value = mvarCuentaVentasTitulo
            .Fields("IdCuenta").Value = mvarCuentaIvaInscripto
            .Fields("IdTipoComprobante").Value = 1
            .Fields("NumeroComprobante").Value = Registro.Fields("NumeroFactura").Value
            .Fields("FechaComprobante").Value = mvarFecha
            .Fields("IdComprobante").Value = Registro.Fields(0).Value
            .Fields("Haber").Value = mvarIvaNoDiscriminado
            .Fields("IdMoneda").Value = Registro.Fields("IdMoneda").Value
            .Fields("CotizacionMoneda").Value = Registro.Fields("CotizacionMoneda").Value
            .Update
         End With
      End If
   End If
   
   mvarAjusteIva = 0
   If Not IsNull(Registro.Fields("AjusteIva").Value) Then
      If Registro.Fields("AjusteIva").Value <> 0 Then
         mvarAjusteIva = Registro.Fields("AjusteIva").Value
         With oRsCont
            .AddNew
            .Fields("Ejercicio").Value = mvarEjercicio
            .Fields("IdCuentaSubdiario").Value = mvarCuentaVentasTitulo
            .Fields("IdCuenta").Value = mvarCuentaIvaInscripto
            .Fields("IdTipoComprobante").Value = 1
            .Fields("NumeroComprobante").Value = Registro.Fields("NumeroFactura").Value
            .Fields("FechaComprobante").Value = mvarFecha
            .Fields("IdComprobante").Value = Registro.Fields(0).Value
            .Fields("Haber").Value = mvarAjusteIva
            .Fields("IdMoneda").Value = Registro.Fields("IdMoneda").Value
            .Fields("CotizacionMoneda").Value = Registro.Fields("CotizacionMoneda").Value
            .Update
         End With
      End If
   End If
   
   If Not IsNull(Registro.Fields("ImporteIva2").Value) Then
      If Registro.Fields("ImporteIva2").Value <> 0 Then
         With oRsCont
            .AddNew
            .Fields("Ejercicio").Value = mvarEjercicio
            .Fields("IdCuentaSubdiario").Value = mvarCuentaVentasTitulo
            .Fields("IdCuenta").Value = mvarCuentaIvaInscripto
            .Fields("IdTipoComprobante").Value = 1
            .Fields("NumeroComprobante").Value = Registro.Fields("NumeroFactura").Value
            .Fields("FechaComprobante").Value = mvarFecha
            .Fields("IdComprobante").Value = Registro.Fields(0).Value
            .Fields("Haber").Value = Registro.Fields("ImporteIva2").Value
            .Fields("IdMoneda").Value = Registro.Fields("IdMoneda").Value
            .Fields("CotizacionMoneda").Value = Registro.Fields("CotizacionMoneda").Value
            .Update
         End With
      End If
   End If
   
   If Not IsNull(Registro.Fields("RetencionIBrutos1").Value) Then
      If Registro.Fields("RetencionIBrutos1").Value <> 0 Then
         Set oRs = oSrv.LeerUno("IBCondiciones", Registro.Fields("IdIBCondicion").Value)
         mvarCuentaPercepcionIIBB = IIf(IsNull(oRs.Fields("IdCuentaPercepcionIIBB").Value), 0, oRs.Fields("IdCuentaPercepcionIIBB").Value)
         If Not IsNull(oRs.Fields("IdProvincia").Value) Then
            Set oRsAux = oSrv.LeerUno("Provincias", oRs.Fields("IdProvincia").Value)
            If oRsAux.RecordCount > 0 Then
               If Not IsNull(oRsAux.Fields("IdCuentaPercepcionIBrutos").Value) Then
                  mvarCuentaPercepcionIIBB = oRsAux.Fields("IdCuentaPercepcionIBrutos").Value
               End If
               If Registro.Fields("ConvenioMultilateral").Value = "SI" And _
                     Not IsNull(oRsAux.Fields("IdCuentaPercepcionIIBBConvenio").Value) Then
                  mvarCuentaPercepcionIIBB = oRsAux.Fields("IdCuentaPercepcionIIBBConvenio").Value
               End If
            End If
            oRsAux.Close
         End If
         oRs.Close
         With oRsCont
            .AddNew
            .Fields("Ejercicio").Value = mvarEjercicio
            .Fields("IdCuentaSubdiario").Value = mvarCuentaVentasTitulo
            .Fields("IdCuenta").Value = mvarCuentaPercepcionIIBB
            .Fields("IdTipoComprobante").Value = 1
            .Fields("NumeroComprobante").Value = Registro.Fields("NumeroFactura").Value
            .Fields("FechaComprobante").Value = mvarFecha
            .Fields("IdComprobante").Value = Registro.Fields(0).Value
            .Fields("Haber").Value = Registro.Fields("RetencionIBrutos1").Value
            .Fields("IdMoneda").Value = Registro.Fields("IdMoneda").Value
            .Fields("CotizacionMoneda").Value = Registro.Fields("CotizacionMoneda").Value
            .Update
         End With
      End If
   End If
   
   If Not IsNull(Registro.Fields("RetencionIBrutos2").Value) Then
      If Registro.Fields("RetencionIBrutos2").Value <> 0 Then
         Set oRs = oSrv.LeerUno("IBCondiciones", Registro.Fields("IdIBCondicion2").Value)
         mvarCuentaPercepcionIIBB = IIf(IsNull(oRs.Fields("IdCuentaPercepcionIIBB").Value), 0, oRs.Fields("IdCuentaPercepcionIIBB").Value)
         If Not IsNull(oRs.Fields("IdProvincia").Value) Then
            Set oRsAux = oSrv.LeerUno("Provincias", oRs.Fields("IdProvincia").Value)
            If oRsAux.RecordCount > 0 Then
               If Not IsNull(oRsAux.Fields("IdCuentaPercepcionIBrutos").Value) Then
                  mvarCuentaPercepcionIIBB = oRsAux.Fields("IdCuentaPercepcionIBrutos").Value
               End If
               If Registro.Fields("ConvenioMultilateral").Value = "SI" And _
                     Not IsNull(oRsAux.Fields("IdCuentaPercepcionIIBBConvenio").Value) Then
                  mvarCuentaPercepcionIIBB = oRsAux.Fields("IdCuentaPercepcionIIBBConvenio").Value
               End If
            End If
            oRsAux.Close
         End If
         oRs.Close
         With oRsCont
            .AddNew
            .Fields("Ejercicio").Value = mvarEjercicio
            .Fields("IdCuentaSubdiario").Value = mvarCuentaVentasTitulo
            .Fields("IdCuenta").Value = mvarCuentaPercepcionIIBB
            .Fields("IdTipoComprobante").Value = 1
            .Fields("NumeroComprobante").Value = Registro.Fields("NumeroFactura").Value
            .Fields("FechaComprobante").Value = mvarFecha
            .Fields("IdComprobante").Value = Registro.Fields(0).Value
            .Fields("Haber").Value = Registro.Fields("RetencionIBrutos2").Value
            .Fields("IdMoneda").Value = Registro.Fields("IdMoneda").Value
            .Fields("CotizacionMoneda").Value = Registro.Fields("CotizacionMoneda").Value
            .Update
         End With
      End If
   End If
   
   If Not IsNull(Registro.Fields("RetencionIBrutos3").Value) Then
      If Registro.Fields("RetencionIBrutos3").Value <> 0 Then
         Set oRs = oSrv.LeerUno("IBCondiciones", Registro.Fields("IdIBCondicion3").Value)
         mvarCuentaPercepcionIIBB = IIf(IsNull(oRs.Fields("IdCuentaPercepcionIIBB").Value), 0, oRs.Fields("IdCuentaPercepcionIIBB").Value)
         If Not IsNull(oRs.Fields("IdProvincia").Value) Then
            Set oRsAux = oSrv.LeerUno("Provincias", oRs.Fields("IdProvincia").Value)
            If oRsAux.RecordCount > 0 Then
               If Not IsNull(oRsAux.Fields("IdCuentaPercepcionIBrutos").Value) Then
                  mvarCuentaPercepcionIIBB = oRsAux.Fields("IdCuentaPercepcionIBrutos").Value
               End If
               If Registro.Fields("ConvenioMultilateral").Value = "SI" And _
                     Not IsNull(oRsAux.Fields("IdCuentaPercepcionIIBBConvenio").Value) Then
                  mvarCuentaPercepcionIIBB = oRsAux.Fields("IdCuentaPercepcionIIBBConvenio").Value
               End If
            End If
            oRsAux.Close
         End If
         oRs.Close
         With oRsCont
            .AddNew
            .Fields("Ejercicio").Value = mvarEjercicio
            .Fields("IdCuentaSubdiario").Value = mvarCuentaVentasTitulo
            .Fields("IdCuenta").Value = mvarCuentaPercepcionIIBB
            .Fields("IdTipoComprobante").Value = 1
            .Fields("NumeroComprobante").Value = Registro.Fields("NumeroFactura").Value
            .Fields("FechaComprobante").Value = mvarFecha
            .Fields("IdComprobante").Value = Registro.Fields(0).Value
            .Fields("Haber").Value = Registro.Fields("RetencionIBrutos3").Value
            .Fields("IdMoneda").Value = Registro.Fields("IdMoneda").Value
            .Fields("CotizacionMoneda").Value = Registro.Fields("CotizacionMoneda").Value
            .Update
         End With
      End If
   End If
   
   If Not IsNull(Registro.Fields("OtrasPercepciones1").Value) Then
      If Registro.Fields("OtrasPercepciones1").Value <> 0 Then
         With oRsCont
            .AddNew
            .Fields("Ejercicio").Value = mvarEjercicio
            .Fields("IdCuentaSubdiario").Value = mvarCuentaVentasTitulo
            .Fields("IdCuenta").Value = mvarCuentaOtrasPercepciones1
            .Fields("IdTipoComprobante").Value = 1
            .Fields("NumeroComprobante").Value = Registro.Fields("NumeroFactura").Value
            .Fields("FechaComprobante").Value = mvarFecha
            .Fields("IdComprobante").Value = Registro.Fields(0).Value
            .Fields("Haber").Value = Registro.Fields("OtrasPercepciones1").Value
            .Fields("IdMoneda").Value = Registro.Fields("IdMoneda").Value
            .Fields("CotizacionMoneda").Value = Registro.Fields("CotizacionMoneda").Value
            .Update
         End With
      End If
   End If
   
   If Not IsNull(Registro.Fields("OtrasPercepciones2").Value) Then
      If Registro.Fields("OtrasPercepciones2").Value <> 0 Then
         With oRsCont
            .AddNew
            .Fields("Ejercicio").Value = mvarEjercicio
            .Fields("IdCuentaSubdiario").Value = mvarCuentaVentasTitulo
            .Fields("IdCuenta").Value = mvarCuentaOtrasPercepciones2
            .Fields("IdTipoComprobante").Value = 1
            .Fields("NumeroComprobante").Value = Registro.Fields("NumeroFactura").Value
            .Fields("FechaComprobante").Value = mvarFecha
            .Fields("IdComprobante").Value = Registro.Fields(0).Value
            .Fields("Haber").Value = Registro.Fields("OtrasPercepciones2").Value
            .Fields("IdMoneda").Value = Registro.Fields("IdMoneda").Value
            .Fields("CotizacionMoneda").Value = Registro.Fields("CotizacionMoneda").Value
            .Update
         End With
      End If
   End If
   
   If Not IsNull(Registro.Fields("OtrasPercepciones3").Value) Then
      If Registro.Fields("OtrasPercepciones3").Value <> 0 Then
         With oRsCont
            .AddNew
            .Fields("Ejercicio").Value = mvarEjercicio
            .Fields("IdCuentaSubdiario").Value = mvarCuentaVentasTitulo
            .Fields("IdCuenta").Value = mvarCuentaOtrasPercepciones3
            .Fields("IdTipoComprobante").Value = 1
            .Fields("NumeroComprobante").Value = Registro.Fields("NumeroFactura").Value
            .Fields("FechaComprobante").Value = mvarFecha
            .Fields("IdComprobante").Value = Registro.Fields(0).Value
            .Fields("Haber").Value = Registro.Fields("OtrasPercepciones3").Value
            .Fields("IdMoneda").Value = Registro.Fields("IdMoneda").Value
            .Fields("CotizacionMoneda").Value = Registro.Fields("CotizacionMoneda").Value
            .Update
         End With
      End If
   End If
   
   If Not IsNull(Registro.Fields("PercepcionIVA").Value) Then
      If Registro.Fields("PercepcionIVA").Value <> 0 Then
         With oRsCont
            .AddNew
            .Fields("Ejercicio").Value = mvarEjercicio
            .Fields("IdCuentaSubdiario").Value = mvarCuentaVentasTitulo
            .Fields("IdCuenta").Value = mvarCuentaPercepcionesIVA
            .Fields("IdTipoComprobante").Value = 1
            .Fields("NumeroComprobante").Value = Registro.Fields("NumeroFactura").Value
            .Fields("FechaComprobante").Value = mvarFecha
            .Fields("IdComprobante").Value = Registro.Fields(0).Value
            .Fields("Haber").Value = Registro.Fields("PercepcionIVA").Value
            .Fields("IdMoneda").Value = Registro.Fields("IdMoneda").Value
            .Fields("CotizacionMoneda").Value = Registro.Fields("CotizacionMoneda").Value
            .Update
         End With
      End If
   End If
   
   Set oRsDet = Me.DetFacturas.Registros
   With oRsDet
      If .Fields.Count > 0 Then
         If .RecordCount > 0 Then
            .MoveFirst
            Do While Not .EOF
               If Not .Fields("Eliminado").Value Then
                  Set oRs = oSrv.TraerFiltrado("Articulos", "_DatosConCuenta", .Fields("IdArticulo").Value)
                  mvarNetoGravadoItem = Round(oRsDet.Fields("Cantidad").Value * _
                                          IIf(IsNull(oRsDet.Fields("PrecioUnitario").Value), 0, oRsDet.Fields("PrecioUnitario").Value) * _
                                          (1 - IIf(IsNull(oRsDet.Fields("Bonificacion").Value), 0, oRsDet.Fields("Bonificacion").Value) / 100), 2)
                  If mvarIvaNoDiscriminado > 0 Then
                     mvarNetoGravadoItem = Round(mvarNetoGravadoItem * (mvarSubtotal - mvarIvaNoDiscriminado) / mvarSubtotal, 2)
                     mvarNetoGravadoItemSuma = mvarNetoGravadoItemSuma + mvarNetoGravadoItem
                  End If
                  With oRsCont
                     .AddNew
                     .Fields("Ejercicio").Value = mvarEjercicio
                     .Fields("IdCuentaSubdiario").Value = mvarCuentaVentasTitulo
                     .Fields("IdCuenta").Value = oRs.Fields("IdCuenta").Value
                     .Fields("IdTipoComprobante").Value = 1
                     .Fields("NumeroComprobante").Value = Registro.Fields("NumeroFactura").Value
                     .Fields("FechaComprobante").Value = mvarFecha
                     .Fields("IdComprobante").Value = Registro.Fields(0).Value
                     If mvarNetoGravadoItem >= 0 Then
                        .Fields("Haber").Value = mvarNetoGravadoItem
                     Else
                        .Fields("Debe").Value = mvarNetoGravadoItem * -1
                     End If
                     .Fields("IdMoneda").Value = Registro.Fields("IdMoneda").Value
                     .Fields("CotizacionMoneda").Value = Registro.Fields("CotizacionMoneda").Value
                     .Update
                  End With
                  oRs.Close
               End If
               .MoveNext
            Loop
         End If
      End If
   End With
   
   Set oRsDetBD = oSrv.TraerFiltrado("DetFacturas", "_PorIdCabecera", Registro.Fields(0).Value)
   With oRsDetBD
      If .RecordCount > 0 Then
         .MoveFirst
         Do While Not .EOF
            mvarEsta = False
            If oRsDet.Fields.Count > 0 Then
               If oRsDet.RecordCount > 0 Then
                  oRsDet.MoveFirst
                  Do While Not oRsDet.EOF
                     If .Fields(0).Value = oRsDet.Fields(0).Value Then
                        If Not oRsDet.Fields("Eliminado").Value Then
                           mvarEsta = True
                           Exit Do
                        End If
                     End If
                     oRsDet.MoveNext
                  Loop
               End If
            End If
            If Not mvarEsta Then
               Set oRs = oSrv.TraerFiltrado("Articulos", "_DatosConCuenta", .Fields("IdArticulo").Value)
               mvarNetoGravadoItem = Round(oRsDetBD.Fields("Cantidad").Value * _
                                       IIf(IsNull(oRsDetBD.Fields("PrecioUnitario").Value), 0, oRsDetBD.Fields("PrecioUnitario").Value) * _
                                       (1 - IIf(IsNull(oRsDetBD.Fields("Bonificacion").Value), 0, oRsDetBD.Fields("Bonificacion").Value) / 100), 2)
               If mvarIvaNoDiscriminado > 0 Then
                  mvarNetoGravadoItem = Round(mvarNetoGravadoItem * (mvarSubtotal - mvarIvaNoDiscriminado) / mvarSubtotal, 2)
                  mvarNetoGravadoItemSuma = mvarNetoGravadoItemSuma + mvarNetoGravadoItem
               End If
               With oRsCont
                  .AddNew
                  .Fields("Ejercicio").Value = mvarEjercicio
                  .Fields("IdCuentaSubdiario").Value = mvarCuentaVentasTitulo
                  .Fields("IdCuenta").Value = oRs.Fields("IdCuenta").Value
                  .Fields("IdTipoComprobante").Value = 1
                  .Fields("NumeroComprobante").Value = Registro.Fields("NumeroFactura").Value
                  .Fields("FechaComprobante").Value = mvarFecha
                  .Fields("IdComprobante").Value = Registro.Fields(0).Value
                  If mvarNetoGravadoItem >= 0 Then
                     .Fields("Haber").Value = mvarNetoGravadoItem
                  Else
                     .Fields("Debe").Value = mvarNetoGravadoItem * -1
                  End If
                  .Fields("IdMoneda").Value = Registro.Fields("IdMoneda").Value
                  .Fields("CotizacionMoneda").Value = Registro.Fields("CotizacionMoneda").Value
                  .Update
               End With
               oRs.Close
            End If
            .MoveNext
         Loop
      End If
      .Close
   End With
   Set oRsDetBD = Nothing
   
   If mvarIvaNoDiscriminado > 0 Then
      If Round(mvarNetoGravadoItemSuma + mvarIvaNoDiscriminado, 2) <> mvarSubtotal Then
         With oRsCont
            .Fields("Haber").Value = .Fields("Haber").Value + (mvarSubtotal - (mvarNetoGravadoItemSuma + mvarIvaNoDiscriminado))
            .Update
         End With
      End If
   End If
   
   If oRsDet.Fields.Count > 0 Then oRsDet.Close
   Set oRsDet = Nothing
               
   Set RegistroContable = oRsCont
   
   Set oRs = Nothing
   Set oRsAux = Nothing
   Set oRsCont = Nothing
   Set oSrv = Nothing

End Function

Public Function NumeroOrdenCompraCliente() As String

   Dim oSrv As InterFazMTS.iCompMTS
   Dim oRs As ador.Recordset
   Dim mNroOC As String
   
   mNroOC = ""
   
   Set oSrv = CreateObject("MTSPronto.General")
   
   Set oRs = oSrv.TraerFiltrado("Facturas", "_OrdenCompraPorIdFactura", Me.Id)
   If oRs.RecordCount > 0 Then
      mNroOC = IIf(IsNull(oRs.Fields("NumeroOrdenCompra").Value), "", oRs.Fields("NumeroOrdenCompra").Value)
   End If
   oRs.Close
   
   Set oRs = Nothing
   Set oSrv = Nothing

   NumeroOrdenCompraCliente = mNroOC
   
End Function

Public Function RegistroContableOk() As String

   Dim oSrv As InterFazMTS.iCompMTS
   Dim oRs As ador.Recordset
   Dim oRs1 As ador.Recordset
   Dim mResult As String
   
   mResult = ""
   
   Set oSrv = CreateObject("MTSPronto.General")
   
   Set oRs = Me.RegistroContable
   With oRs
      If .RecordCount > 0 Then
         .MoveFirst
         Do While Not .EOF
            If IIf(IsNull(.Fields("IdCuenta").Value), 0, .Fields("IdCuenta").Value) = 0 Then
               mResult = mResult & vbCrLf & "No esta definida la cuenta asociada al importe " & _
                     IIf(IsNull(.Fields("Debe").Value), .Fields("Haber").Value, .Fields("Debe").Value)
            Else
               Set oRs1 = oSrv.TraerFiltrado("Cuentas", "_PorId", .Fields("IdCuenta").Value)
               If oRs1.RecordCount = 0 Then
                  mResult = mResult & vbCrLf & "No esta definida la cuenta asociada al importe " & _
                        IIf(IsNull(.Fields("Debe").Value), .Fields("Haber").Value, .Fields("Debe").Value)
               End If
               oRs1.Close
            End If
            .MoveNext
         Loop
      End If
   End With
   
   Set oRs = Nothing
   Set oRs1 = Nothing
   Set oSrv = Nothing

   RegistroContableOk = mResult
   
End Function
