VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
  Persistable = 0  'NotPersistable
  DataBindingBehavior = 0  'vbNone
  DataSourceBehavior  = 0  'vbNone
  MTSTransactionMode  = 3  'UsesTransaction
END
Attribute VB_Name = "Factura"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
Option Explicit
Implements InterFazMTS.iCompMTS

Private Function iCompMTS_Cuenta(ByVal NombreTabla As String) As Long

   Dim oCont As ObjectContext
   Dim oL As GralLector
   Dim lErr As Long, sSource As String, sDesc As String
   
   On Error GoTo Mal
   
   Set oCont = GetObjectContext
   
   If oCont Is Nothing Then
      Set oL = CreateObject("MTSPronto.GralLector")
   Else
      Set oL = oCont.CreateInstance("MTSPronto.GralLector")
   End If
   
   iCompMTS_Cuenta = oL.Cuenta(NombreTabla)
   
   If Not oCont Is Nothing Then
      With oCont
         If .IsInTransaction Then .SetComplete
      End With
   End If
   
Salir:
   Set oL = Nothing
   Set oCont = Nothing
   On Error GoTo 0
   If lErr Then
      Err.Raise lErr, sSource, sDesc
   End If
   Exit Function
   
Mal:
   If Not oCont Is Nothing Then
      With oCont
         If .IsInTransaction Then .SetAbort
      End With
   End If
   With Err
      lErr = .Number
      sSource = .Source
      sDesc = .Description
   End With
   Resume Salir

End Function

Private Sub iCompMTS_Eliminar(ByVal NombreTabla As String, ByVal vData As Long)

   Dim oCont As ObjectContext
   Dim oA As GralUpd
   Dim lErr As Long, sSource As String, sDesc As String
   
   On Error GoTo Mal
   
   Set oCont = GetObjectContext
   
   If oCont Is Nothing Then
      Set oA = CreateObject("MTSPronto.GralUpd")
   Else
      Set oA = oCont.CreateInstance("MTSPronto.GralUpd")
   End If
   oA.Eliminar NombreTabla, vData
   If Not oCont Is Nothing Then
      With oCont
         If .IsInTransaction Then .SetComplete
      End With
   End If
   
Salir:
   Set oA = Nothing
   Set oCont = Nothing
   On Error GoTo 0
   If lErr Then
      Err.Raise lErr, sSource, sDesc
   End If
   Exit Sub
   
Mal:
   If Not oCont Is Nothing Then
      With oCont
         If .IsInTransaction Then .SetAbort
      End With
   End If
   With Err
      lErr = .Number
      sSource = .Source
      sDesc = .Description
   End With
   Resume Salir

End Sub

Private Function iCompMTS_Guardar(ByVal NombreTabla As String, ByVal vData As ADOR.Recordset) As InterFazMTS.MisEstados

   Dim oCont As ObjectContext
   Dim oA As GralUpd
   Dim lErr As Long, sSource As String, sDesc As String
   
   On Error GoTo Mal
   
   Set oCont = GetObjectContext
   
   If oCont Is Nothing Then
      Set oA = CreateObject("MTSPronto.GralUpd")
   Else
      Set oA = oCont.CreateInstance("MTSPronto.GralUpd")
   End If
   
   iCompMTS_Guardar = oA.Guardar(NombreTabla, vData)
   If Not oCont Is Nothing Then
      With oCont
         If .IsInTransaction Then .SetComplete
      End With
   End If
   
Salir:
   Set oA = Nothing
   Set oCont = Nothing
   On Error GoTo 0
   If lErr Then
      Err.Raise lErr, sSource, sDesc
   End If
   Exit Function
   
Mal:
   If Not oCont Is Nothing Then
      With oCont
         If .IsInTransaction Then .SetAbort
      End With
   End If
   With Err
      lErr = .Number
      sSource = .Source
      sDesc = .Description
   End With
   Resume Salir

End Function

Private Function iCompMTS_GuardarPorRef(ByVal NombreTabla As String, ByRef vData As ADOR.Recordset) As InterFazMTS.MisEstados

   Dim oCont As ObjectContext
   Dim oA As GralUpd
   Dim lErr As Long, sSource As String, sDesc As String
   
   On Error GoTo Mal
   
   Set oCont = GetObjectContext
   
   If oCont Is Nothing Then
      Set oA = CreateObject("MTSPronto.GralUpd")
   Else
      Set oA = oCont.CreateInstance("MTSPronto.GralUpd")
   End If
   
   iCompMTS_GuardarPorRef = oA.GuardarPorRef(NombreTabla, vData)
   
   If Not oCont Is Nothing Then
      With oCont
         If .IsInTransaction Then .SetComplete
      End With
   End If
   
Salir:
   Set oA = Nothing
   Set oCont = Nothing
   On Error GoTo 0
   If lErr Then
      Err.Raise lErr, sSource, sDesc
   End If
   Exit Function
   
Mal:
   If Not oCont Is Nothing Then
      With oCont
         If .IsInTransaction Then .SetAbort
      End With
   End If
   With Err
      lErr = .Number
      sSource = .Source
      sDesc = .Description
   End With
   Resume Salir

End Function

Private Function iCompMTS_LeerUno(ByVal NombreTabla As String, ByVal vData As Long) As ADOR.Recordset

   Dim oCont As ObjectContext
   Dim oL As GralLector
   Dim lErr As Long, sSource As String, sDesc As String
   
   On Error GoTo Mal
   
   Set oCont = GetObjectContext
   
   If oCont Is Nothing Then
      Set oL = CreateObject("MTSPronto.GralLector")
   Else
      Set oL = oCont.CreateInstance("MTSPronto.GralLector")
   End If
   Set iCompMTS_LeerUno = oL.LeerUno(NombreTabla, vData)
   If Not oCont Is Nothing Then
      With oCont
         If .IsInTransaction Then .SetComplete
      End With
   End If
   
Salir:
   Set oL = Nothing
   Set oCont = Nothing
   On Error GoTo 0
   If lErr Then
      Err.Raise lErr, sSource, sDesc
   End If
   Exit Function
   
Mal:
   If Not oCont Is Nothing Then
      With oCont
         If .IsInTransaction Then .SetAbort
      End With
   End If
   With Err
      lErr = .Number
      sSource = .Source
      sDesc = .Description
   End With
   Resume Salir
   
End Function

Private Function iCompMTS_TraerFiltrado(ByVal NombreTabla As String, ByVal Filtro As String, Optional ByVal Args As Variant) As ADOR.Recordset

   Dim oCont As ObjectContext
   Dim oL As GralLector
   Dim lErr As Long, sSource As String, sDesc As String
   
   On Error GoTo Mal
   
   Set oCont = GetObjectContext
   
   If oCont Is Nothing Then
      Set oL = CreateObject("MTSPronto.GralLector")
   Else
      Set oL = oCont.CreateInstance("MTSPronto.GralLector")
   End If
   Set iCompMTS_TraerFiltrado = oL.TraerFiltrado(NombreTabla, Filtro, Args)
   If Not oCont Is Nothing Then
      With oCont
         If .IsInTransaction Then .SetComplete
      End With
   End If
   
Salir:
   Set oL = Nothing
   Set oCont = Nothing
   On Error GoTo 0
   If lErr Then
      Err.Raise lErr, sSource, sDesc
   End If
   Exit Function
   
Mal:
   If Not oCont Is Nothing Then
      With oCont
         If .IsInTransaction Then .SetAbort
      End With
   End If
   With Err
      lErr = .Number
      sSource = .Source
      sDesc = .Description
   End With
   Resume Salir


End Function

Private Function iCompMTS_TraerLista(ByVal NombreTabla As String) As ADOR.Recordset

   Dim oCont As ObjectContext
   Dim oL As GralLector
   Dim lErr As Long, sSource As String, sDesc As String
   
   On Error GoTo Mal
   
   Set oCont = GetObjectContext
   
   If oCont Is Nothing Then
      Set oL = CreateObject("MTSPronto.GralLector")
   Else
      Set oL = oCont.CreateInstance("MTSPronto.GralLector")
   End If
   Set iCompMTS_TraerLista = oL.TraerLista(NombreTabla)
   If Not oCont Is Nothing Then
      With oCont
         If .IsInTransaction Then .SetComplete
      End With
   End If
   
Salir:
   Set oL = Nothing
   Set oCont = Nothing
   On Error GoTo 0
   If lErr Then
      Err.Raise lErr, sSource, sDesc
   End If
   Exit Function
   
Mal:
   If Not oCont Is Nothing Then
      With oCont
         If .IsInTransaction Then .SetAbort
      End With
   End If
   With Err
      lErr = .Number
      sSource = .Source
      sDesc = .Description
   End With
   Resume Salir


End Function

Private Function iCompMTS_TraerTodos(ByVal NombreTabla As String) As ADOR.Recordset

   Dim oCont As ObjectContext
   Dim oL As GralLector
   Dim lErr As Long, sSource As String, sDesc As String
   
   On Error GoTo Mal
   
   Set oCont = GetObjectContext
   
   If oCont Is Nothing Then
      Set oL = CreateObject("MTSPronto.GralLector")
   Else
      Set oL = oCont.CreateInstance("MTSPronto.GralLector")
   End If
   Set iCompMTS_TraerTodos = oL.TraerTodos(NombreTabla)
   If Not oCont Is Nothing Then
      With oCont
         If .IsInTransaction Then .SetComplete
      End With
   End If
   
Salir:
   Set oL = Nothing
   Set oCont = Nothing
   On Error GoTo 0
   If lErr Then
      Err.Raise lErr, sSource, sDesc
   End If
   Exit Function
   
Mal:
   If Not oCont Is Nothing Then
      With oCont
         If .IsInTransaction Then .SetAbort
      End With
   End If
   With Err
      lErr = .Number
      sSource = .Source
      sDesc = .Description
   End With
   Resume Salir

End Function

Public Function Guardar(ByRef Factura As ADOR.Recordset, _
                        ByVal Detalles As ADOR.Recordset, _
                        ByVal RegistroContable As ADOR.Recordset, _
                        ByVal DetallesRemitos As ADOR.Recordset, _
                        ByVal DetallesOrdenesCompra As ADOR.Recordset, _
                        ByVal DetallesProvincias As ADOR.Recordset) As InterFazMTS.MisEstados

   Dim oCont As ObjectContext
   Dim oDet As iCompMTS
   Dim Resp As InterFazMTS.MisEstados
   Dim Datos As ADOR.Recordset
   Dim DatosRem As ADOR.Recordset
   Dim DatosCtaCte As ADOR.Recordset
   Dim DatosCtaCteNv As ADOR.Recordset
   Dim DatosCliente As ADOR.Recordset
   Dim DetRem As ADOR.Recordset
   Dim DatosAsiento As ADOR.Recordset
   Dim DatosAsientoNv As ADOR.Recordset
   Dim oRsParametros As ADOR.Recordset
   Dim DatosDetAsiento As ADOR.Recordset
   Dim DatosDetAsientoNv As ADOR.Recordset
   Dim DatosAnt As ADOR.Recordset
   Dim oFld As ADOR.Field
   Dim lErr As Long, sSource As String, sDesc, mvarAnulada As String
   Dim i As Integer
   Dim mvarNumeroAsiento As Long, mvarIdAsiento As Long, mvarIdentificador As Long
   Dim mvarIdCuenta As Long, ClaDet As Long
   Dim mImporteAnterior As Double, mTotalAnteriorDolar As Double
   Dim mvarCotizacionDolar As Double, mvarCotizacionMoneda As Double
   Dim mvarDebe As Double, mvarHaber As Double
   Dim mvarFecha As Date
   
   On Error GoTo Mal
   
   Set oCont = GetObjectContext
   
   If oCont Is Nothing Then
      Set oDet = CreateObject("MTSPronto.General")
   Else
      Set oDet = oCont.CreateInstance("MTSPronto.General")
   End If
   
   mvarIdentificador = IIf(IsEmpty(Factura.Fields(0).Value), 0, Factura.Fields(0).Value)
   mvarCotizacionMoneda = IIf(IsNull(Factura.Fields("CotizacionMoneda").Value), 0, Factura.Fields("CotizacionMoneda").Value)
   mvarCotizacionDolar = IIf(IsNull(Factura.Fields("CotizacionDolar").Value), 0, Factura.Fields("CotizacionDolar").Value)
   mvarAnulada = IIf(IsNull(Factura.Fields("Anulada").Value), "NO", Factura.Fields("Anulada").Value)
   
   oDet.Tarea "Log_InsertarRegistro", Array("FA", mvarIdentificador, 0, Now, 0, "COMIENZO CABECERA")
   Resp = iCompMTS_GuardarPorRef("Facturas", Factura)
   oDet.Tarea "Log_InsertarRegistro", Array("FA", mvarIdentificador, 0, Now, 0, "FIN CABECERA")
   
'   Set DatosRem = oDet.LeerUno("Remitos", Factura.Fields("IdRemito").Value)
'   If DatosRem.RecordCount > 0 Then
'      DatosRem.Fields("Facturado").Value = "SI"
'      DatosRem.Update
'      Resp = iCompMTS_GuardarPorRef("Remitos", DatosRem)
'   End If
   
   If Not IsNull(Factura.Fields("ContabilizarAFechaVencimiento").Value) And _
         Factura.Fields("ContabilizarAFechaVencimiento").Value = "SI" Then
      mvarFecha = Factura.Fields("FechaVencimiento").Value
   Else
      mvarFecha = Factura.Fields("FechaFactura").Value
   End If
   
   With Detalles
      If .State <> adStateClosed Then
         If Not .EOF Then
            .Update
            .MoveFirst
         End If
         
         Do While Not .EOF
            .Fields("IdFactura").Value = Factura.Fields(0).Value
            .Fields("NumeroFactura").Value = Factura.Fields("NumeroFactura").Value
            .Fields("TipoABC").Value = Factura.Fields("TipoABC").Value
            .Fields("PuntoVenta").Value = Factura.Fields("PuntoVenta").Value
            .Update
            
            If .Fields("Eliminado").Value Then
               oDet.Eliminar "DetFacturas", .Fields(0).Value
            Else
               Set Datos = CreateObject("ADOR.Recordset")
               For i = 0 To .Fields.Count - 2
                  With .Fields(i)
                     Datos.Fields.Append .Name, .Type, .DefinedSize, .Attributes
                     Datos.Fields(.Name).Precision = .Precision
                     Datos.Fields(.Name).NumericScale = .NumericScale
                  End With
               Next
               Datos.Open
               Datos.AddNew
               For i = 0 To .Fields.Count - 2
                  With .Fields(i)
                     Datos.Fields(i).Value = .Value
                  End With
               Next
               Datos.Update
               ClaDet = Datos.Fields(0).Value
               Resp = oDet.Guardar("DetFacturas", Datos)
               .Fields(0).Value = Datos.Fields(0).Value
               
               If ClaDet <= 0 Then
                  If DetallesRemitos.RecordCount > 0 Then
                     DetallesRemitos.MoveFirst
                     Do While Not DetallesRemitos.EOF
                        If DetallesRemitos.Fields("IdDetalleFactura").Value = ClaDet Then
                           DetallesRemitos.Fields("IdDetalleFactura").Value = Datos.Fields(0).Value
                        End If
                        DetallesRemitos.MoveNext
                     Loop
                  End If
                  If DetallesOrdenesCompra.RecordCount > 0 Then
                     DetallesOrdenesCompra.MoveFirst
                     Do While Not DetallesOrdenesCompra.EOF
                        If DetallesOrdenesCompra.Fields("IdDetalleFactura").Value = ClaDet Then
                           DetallesOrdenesCompra.Fields("IdDetalleFactura").Value = Datos.Fields(0).Value
                        End If
                        DetallesOrdenesCompra.MoveNext
                     Loop
                  End If
               End If
               
               Datos.Close
               Set Datos = Nothing
            End If
            
            .MoveNext
         Loop
      End If
   End With
   
   With DetallesRemitos
      If .State <> adStateClosed Then
         If .RecordCount > 0 Then
            .MoveFirst
            .Update
         End If
         
         Do While Not .EOF
            .Fields("IdFactura").Value = Factura.Fields(0).Value
            If .Fields("Eliminado").Value Then
               If .Fields(0) > 0 Then
                  oDet.Eliminar "DetFacturasRemitos", .Fields(0).Value
               End If
            Else
               Set Datos = CreateObject("ADOR.Recordset")
               For i = 0 To .Fields.Count - 2
                  With .Fields(i)
                     Datos.Fields.Append .Name, .Type, .DefinedSize, .Attributes
                     Datos.Fields(.Name).Precision = .Precision
                     Datos.Fields(.Name).NumericScale = .NumericScale
                  End With
               Next
               Datos.Open
               Datos.AddNew
               For i = 0 To .Fields.Count - 2
                  With .Fields(i)
                     Datos.Fields(i).Value = .Value
                  End With
               Next
               Datos.Update
               Resp = oDet.Guardar("DetFacturasRemitos", Datos)
               Datos.Close
               Set Datos = Nothing
            End If
            .MoveNext
         Loop
      End If
   End With
   
   With DetallesOrdenesCompra
      If .State <> adStateClosed Then
         If .RecordCount > 0 Then
            .MoveFirst
            .Update
         End If
         
         Do While Not .EOF
            .Fields("IdFactura").Value = Factura.Fields(0).Value
            If .Fields("Eliminado").Value Then
               If .Fields(0) > 0 Then
                  oDet.Eliminar "DetFacturasOrdenesCompra", .Fields(0).Value
               End If
            Else
               Set Datos = CreateObject("ADOR.Recordset")
               For i = 0 To .Fields.Count - 2
                  With .Fields(i)
                     Datos.Fields.Append .Name, .Type, .DefinedSize, .Attributes
                     Datos.Fields(.Name).Precision = .Precision
                     Datos.Fields(.Name).NumericScale = .NumericScale
                  End With
               Next
               Datos.Open
               Datos.AddNew
               For i = 0 To .Fields.Count - 2
                  With .Fields(i)
                     Datos.Fields(i).Value = .Value
                  End With
               Next
               Datos.Update
               Resp = oDet.Guardar("DetFacturasOrdenesCompra", Datos)
               Datos.Close
               Set Datos = Nothing
            End If
            .MoveNext
         Loop
      End If
   End With
   
   mImporteAnterior = 0
   mTotalAnteriorDolar = 0
   Set DatosCtaCte = oDet.TraerFiltrado("CtasCtesD", "_Struc")
   If mvarIdentificador <= 0 Then
      Set DatosCtaCteNv = CopiarRs(DatosCtaCte)
   Else
      Set DatosCtaCteNv = oDet.TraerFiltrado("CtasCtesD", "_BuscarComprobante", Array(Factura.Fields(0).Value, 1))
      If DatosCtaCteNv.RecordCount = 0 Then
         DatosCtaCteNv.Close
         Set DatosCtaCteNv = CopiarRs(DatosCtaCte)
      Else
         mImporteAnterior = IIf(IsNull(DatosCtaCteNv.Fields("ImporteTotal").Value), 0, DatosCtaCteNv.Fields("ImporteTotal").Value)
         mTotalAnteriorDolar = IIf(IsNull(DatosCtaCteNv.Fields("ImporteTotalDolar").Value), 0, DatosCtaCteNv.Fields("ImporteTotalDolar").Value)
      End If
   End If
   
   With DatosCtaCteNv
      .Fields("IdCliente").Value = Factura.Fields("IdCliente").Value
      .Fields("NumeroComprobante").Value = Factura.Fields("NumeroFactura").Value
      .Fields("Fecha").Value = mvarFecha
      .Fields("IdTipoComp").Value = 1
      .Fields("FechaVencimiento").Value = Factura.Fields("FechaVencimiento").Value
      .Fields("IdComprobante").Value = Factura.Fields(0).Value
      .Fields("Cotizacion").Value = Factura.Fields("CotizacionDolar").Value
      .Fields("IdMoneda").Value = Factura.Fields("IdMoneda").Value
      .Fields("CotizacionMoneda").Value = Factura.Fields("CotizacionMoneda").Value
      If mvarAnulada = "SI" Then
         .Fields("ImporteTotal").Value = 0
         .Fields("Saldo").Value = 0
         .Fields("ImporteTotalDolar").Value = 0
         .Fields("SaldoDolar").Value = 0
      Else
         .Fields("ImporteTotal").Value = Round(Factura.Fields("ImporteTotal").Value * mvarCotizacionMoneda, 2)
         .Fields("Saldo").Value = Round(Factura.Fields("ImporteTotal").Value * mvarCotizacionMoneda, 2) - mImporteAnterior
         .Fields("ImporteTotalDolar").Value = Factura.Fields("ImporteTotal").Value * mvarCotizacionMoneda / mvarCotizacionDolar
         .Fields("SaldoDolar").Value = (Factura.Fields("ImporteTotal").Value * mvarCotizacionMoneda / mvarCotizacionDolar) - mTotalAnteriorDolar
      End If
   End With
   Resp = oDet.Guardar("CtasCtesD", DatosCtaCteNv)
   DatosCtaCteNv.Fields("IdImputacion").Value = DatosCtaCteNv.Fields(0).Value
   Resp = oDet.Guardar("CtasCtesD", DatosCtaCteNv)
   DatosCtaCte.Close
   DatosCtaCteNv.Close
   Set DatosCtaCte = Nothing
   Set DatosCtaCteNv = Nothing
   
   If Not IsNull(Factura.Fields("IdCliente").Value) Then
      Set DatosCliente = oDet.LeerUno("Clientes", Factura.Fields("IdCliente").Value)
      If IsNull(DatosCliente.Fields("Saldo").Value) Then
         DatosCliente.Fields("Saldo").Value = 0
      End If
      If mvarAnulada = "SI" Then
         DatosCliente.Fields("Saldo").Value = DatosCliente.Fields("Saldo").Value - _
               mImporteAnterior
      Else
         DatosCliente.Fields("Saldo").Value = DatosCliente.Fields("Saldo").Value - _
               mImporteAnterior + _
               Round(Factura.Fields("ImporteTotal").Value * mvarCotizacionMoneda, 2)
      End If
      Resp = oDet.Guardar("Clientes", DatosCliente)
      DatosCliente.Close
      Set DatosCliente = Nothing
   End If
   
   'Borra la registracion contable anterior si la factura fue modificada
   If mvarIdentificador > 0 Or mvarAnulada = "SI" Then
      Set DatosAnt = oDet.TraerFiltrado("Subdiarios", "_PorIdComprobante", Array(mvarIdentificador, 1))
      With DatosAnt
         If .RecordCount > 0 Then
            .MoveFirst
            Do While Not .EOF
               oDet.Eliminar "Subdiarios", .Fields(0).Value
               .MoveNext
            Loop
         End If
         .Close
      End With
      Set DatosAnt = Nothing
   End If
               
   If mvarIdentificador <= 0 Then
      mvarDebe = 0
      mvarHaber = 0
      
      With RegistroContable
         If .State <> adStateClosed Then
            If .RecordCount > 0 Then
               .Update
               .MoveFirst
            End If
            Do While Not .EOF
               If Not IsNull(.Fields("Debe").Value) Then
                  .Fields("Debe").Value = Round(.Fields("Debe").Value * mvarCotizacionMoneda, 2)
                  .Update
                  mvarDebe = mvarDebe + .Fields("Debe").Value
               End If
               If Not IsNull(.Fields("Haber").Value) Then
                  .Fields("Haber").Value = Round(.Fields("Haber").Value * mvarCotizacionMoneda, 2)
                  .Update
                  mvarHaber = mvarHaber + .Fields("Haber").Value
               End If
               .MoveNext
            Loop
            If .RecordCount > 0 Then
               .MoveLast
               If mvarDebe - mvarHaber <> 0 Then
                  If Not IsNull(.Fields("Debe").Value) Then
                     .Fields("Debe").Value = .Fields("Debe").Value - Round(mvarDebe - mvarHaber, 2)
                  Else
                     .Fields("Haber").Value = .Fields("Haber").Value + Round(mvarDebe - mvarHaber, 2)
                  End If
               End If
               .MoveFirst
            End If
            Do While Not .EOF
               Set Datos = CreateObject("ADOR.Recordset")
               For i = 0 To .Fields.Count - 1
                  With .Fields(i)
                     Datos.Fields.Append .Name, .Type, .DefinedSize, .Attributes
                     Datos.Fields(.Name).Precision = .Precision
                     Datos.Fields(.Name).NumericScale = .NumericScale
                  End With
               Next
               Datos.Open
               Datos.AddNew
               For i = 0 To .Fields.Count - 1
                  With .Fields(i)
                     Datos.Fields(i).Value = .Value
                  End With
               Next
               Datos.Fields("IdComprobante").Value = Factura.Fields(0).Value
               Datos.Update
               Resp = oDet.Guardar("Subdiarios", Datos)
               Datos.Close
               Set Datos = Nothing
               .MoveNext
            Loop
         End If
      End With
   End If
   
   With DetallesProvincias
      If .State <> adStateClosed Then
         If .RecordCount > 0 Then
            .MoveFirst
            .Update
         End If
         
         Do While Not .EOF
            .Fields("IdFactura").Value = Factura.Fields(0).Value
            
            If .Fields("Eliminado").Value Then
               If .Fields(0) > 0 Then
                  oDet.Eliminar "DetFacturasProvincias", .Fields(0).Value
               End If
            Else
               Set Datos = CreateObject("ADOR.Recordset")
               For i = 0 To .Fields.Count - 2
                  With .Fields(i)
                     Datos.Fields.Append .Name, .Type, .DefinedSize, .Attributes
                     Datos.Fields(.Name).Precision = .Precision
                     Datos.Fields(.Name).NumericScale = .NumericScale
                  End With
               Next
               Datos.Open
               Datos.AddNew
               For i = 0 To .Fields.Count - 2
                  With .Fields(i)
                     Datos.Fields(i).Value = .Value
                  End With
               Next
               Datos.Update
               Resp = oDet.Guardar("DetFacturasProvincias", Datos)
               Datos.Close
               Set Datos = Nothing
            End If
            .MoveNext
         Loop
      End If
   End With
   
   oDet.Tarea "OrdenesCompra_ActualizarEstadoDetalles", Array(0, Factura.Fields(0).Value, 0)
   
   If Not oCont Is Nothing Then
      With oCont
         If .IsInTransaction Then .SetComplete
      End With
   End If
   
Salir:
   Guardar = Resp
   Set oDet = Nothing
   Set oCont = Nothing
   
   Set Detalles = Nothing
   Set RegistroContable = Nothing
   Set DetallesRemitos = Nothing
   Set DetallesOrdenesCompra = Nothing
   
   On Error GoTo 0
   If lErr Then
      Err.Raise lErr, sSource, sDesc
   End If
   Exit Function
   
Mal:
   If Not oCont Is Nothing Then
      With oCont
         If .IsInTransaction Then .SetAbort
      End With
   End If
   With Err
      lErr = .Number
      sSource = .Source
      sDesc = .Description
   End With
   oDet.Tarea "Log_InsertarRegistro", Array("MTSFA", Factura.Fields(0).Value, 0, Now, 0, _
         "Error " & Err.Number & Err.Description & ", " & Err.Source, _
         "MTSPronto " & App.Major & " " & App.Minor & " " & App.Revision)
   Resume Salir

End Function

Public Function GuardarRegistroContable(ByVal RegistroContable As ADOR.Recordset) As InterFazMTS.MisEstados

   Dim oCont As ObjectContext
   Dim oDet As iCompMTS
   Dim Resp As InterFazMTS.MisEstados
   Dim oRsComprobante As ADOR.Recordset
   Dim Datos As ADOR.Recordset
   Dim DatosAsiento As ADOR.Recordset
   Dim DatosAsientoNv As ADOR.Recordset
   Dim oRsParametros As ADOR.Recordset
   Dim DatosDetAsiento As ADOR.Recordset
   Dim DatosDetAsientoNv As ADOR.Recordset
   Dim oFld As ADOR.Field
   Dim lErr As Long, sSource As String, sDesc As String
   Dim i As Integer
   Dim mvarNumeroAsiento As Long, mvarIdAsiento As Long, mvarIdCuenta As Long
   Dim mvarCotizacionMoneda As Double, mvarDebe As Double, mvarHaber As Double
   
   On Error GoTo Mal
   
   Set oCont = GetObjectContext
   
   If oCont Is Nothing Then
      Set oDet = CreateObject("MTSPronto.General")
   Else
      Set oDet = oCont.CreateInstance("MTSPronto.General")
   End If
   
   mvarCotizacionMoneda = 0
   mvarDebe = 0
   mvarHaber = 0
   
   With RegistroContable
      If .State <> adStateClosed Then
         If .RecordCount > 0 Then
            .Update
            .MoveFirst
            Set oRsComprobante = oDet.LeerUno("Facturas", RegistroContable.Fields("IdComprobante").Value)
            mvarCotizacionMoneda = oRsComprobante.Fields("CotizacionMoneda").Value
            oRsComprobante.Close
            Set oRsComprobante = Nothing
         End If
         Do While Not .EOF
            If Not IsNull(.Fields("Debe").Value) Then
               .Fields("Debe").Value = Round(.Fields("Debe").Value * mvarCotizacionMoneda, 2)
               .Update
               mvarDebe = mvarDebe + .Fields("Debe").Value
            End If
            If Not IsNull(.Fields("Haber").Value) Then
               .Fields("Haber").Value = Round(.Fields("Haber").Value * mvarCotizacionMoneda, 2)
               .Update
               mvarHaber = mvarHaber + .Fields("Haber").Value
            End If
            .MoveNext
         Loop
         If .RecordCount > 0 Then
            .MoveLast
            If mvarDebe - mvarHaber <> 0 Then
               If Not IsNull(.Fields("Debe").Value) Then
                  .Fields("Debe").Value = .Fields("Debe").Value - Round(mvarDebe - mvarHaber, 2)
               Else
                  .Fields("Haber").Value = .Fields("Haber").Value + Round(mvarDebe - mvarHaber, 2)
               End If
            End If
            .MoveFirst
         End If
         Do While Not .EOF
            Set Datos = CreateObject("ADOR.Recordset")
            For i = 0 To .Fields.Count - 1
               With .Fields(i)
                  Datos.Fields.Append .Name, .Type, .DefinedSize, .Attributes
                  Datos.Fields(.Name).Precision = .Precision
                  Datos.Fields(.Name).NumericScale = .NumericScale
               End With
            Next
            Datos.Open
            Datos.AddNew
            For i = 0 To .Fields.Count - 1
               With .Fields(i)
                  Datos.Fields(i).Value = .Value
               End With
            Next
            Datos.Update
            Resp = oDet.Guardar("Subdiarios", Datos)
            Datos.Close
            Set Datos = Nothing
            .MoveNext
         Loop
      End If
   End With
   
   If Not oCont Is Nothing Then
      With oCont
         If .IsInTransaction Then .SetComplete
      End With
   End If
   
Salir:
   GuardarRegistroContable = Resp
   Set oDet = Nothing
   Set oCont = Nothing
   On Error GoTo 0
   If lErr Then
      Err.Raise lErr, sSource, sDesc
   End If
   Exit Function
   
Mal:
   If Not oCont Is Nothing Then
      With oCont
         If .IsInTransaction Then .SetAbort
      End With
   End If
   With Err
      lErr = .Number
      sSource = .Source
      sDesc = .Description
   End With
   Resume Salir

End Function

Private Sub iCompMTS_Tarea(ByVal NombreTarea As String, Optional ByVal Args As Variant)

   Dim oCont As ObjectContext
   Dim oA As GralUpd
   Dim lErr As Long, sSource As String, sDesc As String
   
   On Error GoTo Mal
   
   Set oCont = GetObjectContext
   
   If oCont Is Nothing Then
      Set oA = CreateObject("MTSPronto.GralUpd")
   Else
      Set oA = oCont.CreateInstance("MTSPronto.GralUpd")
   End If
   
   oA.Tarea NombreTarea, Args
   
   If Not oCont Is Nothing Then
      With oCont
         If .IsInTransaction Then .SetComplete
      End With
   End If
   
Salir:
   Set oA = Nothing
   Set oCont = Nothing
   On Error GoTo 0
   If lErr Then
      Err.Raise lErr, sSource, sDesc
   End If
   Exit Sub
   
Mal:
   If Not oCont Is Nothing Then
      With oCont
         If .IsInTransaction Then .SetAbort
      End With
   End If
   With Err
      lErr = .Number
      sSource = .Source
      sDesc = .Description
   End With
   Resume Salir

End Sub

Private Function iCompMTS_GuardarTodos(ByVal NombreTabla As String, ByRef vData As ADOR.Recordset) As InterFazMTS.MisEstados

   Dim oA As GralUpd
   Dim lErr As Long, sSource As String, sDesc As String
   
   On Error GoTo Mal
   
   Set oA = CreateObject("MTSPronto.GralUpd")
   
   iCompMTS_GuardarTodos = oA.GuardarTodos(NombreTabla, vData)
   
Salir:
   Set oA = Nothing
   On Error GoTo 0
   If lErr Then
      Err.Raise lErr, sSource, sDesc
   End If
   Exit Function
   
Mal:
   With Err
      lErr = .Number
      sSource = .Source
      sDesc = .Description
   End With
   Resume Salir

End Function


