'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="BDLMaster")>  _
Partial Public Class LinqBDLmasterDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertDetalleUserPermiso(instance As DetalleUserPermiso)
    End Sub
  Partial Private Sub UpdateDetalleUserPermiso(instance As DetalleUserPermiso)
    End Sub
  Partial Private Sub DeleteDetalleUserPermiso(instance As DetalleUserPermiso)
    End Sub
  Partial Private Sub InsertDetalleUserBD(instance As DetalleUserBD)
    End Sub
  Partial Private Sub UpdateDetalleUserBD(instance As DetalleUserBD)
    End Sub
  Partial Private Sub DeleteDetalleUserBD(instance As DetalleUserBD)
    End Sub
  Partial Private Sub InsertBase(instance As Base)
    End Sub
  Partial Private Sub UpdateBase(instance As Base)
    End Sub
  Partial Private Sub DeleteBase(instance As Base)
    End Sub
  Partial Private Sub Insertaspnet_User(instance As aspnet_User)
    End Sub
  Partial Private Sub Updateaspnet_User(instance As aspnet_User)
    End Sub
  Partial Private Sub Deleteaspnet_User(instance As aspnet_User)
    End Sub
  Partial Private Sub InsertUserDatosExtendido(instance As UserDatosExtendido)
    End Sub
  Partial Private Sub UpdateUserDatosExtendido(instance As UserDatosExtendido)
    End Sub
  Partial Private Sub DeleteUserDatosExtendido(instance As UserDatosExtendido)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.My.MySettings.Default.BDLMasterConnectionString1, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property DetalleUserPermisos() As System.Data.Linq.Table(Of DetalleUserPermiso)
		Get
			Return Me.GetTable(Of DetalleUserPermiso)
		End Get
	End Property
	
	Public ReadOnly Property DetalleUserBDs() As System.Data.Linq.Table(Of DetalleUserBD)
		Get
			Return Me.GetTable(Of DetalleUserBD)
		End Get
	End Property
	
	Public ReadOnly Property Bases() As System.Data.Linq.Table(Of Base)
		Get
			Return Me.GetTable(Of Base)
		End Get
	End Property
	
	Public ReadOnly Property aspnet_Users() As System.Data.Linq.Table(Of aspnet_User)
		Get
			Return Me.GetTable(Of aspnet_User)
		End Get
	End Property
	
	Public ReadOnly Property UserDatosExtendidos() As System.Data.Linq.Table(Of UserDatosExtendido)
		Get
			Return Me.GetTable(Of UserDatosExtendido)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DetalleUserPermisos")>  _
Partial Public Class DetalleUserPermiso
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdDetalleUserPermisos As Integer
	
	Private _UserId As System.Nullable(Of System.Guid)
	
	Private _Modulo As String
	
	Private _PuedeLeer As System.Nullable(Of Boolean)
	
	Private _PuedeModificar As System.Nullable(Of Boolean)
	
	Private _PuedeEliminar As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdDetalleUserPermisosChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdDetalleUserPermisosChanged()
    End Sub
    Partial Private Sub OnUserIdChanging(value As System.Nullable(Of System.Guid))
    End Sub
    Partial Private Sub OnUserIdChanged()
    End Sub
    Partial Private Sub OnModuloChanging(value As String)
    End Sub
    Partial Private Sub OnModuloChanged()
    End Sub
    Partial Private Sub OnPuedeLeerChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnPuedeLeerChanged()
    End Sub
    Partial Private Sub OnPuedeModificarChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnPuedeModificarChanged()
    End Sub
    Partial Private Sub OnPuedeEliminarChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnPuedeEliminarChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdDetalleUserPermisos", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdDetalleUserPermisos() As Integer
		Get
			Return Me._IdDetalleUserPermisos
		End Get
		Set
			If ((Me._IdDetalleUserPermisos = value)  _
						= false) Then
				Me.OnIdDetalleUserPermisosChanging(value)
				Me.SendPropertyChanging
				Me._IdDetalleUserPermisos = value
				Me.SendPropertyChanged("IdDetalleUserPermisos")
				Me.OnIdDetalleUserPermisosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId", DbType:="UniqueIdentifier")>  _
	Public Property UserId() As System.Nullable(Of System.Guid)
		Get
			Return Me._UserId
		End Get
		Set
			If (Me._UserId.Equals(value) = false) Then
				Me.OnUserIdChanging(value)
				Me.SendPropertyChanging
				Me._UserId = value
				Me.SendPropertyChanged("UserId")
				Me.OnUserIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Modulo", DbType:="VarChar(50)")>  _
	Public Property Modulo() As String
		Get
			Return Me._Modulo
		End Get
		Set
			If (String.Equals(Me._Modulo, value) = false) Then
				Me.OnModuloChanging(value)
				Me.SendPropertyChanging
				Me._Modulo = value
				Me.SendPropertyChanged("Modulo")
				Me.OnModuloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PuedeLeer", DbType:="Bit")>  _
	Public Property PuedeLeer() As System.Nullable(Of Boolean)
		Get
			Return Me._PuedeLeer
		End Get
		Set
			If (Me._PuedeLeer.Equals(value) = false) Then
				Me.OnPuedeLeerChanging(value)
				Me.SendPropertyChanging
				Me._PuedeLeer = value
				Me.SendPropertyChanged("PuedeLeer")
				Me.OnPuedeLeerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PuedeModificar", DbType:="Bit")>  _
	Public Property PuedeModificar() As System.Nullable(Of Boolean)
		Get
			Return Me._PuedeModificar
		End Get
		Set
			If (Me._PuedeModificar.Equals(value) = false) Then
				Me.OnPuedeModificarChanging(value)
				Me.SendPropertyChanging
				Me._PuedeModificar = value
				Me.SendPropertyChanged("PuedeModificar")
				Me.OnPuedeModificarChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PuedeEliminar", DbType:="Bit")>  _
	Public Property PuedeEliminar() As System.Nullable(Of Boolean)
		Get
			Return Me._PuedeEliminar
		End Get
		Set
			If (Me._PuedeEliminar.Equals(value) = false) Then
				Me.OnPuedeEliminarChanging(value)
				Me.SendPropertyChanging
				Me._PuedeEliminar = value
				Me.SendPropertyChanged("PuedeEliminar")
				Me.OnPuedeEliminarChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DetalleUserBD")>  _
Partial Public Class DetalleUserBD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdDetalleUserBD As Integer
	
	Private _UserId As System.Nullable(Of System.Guid)
	
	Private _IdBD As System.Nullable(Of Integer)
	
	Private _UltimaVezAccedida As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdDetalleUserBDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdDetalleUserBDChanged()
    End Sub
    Partial Private Sub OnUserIdChanging(value As System.Nullable(Of System.Guid))
    End Sub
    Partial Private Sub OnUserIdChanged()
    End Sub
    Partial Private Sub OnIdBDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdBDChanged()
    End Sub
    Partial Private Sub OnUltimaVezAccedidaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUltimaVezAccedidaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdDetalleUserBD", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdDetalleUserBD() As Integer
		Get
			Return Me._IdDetalleUserBD
		End Get
		Set
			If ((Me._IdDetalleUserBD = value)  _
						= false) Then
				Me.OnIdDetalleUserBDChanging(value)
				Me.SendPropertyChanging
				Me._IdDetalleUserBD = value
				Me.SendPropertyChanged("IdDetalleUserBD")
				Me.OnIdDetalleUserBDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId", DbType:="UniqueIdentifier")>  _
	Public Property UserId() As System.Nullable(Of System.Guid)
		Get
			Return Me._UserId
		End Get
		Set
			If (Me._UserId.Equals(value) = false) Then
				Me.OnUserIdChanging(value)
				Me.SendPropertyChanging
				Me._UserId = value
				Me.SendPropertyChanged("UserId")
				Me.OnUserIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdBD", DbType:="Int")>  _
	Public Property IdBD() As System.Nullable(Of Integer)
		Get
			Return Me._IdBD
		End Get
		Set
			If (Me._IdBD.Equals(value) = false) Then
				Me.OnIdBDChanging(value)
				Me.SendPropertyChanging
				Me._IdBD = value
				Me.SendPropertyChanged("IdBD")
				Me.OnIdBDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UltimaVezAccedida", DbType:="DateTime")>  _
	Public Property UltimaVezAccedida() As System.Nullable(Of Date)
		Get
			Return Me._UltimaVezAccedida
		End Get
		Set
			If (Me._UltimaVezAccedida.Equals(value) = false) Then
				Me.OnUltimaVezAccedidaChanging(value)
				Me.SendPropertyChanging
				Me._UltimaVezAccedida = value
				Me.SendPropertyChanged("UltimaVezAccedida")
				Me.OnUltimaVezAccedidaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Bases")>  _
Partial Public Class Base
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdBD As Integer
	
	Private _Descripcion As String
	
	Private _StringConection As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdBDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdBDChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnStringConectionChanging(value As String)
    End Sub
    Partial Private Sub OnStringConectionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdBD", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdBD() As Integer
		Get
			Return Me._IdBD
		End Get
		Set
			If ((Me._IdBD = value)  _
						= false) Then
				Me.OnIdBDChanging(value)
				Me.SendPropertyChanging
				Me._IdBD = value
				Me.SendPropertyChanged("IdBD")
				Me.OnIdBDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="VarChar(50)")>  _
	Public Property Descripcion() As String
		Get
			Return Me._Descripcion
		End Get
		Set
			If (String.Equals(Me._Descripcion, value) = false) Then
				Me.OnDescripcionChanging(value)
				Me.SendPropertyChanging
				Me._Descripcion = value
				Me.SendPropertyChanged("Descripcion")
				Me.OnDescripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StringConection", DbType:="VarChar(200)")>  _
	Public Property StringConection() As String
		Get
			Return Me._StringConection
		End Get
		Set
			If (String.Equals(Me._StringConection, value) = false) Then
				Me.OnStringConectionChanging(value)
				Me.SendPropertyChanging
				Me._StringConection = value
				Me.SendPropertyChanged("StringConection")
				Me.OnStringConectionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.aspnet_Users")>  _
Partial Public Class aspnet_User
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ApplicationId As System.Guid
	
	Private _UserId As System.Guid
	
	Private _UserName As String
	
	Private _LoweredUserName As String
	
	Private _MobileAlias As String
	
	Private _IsAnonymous As Boolean
	
	Private _LastActivityDate As Date
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnApplicationIdChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnApplicationIdChanged()
    End Sub
    Partial Private Sub OnUserIdChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnUserIdChanged()
    End Sub
    Partial Private Sub OnUserNameChanging(value As String)
    End Sub
    Partial Private Sub OnUserNameChanged()
    End Sub
    Partial Private Sub OnLoweredUserNameChanging(value As String)
    End Sub
    Partial Private Sub OnLoweredUserNameChanged()
    End Sub
    Partial Private Sub OnMobileAliasChanging(value As String)
    End Sub
    Partial Private Sub OnMobileAliasChanged()
    End Sub
    Partial Private Sub OnIsAnonymousChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsAnonymousChanged()
    End Sub
    Partial Private Sub OnLastActivityDateChanging(value As Date)
    End Sub
    Partial Private Sub OnLastActivityDateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApplicationId", DbType:="UniqueIdentifier NOT NULL")>  _
	Public Property ApplicationId() As System.Guid
		Get
			Return Me._ApplicationId
		End Get
		Set
			If ((Me._ApplicationId = value)  _
						= false) Then
				Me.OnApplicationIdChanging(value)
				Me.SendPropertyChanging
				Me._ApplicationId = value
				Me.SendPropertyChanged("ApplicationId")
				Me.OnApplicationIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId", DbType:="UniqueIdentifier NOT NULL", IsPrimaryKey:=true)>  _
	Public Property UserId() As System.Guid
		Get
			Return Me._UserId
		End Get
		Set
			If ((Me._UserId = value)  _
						= false) Then
				Me.OnUserIdChanging(value)
				Me.SendPropertyChanging
				Me._UserId = value
				Me.SendPropertyChanged("UserId")
				Me.OnUserIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserName", DbType:="NVarChar(256) NOT NULL", CanBeNull:=false)>  _
	Public Property UserName() As String
		Get
			Return Me._UserName
		End Get
		Set
			If (String.Equals(Me._UserName, value) = false) Then
				Me.OnUserNameChanging(value)
				Me.SendPropertyChanging
				Me._UserName = value
				Me.SendPropertyChanged("UserName")
				Me.OnUserNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LoweredUserName", DbType:="NVarChar(256) NOT NULL", CanBeNull:=false)>  _
	Public Property LoweredUserName() As String
		Get
			Return Me._LoweredUserName
		End Get
		Set
			If (String.Equals(Me._LoweredUserName, value) = false) Then
				Me.OnLoweredUserNameChanging(value)
				Me.SendPropertyChanging
				Me._LoweredUserName = value
				Me.SendPropertyChanged("LoweredUserName")
				Me.OnLoweredUserNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MobileAlias", DbType:="NVarChar(16)")>  _
	Public Property MobileAlias() As String
		Get
			Return Me._MobileAlias
		End Get
		Set
			If (String.Equals(Me._MobileAlias, value) = false) Then
				Me.OnMobileAliasChanging(value)
				Me.SendPropertyChanging
				Me._MobileAlias = value
				Me.SendPropertyChanged("MobileAlias")
				Me.OnMobileAliasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsAnonymous", DbType:="Bit NOT NULL")>  _
	Public Property IsAnonymous() As Boolean
		Get
			Return Me._IsAnonymous
		End Get
		Set
			If ((Me._IsAnonymous = value)  _
						= false) Then
				Me.OnIsAnonymousChanging(value)
				Me.SendPropertyChanging
				Me._IsAnonymous = value
				Me.SendPropertyChanged("IsAnonymous")
				Me.OnIsAnonymousChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastActivityDate", DbType:="DateTime NOT NULL")>  _
	Public Property LastActivityDate() As Date
		Get
			Return Me._LastActivityDate
		End Get
		Set
			If ((Me._LastActivityDate = value)  _
						= false) Then
				Me.OnLastActivityDateChanging(value)
				Me.SendPropertyChanging
				Me._LastActivityDate = value
				Me.SendPropertyChanged("LastActivityDate")
				Me.OnLastActivityDateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.UserDatosExtendidos")>  _
Partial Public Class UserDatosExtendido
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _UserId As System.Guid
	
	Private _RazonSocial As String
	
	Private _CUIT As String
	
	Private _PreCUIT As String
	
	Private _UltimaBaseAccedida As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnUserIdChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnUserIdChanged()
    End Sub
    Partial Private Sub OnRazonSocialChanging(value As String)
    End Sub
    Partial Private Sub OnRazonSocialChanged()
    End Sub
    Partial Private Sub OnCUITChanging(value As String)
    End Sub
    Partial Private Sub OnCUITChanged()
    End Sub
    Partial Private Sub OnPreCUITChanging(value As String)
    End Sub
    Partial Private Sub OnPreCUITChanged()
    End Sub
    Partial Private Sub OnUltimaBaseAccedidaChanging(value As String)
    End Sub
    Partial Private Sub OnUltimaBaseAccedidaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId", DbType:="UniqueIdentifier NOT NULL", IsPrimaryKey:=true)>  _
	Public Property UserId() As System.Guid
		Get
			Return Me._UserId
		End Get
		Set
			If ((Me._UserId = value)  _
						= false) Then
				Me.OnUserIdChanging(value)
				Me.SendPropertyChanging
				Me._UserId = value
				Me.SendPropertyChanged("UserId")
				Me.OnUserIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RazonSocial", DbType:="VarChar(50)")>  _
	Public Property RazonSocial() As String
		Get
			Return Me._RazonSocial
		End Get
		Set
			If (String.Equals(Me._RazonSocial, value) = false) Then
				Me.OnRazonSocialChanging(value)
				Me.SendPropertyChanging
				Me._RazonSocial = value
				Me.SendPropertyChanged("RazonSocial")
				Me.OnRazonSocialChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CUIT", DbType:="VarChar(50)")>  _
	Public Property CUIT() As String
		Get
			Return Me._CUIT
		End Get
		Set
			If (String.Equals(Me._CUIT, value) = false) Then
				Me.OnCUITChanging(value)
				Me.SendPropertyChanging
				Me._CUIT = value
				Me.SendPropertyChanged("CUIT")
				Me.OnCUITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PreCUIT", DbType:="VarChar(50)")>  _
	Public Property PreCUIT() As String
		Get
			Return Me._PreCUIT
		End Get
		Set
			If (String.Equals(Me._PreCUIT, value) = false) Then
				Me.OnPreCUITChanging(value)
				Me.SendPropertyChanging
				Me._PreCUIT = value
				Me.SendPropertyChanged("PreCUIT")
				Me.OnPreCUITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UltimaBaseAccedida", DbType:="VarChar(50)")>  _
	Public Property UltimaBaseAccedida() As String
		Get
			Return Me._UltimaBaseAccedida
		End Get
		Set
			If (String.Equals(Me._UltimaBaseAccedida, value) = false) Then
				Me.OnUltimaBaseAccedidaChanging(value)
				Me.SendPropertyChanging
				Me._UltimaBaseAccedida = value
				Me.SendPropertyChanged("UltimaBaseAccedida")
				Me.OnUltimaBaseAccedidaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
