// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
#pragma warning disable 1591, 3008, 3009
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace ProntoMVC.Controllers
{
    public partial class AccountController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AccountController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected AccountController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Usuarios()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Usuarios);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult SetMiPassword()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.SetMiPassword);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Verificar()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Verificar);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult BaseElegida()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.BaseElegida);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AccountController Actions { get { return MVC.Account; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Account";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Account";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Usuarios = "Usuarios";
            public readonly string LogOn = "LogOn";
            public readonly string LogOff = "LogOff";
            public readonly string RecuperarPassword = "RecuperarPassword";
            public readonly string CambiarPassword = "CambiarPassword";
            public readonly string SetMiPassword = "SetMiPassword";
            public readonly string Register = "Register";
            public readonly string Test_CircuitoDeComprasConFirmas_Asserts = "Test_CircuitoDeComprasConFirmas_Asserts";
            public readonly string Test_CircuitoDeVentasConFirmas_Asserts = "Test_CircuitoDeVentasConFirmas_Asserts";
            public readonly string Test_CreateInvalidContact = "Test_CreateInvalidContact";
            public readonly string Test_CrearUsuario = "Test_CrearUsuario";
            public readonly string Verificar = "Verificar";
            public readonly string ChangePassword = "ChangePassword";
            public readonly string ChangePasswordSuccess = "ChangePasswordSuccess";
            public readonly string ElegirBase = "ElegirBase";
            public readonly string BaseElegida = "BaseElegida";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Usuarios = "Usuarios";
            public const string LogOn = "LogOn";
            public const string LogOff = "LogOff";
            public const string RecuperarPassword = "RecuperarPassword";
            public const string CambiarPassword = "CambiarPassword";
            public const string SetMiPassword = "SetMiPassword";
            public const string Register = "Register";
            public const string Test_CircuitoDeComprasConFirmas_Asserts = "Test_CircuitoDeComprasConFirmas_Asserts";
            public const string Test_CircuitoDeVentasConFirmas_Asserts = "Test_CircuitoDeVentasConFirmas_Asserts";
            public const string Test_CreateInvalidContact = "Test_CreateInvalidContact";
            public const string Test_CrearUsuario = "Test_CrearUsuario";
            public const string Verificar = "Verificar";
            public const string ChangePassword = "ChangePassword";
            public const string ChangePasswordSuccess = "ChangePasswordSuccess";
            public const string ElegirBase = "ElegirBase";
            public const string BaseElegida = "BaseElegida";
        }


        static readonly ActionParamsClass_Usuarios s_params_Usuarios = new ActionParamsClass_Usuarios();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Usuarios UsuariosParams { get { return s_params_Usuarios; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Usuarios
        {
            public readonly string sidx = "sidx";
            public readonly string sord = "sord";
            public readonly string page = "page";
            public readonly string rows = "rows";
            public readonly string _search = "_search";
            public readonly string searchField = "searchField";
            public readonly string searchOper = "searchOper";
            public readonly string searchString = "searchString";
        }
        static readonly ActionParamsClass_LogOn s_params_LogOn = new ActionParamsClass_LogOn();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_LogOn LogOnParams { get { return s_params_LogOn; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_LogOn
        {
            public readonly string model = "model";
            public readonly string returnUrl = "returnUrl";
            public readonly string empresa = "empresa";
        }
        static readonly ActionParamsClass_SetMiPassword s_params_SetMiPassword = new ActionParamsClass_SetMiPassword();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetMiPassword SetMiPasswordParams { get { return s_params_SetMiPassword; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetMiPassword
        {
            public readonly string password = "password";
            public readonly string nuevapass = "nuevapass";
        }
        static readonly ActionParamsClass_RecuperarPassword s_params_RecuperarPassword = new ActionParamsClass_RecuperarPassword();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RecuperarPassword RecuperarPasswordParams { get { return s_params_RecuperarPassword; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RecuperarPassword
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_Register s_params_Register = new ActionParamsClass_Register();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Register RegisterParams { get { return s_params_Register; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Register
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_Verificar s_params_Verificar = new ActionParamsClass_Verificar();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Verificar VerificarParams { get { return s_params_Verificar; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Verificar
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_ChangePassword s_params_ChangePassword = new ActionParamsClass_ChangePassword();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ChangePassword ChangePasswordParams { get { return s_params_ChangePassword; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ChangePassword
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_BaseElegida s_params_BaseElegida = new ActionParamsClass_BaseElegida();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_BaseElegida BaseElegidaParams { get { return s_params_BaseElegida; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_BaseElegida
        {
            public readonly string sBase = "sBase";
            public readonly string returnUrl = "returnUrl";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _ViewStart = "_ViewStart";
                public readonly string CambiarPassword = "CambiarPassword";
                public readonly string ChangePassword = "ChangePassword";
                public readonly string ChangePasswordSuccess = "ChangePasswordSuccess";
                public readonly string ElegirBase = "ElegirBase";
                public readonly string favicon = "favicon";
                public readonly string LogOn = "LogOn";
                public readonly string LogOn_VersionOriginal = "LogOn_VersionOriginal";
                public readonly string RecuperarPassword = "RecuperarPassword";
                public readonly string Register = "Register";
                public readonly string RegisterEsperarAutorizacion = "RegisterEsperarAutorizacion";
                public readonly string Verificar = "Verificar";
            }
            public readonly string _ViewStart = "~/Views/Account/_ViewStart.cshtml";
            public readonly string CambiarPassword = "~/Views/Account/CambiarPassword.cshtml";
            public readonly string ChangePassword = "~/Views/Account/ChangePassword.cshtml";
            public readonly string ChangePasswordSuccess = "~/Views/Account/ChangePasswordSuccess.cshtml";
            public readonly string ElegirBase = "~/Views/Account/ElegirBase.cshtml";
            public readonly string favicon = "~/Views/Account/favicon.png";
            public readonly string LogOn = "~/Views/Account/LogOn.cshtml";
            public readonly string LogOn_VersionOriginal = "~/Views/Account/LogOn_VersionOriginal.cshtml";
            public readonly string RecuperarPassword = "~/Views/Account/RecuperarPassword.cshtml";
            public readonly string Register = "~/Views/Account/Register.cshtml";
            public readonly string RegisterEsperarAutorizacion = "~/Views/Account/RegisterEsperarAutorizacion.cshtml";
            public readonly string Verificar = "~/Views/Account/Verificar.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_AccountController : ProntoMVC.Controllers.AccountController
    {
        public T4MVC_AccountController() : base(Dummy.Instance) { }

        [NonAction]
        partial void UsuariosOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string sidx, string sord, int? page, int? rows, bool? _search, string searchField, string searchOper, string searchString);

        [NonAction]
        public override System.Web.Mvc.ActionResult Usuarios(string sidx, string sord, int? page, int? rows, bool? _search, string searchField, string searchOper, string searchString)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Usuarios);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "sidx", sidx);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "sord", sord);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "rows", rows);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "_search", _search);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "searchField", searchField);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "searchOper", searchOper);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "searchString", searchString);
            UsuariosOverride(callInfo, sidx, sord, page, rows, _search, searchField, searchOper, searchString);
            return callInfo;
        }

        [NonAction]
        partial void LogOnOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult LogOn()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LogOn);
            LogOnOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void LogOnOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, ProntoMVC.Models.LogOnModel model, string returnUrl, string empresa);

        [NonAction]
        public override System.Web.Mvc.ActionResult LogOn(ProntoMVC.Models.LogOnModel model, string returnUrl, string empresa)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LogOn);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "empresa", empresa);
            LogOnOverride(callInfo, model, returnUrl, empresa);
            return callInfo;
        }

        [NonAction]
        partial void LogOffOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult LogOff()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LogOff);
            LogOffOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void RecuperarPasswordOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult RecuperarPassword()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RecuperarPassword);
            RecuperarPasswordOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CambiarPasswordOverride(T4MVC_System_Web_Mvc_ViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ViewResult CambiarPassword()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.CambiarPassword);
            CambiarPasswordOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SetMiPasswordOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string password, string nuevapass);

        [NonAction]
        public override System.Web.Mvc.JsonResult SetMiPassword(string password, string nuevapass)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.SetMiPassword);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "password", password);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "nuevapass", nuevapass);
            SetMiPasswordOverride(callInfo, password, nuevapass);
            return callInfo;
        }

        [NonAction]
        partial void RecuperarPasswordOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, ProntoMVC.Models.RecuperarPasswordModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult RecuperarPassword(ProntoMVC.Models.RecuperarPasswordModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RecuperarPassword);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            RecuperarPasswordOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void RegisterOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Register()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Register);
            RegisterOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void RegisterOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, ProntoMVC.Models.RegisterModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult Register(ProntoMVC.Models.RegisterModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Register);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            RegisterOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void Test_CircuitoDeComprasConFirmas_AssertsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Test_CircuitoDeComprasConFirmas_Asserts()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Test_CircuitoDeComprasConFirmas_Asserts);
            Test_CircuitoDeComprasConFirmas_AssertsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void Test_CircuitoDeVentasConFirmas_AssertsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Test_CircuitoDeVentasConFirmas_Asserts()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Test_CircuitoDeVentasConFirmas_Asserts);
            Test_CircuitoDeVentasConFirmas_AssertsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void Test_CreateInvalidContactOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Test_CreateInvalidContact()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Test_CreateInvalidContact);
            Test_CreateInvalidContactOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void Test_CrearUsuarioOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Test_CrearUsuario()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Test_CrearUsuario);
            Test_CrearUsuarioOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void VerificarOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult Verificar(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Verificar);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            VerificarOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void ChangePasswordOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ChangePassword()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangePassword);
            ChangePasswordOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ChangePasswordOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, ProntoMVC.Models.ChangePasswordModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult ChangePassword(ProntoMVC.Models.ChangePasswordModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangePassword);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ChangePasswordOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void ChangePasswordSuccessOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ChangePasswordSuccess()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangePasswordSuccess);
            ChangePasswordSuccessOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ElegirBaseOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ElegirBase()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ElegirBase);
            ElegirBaseOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void BaseElegidaOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string sBase, string returnUrl);

        [NonAction]
        public override System.Web.Mvc.ActionResult BaseElegida(string sBase, string returnUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.BaseElegida);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "sBase", sBase);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            BaseElegidaOverride(callInfo, sBase, returnUrl);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009
