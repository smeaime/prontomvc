/****** Object:  StoredProcedure [dbo].[_AlterTable]    Script Date: 03/15/2011 11:48:08 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[_AlterTable]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[_AlterTable]
GO

/****** Object:  StoredProcedure [dbo].[Acopios_TX_DatosAcopio]    Script Date: 03/15/2011 11:48:08 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Acopios_TX_DatosAcopio]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Acopios_TX_DatosAcopio]
GO

/****** Object:  StoredProcedure [dbo].[AjustesStock_A]    Script Date: 03/15/2011 11:48:08 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AjustesStock_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AjustesStock_A]
GO

/****** Object:  StoredProcedure [dbo].[AjustesStock_E]    Script Date: 03/15/2011 11:48:08 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AjustesStock_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AjustesStock_E]
GO

/****** Object:  StoredProcedure [dbo].[AjustesStock_M]    Script Date: 03/15/2011 11:48:08 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AjustesStock_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AjustesStock_M]
GO

/****** Object:  StoredProcedure [dbo].[AjustesStock_T]    Script Date: 03/15/2011 11:48:08 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AjustesStock_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AjustesStock_T]
GO

/****** Object:  StoredProcedure [dbo].[AjustesStock_TT]    Script Date: 03/15/2011 11:48:08 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AjustesStock_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AjustesStock_TT]
GO

/****** Object:  StoredProcedure [dbo].[AjustesStock_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:08 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AjustesStock_TX_ParaTransmitir]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AjustesStock_TX_ParaTransmitir]
GO

/****** Object:  StoredProcedure [dbo].[AjustesStock_TX_PorMarbete]    Script Date: 03/15/2011 11:48:08 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AjustesStock_TX_PorMarbete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AjustesStock_TX_PorMarbete]
GO

/****** Object:  StoredProcedure [dbo].[AjustesStock_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:08 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AjustesStock_TX_SetearComoTransmitido]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AjustesStock_TX_SetearComoTransmitido]
GO

/****** Object:  StoredProcedure [dbo].[AjustesStock_TX_TT]    Script Date: 03/15/2011 11:48:08 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AjustesStock_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AjustesStock_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitir_TT]    Script Date: 03/15/2011 11:48:08 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ArchivosATransmitir_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ArchivosATransmitir_TT]
GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirDestinos_E]    Script Date: 03/15/2011 11:48:08 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ArchivosATransmitirDestinos_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ArchivosATransmitirDestinos_E]
GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirDestinos_M]    Script Date: 03/15/2011 11:48:08 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ArchivosATransmitirDestinos_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ArchivosATransmitirDestinos_M]
GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirDestinos_T]    Script Date: 03/15/2011 11:48:08 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ArchivosATransmitirDestinos_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ArchivosATransmitirDestinos_T]
GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirDestinos_TL]    Script Date: 03/15/2011 11:48:08 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ArchivosATransmitirDestinos_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ArchivosATransmitirDestinos_TL]
GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirDestinos_TT]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ArchivosATransmitirDestinos_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ArchivosATransmitirDestinos_TT]
GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirDestinos_TX_Activos]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ArchivosATransmitirDestinos_TX_Activos]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ArchivosATransmitirDestinos_TX_Activos]
GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirDestinos_TX_DestinoActual]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ArchivosATransmitirDestinos_TX_DestinoActual]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ArchivosATransmitirDestinos_TX_DestinoActual]
GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirDestinos_TX_PorId]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ArchivosATransmitirDestinos_TX_PorId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ArchivosATransmitirDestinos_TX_PorId]
GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirDestinos_TX_TT]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ArchivosATransmitirDestinos_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ArchivosATransmitirDestinos_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirLoteo_A]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ArchivosATransmitirLoteo_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ArchivosATransmitirLoteo_A]
GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirLoteo_E]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ArchivosATransmitirLoteo_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ArchivosATransmitirLoteo_E]
GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirLoteo_M]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ArchivosATransmitirLoteo_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ArchivosATransmitirLoteo_M]
GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirLoteo_T]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ArchivosATransmitirLoteo_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ArchivosATransmitirLoteo_T]
GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirLoteo_TT]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ArchivosATransmitirLoteo_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ArchivosATransmitirLoteo_TT]
GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirLoteo_TX_EstadoGeneral]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ArchivosATransmitirLoteo_TX_EstadoGeneral]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ArchivosATransmitirLoteo_TX_EstadoGeneral]
GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirLoteo_TX_PorArchivoLote]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ArchivosATransmitirLoteo_TX_PorArchivoLote]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ArchivosATransmitirLoteo_TX_PorArchivoLote]
GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirLoteo_TX_UltimoLote]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ArchivosATransmitirLoteo_TX_UltimoLote]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ArchivosATransmitirLoteo_TX_UltimoLote]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_BorrarPorIdRubro]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_BorrarPorIdRubro]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_BorrarPorIdRubro]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_E]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_E]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_M]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_M]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_RegistrarAlicuotaIVA]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_RegistrarAlicuotaIVA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_RegistrarAlicuotaIVA]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_T]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_T]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_TL]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_TL]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_TT]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_TT]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_AgrupadoPorFamilia]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_TX_AgrupadoPorFamilia]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_TX_AgrupadoPorFamilia]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_AgrupadoPorRubro]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_TX_AgrupadoPorRubro]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_TX_AgrupadoPorRubro]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_AgrupadoPorSubrubro]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_TX_AgrupadoPorSubrubro]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_TX_AgrupadoPorSubrubro]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_Busca]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_TX_Busca]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_TX_Busca]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_BuscaConFormato]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_TX_BuscaConFormato]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_TX_BuscaConFormato]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_Clave]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_TX_Clave]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_TX_Clave]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_DatosConCuenta]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_TX_DatosConCuenta]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_TX_DatosConCuenta]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_ParaMenu]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_TX_ParaMenu]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_TX_ParaMenu]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_TX_ParaTransmitir]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_TX_ParaTransmitir]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_ParaTransmitir_Todos]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_TX_ParaTransmitir_Todos]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_TX_ParaTransmitir_Todos]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_PorCodigo]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_TX_PorCodigo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_TX_PorCodigo]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_PorDescripcion]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_TX_PorDescripcion]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_TX_PorDescripcion]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_PorGrupo]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_TX_PorGrupo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_TX_PorGrupo]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_PorId]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_TX_PorId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_TX_PorId]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_PorIdConDatos]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_TX_PorIdConDatos]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_TX_PorIdConDatos]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_PorIdRubro]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_TX_PorIdRubro]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_TX_PorIdRubro]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_PorIdRubroParaCombo]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_TX_PorIdRubroParaCombo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_TX_PorIdRubroParaCombo]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_PorNumeroInventario]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_TX_PorNumeroInventario]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_TX_PorNumeroInventario]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_SaldosDeStockAFecha]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_TX_SaldosDeStockAFecha]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_TX_SaldosDeStockAFecha]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_TX_SetearComoTransmitido]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_TX_SetearComoTransmitido]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_StockPorArticuloPartidaUnidadUbicacionObra]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_TX_StockPorArticuloPartidaUnidadUbicacionObra]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_TX_StockPorArticuloPartidaUnidadUbicacionObra]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_StockPorPartida]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_TX_StockPorPartida]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_TX_StockPorPartida]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_StockTotalPorArticulo]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_TX_StockTotalPorArticulo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_TX_StockTotalPorArticulo]
GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_TT]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Articulos_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Articulos_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[ArticulosInformacionAdicional_A]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ArticulosInformacionAdicional_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ArticulosInformacionAdicional_A]
GO

/****** Object:  StoredProcedure [dbo].[ArticulosInformacionAdicional_E]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ArticulosInformacionAdicional_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ArticulosInformacionAdicional_E]
GO

/****** Object:  StoredProcedure [dbo].[ArticulosInformacionAdicional_M]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ArticulosInformacionAdicional_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ArticulosInformacionAdicional_M]
GO

/****** Object:  StoredProcedure [dbo].[ArticulosInformacionAdicional_T]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ArticulosInformacionAdicional_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ArticulosInformacionAdicional_T]
GO

/****** Object:  StoredProcedure [dbo].[ArticulosInformacionAdicional_TX_PorArticulo]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ArticulosInformacionAdicional_TX_PorArticulo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ArticulosInformacionAdicional_TX_PorArticulo]
GO

/****** Object:  StoredProcedure [dbo].[Autorizaciones_A]    Script Date: 03/15/2011 11:48:09 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Autorizaciones_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Autorizaciones_A]
GO

/****** Object:  StoredProcedure [dbo].[Autorizaciones_E]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Autorizaciones_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Autorizaciones_E]
GO

/****** Object:  StoredProcedure [dbo].[Autorizaciones_M]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Autorizaciones_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Autorizaciones_M]
GO

/****** Object:  StoredProcedure [dbo].[Autorizaciones_T]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Autorizaciones_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Autorizaciones_T]
GO

/****** Object:  StoredProcedure [dbo].[Autorizaciones_TT]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Autorizaciones_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Autorizaciones_TT]
GO

/****** Object:  StoredProcedure [dbo].[Autorizaciones_TX_CantidadAutorizaciones]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Autorizaciones_TX_CantidadAutorizaciones]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Autorizaciones_TX_CantidadAutorizaciones]
GO

/****** Object:  StoredProcedure [dbo].[Autorizaciones_TX_PorFormulario]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Autorizaciones_TX_PorFormulario]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Autorizaciones_TX_PorFormulario]
GO

/****** Object:  StoredProcedure [dbo].[Autorizaciones_TX_PorIdFormulario]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Autorizaciones_TX_PorIdFormulario]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Autorizaciones_TX_PorIdFormulario]
GO

/****** Object:  StoredProcedure [dbo].[Autorizaciones_TX_TT]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Autorizaciones_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Autorizaciones_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[AutorizacionesPorComprobante_A]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AutorizacionesPorComprobante_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AutorizacionesPorComprobante_A]
GO

/****** Object:  StoredProcedure [dbo].[AutorizacionesPorComprobante_E]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AutorizacionesPorComprobante_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AutorizacionesPorComprobante_E]
GO

/****** Object:  StoredProcedure [dbo].[AutorizacionesPorComprobante_Generar]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AutorizacionesPorComprobante_Generar]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AutorizacionesPorComprobante_Generar]
GO

/****** Object:  StoredProcedure [dbo].[AutorizacionesPorComprobante_GenerarFirmas]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AutorizacionesPorComprobante_GenerarFirmas]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AutorizacionesPorComprobante_GenerarFirmas]
GO

/****** Object:  StoredProcedure [dbo].[AutorizacionesPorComprobante_M]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AutorizacionesPorComprobante_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AutorizacionesPorComprobante_M]
GO

/****** Object:  StoredProcedure [dbo].[AutorizacionesPorComprobante_T]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AutorizacionesPorComprobante_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AutorizacionesPorComprobante_T]
GO

/****** Object:  StoredProcedure [dbo].[AutorizacionesPorComprobante_TT]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AutorizacionesPorComprobante_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AutorizacionesPorComprobante_TT]
GO

/****** Object:  StoredProcedure [dbo].[AutorizacionesPorComprobante_TX_AutorizacionesPorComprobante]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AutorizacionesPorComprobante_TX_AutorizacionesPorComprobante]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AutorizacionesPorComprobante_TX_AutorizacionesPorComprobante]
GO

/****** Object:  StoredProcedure [dbo].[AutorizacionesPorComprobante_TX_AutorizaPorSector]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AutorizacionesPorComprobante_TX_AutorizaPorSector]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AutorizacionesPorComprobante_TX_AutorizaPorSector]
GO

/****** Object:  StoredProcedure [dbo].[AutorizacionesPorComprobante_TX_ComprobantesSinFirmar]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AutorizacionesPorComprobante_TX_ComprobantesSinFirmar]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AutorizacionesPorComprobante_TX_ComprobantesSinFirmar]
GO

/****** Object:  StoredProcedure [dbo].[AutorizacionesPorComprobante_TX_DocumentosPorAutoriza]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AutorizacionesPorComprobante_TX_DocumentosPorAutoriza]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AutorizacionesPorComprobante_TX_DocumentosPorAutoriza]
GO

/****** Object:  StoredProcedure [dbo].[AutorizacionesPorComprobante_TX_FirmasPendientes]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AutorizacionesPorComprobante_TX_FirmasPendientes]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AutorizacionesPorComprobante_TX_FirmasPendientes]
GO

/****** Object:  StoredProcedure [dbo].[AutorizacionesPorComprobante_TX_PorIdRM]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AutorizacionesPorComprobante_TX_PorIdRM]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AutorizacionesPorComprobante_TX_PorIdRM]
GO

/****** Object:  StoredProcedure [dbo].[AutorizacionesPorComprobante_TX_Sectores]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AutorizacionesPorComprobante_TX_Sectores]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AutorizacionesPorComprobante_TX_Sectores]
GO

/****** Object:  StoredProcedure [dbo].[BD_TX_BaseDeDatos]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BD_TX_BaseDeDatos]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BD_TX_BaseDeDatos]
GO

/****** Object:  StoredProcedure [dbo].[BD_TX_BasesInstaladas]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BD_TX_BasesInstaladas]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BD_TX_BasesInstaladas]
GO

/****** Object:  StoredProcedure [dbo].[BD_TX_Campos]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BD_TX_Campos]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BD_TX_Campos]
GO

/****** Object:  StoredProcedure [dbo].[BD_TX_Host]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BD_TX_Host]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BD_TX_Host]
GO

/****** Object:  StoredProcedure [dbo].[BD_TX_Tablas]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BD_TX_Tablas]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BD_TX_Tablas]
GO

/****** Object:  StoredProcedure [dbo].[BZ_Pesadas_A]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BZ_Pesadas_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BZ_Pesadas_A]
GO

/****** Object:  StoredProcedure [dbo].[BZ_Pesadas_M]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BZ_Pesadas_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BZ_Pesadas_M]
GO

/****** Object:  StoredProcedure [dbo].[BZ_Pesadas_T]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BZ_Pesadas_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BZ_Pesadas_T]
GO

/****** Object:  StoredProcedure [dbo].[BZ_Pesadas_TL]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BZ_Pesadas_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BZ_Pesadas_TL]
GO

/****** Object:  StoredProcedure [dbo].[BZ_Pesadas_TT]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BZ_Pesadas_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BZ_Pesadas_TT]
GO

/****** Object:  StoredProcedure [dbo].[BZ_Pesadas_TX_Entradas]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BZ_Pesadas_TX_Entradas]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BZ_Pesadas_TX_Entradas]
GO

/****** Object:  StoredProcedure [dbo].[BZ_Pesadas_TX_Pendientes]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BZ_Pesadas_TX_Pendientes]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BZ_Pesadas_TX_Pendientes]
GO

/****** Object:  StoredProcedure [dbo].[BZ_Pesadas_TX_Salidas]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BZ_Pesadas_TX_Salidas]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BZ_Pesadas_TX_Salidas]
GO

/****** Object:  StoredProcedure [dbo].[BZ_Pesadas_TX_Todas]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BZ_Pesadas_TX_Todas]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BZ_Pesadas_TX_Todas]
GO

/****** Object:  StoredProcedure [dbo].[BZ_Pesadas_TX_TT]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BZ_Pesadas_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BZ_Pesadas_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[Camiones_A]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Camiones_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Camiones_A]
GO

/****** Object:  StoredProcedure [dbo].[Camiones_M]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Camiones_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Camiones_M]
GO

/****** Object:  StoredProcedure [dbo].[Camiones_T]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Camiones_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Camiones_T]
GO

/****** Object:  StoredProcedure [dbo].[Camiones_TL]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Camiones_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Camiones_TL]
GO

/****** Object:  StoredProcedure [dbo].[Camiones_TT]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Camiones_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Camiones_TT]
GO

/****** Object:  StoredProcedure [dbo].[Camiones_TX_TT]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Camiones_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Camiones_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[Cargos_A]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Cargos_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Cargos_A]
GO

/****** Object:  StoredProcedure [dbo].[Cargos_E]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Cargos_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Cargos_E]
GO

/****** Object:  StoredProcedure [dbo].[Cargos_M]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Cargos_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Cargos_M]
GO

/****** Object:  StoredProcedure [dbo].[Cargos_T]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Cargos_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Cargos_T]
GO

/****** Object:  StoredProcedure [dbo].[Cargos_TL]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Cargos_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Cargos_TL]
GO

/****** Object:  StoredProcedure [dbo].[Cargos_TT]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Cargos_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Cargos_TT]
GO

/****** Object:  StoredProcedure [dbo].[Cargos_TX_TT]    Script Date: 03/15/2011 11:48:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Cargos_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Cargos_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[CentrosCosto_A]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CentrosCosto_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CentrosCosto_A]
GO

/****** Object:  StoredProcedure [dbo].[CentrosCosto_E]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CentrosCosto_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CentrosCosto_E]
GO

/****** Object:  StoredProcedure [dbo].[CentrosCosto_M]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CentrosCosto_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CentrosCosto_M]
GO

/****** Object:  StoredProcedure [dbo].[CentrosCosto_T]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CentrosCosto_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CentrosCosto_T]
GO

/****** Object:  StoredProcedure [dbo].[CentrosCosto_TL]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CentrosCosto_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CentrosCosto_TL]
GO

/****** Object:  StoredProcedure [dbo].[CentrosCosto_TT]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CentrosCosto_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CentrosCosto_TT]
GO

/****** Object:  StoredProcedure [dbo].[CentrosCosto_TX_TT]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CentrosCosto_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CentrosCosto_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[Choferes_A]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Choferes_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Choferes_A]
GO

/****** Object:  StoredProcedure [dbo].[Choferes_E]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Choferes_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Choferes_E]
GO

/****** Object:  StoredProcedure [dbo].[Choferes_M]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Choferes_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Choferes_M]
GO

/****** Object:  StoredProcedure [dbo].[Choferes_T]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Choferes_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Choferes_T]
GO

/****** Object:  StoredProcedure [dbo].[Choferes_TL]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Choferes_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Choferes_TL]
GO

/****** Object:  StoredProcedure [dbo].[Choferes_TT]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Choferes_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Choferes_TT]
GO

/****** Object:  StoredProcedure [dbo].[Choferes_TX_TT]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Choferes_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Choferes_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[Clientes_E]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Clientes_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Clientes_E]
GO

/****** Object:  StoredProcedure [dbo].[Clientes_M]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Clientes_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Clientes_M]
GO

/****** Object:  StoredProcedure [dbo].[Clientes_T]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Clientes_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Clientes_T]
GO

/****** Object:  StoredProcedure [dbo].[Clientes_TL]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Clientes_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Clientes_TL]
GO

/****** Object:  StoredProcedure [dbo].[Clientes_TT]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Clientes_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Clientes_TT]
GO

/****** Object:  StoredProcedure [dbo].[Clientes_TX_Busca]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Clientes_TX_Busca]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Clientes_TX_Busca]
GO

/****** Object:  StoredProcedure [dbo].[Clientes_TX_Busca1]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Clientes_TX_Busca1]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Clientes_TX_Busca1]
GO

/****** Object:  StoredProcedure [dbo].[Clientes_TX_PorCodigo]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Clientes_TX_PorCodigo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Clientes_TX_PorCodigo]
GO

/****** Object:  StoredProcedure [dbo].[Clientes_TX_PorCuit]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Clientes_TX_PorCuit]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Clientes_TX_PorCuit]
GO

/****** Object:  StoredProcedure [dbo].[Clientes_TX_PorId]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Clientes_TX_PorId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Clientes_TX_PorId]
GO

/****** Object:  StoredProcedure [dbo].[Clientes_TX_PorIdConDatos]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Clientes_TX_PorIdConDatos]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Clientes_TX_PorIdConDatos]
GO

/****** Object:  StoredProcedure [dbo].[Clientes_TX_PorRazonSocial]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Clientes_TX_PorRazonSocial]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Clientes_TX_PorRazonSocial]
GO

/****** Object:  StoredProcedure [dbo].[Clientes_TX_TT]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Clientes_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Clientes_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[Clientes_TX_ValidarCodigo]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Clientes_TX_ValidarCodigo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Clientes_TX_ValidarCodigo]
GO

/****** Object:  StoredProcedure [dbo].[CondicionesCompra_M]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CondicionesCompra_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CondicionesCompra_M]
GO

/****** Object:  StoredProcedure [dbo].[CondicionesCompra_T]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CondicionesCompra_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CondicionesCompra_T]
GO

/****** Object:  StoredProcedure [dbo].[CondicionesCompra_TL]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CondicionesCompra_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CondicionesCompra_TL]
GO

/****** Object:  StoredProcedure [dbo].[Conjuntos_M]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Conjuntos_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Conjuntos_M]
GO

/****** Object:  StoredProcedure [dbo].[Conjuntos_T]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Conjuntos_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Conjuntos_T]
GO

/****** Object:  StoredProcedure [dbo].[Conjuntos_TX_DetallesPorIdArticulo]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Conjuntos_TX_DetallesPorIdArticulo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Conjuntos_TX_DetallesPorIdArticulo]
GO

/****** Object:  StoredProcedure [dbo].[Consulta_TX_PorSQL]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Consulta_TX_PorSQL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Consulta_TX_PorSQL]
GO

/****** Object:  StoredProcedure [dbo].[ConsultaStockCompleto_TX1]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ConsultaStockCompleto_TX1]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ConsultaStockCompleto_TX1]
GO

/****** Object:  StoredProcedure [dbo].[ConsultaStockCompleto_TX2]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ConsultaStockCompleto_TX2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ConsultaStockCompleto_TX2]
GO

/****** Object:  StoredProcedure [dbo].[ControlesCalidad_A]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ControlesCalidad_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ControlesCalidad_A]
GO

/****** Object:  StoredProcedure [dbo].[ControlesCalidad_E]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ControlesCalidad_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ControlesCalidad_E]
GO

/****** Object:  StoredProcedure [dbo].[ControlesCalidad_M]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ControlesCalidad_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ControlesCalidad_M]
GO

/****** Object:  StoredProcedure [dbo].[ControlesCalidad_T]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ControlesCalidad_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ControlesCalidad_T]
GO

/****** Object:  StoredProcedure [dbo].[ControlesCalidad_TL]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ControlesCalidad_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ControlesCalidad_TL]
GO

/****** Object:  StoredProcedure [dbo].[ControlesCalidad_TT]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ControlesCalidad_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ControlesCalidad_TT]
GO

/****** Object:  StoredProcedure [dbo].[ControlesCalidad_TX_Alfabetico]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ControlesCalidad_TX_Alfabetico]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ControlesCalidad_TX_Alfabetico]
GO

/****** Object:  StoredProcedure [dbo].[ControlesCalidad_TX_TT]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ControlesCalidad_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ControlesCalidad_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[Cotizaciones_A]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Cotizaciones_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Cotizaciones_A]
GO

/****** Object:  StoredProcedure [dbo].[Cotizaciones_E]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Cotizaciones_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Cotizaciones_E]
GO

/****** Object:  StoredProcedure [dbo].[Cotizaciones_M]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Cotizaciones_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Cotizaciones_M]
GO

/****** Object:  StoredProcedure [dbo].[Cotizaciones_T]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Cotizaciones_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Cotizaciones_T]
GO

/****** Object:  StoredProcedure [dbo].[Cotizaciones_TT]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Cotizaciones_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Cotizaciones_TT]
GO

/****** Object:  StoredProcedure [dbo].[Cotizaciones_TX_PorFechaMoneda]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Cotizaciones_TX_PorFechaMoneda]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Cotizaciones_TX_PorFechaMoneda]
GO

/****** Object:  StoredProcedure [dbo].[Cotizaciones_TX_TT]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Cotizaciones_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Cotizaciones_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[Cotizaciones_TXAnio]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Cotizaciones_TXAnio]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Cotizaciones_TXAnio]
GO

/****** Object:  StoredProcedure [dbo].[Cotizaciones_TXFecha]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Cotizaciones_TXFecha]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Cotizaciones_TXFecha]
GO

/****** Object:  StoredProcedure [dbo].[Cotizaciones_TXMes]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Cotizaciones_TXMes]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Cotizaciones_TXMes]
GO

/****** Object:  StoredProcedure [dbo].[Cuentas_A]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Cuentas_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Cuentas_A]
GO

/****** Object:  StoredProcedure [dbo].[Cuentas_E]    Script Date: 03/15/2011 11:48:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Cuentas_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Cuentas_E]
GO

/****** Object:  StoredProcedure [dbo].[Cuentas_M]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Cuentas_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Cuentas_M]
GO

/****** Object:  StoredProcedure [dbo].[Cuentas_T]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Cuentas_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Cuentas_T]
GO

/****** Object:  StoredProcedure [dbo].[Cuentas_TL]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Cuentas_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Cuentas_TL]
GO

/****** Object:  StoredProcedure [dbo].[Cuentas_TT]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Cuentas_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Cuentas_TT]
GO

/****** Object:  StoredProcedure [dbo].[Cuentas_TX_PorId]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Cuentas_TX_PorId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Cuentas_TX_PorId]
GO

/****** Object:  StoredProcedure [dbo].[Cuentas_TX_TT]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Cuentas_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Cuentas_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[Depositos_E]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Depositos_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Depositos_E]
GO

/****** Object:  StoredProcedure [dbo].[Depositos_M]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Depositos_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Depositos_M]
GO

/****** Object:  StoredProcedure [dbo].[Depositos_T]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Depositos_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Depositos_T]
GO

/****** Object:  StoredProcedure [dbo].[Depositos_TL]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Depositos_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Depositos_TL]
GO

/****** Object:  StoredProcedure [dbo].[Depositos_TT]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Depositos_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Depositos_TT]
GO

/****** Object:  StoredProcedure [dbo].[Depositos_TX_TT]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Depositos_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Depositos_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[DescripcionIva_M]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DescripcionIva_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DescripcionIva_M]
GO

/****** Object:  StoredProcedure [dbo].[DescripcionIva_T]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DescripcionIva_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DescripcionIva_T]
GO

/****** Object:  StoredProcedure [dbo].[DescripcionIva_TL]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DescripcionIva_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DescripcionIva_TL]
GO

/****** Object:  StoredProcedure [dbo].[DescripcionIva_TT]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DescripcionIva_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DescripcionIva_TT]
GO

/****** Object:  StoredProcedure [dbo].[DescripcionIva_TX_PorId]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DescripcionIva_TX_PorId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DescripcionIva_TX_PorId]
GO

/****** Object:  StoredProcedure [dbo].[DescripcionIva_TX_TT]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DescripcionIva_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DescripcionIva_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[DetAjustesStock_A]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetAjustesStock_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetAjustesStock_A]
GO

/****** Object:  StoredProcedure [dbo].[DetAjustesStock_E]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetAjustesStock_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetAjustesStock_E]
GO

/****** Object:  StoredProcedure [dbo].[DetAjustesStock_M]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetAjustesStock_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetAjustesStock_M]
GO

/****** Object:  StoredProcedure [dbo].[DetAjustesStock_T]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetAjustesStock_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetAjustesStock_T]
GO

/****** Object:  StoredProcedure [dbo].[DetAjustesStock_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetAjustesStock_TX_ParaTransmitir]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetAjustesStock_TX_ParaTransmitir]
GO

/****** Object:  StoredProcedure [dbo].[DetAjustesStock_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetAjustesStock_TX_SetearComoTransmitido]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetAjustesStock_TX_SetearComoTransmitido]
GO

/****** Object:  StoredProcedure [dbo].[DetAjustesStock_TXAjStk]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetAjustesStock_TXAjStk]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetAjustesStock_TXAjStk]
GO

/****** Object:  StoredProcedure [dbo].[DetAjustesStock_TXPrimero]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetAjustesStock_TXPrimero]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetAjustesStock_TXPrimero]
GO

/****** Object:  StoredProcedure [dbo].[DetArticulosActivosFijos_A]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetArticulosActivosFijos_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetArticulosActivosFijos_A]
GO

/****** Object:  StoredProcedure [dbo].[DetArticulosActivosFijos_E]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetArticulosActivosFijos_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetArticulosActivosFijos_E]
GO

/****** Object:  StoredProcedure [dbo].[DetArticulosActivosFijos_M]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetArticulosActivosFijos_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetArticulosActivosFijos_M]
GO

/****** Object:  StoredProcedure [dbo].[DetArticulosActivosFijos_T]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetArticulosActivosFijos_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetArticulosActivosFijos_T]
GO

/****** Object:  StoredProcedure [dbo].[DetArticulosActivosFijos_TX_AFijos]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetArticulosActivosFijos_TX_AFijos]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetArticulosActivosFijos_TX_AFijos]
GO

/****** Object:  StoredProcedure [dbo].[DetArticulosActivosFijos_TXPrimero]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetArticulosActivosFijos_TXPrimero]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetArticulosActivosFijos_TXPrimero]
GO

/****** Object:  StoredProcedure [dbo].[DetArticulosDocumentos_A]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetArticulosDocumentos_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetArticulosDocumentos_A]
GO

/****** Object:  StoredProcedure [dbo].[DetArticulosDocumentos_E]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetArticulosDocumentos_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetArticulosDocumentos_E]
GO

/****** Object:  StoredProcedure [dbo].[DetArticulosDocumentos_M]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetArticulosDocumentos_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetArticulosDocumentos_M]
GO

/****** Object:  StoredProcedure [dbo].[DetArticulosDocumentos_T]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetArticulosDocumentos_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetArticulosDocumentos_T]
GO

/****** Object:  StoredProcedure [dbo].[DetArticulosDocumentos_TX_Doc]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetArticulosDocumentos_TX_Doc]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetArticulosDocumentos_TX_Doc]
GO

/****** Object:  StoredProcedure [dbo].[DetArticulosDocumentos_TXPrimero]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetArticulosDocumentos_TXPrimero]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetArticulosDocumentos_TXPrimero]
GO

/****** Object:  StoredProcedure [dbo].[DetArticulosImagenes_A]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetArticulosImagenes_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetArticulosImagenes_A]
GO

/****** Object:  StoredProcedure [dbo].[DetArticulosImagenes_E]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetArticulosImagenes_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetArticulosImagenes_E]
GO

/****** Object:  StoredProcedure [dbo].[DetArticulosImagenes_M]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetArticulosImagenes_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetArticulosImagenes_M]
GO

/****** Object:  StoredProcedure [dbo].[DetArticulosImagenes_T]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetArticulosImagenes_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetArticulosImagenes_T]
GO

/****** Object:  StoredProcedure [dbo].[DetArticulosImagenes_TX_Img]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetArticulosImagenes_TX_Img]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetArticulosImagenes_TX_Img]
GO

/****** Object:  StoredProcedure [dbo].[DetArticulosImagenes_TXPrimero]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetArticulosImagenes_TXPrimero]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetArticulosImagenes_TXPrimero]
GO

/****** Object:  StoredProcedure [dbo].[DetArticulosUnidades_M]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetArticulosUnidades_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetArticulosUnidades_M]
GO

/****** Object:  StoredProcedure [dbo].[DetArticulosUnidades_T]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetArticulosUnidades_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetArticulosUnidades_T]
GO

/****** Object:  StoredProcedure [dbo].[DetArticulosUnidades_TT]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetArticulosUnidades_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetArticulosUnidades_TT]
GO

/****** Object:  StoredProcedure [dbo].[DetArticulosUnidades_TX_Uni]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetArticulosUnidades_TX_Uni]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetArticulosUnidades_TX_Uni]
GO

/****** Object:  StoredProcedure [dbo].[DetArticulosUnidades_TXPrimero]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetArticulosUnidades_TXPrimero]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetArticulosUnidades_TXPrimero]
GO

/****** Object:  StoredProcedure [dbo].[DetAutorizaciones_A]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetAutorizaciones_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetAutorizaciones_A]
GO

/****** Object:  StoredProcedure [dbo].[DetAutorizaciones_E]    Script Date: 03/15/2011 11:48:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetAutorizaciones_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetAutorizaciones_E]
GO

/****** Object:  StoredProcedure [dbo].[DetAutorizaciones_M]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetAutorizaciones_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetAutorizaciones_M]
GO

/****** Object:  StoredProcedure [dbo].[DetAutorizaciones_T]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetAutorizaciones_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetAutorizaciones_T]
GO

/****** Object:  StoredProcedure [dbo].[DetAutorizaciones_TXAut]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetAutorizaciones_TXAut]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetAutorizaciones_TXAut]
GO

/****** Object:  StoredProcedure [dbo].[DetAutorizaciones_TXPrimero]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetAutorizaciones_TXPrimero]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetAutorizaciones_TXPrimero]
GO

/****** Object:  StoredProcedure [dbo].[DetConjuntos_M]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetConjuntos_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetConjuntos_M]
GO

/****** Object:  StoredProcedure [dbo].[DetConjuntos_T]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetConjuntos_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetConjuntos_T]
GO

/****** Object:  StoredProcedure [dbo].[DetControlesCalidad_A]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetControlesCalidad_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetControlesCalidad_A]
GO

/****** Object:  StoredProcedure [dbo].[DetControlesCalidad_E]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetControlesCalidad_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetControlesCalidad_E]
GO

/****** Object:  StoredProcedure [dbo].[DetControlesCalidad_M]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetControlesCalidad_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetControlesCalidad_M]
GO

/****** Object:  StoredProcedure [dbo].[DetControlesCalidad_T]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetControlesCalidad_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetControlesCalidad_T]
GO

/****** Object:  StoredProcedure [dbo].[DetControlesCalidad_TXCal]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetControlesCalidad_TXCal]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetControlesCalidad_TXCal]
GO

/****** Object:  StoredProcedure [dbo].[DetControlesCalidad_TXPrimero]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetControlesCalidad_TXPrimero]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetControlesCalidad_TXPrimero]
GO

/****** Object:  StoredProcedure [dbo].[DetEmpleados_A]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetEmpleados_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetEmpleados_A]
GO

/****** Object:  StoredProcedure [dbo].[DetEmpleados_E]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetEmpleados_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetEmpleados_E]
GO

/****** Object:  StoredProcedure [dbo].[DetEmpleados_M]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetEmpleados_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetEmpleados_M]
GO

/****** Object:  StoredProcedure [dbo].[DetEmpleados_T]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetEmpleados_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetEmpleados_T]
GO

/****** Object:  StoredProcedure [dbo].[DetEmpleados_TX_Emp]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetEmpleados_TX_Emp]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetEmpleados_TX_Emp]
GO

/****** Object:  StoredProcedure [dbo].[DetEmpleados_TXPrimero]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetEmpleados_TXPrimero]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetEmpleados_TXPrimero]
GO

/****** Object:  StoredProcedure [dbo].[DetEmpleadosSectores_A]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetEmpleadosSectores_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetEmpleadosSectores_A]
GO

/****** Object:  StoredProcedure [dbo].[DetEmpleadosSectores_E]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetEmpleadosSectores_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetEmpleadosSectores_E]
GO

/****** Object:  StoredProcedure [dbo].[DetEmpleadosSectores_M]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetEmpleadosSectores_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetEmpleadosSectores_M]
GO

/****** Object:  StoredProcedure [dbo].[DetEmpleadosSectores_T]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetEmpleadosSectores_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetEmpleadosSectores_T]
GO

/****** Object:  StoredProcedure [dbo].[DetEmpleadosSectores_TX_EmpSec]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetEmpleadosSectores_TX_EmpSec]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetEmpleadosSectores_TX_EmpSec]
GO

/****** Object:  StoredProcedure [dbo].[DetEmpleadosSectores_TXPrimero]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetEmpleadosSectores_TXPrimero]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetEmpleadosSectores_TXPrimero]
GO

/****** Object:  StoredProcedure [dbo].[DetEquipos_E]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetEquipos_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetEquipos_E]
GO

/****** Object:  StoredProcedure [dbo].[DetEquipos_M]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetEquipos_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetEquipos_M]
GO

/****** Object:  StoredProcedure [dbo].[DetEquipos_T]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetEquipos_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetEquipos_T]
GO

/****** Object:  StoredProcedure [dbo].[DetEquipos_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetEquipos_TX_ParaTransmitir]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetEquipos_TX_ParaTransmitir]
GO

/****** Object:  StoredProcedure [dbo].[DetEquipos_TX_ParaTransmitir_Todos]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetEquipos_TX_ParaTransmitir_Todos]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetEquipos_TX_ParaTransmitir_Todos]
GO

/****** Object:  StoredProcedure [dbo].[DetEquipos_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetEquipos_TX_SetearComoTransmitido]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetEquipos_TX_SetearComoTransmitido]
GO

/****** Object:  StoredProcedure [dbo].[DetEquipos_TXEquipo]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetEquipos_TXEquipo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetEquipos_TXEquipo]
GO

/****** Object:  StoredProcedure [dbo].[DetEquipos_TXPrimero]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetEquipos_TXPrimero]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetEquipos_TXPrimero]
GO

/****** Object:  StoredProcedure [dbo].[DetEventosDelSistema_A]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetEventosDelSistema_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetEventosDelSistema_A]
GO

/****** Object:  StoredProcedure [dbo].[DetEventosDelSistema_E]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetEventosDelSistema_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetEventosDelSistema_E]
GO

/****** Object:  StoredProcedure [dbo].[DetEventosDelSistema_M]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetEventosDelSistema_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetEventosDelSistema_M]
GO

/****** Object:  StoredProcedure [dbo].[DetEventosDelSistema_T]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetEventosDelSistema_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetEventosDelSistema_T]
GO

/****** Object:  StoredProcedure [dbo].[DetEventosDelSistema_TX_PorEvento]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetEventosDelSistema_TX_PorEvento]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetEventosDelSistema_TX_PorEvento]
GO

/****** Object:  StoredProcedure [dbo].[DetEventosDelSistema_TXPrimero]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetEventosDelSistema_TXPrimero]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetEventosDelSistema_TXPrimero]
GO

/****** Object:  StoredProcedure [dbo].[DetObrasPolizas_A]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetObrasPolizas_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetObrasPolizas_A]
GO

/****** Object:  StoredProcedure [dbo].[DetObrasPolizas_E]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetObrasPolizas_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetObrasPolizas_E]
GO

/****** Object:  StoredProcedure [dbo].[DetObrasPolizas_M]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetObrasPolizas_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetObrasPolizas_M]
GO

/****** Object:  StoredProcedure [dbo].[DetObrasPolizas_T]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetObrasPolizas_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetObrasPolizas_T]
GO

/****** Object:  StoredProcedure [dbo].[DetObrasPolizas_TXPolizas]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetObrasPolizas_TXPolizas]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetObrasPolizas_TXPolizas]
GO

/****** Object:  StoredProcedure [dbo].[DetObrasPolizas_TXPrimero]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetObrasPolizas_TXPrimero]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetObrasPolizas_TXPrimero]
GO

/****** Object:  StoredProcedure [dbo].[DetOtrosIngresosAlmacen_A]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetOtrosIngresosAlmacen_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetOtrosIngresosAlmacen_A]
GO

/****** Object:  StoredProcedure [dbo].[DetOtrosIngresosAlmacen_E]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetOtrosIngresosAlmacen_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetOtrosIngresosAlmacen_E]
GO

/****** Object:  StoredProcedure [dbo].[DetOtrosIngresosAlmacen_M]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetOtrosIngresosAlmacen_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetOtrosIngresosAlmacen_M]
GO

/****** Object:  StoredProcedure [dbo].[DetOtrosIngresosAlmacen_T]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetOtrosIngresosAlmacen_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetOtrosIngresosAlmacen_T]
GO

/****** Object:  StoredProcedure [dbo].[DetOtrosIngresosAlmacen_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetOtrosIngresosAlmacen_TX_ParaTransmitir]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetOtrosIngresosAlmacen_TX_ParaTransmitir]
GO

/****** Object:  StoredProcedure [dbo].[DetOtrosIngresosAlmacen_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetOtrosIngresosAlmacen_TX_SetearComoTransmitido]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetOtrosIngresosAlmacen_TX_SetearComoTransmitido]
GO

/****** Object:  StoredProcedure [dbo].[DetOtrosIngresosAlmacen_TX_Todos]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetOtrosIngresosAlmacen_TX_Todos]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetOtrosIngresosAlmacen_TX_Todos]
GO

/****** Object:  StoredProcedure [dbo].[DetOtrosIngresosAlmacen_TXOtros]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetOtrosIngresosAlmacen_TXOtros]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetOtrosIngresosAlmacen_TXOtros]
GO

/****** Object:  StoredProcedure [dbo].[DetOtrosIngresosAlmacen_TXPrimero]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetOtrosIngresosAlmacen_TXPrimero]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetOtrosIngresosAlmacen_TXPrimero]
GO

/****** Object:  StoredProcedure [dbo].[DetPedidos_A]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetPedidos_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetPedidos_A]
GO

/****** Object:  StoredProcedure [dbo].[DetPedidos_M]    Script Date: 03/15/2011 11:48:13 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetPedidos_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetPedidos_M]
GO

/****** Object:  StoredProcedure [dbo].[DetPedidos_T]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetPedidos_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetPedidos_T]
GO

/****** Object:  StoredProcedure [dbo].[DetPedidos_TX_BuscarItemRM]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetPedidos_TX_BuscarItemRM]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetPedidos_TX_BuscarItemRM]
GO

/****** Object:  StoredProcedure [dbo].[DetPedidos_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetPedidos_TX_ParaTransmitir]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetPedidos_TX_ParaTransmitir]
GO

/****** Object:  StoredProcedure [dbo].[DetPedidos_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetPedidos_TX_SetearComoTransmitido]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetPedidos_TX_SetearComoTransmitido]
GO

/****** Object:  StoredProcedure [dbo].[DetPedidos_TX_T]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetPedidos_TX_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetPedidos_TX_T]
GO

/****** Object:  StoredProcedure [dbo].[DetPedidos_TXPed]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetPedidos_TXPed]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetPedidos_TXPed]
GO

/****** Object:  StoredProcedure [dbo].[DetPedidos_TXPrimero]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetPedidos_TXPrimero]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetPedidos_TXPrimero]
GO

/****** Object:  StoredProcedure [dbo].[DetPedidosPRONTO_M]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetPedidosPRONTO_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetPedidosPRONTO_M]
GO

/****** Object:  StoredProcedure [dbo].[DetPedidosPRONTO_T]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetPedidosPRONTO_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetPedidosPRONTO_T]
GO

/****** Object:  StoredProcedure [dbo].[DetPedidosPRONTO_TXPed]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetPedidosPRONTO_TXPed]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetPedidosPRONTO_TXPed]
GO

/****** Object:  StoredProcedure [dbo].[DetPedidosPRONTO_TXPrimero]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetPedidosPRONTO_TXPrimero]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetPedidosPRONTO_TXPrimero]
GO

/****** Object:  StoredProcedure [dbo].[DetRecepciones_A]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetRecepciones_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetRecepciones_A]
GO

/****** Object:  StoredProcedure [dbo].[DetRecepciones_E]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetRecepciones_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetRecepciones_E]
GO

/****** Object:  StoredProcedure [dbo].[DetRecepciones_M]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetRecepciones_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetRecepciones_M]
GO

/****** Object:  StoredProcedure [dbo].[DetRecepciones_T]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetRecepciones_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetRecepciones_T]
GO

/****** Object:  StoredProcedure [dbo].[DetRecepciones_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetRecepciones_TX_ParaTransmitir]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetRecepciones_TX_ParaTransmitir]
GO

/****** Object:  StoredProcedure [dbo].[DetRecepciones_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetRecepciones_TX_SetearComoTransmitido]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetRecepciones_TX_SetearComoTransmitido]
GO

/****** Object:  StoredProcedure [dbo].[DetRecepciones_TXPrimero]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetRecepciones_TXPrimero]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetRecepciones_TXPrimero]
GO

/****** Object:  StoredProcedure [dbo].[DetRecepciones_TXRec]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetRecepciones_TXRec]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetRecepciones_TXRec]
GO

/****** Object:  StoredProcedure [dbo].[DetRequerimientos_A]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetRequerimientos_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetRequerimientos_A]
GO

/****** Object:  StoredProcedure [dbo].[DetRequerimientos_ActualizarDesdePronto]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetRequerimientos_ActualizarDesdePronto]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetRequerimientos_ActualizarDesdePronto]
GO

/****** Object:  StoredProcedure [dbo].[DetRequerimientos_E]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetRequerimientos_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetRequerimientos_E]
GO

/****** Object:  StoredProcedure [dbo].[DetRequerimientos_M]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetRequerimientos_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetRequerimientos_M]
GO

/****** Object:  StoredProcedure [dbo].[DetRequerimientos_T]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetRequerimientos_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetRequerimientos_T]
GO

/****** Object:  StoredProcedure [dbo].[DetRequerimientos_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetRequerimientos_TX_ParaTransmitir]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetRequerimientos_TX_ParaTransmitir]
GO

/****** Object:  StoredProcedure [dbo].[DetRequerimientos_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetRequerimientos_TX_SetearComoTransmitido]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetRequerimientos_TX_SetearComoTransmitido]
GO

/****** Object:  StoredProcedure [dbo].[DetRequerimientos_TX_Todos]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetRequerimientos_TX_Todos]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetRequerimientos_TX_Todos]
GO

/****** Object:  StoredProcedure [dbo].[DetRequerimientos_TX_TodosConDatos]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetRequerimientos_TX_TodosConDatos]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetRequerimientos_TX_TodosConDatos]
GO

/****** Object:  StoredProcedure [dbo].[DetRequerimientos_TX_UnItem]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetRequerimientos_TX_UnItem]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetRequerimientos_TX_UnItem]
GO

/****** Object:  StoredProcedure [dbo].[DetRequerimientos_TX_UnItemConFormato]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetRequerimientos_TX_UnItemConFormato]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetRequerimientos_TX_UnItemConFormato]
GO

/****** Object:  StoredProcedure [dbo].[DetRequerimientos_TXPrimero]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetRequerimientos_TXPrimero]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetRequerimientos_TXPrimero]
GO

/****** Object:  StoredProcedure [dbo].[DetRequerimientos_TXReq]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetRequerimientos_TXReq]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetRequerimientos_TXReq]
GO

/****** Object:  StoredProcedure [dbo].[DetReservas_A]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetReservas_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetReservas_A]
GO

/****** Object:  StoredProcedure [dbo].[DetReservas_E]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetReservas_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetReservas_E]
GO

/****** Object:  StoredProcedure [dbo].[DetReservas_M]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetReservas_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetReservas_M]
GO

/****** Object:  StoredProcedure [dbo].[DetReservas_T]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetReservas_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetReservas_T]
GO

/****** Object:  StoredProcedure [dbo].[DetReservas_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetReservas_TX_ParaTransmitir]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetReservas_TX_ParaTransmitir]
GO

/****** Object:  StoredProcedure [dbo].[DetReservas_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetReservas_TX_SetearComoTransmitido]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetReservas_TX_SetearComoTransmitido]
GO

/****** Object:  StoredProcedure [dbo].[DetReservas_TXPrimero]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetReservas_TXPrimero]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetReservas_TXPrimero]
GO

/****** Object:  StoredProcedure [dbo].[DetReservas_TXRes]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetReservas_TXRes]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetReservas_TXRes]
GO

/****** Object:  StoredProcedure [dbo].[DetSalidasMateriales_A]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetSalidasMateriales_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetSalidasMateriales_A]
GO

/****** Object:  StoredProcedure [dbo].[DetSalidasMateriales_E]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetSalidasMateriales_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetSalidasMateriales_E]
GO

/****** Object:  StoredProcedure [dbo].[DetSalidasMateriales_M]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetSalidasMateriales_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetSalidasMateriales_M]
GO

/****** Object:  StoredProcedure [dbo].[DetSalidasMateriales_T]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetSalidasMateriales_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetSalidasMateriales_T]
GO

/****** Object:  StoredProcedure [dbo].[DetSalidasMateriales_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetSalidasMateriales_TX_ParaTransmitir]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetSalidasMateriales_TX_ParaTransmitir]
GO

/****** Object:  StoredProcedure [dbo].[DetSalidasMateriales_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetSalidasMateriales_TX_SetearComoTransmitido]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetSalidasMateriales_TX_SetearComoTransmitido]
GO

/****** Object:  StoredProcedure [dbo].[DetSalidasMateriales_TX_Todos]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetSalidasMateriales_TX_Todos]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetSalidasMateriales_TX_Todos]
GO

/****** Object:  StoredProcedure [dbo].[DetSalidasMateriales_TXPrimero]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetSalidasMateriales_TXPrimero]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetSalidasMateriales_TXPrimero]
GO

/****** Object:  StoredProcedure [dbo].[DetSalidasMateriales_TXSal]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetSalidasMateriales_TXSal]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetSalidasMateriales_TXSal]
GO

/****** Object:  StoredProcedure [dbo].[DetValesSalida_A]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetValesSalida_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetValesSalida_A]
GO

/****** Object:  StoredProcedure [dbo].[DetValesSalida_E]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetValesSalida_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetValesSalida_E]
GO

/****** Object:  StoredProcedure [dbo].[DetValesSalida_M]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetValesSalida_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetValesSalida_M]
GO

/****** Object:  StoredProcedure [dbo].[DetValesSalida_T]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetValesSalida_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetValesSalida_T]
GO

/****** Object:  StoredProcedure [dbo].[DetValesSalida_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetValesSalida_TX_ParaTransmitir]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetValesSalida_TX_ParaTransmitir]
GO

/****** Object:  StoredProcedure [dbo].[DetValesSalida_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:14 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetValesSalida_TX_SetearComoTransmitido]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetValesSalida_TX_SetearComoTransmitido]
GO

/****** Object:  StoredProcedure [dbo].[DetValesSalida_TX_TodoMasPendientePorIdDetalle]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetValesSalida_TX_TodoMasPendientePorIdDetalle]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetValesSalida_TX_TodoMasPendientePorIdDetalle]
GO

/****** Object:  StoredProcedure [dbo].[DetValesSalida_TX_TodosLosItemsConFormato]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetValesSalida_TX_TodosLosItemsConFormato]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetValesSalida_TX_TodosLosItemsConFormato]
GO

/****** Object:  StoredProcedure [dbo].[DetValesSalida_TX_UnItem]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetValesSalida_TX_UnItem]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetValesSalida_TX_UnItem]
GO

/****** Object:  StoredProcedure [dbo].[DetValesSalida_TX_UnItemConFormato]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetValesSalida_TX_UnItemConFormato]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetValesSalida_TX_UnItemConFormato]
GO

/****** Object:  StoredProcedure [dbo].[DetValesSalida_TXPrimero]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetValesSalida_TXPrimero]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetValesSalida_TXPrimero]
GO

/****** Object:  StoredProcedure [dbo].[DetValesSalida_TXRes]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DetValesSalida_TXRes]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DetValesSalida_TXRes]
GO

/****** Object:  StoredProcedure [dbo].[dropFK]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[dropFK]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[dropFK]
GO

/****** Object:  StoredProcedure [dbo].[Empleados_A]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Empleados_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Empleados_A]
GO

/****** Object:  StoredProcedure [dbo].[Empleados_E]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Empleados_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Empleados_E]
GO

/****** Object:  StoredProcedure [dbo].[Empleados_M]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Empleados_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Empleados_M]
GO

/****** Object:  StoredProcedure [dbo].[Empleados_T]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Empleados_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Empleados_T]
GO

/****** Object:  StoredProcedure [dbo].[Empleados_TL]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Empleados_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Empleados_TL]
GO

/****** Object:  StoredProcedure [dbo].[Empleados_TT]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Empleados_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Empleados_TT]
GO

/****** Object:  StoredProcedure [dbo].[Empleados_TX_Administradores]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Empleados_TX_Administradores]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Empleados_TX_Administradores]
GO

/****** Object:  StoredProcedure [dbo].[Empleados_TX_ConEventosPendientes]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Empleados_TX_ConEventosPendientes]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Empleados_TX_ConEventosPendientes]
GO

/****** Object:  StoredProcedure [dbo].[Empleados_TX_ParaMensajes]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Empleados_TX_ParaMensajes]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Empleados_TX_ParaMensajes]
GO

/****** Object:  StoredProcedure [dbo].[Empleados_TX_PorEmpleado]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Empleados_TX_PorEmpleado]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Empleados_TX_PorEmpleado]
GO

/****** Object:  StoredProcedure [dbo].[Empleados_TX_PorGruposDelSector]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Empleados_TX_PorGruposDelSector]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Empleados_TX_PorGruposDelSector]
GO

/****** Object:  StoredProcedure [dbo].[Empleados_TX_PorId]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Empleados_TX_PorId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Empleados_TX_PorId]
GO

/****** Object:  StoredProcedure [dbo].[Empleados_TX_PorIdSector]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Empleados_TX_PorIdSector]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Empleados_TX_PorIdSector]
GO

/****** Object:  StoredProcedure [dbo].[Empleados_TX_PorLegajo]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Empleados_TX_PorLegajo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Empleados_TX_PorLegajo]
GO

/****** Object:  StoredProcedure [dbo].[Empleados_TX_PorNombre]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Empleados_TX_PorNombre]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Empleados_TX_PorNombre]
GO

/****** Object:  StoredProcedure [dbo].[Empleados_TX_PorSector]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Empleados_TX_PorSector]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Empleados_TX_PorSector]
GO

/****** Object:  StoredProcedure [dbo].[Empleados_TX_TodosLosAccesos]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Empleados_TX_TodosLosAccesos]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Empleados_TX_TodosLosAccesos]
GO

/****** Object:  StoredProcedure [dbo].[Empleados_TX_TT]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Empleados_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Empleados_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[Empleados_TX_UnUsuario]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Empleados_TX_UnUsuario]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Empleados_TX_UnUsuario]
GO

/****** Object:  StoredProcedure [dbo].[Empleados_TX_UsuarioNT]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Empleados_TX_UsuarioNT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Empleados_TX_UsuarioNT]
GO

/****** Object:  StoredProcedure [dbo].[EmpleadosAccesos_A]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EmpleadosAccesos_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[EmpleadosAccesos_A]
GO

/****** Object:  StoredProcedure [dbo].[EmpleadosAccesos_E]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EmpleadosAccesos_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[EmpleadosAccesos_E]
GO

/****** Object:  StoredProcedure [dbo].[EmpleadosAccesos_InhabilitarAccesosPorNodo]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EmpleadosAccesos_InhabilitarAccesosPorNodo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[EmpleadosAccesos_InhabilitarAccesosPorNodo]
GO

/****** Object:  StoredProcedure [dbo].[EmpleadosAccesos_M]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EmpleadosAccesos_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[EmpleadosAccesos_M]
GO

/****** Object:  StoredProcedure [dbo].[Empresa_M]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Empresa_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Empresa_M]
GO

/****** Object:  StoredProcedure [dbo].[Empresa_T]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Empresa_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Empresa_T]
GO

/****** Object:  StoredProcedure [dbo].[Empresa_TT]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Empresa_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Empresa_TT]
GO

/****** Object:  StoredProcedure [dbo].[Empresa_TX_Datos]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Empresa_TX_Datos]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Empresa_TX_Datos]
GO

/****** Object:  StoredProcedure [dbo].[Equipos_E]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Equipos_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Equipos_E]
GO

/****** Object:  StoredProcedure [dbo].[Equipos_M]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Equipos_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Equipos_M]
GO

/****** Object:  StoredProcedure [dbo].[Equipos_T]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Equipos_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Equipos_T]
GO

/****** Object:  StoredProcedure [dbo].[Equipos_TL]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Equipos_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Equipos_TL]
GO

/****** Object:  StoredProcedure [dbo].[Equipos_TT]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Equipos_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Equipos_TT]
GO

/****** Object:  StoredProcedure [dbo].[Equipos_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Equipos_TX_ParaTransmitir]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Equipos_TX_ParaTransmitir]
GO

/****** Object:  StoredProcedure [dbo].[Equipos_TX_ParaTransmitir_Todos]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Equipos_TX_ParaTransmitir_Todos]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Equipos_TX_ParaTransmitir_Todos]
GO

/****** Object:  StoredProcedure [dbo].[Equipos_TX_PorcentajesStandar]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Equipos_TX_PorcentajesStandar]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Equipos_TX_PorcentajesStandar]
GO

/****** Object:  StoredProcedure [dbo].[Equipos_TX_PorObra1]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Equipos_TX_PorObra1]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Equipos_TX_PorObra1]
GO

/****** Object:  StoredProcedure [dbo].[Equipos_TX_PorObraParaCombo]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Equipos_TX_PorObraParaCombo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Equipos_TX_PorObraParaCombo]
GO

/****** Object:  StoredProcedure [dbo].[Equipos_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Equipos_TX_SetearComoTransmitido]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Equipos_TX_SetearComoTransmitido]
GO

/****** Object:  StoredProcedure [dbo].[Equipos_TX_TT]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Equipos_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Equipos_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[Equipos_TXPlanos]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Equipos_TXPlanos]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Equipos_TXPlanos]
GO

/****** Object:  StoredProcedure [dbo].[Equipos_TXPorObra]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Equipos_TXPorObra]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Equipos_TXPorObra]
GO

/****** Object:  StoredProcedure [dbo].[EventosDelSistema_A]    Script Date: 03/15/2011 11:48:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EventosDelSistema_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[EventosDelSistema_A]
GO

/****** Object:  StoredProcedure [dbo].[EventosDelSistema_E]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EventosDelSistema_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[EventosDelSistema_E]
GO

/****** Object:  StoredProcedure [dbo].[EventosDelSistema_M]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EventosDelSistema_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[EventosDelSistema_M]
GO

/****** Object:  StoredProcedure [dbo].[EventosDelSistema_T]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EventosDelSistema_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[EventosDelSistema_T]
GO

/****** Object:  StoredProcedure [dbo].[EventosDelSistema_TL]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EventosDelSistema_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[EventosDelSistema_TL]
GO

/****** Object:  StoredProcedure [dbo].[EventosDelSistema_TT]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EventosDelSistema_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[EventosDelSistema_TT]
GO

/****** Object:  StoredProcedure [dbo].[EventosDelSistema_TX_IdEmpleadosPorIdEvento]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EventosDelSistema_TX_IdEmpleadosPorIdEvento]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[EventosDelSistema_TX_IdEmpleadosPorIdEvento]
GO

/****** Object:  StoredProcedure [dbo].[EventosDelSistema_TX_TT]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EventosDelSistema_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[EventosDelSistema_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[FacturasCompra_A]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[FacturasCompra_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[FacturasCompra_A]
GO

/****** Object:  StoredProcedure [dbo].[FacturasCompra_E]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[FacturasCompra_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[FacturasCompra_E]
GO

/****** Object:  StoredProcedure [dbo].[FacturasCompra_M]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[FacturasCompra_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[FacturasCompra_M]
GO

/****** Object:  StoredProcedure [dbo].[FacturasCompra_T]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[FacturasCompra_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[FacturasCompra_T]
GO

/****** Object:  StoredProcedure [dbo].[FacturasCompra_TX_DetallePorComprobante]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[FacturasCompra_TX_DetallePorComprobante]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[FacturasCompra_TX_DetallePorComprobante]
GO

/****** Object:  StoredProcedure [dbo].[FacturasCompra_TX_DetallePorComprobanteSinFormato]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[FacturasCompra_TX_DetallePorComprobanteSinFormato]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[FacturasCompra_TX_DetallePorComprobanteSinFormato]
GO

/****** Object:  StoredProcedure [dbo].[FacturasCompra_TX_DetallePorDetalleComprobante]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[FacturasCompra_TX_DetallePorDetalleComprobante]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[FacturasCompra_TX_DetallePorDetalleComprobante]
GO

/****** Object:  StoredProcedure [dbo].[FacturasCompra_TXPrimero]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[FacturasCompra_TXPrimero]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[FacturasCompra_TXPrimero]
GO

/****** Object:  StoredProcedure [dbo].[Familias_E]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Familias_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Familias_E]
GO

/****** Object:  StoredProcedure [dbo].[Familias_M]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Familias_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Familias_M]
GO

/****** Object:  StoredProcedure [dbo].[Familias_T]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Familias_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Familias_T]
GO

/****** Object:  StoredProcedure [dbo].[Familias_TL]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Familias_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Familias_TL]
GO

/****** Object:  StoredProcedure [dbo].[Familias_TT]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Familias_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Familias_TT]
GO

/****** Object:  StoredProcedure [dbo].[Familias_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Familias_TX_ParaTransmitir]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Familias_TX_ParaTransmitir]
GO

/****** Object:  StoredProcedure [dbo].[Familias_TX_ParaTransmitir_Todos]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Familias_TX_ParaTransmitir_Todos]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Familias_TX_ParaTransmitir_Todos]
GO

/****** Object:  StoredProcedure [dbo].[Familias_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Familias_TX_SetearComoTransmitido]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Familias_TX_SetearComoTransmitido]
GO

/****** Object:  StoredProcedure [dbo].[Familias_TX_TT]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Familias_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Familias_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[Fletes_A]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Fletes_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Fletes_A]
GO

/****** Object:  StoredProcedure [dbo].[Fletes_E]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Fletes_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Fletes_E]
GO

/****** Object:  StoredProcedure [dbo].[Fletes_M]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Fletes_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Fletes_M]
GO

/****** Object:  StoredProcedure [dbo].[Fletes_T]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Fletes_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Fletes_T]
GO

/****** Object:  StoredProcedure [dbo].[Fletes_TL]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Fletes_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Fletes_TL]
GO

/****** Object:  StoredProcedure [dbo].[Fletes_TT]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Fletes_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Fletes_TT]
GO

/****** Object:  StoredProcedure [dbo].[Fletes_TX_PorTouch]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Fletes_TX_PorTouch]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Fletes_TX_PorTouch]
GO

/****** Object:  StoredProcedure [dbo].[Fletes_TX_TT]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Fletes_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Fletes_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[Formularios_A]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Formularios_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Formularios_A]
GO

/****** Object:  StoredProcedure [dbo].[Formularios_E]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Formularios_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Formularios_E]
GO

/****** Object:  StoredProcedure [dbo].[Formularios_M]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Formularios_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Formularios_M]
GO

/****** Object:  StoredProcedure [dbo].[Formularios_T]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Formularios_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Formularios_T]
GO

/****** Object:  StoredProcedure [dbo].[Formularios_TL]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Formularios_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Formularios_TL]
GO

/****** Object:  StoredProcedure [dbo].[Formularios_TT]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Formularios_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Formularios_TT]
GO

/****** Object:  StoredProcedure [dbo].[Formularios_TX_TT]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Formularios_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Formularios_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[ItemsPopUpMateriales_A]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ItemsPopUpMateriales_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ItemsPopUpMateriales_A]
GO

/****** Object:  StoredProcedure [dbo].[ItemsPopUpMateriales_E]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ItemsPopUpMateriales_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ItemsPopUpMateriales_E]
GO

/****** Object:  StoredProcedure [dbo].[ItemsPopUpMateriales_M]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ItemsPopUpMateriales_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ItemsPopUpMateriales_M]
GO

/****** Object:  StoredProcedure [dbo].[ItemsPopUpMateriales_T]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ItemsPopUpMateriales_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ItemsPopUpMateriales_T]
GO

/****** Object:  StoredProcedure [dbo].[ItemsPopUpMateriales_TT]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ItemsPopUpMateriales_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ItemsPopUpMateriales_TT]
GO

/****** Object:  StoredProcedure [dbo].[ItemsPopUpMateriales_TX_CamposConTablas]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ItemsPopUpMateriales_TX_CamposConTablas]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ItemsPopUpMateriales_TX_CamposConTablas]
GO

/****** Object:  StoredProcedure [dbo].[ItemsPopUpMateriales_TX_Existente]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ItemsPopUpMateriales_TX_Existente]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ItemsPopUpMateriales_TX_Existente]
GO

/****** Object:  StoredProcedure [dbo].[ItemsPopUpMateriales_TX_ParaMenu]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ItemsPopUpMateriales_TX_ParaMenu]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ItemsPopUpMateriales_TX_ParaMenu]
GO

/****** Object:  StoredProcedure [dbo].[ItemsPopUpMateriales_TX_Todos]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ItemsPopUpMateriales_TX_Todos]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ItemsPopUpMateriales_TX_Todos]
GO

/****** Object:  StoredProcedure [dbo].[ItemsPopUpMateriales_TX_TT]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ItemsPopUpMateriales_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ItemsPopUpMateriales_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[Localidades_A]    Script Date: 03/15/2011 11:48:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Localidades_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Localidades_A]
GO

/****** Object:  StoredProcedure [dbo].[Localidades_E]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Localidades_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Localidades_E]
GO

/****** Object:  StoredProcedure [dbo].[Localidades_M]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Localidades_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Localidades_M]
GO

/****** Object:  StoredProcedure [dbo].[Localidades_T]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Localidades_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Localidades_T]
GO

/****** Object:  StoredProcedure [dbo].[Localidades_TL]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Localidades_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Localidades_TL]
GO

/****** Object:  StoredProcedure [dbo].[Localidades_TT]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Localidades_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Localidades_TT]
GO

/****** Object:  StoredProcedure [dbo].[Localidades_TX_PorId]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Localidades_TX_PorId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Localidades_TX_PorId]
GO

/****** Object:  StoredProcedure [dbo].[Localidades_TX_PorNombre]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Localidades_TX_PorNombre]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Localidades_TX_PorNombre]
GO

/****** Object:  StoredProcedure [dbo].[Localidades_TX_TT]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Localidades_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Localidades_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[Marcas_TL]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Marcas_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Marcas_TL]
GO

/****** Object:  StoredProcedure [dbo].[Modelos_TL]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Modelos_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Modelos_TL]
GO

/****** Object:  StoredProcedure [dbo].[Monedas_A]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Monedas_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Monedas_A]
GO

/****** Object:  StoredProcedure [dbo].[Monedas_E]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Monedas_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Monedas_E]
GO

/****** Object:  StoredProcedure [dbo].[Monedas_M]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Monedas_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Monedas_M]
GO

/****** Object:  StoredProcedure [dbo].[Monedas_T]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Monedas_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Monedas_T]
GO

/****** Object:  StoredProcedure [dbo].[Monedas_TL]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Monedas_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Monedas_TL]
GO

/****** Object:  StoredProcedure [dbo].[Monedas_TT]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Monedas_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Monedas_TT]
GO

/****** Object:  StoredProcedure [dbo].[Monedas_TX_MonedasStandarParaCombo]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Monedas_TX_MonedasStandarParaCombo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Monedas_TX_MonedasStandarParaCombo]
GO

/****** Object:  StoredProcedure [dbo].[Monedas_TX_PorId]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Monedas_TX_PorId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Monedas_TX_PorId]
GO

/****** Object:  StoredProcedure [dbo].[Monedas_TX_Resto]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Monedas_TX_Resto]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Monedas_TX_Resto]
GO

/****** Object:  StoredProcedure [dbo].[Monedas_TX_TT]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Monedas_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Monedas_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[MotivosRechazo_A]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MotivosRechazo_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[MotivosRechazo_A]
GO

/****** Object:  StoredProcedure [dbo].[MotivosRechazo_E]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MotivosRechazo_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[MotivosRechazo_E]
GO

/****** Object:  StoredProcedure [dbo].[MotivosRechazo_M]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MotivosRechazo_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[MotivosRechazo_M]
GO

/****** Object:  StoredProcedure [dbo].[MotivosRechazo_T]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MotivosRechazo_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[MotivosRechazo_T]
GO

/****** Object:  StoredProcedure [dbo].[MotivosRechazo_TL]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MotivosRechazo_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[MotivosRechazo_TL]
GO

/****** Object:  StoredProcedure [dbo].[MotivosRechazo_TT]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MotivosRechazo_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[MotivosRechazo_TT]
GO

/****** Object:  StoredProcedure [dbo].[MotivosRechazo_TX_TT]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MotivosRechazo_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[MotivosRechazo_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[NovedadesUsuarios_A]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[NovedadesUsuarios_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[NovedadesUsuarios_A]
GO

/****** Object:  StoredProcedure [dbo].[NovedadesUsuarios_E]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[NovedadesUsuarios_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[NovedadesUsuarios_E]
GO

/****** Object:  StoredProcedure [dbo].[NovedadesUsuarios_M]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[NovedadesUsuarios_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[NovedadesUsuarios_M]
GO

/****** Object:  StoredProcedure [dbo].[NovedadesUsuarios_T]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[NovedadesUsuarios_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[NovedadesUsuarios_T]
GO

/****** Object:  StoredProcedure [dbo].[NovedadesUsuarios_TX_Estructura]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[NovedadesUsuarios_TX_Estructura]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[NovedadesUsuarios_TX_Estructura]
GO

/****** Object:  StoredProcedure [dbo].[NovedadesUsuarios_TX_PorIdEmpleadoConEventosPendientes]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[NovedadesUsuarios_TX_PorIdEmpleadoConEventosPendientes]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[NovedadesUsuarios_TX_PorIdEmpleadoConEventosPendientes]
GO

/****** Object:  StoredProcedure [dbo].[Obras_E]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Obras_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Obras_E]
GO

/****** Object:  StoredProcedure [dbo].[Obras_GenerarActivacionCompraMateriales]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Obras_GenerarActivacionCompraMateriales]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Obras_GenerarActivacionCompraMateriales]
GO

/****** Object:  StoredProcedure [dbo].[Obras_GenerarEstado]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Obras_GenerarEstado]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Obras_GenerarEstado]
GO

/****** Object:  StoredProcedure [dbo].[Obras_M]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Obras_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Obras_M]
GO

/****** Object:  StoredProcedure [dbo].[Obras_T]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Obras_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Obras_T]
GO

/****** Object:  StoredProcedure [dbo].[Obras_TL]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Obras_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Obras_TL]
GO

/****** Object:  StoredProcedure [dbo].[Obras_TT]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Obras_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Obras_TT]
GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_Activas]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Obras_TX_Activas]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Obras_TX_Activas]
GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_ConDetallePolizas]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Obras_TX_ConDetallePolizas]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Obras_TX_ConDetallePolizas]
GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_DatosDeLaObra]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Obras_TX_DatosDeLaObra]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Obras_TX_DatosDeLaObra]
GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_Habilitadas]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Obras_TX_Habilitadas]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Obras_TX_Habilitadas]
GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_HabilitadasExcel]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Obras_TX_HabilitadasExcel]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Obras_TX_HabilitadasExcel]
GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_Inactivas]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Obras_TX_Inactivas]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Obras_TX_Inactivas]
GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_ItemsDocumentacion]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Obras_TX_ItemsDocumentacion]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Obras_TX_ItemsDocumentacion]
GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_ObrasMasOT]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Obras_TX_ObrasMasOT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Obras_TX_ObrasMasOT]
GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_ObrasMasOTParaCombo]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Obras_TX_ObrasMasOTParaCombo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Obras_TX_ObrasMasOTParaCombo]
GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_ParaInformes]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Obras_TX_ParaInformes]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Obras_TX_ParaInformes]
GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_ParaPopUp]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Obras_TX_ParaPopUp]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Obras_TX_ParaPopUp]
GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Obras_TX_ParaTransmitir]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Obras_TX_ParaTransmitir]
GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_ParaTransmitir_Todos]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Obras_TX_ParaTransmitir_Todos]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Obras_TX_ParaTransmitir_Todos]
GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_PorId]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Obras_TX_PorId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Obras_TX_PorId]
GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_PorNumero]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Obras_TX_PorNumero]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Obras_TX_PorNumero]
GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Obras_TX_SetearComoTransmitido]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Obras_TX_SetearComoTransmitido]
GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_TodasActivasParaCombo]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Obras_TX_TodasActivasParaCombo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Obras_TX_TodasActivasParaCombo]
GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_TodasParaCombo]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Obras_TX_TodasParaCombo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Obras_TX_TodasParaCombo]
GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_TodosLosItems]    Script Date: 03/15/2011 11:48:17 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Obras_TX_TodosLosItems]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Obras_TX_TodosLosItems]
GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_TT]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Obras_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Obras_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[OtrosIngresosAlmacen_A]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[OtrosIngresosAlmacen_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[OtrosIngresosAlmacen_A]
GO

/****** Object:  StoredProcedure [dbo].[OtrosIngresosAlmacen_AjustarStockPorAnulacion]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[OtrosIngresosAlmacen_AjustarStockPorAnulacion]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[OtrosIngresosAlmacen_AjustarStockPorAnulacion]
GO

/****** Object:  StoredProcedure [dbo].[OtrosIngresosAlmacen_E]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[OtrosIngresosAlmacen_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[OtrosIngresosAlmacen_E]
GO

/****** Object:  StoredProcedure [dbo].[OtrosIngresosAlmacen_M]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[OtrosIngresosAlmacen_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[OtrosIngresosAlmacen_M]
GO

/****** Object:  StoredProcedure [dbo].[OtrosIngresosAlmacen_T]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[OtrosIngresosAlmacen_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[OtrosIngresosAlmacen_T]
GO

/****** Object:  StoredProcedure [dbo].[OtrosIngresosAlmacen_TT]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[OtrosIngresosAlmacen_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[OtrosIngresosAlmacen_TT]
GO

/****** Object:  StoredProcedure [dbo].[OtrosIngresosAlmacen_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[OtrosIngresosAlmacen_TX_ParaTransmitir]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[OtrosIngresosAlmacen_TX_ParaTransmitir]
GO

/****** Object:  StoredProcedure [dbo].[OtrosIngresosAlmacen_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[OtrosIngresosAlmacen_TX_SetearComoTransmitido]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[OtrosIngresosAlmacen_TX_SetearComoTransmitido]
GO

/****** Object:  StoredProcedure [dbo].[OtrosIngresosAlmacen_TX_TT]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[OtrosIngresosAlmacen_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[OtrosIngresosAlmacen_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[Paises_A]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Paises_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Paises_A]
GO

/****** Object:  StoredProcedure [dbo].[Paises_E]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Paises_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Paises_E]
GO

/****** Object:  StoredProcedure [dbo].[Paises_M]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Paises_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Paises_M]
GO

/****** Object:  StoredProcedure [dbo].[Paises_T]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Paises_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Paises_T]
GO

/****** Object:  StoredProcedure [dbo].[Paises_TL]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Paises_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Paises_TL]
GO

/****** Object:  StoredProcedure [dbo].[Paises_TT]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Paises_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Paises_TT]
GO

/****** Object:  StoredProcedure [dbo].[Paises_TX_PorCodigo]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Paises_TX_PorCodigo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Paises_TX_PorCodigo]
GO

/****** Object:  StoredProcedure [dbo].[Paises_TX_PorNombre]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Paises_TX_PorNombre]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Paises_TX_PorNombre]
GO

/****** Object:  StoredProcedure [dbo].[Paises_TX_TT]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Paises_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Paises_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[Parametros_M]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Parametros_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Parametros_M]
GO

/****** Object:  StoredProcedure [dbo].[Parametros_RegistrarParametros2]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Parametros_RegistrarParametros2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Parametros_RegistrarParametros2]
GO

/****** Object:  StoredProcedure [dbo].[Parametros_T]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Parametros_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Parametros_T]
GO

/****** Object:  StoredProcedure [dbo].[Parametros_TT]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Parametros_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Parametros_TT]
GO

/****** Object:  StoredProcedure [dbo].[Parametros_TX_Parametros2]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Parametros_TX_Parametros2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Parametros_TX_Parametros2]
GO

/****** Object:  StoredProcedure [dbo].[Parametros_TX_Parametros2BuscarClave]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Parametros_TX_Parametros2BuscarClave]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Parametros_TX_Parametros2BuscarClave]
GO

/****** Object:  StoredProcedure [dbo].[Parametros_TX_PorId]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Parametros_TX_PorId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Parametros_TX_PorId]
GO

/****** Object:  StoredProcedure [dbo].[Pedidos_A]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Pedidos_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Pedidos_A]
GO

/****** Object:  StoredProcedure [dbo].[Pedidos_ActualizarDetalles]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Pedidos_ActualizarDetalles]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Pedidos_ActualizarDetalles]
GO

/****** Object:  StoredProcedure [dbo].[Pedidos_ActualizarEstadoPorIdPedido]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Pedidos_ActualizarEstadoPorIdPedido]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Pedidos_ActualizarEstadoPorIdPedido]
GO

/****** Object:  StoredProcedure [dbo].[Pedidos_M]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Pedidos_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Pedidos_M]
GO

/****** Object:  StoredProcedure [dbo].[Pedidos_T]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Pedidos_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Pedidos_T]
GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TT]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Pedidos_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Pedidos_TT]
GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_DatosPorIdDetalle]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Pedidos_TX_DatosPorIdDetalle]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Pedidos_TX_DatosPorIdDetalle]
GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_DetallesPorId]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Pedidos_TX_DetallesPorId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Pedidos_TX_DetallesPorId]
GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_DetallesPorIdPedido]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Pedidos_TX_DetallesPorIdPedido]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Pedidos_TX_DetallesPorIdPedido]
GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_DetPendientes]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Pedidos_TX_DetPendientes]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Pedidos_TX_DetPendientes]
GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_DetPendientesTodos]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Pedidos_TX_DetPendientesTodos]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Pedidos_TX_DetPendientesTodos]
GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Pedidos_TX_ParaTransmitir]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Pedidos_TX_ParaTransmitir]
GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_Pendientes]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Pedidos_TX_Pendientes]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Pedidos_TX_Pendientes]
GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_PendientesParaLista]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Pedidos_TX_PendientesParaLista]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Pedidos_TX_PendientesParaLista]
GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_PorId]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Pedidos_TX_PorId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Pedidos_TX_PorId]
GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_PorIdOrigen]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Pedidos_TX_PorIdOrigen]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Pedidos_TX_PorIdOrigen]
GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_PorIdOrigenDetalle]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Pedidos_TX_PorIdOrigenDetalle]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Pedidos_TX_PorIdOrigenDetalle]
GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_PorNumero]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Pedidos_TX_PorNumero]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Pedidos_TX_PorNumero]
GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Pedidos_TX_SetearComoTransmitido]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Pedidos_TX_SetearComoTransmitido]
GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_Todos]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Pedidos_TX_Todos]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Pedidos_TX_Todos]
GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_TodosLosDetalles]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Pedidos_TX_TodosLosDetalles]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Pedidos_TX_TodosLosDetalles]
GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_TT]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Pedidos_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Pedidos_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TXAnio]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Pedidos_TXAnio]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Pedidos_TXAnio]
GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TXFecha]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Pedidos_TXFecha]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Pedidos_TXFecha]
GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TXMes]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Pedidos_TXMes]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Pedidos_TXMes]
GO

/****** Object:  StoredProcedure [dbo].[PedidosPRONTO_M]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PedidosPRONTO_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[PedidosPRONTO_M]
GO

/****** Object:  StoredProcedure [dbo].[PedidosPRONTO_T]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PedidosPRONTO_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[PedidosPRONTO_T]
GO

/****** Object:  StoredProcedure [dbo].[PedidosPRONTO_TX_DetallesPendientes]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PedidosPRONTO_TX_DetallesPendientes]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[PedidosPRONTO_TX_DetallesPendientes]
GO

/****** Object:  StoredProcedure [dbo].[PedidosPRONTO_TX_DetallesPendientesParaCombo]    Script Date: 03/15/2011 11:48:18 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PedidosPRONTO_TX_DetallesPendientesParaCombo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[PedidosPRONTO_TX_DetallesPendientesParaCombo]
GO

/****** Object:  StoredProcedure [dbo].[Planos_E]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Planos_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Planos_E]
GO

/****** Object:  StoredProcedure [dbo].[Planos_M]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Planos_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Planos_M]
GO

/****** Object:  StoredProcedure [dbo].[Planos_T]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Planos_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Planos_T]
GO

/****** Object:  StoredProcedure [dbo].[Planos_TL]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Planos_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Planos_TL]
GO

/****** Object:  StoredProcedure [dbo].[Planos_TT]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Planos_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Planos_TT]
GO

/****** Object:  StoredProcedure [dbo].[Planos_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Planos_TX_ParaTransmitir]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Planos_TX_ParaTransmitir]
GO

/****** Object:  StoredProcedure [dbo].[Planos_TX_ParaTransmitir_Todos]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Planos_TX_ParaTransmitir_Todos]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Planos_TX_ParaTransmitir_Todos]
GO

/****** Object:  StoredProcedure [dbo].[Planos_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Planos_TX_SetearComoTransmitido]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Planos_TX_SetearComoTransmitido]
GO

/****** Object:  StoredProcedure [dbo].[Planos_TX_TT]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Planos_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Planos_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[Proveedores_M]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Proveedores_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Proveedores_M]
GO

/****** Object:  StoredProcedure [dbo].[Proveedores_T]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Proveedores_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Proveedores_T]
GO

/****** Object:  StoredProcedure [dbo].[Proveedores_TL]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Proveedores_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Proveedores_TL]
GO

/****** Object:  StoredProcedure [dbo].[Proveedores_TT]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Proveedores_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Proveedores_TT]
GO

/****** Object:  StoredProcedure [dbo].[Proveedores_TX_Busca]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Proveedores_TX_Busca]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Proveedores_TX_Busca]
GO

/****** Object:  StoredProcedure [dbo].[Proveedores_TX_Busca1]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Proveedores_TX_Busca1]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Proveedores_TX_Busca1]
GO

/****** Object:  StoredProcedure [dbo].[Proveedores_TX_Eventuales]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Proveedores_TX_Eventuales]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Proveedores_TX_Eventuales]
GO

/****** Object:  StoredProcedure [dbo].[Proveedores_TX_EventualesParaCombo]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Proveedores_TX_EventualesParaCombo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Proveedores_TX_EventualesParaCombo]
GO

/****** Object:  StoredProcedure [dbo].[Proveedores_TX_PorCodigo]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Proveedores_TX_PorCodigo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Proveedores_TX_PorCodigo]
GO

/****** Object:  StoredProcedure [dbo].[Proveedores_TX_PorCodigoEmpresa]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Proveedores_TX_PorCodigoEmpresa]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Proveedores_TX_PorCodigoEmpresa]
GO

/****** Object:  StoredProcedure [dbo].[Proveedores_TX_PorCuit]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Proveedores_TX_PorCuit]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Proveedores_TX_PorCuit]
GO

/****** Object:  StoredProcedure [dbo].[Proveedores_TX_PorCuitNoEventual]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Proveedores_TX_PorCuitNoEventual]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Proveedores_TX_PorCuitNoEventual]
GO

/****** Object:  StoredProcedure [dbo].[Proveedores_TX_PorId]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Proveedores_TX_PorId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Proveedores_TX_PorId]
GO

/****** Object:  StoredProcedure [dbo].[Proveedores_TX_Resumido]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Proveedores_TX_Resumido]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Proveedores_TX_Resumido]
GO

/****** Object:  StoredProcedure [dbo].[Proveedores_TX_TodosParaCombo]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Proveedores_TX_TodosParaCombo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Proveedores_TX_TodosParaCombo]
GO

/****** Object:  StoredProcedure [dbo].[Proveedores_TX_ValidarPorCuit]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Proveedores_TX_ValidarPorCuit]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Proveedores_TX_ValidarPorCuit]
GO

/****** Object:  StoredProcedure [dbo].[Provincias_A]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Provincias_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Provincias_A]
GO

/****** Object:  StoredProcedure [dbo].[Provincias_E]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Provincias_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Provincias_E]
GO

/****** Object:  StoredProcedure [dbo].[Provincias_M]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Provincias_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Provincias_M]
GO

/****** Object:  StoredProcedure [dbo].[Provincias_T]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Provincias_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Provincias_T]
GO

/****** Object:  StoredProcedure [dbo].[Provincias_TL]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Provincias_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Provincias_TL]
GO

/****** Object:  StoredProcedure [dbo].[Provincias_TT]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Provincias_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Provincias_TT]
GO

/****** Object:  StoredProcedure [dbo].[Provincias_TX_PorId]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Provincias_TX_PorId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Provincias_TX_PorId]
GO

/****** Object:  StoredProcedure [dbo].[Provincias_TX_PorNombre]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Provincias_TX_PorNombre]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Provincias_TX_PorNombre]
GO

/****** Object:  StoredProcedure [dbo].[Provincias_TX_TT]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Provincias_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Provincias_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[Recepciones_A]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Recepciones_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Recepciones_A]
GO

/****** Object:  StoredProcedure [dbo].[Recepciones_ActualizarEstados]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Recepciones_ActualizarEstados]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Recepciones_ActualizarEstados]
GO

/****** Object:  StoredProcedure [dbo].[Recepciones_E]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Recepciones_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Recepciones_E]
GO

/****** Object:  StoredProcedure [dbo].[Recepciones_M]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Recepciones_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Recepciones_M]
GO

/****** Object:  StoredProcedure [dbo].[Recepciones_T]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Recepciones_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Recepciones_T]
GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TT]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Recepciones_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Recepciones_TT]
GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_DatosPorIdDetalleRecepcion]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Recepciones_TX_DatosPorIdDetalleRecepcion]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Recepciones_TX_DatosPorIdDetalleRecepcion]
GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_DetallesParaComprobantesProveedores]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Recepciones_TX_DetallesParaComprobantesProveedores]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Recepciones_TX_DetallesParaComprobantesProveedores]
GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_DetallesPorIdRecepcion]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Recepciones_TX_DetallesPorIdRecepcion]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Recepciones_TX_DetallesPorIdRecepcion]
GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_EntreFechas]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Recepciones_TX_EntreFechas]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Recepciones_TX_EntreFechas]
GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_MaterialesRecibidos]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Recepciones_TX_MaterialesRecibidos]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Recepciones_TX_MaterialesRecibidos]
GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_MaterialesRecibidosAprobados]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Recepciones_TX_MaterialesRecibidosAprobados]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Recepciones_TX_MaterialesRecibidosAprobados]
GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Recepciones_TX_ParaTransmitir]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Recepciones_TX_ParaTransmitir]
GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_PendientesDeComprobante]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Recepciones_TX_PendientesDeComprobante]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Recepciones_TX_PendientesDeComprobante]
GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_PendientesPorIdDetalle]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Recepciones_TX_PendientesPorIdDetalle]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Recepciones_TX_PendientesPorIdDetalle]
GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_PorNumeroInterno]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Recepciones_TX_PorNumeroInterno]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Recepciones_TX_PorNumeroInterno]
GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Recepciones_TX_SetearComoTransmitido]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Recepciones_TX_SetearComoTransmitido]
GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_Todos]    Script Date: 03/15/2011 11:48:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Recepciones_TX_Todos]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Recepciones_TX_Todos]
GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_TT]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Recepciones_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Recepciones_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_Ultimos3Meses]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Recepciones_TX_Ultimos3Meses]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Recepciones_TX_Ultimos3Meses]
GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_xNro]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Recepciones_TX_xNro]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Recepciones_TX_xNro]
GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_xNroLetra]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Recepciones_TX_xNroLetra]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Recepciones_TX_xNroLetra]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_A]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_A]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_ActualizarDetalles]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_ActualizarDetalles]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_ActualizarDetalles]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_ActualizarEstado]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_ActualizarEstado]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_ActualizarEstado]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_E]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_E]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_M]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_M]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_T]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_T]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TT]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TT]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_AConfirmar]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_AConfirmar]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_AConfirmar]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_Cumplidos]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_Cumplidos]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_Cumplidos]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_DatosObra]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_DatosObra]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_DatosObra]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_DatosRequerimiento]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_DatosRequerimiento]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_DatosRequerimiento]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_EntregasConcretadas]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_EntregasConcretadas]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_EntregasConcretadas]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_ItemsPorObra]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_ItemsPorObra]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_ItemsPorObra]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_ItemsPorObra1]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_ItemsPorObra1]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_ItemsPorObra1]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_ItemsPorObra2]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_ItemsPorObra2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_ItemsPorObra2]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_ItemsPorObra3]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_ItemsPorObra3]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_ItemsPorObra3]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_ParaTransmitir]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_ParaTransmitir]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_Pendientes]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_Pendientes]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_Pendientes]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_Pendientes1]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_Pendientes1]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_Pendientes1]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_PendientesDeAsignacion]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_PendientesDeAsignacion]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_PendientesDeAsignacion]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_PendientesPlaneamiento]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_PendientesPlaneamiento]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_PendientesPlaneamiento]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_PendientesPorIdRM]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_PendientesPorIdRM]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_PendientesPorIdRM]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_PendientesPorRM]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_PendientesPorRM]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_PendientesPorRM]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_PendientesPorRM1]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_PendientesPorRM1]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_PendientesPorRM1]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_PorCC]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_PorCC]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_PorCC]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_PorDetLmat]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_PorDetLmat]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_PorDetLmat]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_PorId]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_PorId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_PorId]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_PorIdOrigen]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_PorIdOrigen]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_PorIdOrigen]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_PorIdOrigenDetalle]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_PorIdOrigenDetalle]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_PorIdOrigenDetalle]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_PorNumero]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_PorNumero]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_PorNumero]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_PorObra]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_PorObra]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_PorObra]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_PorPRESTOContrato]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_PorPRESTOContrato]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_PorPRESTOContrato]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_SetearComoTransmitido]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_SetearComoTransmitido]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_SinControl]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_SinControl]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_SinControl]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_SinFechaNecesidad]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_SinFechaNecesidad]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_SinFechaNecesidad]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_Sumarizadas]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_Sumarizadas]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_Sumarizadas]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_TodosLosDetalles]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_TodosLosDetalles]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_TodosLosDetalles]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_TT]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_ValidarNumero]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TX_ValidarNumero]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TX_ValidarNumero]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TXAnio]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TXAnio]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TXAnio]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TXFecha]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TXFecha]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TXFecha]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TXMes]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TXMes]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TXMes]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TXPorNumeroObra]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TXPorNumeroObra]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TXPorNumeroObra]
GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TXPorObra]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requerimientos_TXPorObra]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Requerimientos_TXPorObra]
GO

/****** Object:  StoredProcedure [dbo].[Reservas_A]    Script Date: 03/15/2011 11:48:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Reservas_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Reservas_A]
GO

/****** Object:  StoredProcedure [dbo].[Reservas_E]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Reservas_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Reservas_E]
GO

/****** Object:  StoredProcedure [dbo].[Reservas_Generar]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Reservas_Generar]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Reservas_Generar]
GO

/****** Object:  StoredProcedure [dbo].[Reservas_M]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Reservas_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Reservas_M]
GO

/****** Object:  StoredProcedure [dbo].[Reservas_T]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Reservas_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Reservas_T]
GO

/****** Object:  StoredProcedure [dbo].[Reservas_TT]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Reservas_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Reservas_TT]
GO

/****** Object:  StoredProcedure [dbo].[Reservas_TX_DesdeDetalle]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Reservas_TX_DesdeDetalle]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Reservas_TX_DesdeDetalle]
GO

/****** Object:  StoredProcedure [dbo].[Reservas_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Reservas_TX_ParaTransmitir]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Reservas_TX_ParaTransmitir]
GO

/****** Object:  StoredProcedure [dbo].[Reservas_TX_PorObra]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Reservas_TX_PorObra]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Reservas_TX_PorObra]
GO

/****** Object:  StoredProcedure [dbo].[Reservas_TX_Reservar]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Reservas_TX_Reservar]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Reservas_TX_Reservar]
GO

/****** Object:  StoredProcedure [dbo].[Reservas_TX_Reservar_Acopios]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Reservas_TX_Reservar_Acopios]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Reservas_TX_Reservar_Acopios]
GO

/****** Object:  StoredProcedure [dbo].[Reservas_TX_Reservar_PorObra]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Reservas_TX_Reservar_PorObra]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Reservas_TX_Reservar_PorObra]
GO

/****** Object:  StoredProcedure [dbo].[Reservas_TX_Reservar_RM]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Reservas_TX_Reservar_RM]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Reservas_TX_Reservar_RM]
GO

/****** Object:  StoredProcedure [dbo].[Reservas_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Reservas_TX_SetearComoTransmitido]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Reservas_TX_SetearComoTransmitido]
GO

/****** Object:  StoredProcedure [dbo].[Reservas_TX_Sumarizadas]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Reservas_TX_Sumarizadas]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Reservas_TX_Sumarizadas]
GO

/****** Object:  StoredProcedure [dbo].[Reservas_TX_Todas]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Reservas_TX_Todas]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Reservas_TX_Todas]
GO

/****** Object:  StoredProcedure [dbo].[Reservas_TX_TT]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Reservas_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Reservas_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[Rubros_E]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Rubros_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Rubros_E]
GO

/****** Object:  StoredProcedure [dbo].[Rubros_M]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Rubros_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Rubros_M]
GO

/****** Object:  StoredProcedure [dbo].[Rubros_T]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Rubros_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Rubros_T]
GO

/****** Object:  StoredProcedure [dbo].[Rubros_TL]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Rubros_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Rubros_TL]
GO

/****** Object:  StoredProcedure [dbo].[Rubros_TT]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Rubros_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Rubros_TT]
GO

/****** Object:  StoredProcedure [dbo].[Rubros_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Rubros_TX_ParaTransmitir]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Rubros_TX_ParaTransmitir]
GO

/****** Object:  StoredProcedure [dbo].[Rubros_TX_ParaTransmitir_Todos]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Rubros_TX_ParaTransmitir_Todos]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Rubros_TX_ParaTransmitir_Todos]
GO

/****** Object:  StoredProcedure [dbo].[Rubros_TX_PorId]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Rubros_TX_PorId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Rubros_TX_PorId]
GO

/****** Object:  StoredProcedure [dbo].[Rubros_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Rubros_TX_SetearComoTransmitido]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Rubros_TX_SetearComoTransmitido]
GO

/****** Object:  StoredProcedure [dbo].[Rubros_TX_TT]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Rubros_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Rubros_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[SalidasMateriales_A]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SalidasMateriales_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SalidasMateriales_A]
GO

/****** Object:  StoredProcedure [dbo].[SalidasMateriales_AjustarStockSalidaMaterialesAnulada]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SalidasMateriales_AjustarStockSalidaMaterialesAnulada]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SalidasMateriales_AjustarStockSalidaMaterialesAnulada]
GO

/****** Object:  StoredProcedure [dbo].[SalidasMateriales_E]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SalidasMateriales_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SalidasMateriales_E]
GO

/****** Object:  StoredProcedure [dbo].[SalidasMateriales_M]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SalidasMateriales_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SalidasMateriales_M]
GO

/****** Object:  StoredProcedure [dbo].[SalidasMateriales_T]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SalidasMateriales_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SalidasMateriales_T]
GO

/****** Object:  StoredProcedure [dbo].[SalidasMateriales_TT]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SalidasMateriales_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SalidasMateriales_TT]
GO

/****** Object:  StoredProcedure [dbo].[SalidasMateriales_TX_DetalladoPorFechas]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SalidasMateriales_TX_DetalladoPorFechas]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SalidasMateriales_TX_DetalladoPorFechas]
GO

/****** Object:  StoredProcedure [dbo].[SalidasMateriales_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SalidasMateriales_TX_ParaTransmitir]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SalidasMateriales_TX_ParaTransmitir]
GO

/****** Object:  StoredProcedure [dbo].[SalidasMateriales_TX_Recepciones_y_Envios]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SalidasMateriales_TX_Recepciones_y_Envios]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SalidasMateriales_TX_Recepciones_y_Envios]
GO

/****** Object:  StoredProcedure [dbo].[SalidasMateriales_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SalidasMateriales_TX_SetearComoTransmitido]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SalidasMateriales_TX_SetearComoTransmitido]
GO

/****** Object:  StoredProcedure [dbo].[SalidasMateriales_TX_Todos]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SalidasMateriales_TX_Todos]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SalidasMateriales_TX_Todos]
GO

/****** Object:  StoredProcedure [dbo].[SalidasMateriales_TX_TraerVale]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SalidasMateriales_TX_TraerVale]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SalidasMateriales_TX_TraerVale]
GO

/****** Object:  StoredProcedure [dbo].[SalidasMateriales_TX_TT]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SalidasMateriales_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SalidasMateriales_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[SalidasMaterialesPRONTO_A]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SalidasMaterialesPRONTO_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SalidasMaterialesPRONTO_A]
GO

/****** Object:  StoredProcedure [dbo].[SalidasMaterialesPRONTO_T]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SalidasMaterialesPRONTO_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SalidasMaterialesPRONTO_T]
GO

/****** Object:  StoredProcedure [dbo].[SalidasMaterialesPRONTO_TX_DatosPorIdDetalleSalidaMateriales]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SalidasMaterialesPRONTO_TX_DatosPorIdDetalleSalidaMateriales]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SalidasMaterialesPRONTO_TX_DatosPorIdDetalleSalidaMateriales]
GO

/****** Object:  StoredProcedure [dbo].[SalidasMaterialesPRONTO_TX_Pendientes]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SalidasMaterialesPRONTO_TX_Pendientes]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SalidasMaterialesPRONTO_TX_Pendientes]
GO

/****** Object:  StoredProcedure [dbo].[Sectores_A]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Sectores_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Sectores_A]
GO

/****** Object:  StoredProcedure [dbo].[Sectores_E]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Sectores_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Sectores_E]
GO

/****** Object:  StoredProcedure [dbo].[Sectores_M]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Sectores_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Sectores_M]
GO

/****** Object:  StoredProcedure [dbo].[Sectores_T]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Sectores_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Sectores_T]
GO

/****** Object:  StoredProcedure [dbo].[Sectores_TL]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Sectores_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Sectores_TL]
GO

/****** Object:  StoredProcedure [dbo].[Sectores_TT]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Sectores_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Sectores_TT]
GO

/****** Object:  StoredProcedure [dbo].[Sectores_TX_PorDescripcion]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Sectores_TX_PorDescripcion]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Sectores_TX_PorDescripcion]
GO

/****** Object:  StoredProcedure [dbo].[Sectores_TX_PorId]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Sectores_TX_PorId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Sectores_TX_PorId]
GO

/****** Object:  StoredProcedure [dbo].[Sectores_TX_SinSectorOrigen]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Sectores_TX_SinSectorOrigen]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Sectores_TX_SinSectorOrigen]
GO

/****** Object:  StoredProcedure [dbo].[Sectores_TX_TT]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Sectores_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Sectores_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[SiNo_TL]    Script Date: 03/15/2011 11:48:21 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SiNo_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SiNo_TL]
GO

/****** Object:  StoredProcedure [dbo].[Stock_A]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Stock_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Stock_A]
GO

/****** Object:  StoredProcedure [dbo].[Stock_M]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Stock_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Stock_M]
GO

/****** Object:  StoredProcedure [dbo].[Stock_TX_ExistenciaPorArticulo]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Stock_TX_ExistenciaPorArticulo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Stock_TX_ExistenciaPorArticulo]
GO

/****** Object:  StoredProcedure [dbo].[Stock_TX_ExistenciaPorIdArticulo]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Stock_TX_ExistenciaPorIdArticulo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Stock_TX_ExistenciaPorIdArticulo]
GO

/****** Object:  StoredProcedure [dbo].[Stock_TX_RegistrosConStockDisponiblePorIdArticulo]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Stock_TX_RegistrosConStockDisponiblePorIdArticulo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Stock_TX_RegistrosConStockDisponiblePorIdArticulo]
GO

/****** Object:  StoredProcedure [dbo].[Stock_TX_RegistrosConStockNegativo]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Stock_TX_RegistrosConStockNegativo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Stock_TX_RegistrosConStockNegativo]
GO

/****** Object:  StoredProcedure [dbo].[Stock_TX_STK]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Stock_TX_STK]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Stock_TX_STK]
GO

/****** Object:  StoredProcedure [dbo].[Subrubros_E]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Subrubros_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Subrubros_E]
GO

/****** Object:  StoredProcedure [dbo].[Subrubros_M]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Subrubros_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Subrubros_M]
GO

/****** Object:  StoredProcedure [dbo].[Subrubros_T]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Subrubros_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Subrubros_T]
GO

/****** Object:  StoredProcedure [dbo].[Subrubros_TL]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Subrubros_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Subrubros_TL]
GO

/****** Object:  StoredProcedure [dbo].[Subrubros_TT]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Subrubros_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Subrubros_TT]
GO

/****** Object:  StoredProcedure [dbo].[Subrubros_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Subrubros_TX_ParaTransmitir]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Subrubros_TX_ParaTransmitir]
GO

/****** Object:  StoredProcedure [dbo].[Subrubros_TX_ParaTransmitir_Todos]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Subrubros_TX_ParaTransmitir_Todos]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Subrubros_TX_ParaTransmitir_Todos]
GO

/****** Object:  StoredProcedure [dbo].[Subrubros_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Subrubros_TX_SetearComoTransmitido]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Subrubros_TX_SetearComoTransmitido]
GO

/****** Object:  StoredProcedure [dbo].[Subrubros_TX_TT]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Subrubros_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Subrubros_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[TarifasFletes_M]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TarifasFletes_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[TarifasFletes_M]
GO

/****** Object:  StoredProcedure [dbo].[TarifasFletes_T]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TarifasFletes_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[TarifasFletes_T]
GO

/****** Object:  StoredProcedure [dbo].[TarifasFletes_TX_PorCodigo]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TarifasFletes_TX_PorCodigo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[TarifasFletes_TX_PorCodigo]
GO

/****** Object:  StoredProcedure [dbo].[TiposCuentaGrupos_TL]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TiposCuentaGrupos_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[TiposCuentaGrupos_TL]
GO

/****** Object:  StoredProcedure [dbo].[TiposPoliza_TL]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TiposPoliza_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[TiposPoliza_TL]
GO

/****** Object:  StoredProcedure [dbo].[Titulos_TL]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Titulos_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Titulos_TL]
GO

/****** Object:  StoredProcedure [dbo].[Transportistas_E]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Transportistas_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Transportistas_E]
GO

/****** Object:  StoredProcedure [dbo].[Transportistas_M]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Transportistas_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Transportistas_M]
GO

/****** Object:  StoredProcedure [dbo].[Transportistas_T]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Transportistas_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Transportistas_T]
GO

/****** Object:  StoredProcedure [dbo].[Transportistas_TL]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Transportistas_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Transportistas_TL]
GO

/****** Object:  StoredProcedure [dbo].[Transportistas_TT]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Transportistas_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Transportistas_TT]
GO

/****** Object:  StoredProcedure [dbo].[Transportistas_TX_ConDatos]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Transportistas_TX_ConDatos]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Transportistas_TX_ConDatos]
GO

/****** Object:  StoredProcedure [dbo].[Transportistas_TX_TT]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Transportistas_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Transportistas_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[Ubicaciones_E]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Ubicaciones_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Ubicaciones_E]
GO

/****** Object:  StoredProcedure [dbo].[Ubicaciones_M]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Ubicaciones_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Ubicaciones_M]
GO

/****** Object:  StoredProcedure [dbo].[Ubicaciones_T]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Ubicaciones_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Ubicaciones_T]
GO

/****** Object:  StoredProcedure [dbo].[Ubicaciones_TL]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Ubicaciones_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Ubicaciones_TL]
GO

/****** Object:  StoredProcedure [dbo].[Ubicaciones_TT]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Ubicaciones_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Ubicaciones_TT]
GO

/****** Object:  StoredProcedure [dbo].[Ubicaciones_TX_PorId]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Ubicaciones_TX_PorId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Ubicaciones_TX_PorId]
GO

/****** Object:  StoredProcedure [dbo].[Ubicaciones_TX_TT]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Ubicaciones_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Ubicaciones_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[Unidades_A]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Unidades_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Unidades_A]
GO

/****** Object:  StoredProcedure [dbo].[Unidades_E]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Unidades_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Unidades_E]
GO

/****** Object:  StoredProcedure [dbo].[Unidades_M]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Unidades_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Unidades_M]
GO

/****** Object:  StoredProcedure [dbo].[Unidades_T]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Unidades_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Unidades_T]
GO

/****** Object:  StoredProcedure [dbo].[Unidades_TL]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Unidades_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Unidades_TL]
GO

/****** Object:  StoredProcedure [dbo].[Unidades_TT]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Unidades_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Unidades_TT]
GO

/****** Object:  StoredProcedure [dbo].[Unidades_TX_PorAbreviatura]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Unidades_TX_PorAbreviatura]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Unidades_TX_PorAbreviatura]
GO

/****** Object:  StoredProcedure [dbo].[Unidades_TX_PorId]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Unidades_TX_PorId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Unidades_TX_PorId]
GO

/****** Object:  StoredProcedure [dbo].[Unidades_TX_TT]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Unidades_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Unidades_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[UnidadesOperativas_A]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UnidadesOperativas_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[UnidadesOperativas_A]
GO

/****** Object:  StoredProcedure [dbo].[UnidadesOperativas_E]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UnidadesOperativas_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[UnidadesOperativas_E]
GO

/****** Object:  StoredProcedure [dbo].[UnidadesOperativas_M]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UnidadesOperativas_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[UnidadesOperativas_M]
GO

/****** Object:  StoredProcedure [dbo].[UnidadesOperativas_T]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UnidadesOperativas_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[UnidadesOperativas_T]
GO

/****** Object:  StoredProcedure [dbo].[UnidadesOperativas_TL]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UnidadesOperativas_TL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[UnidadesOperativas_TL]
GO

/****** Object:  StoredProcedure [dbo].[UnidadesOperativas_TT]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UnidadesOperativas_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[UnidadesOperativas_TT]
GO

/****** Object:  StoredProcedure [dbo].[UnidadesOperativas_TX_TT]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UnidadesOperativas_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[UnidadesOperativas_TX_TT]
GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_A]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ValesSalida_A]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ValesSalida_A]
GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_ActualizarEstado]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ValesSalida_ActualizarEstado]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ValesSalida_ActualizarEstado]
GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_AsignarEntrega]    Script Date: 03/15/2011 11:48:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ValesSalida_AsignarEntrega]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ValesSalida_AsignarEntrega]
GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_E]    Script Date: 03/15/2011 11:48:23 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ValesSalida_E]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ValesSalida_E]
GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_M]    Script Date: 03/15/2011 11:48:23 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ValesSalida_M]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ValesSalida_M]
GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_T]    Script Date: 03/15/2011 11:48:23 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ValesSalida_T]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ValesSalida_T]
GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_TT]    Script Date: 03/15/2011 11:48:23 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ValesSalida_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ValesSalida_TT]
GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_TX_DetalladoPorFechas]    Script Date: 03/15/2011 11:48:23 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ValesSalida_TX_DetalladoPorFechas]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ValesSalida_TX_DetalladoPorFechas]
GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_TX_ItemsPorObra]    Script Date: 03/15/2011 11:48:23 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ValesSalida_TX_ItemsPorObra]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ValesSalida_TX_ItemsPorObra]
GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_TX_ItemsPorObra1]    Script Date: 03/15/2011 11:48:23 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ValesSalida_TX_ItemsPorObra1]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ValesSalida_TX_ItemsPorObra1]
GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_TX_ItemsPorObra2]    Script Date: 03/15/2011 11:48:23 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ValesSalida_TX_ItemsPorObra2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ValesSalida_TX_ItemsPorObra2]
GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_TX_ItemsPorObra3]    Script Date: 03/15/2011 11:48:23 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ValesSalida_TX_ItemsPorObra3]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ValesSalida_TX_ItemsPorObra3]
GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:23 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ValesSalida_TX_ParaTransmitir]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ValesSalida_TX_ParaTransmitir]
GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_TX_PendientesDetallado]    Script Date: 03/15/2011 11:48:23 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ValesSalida_TX_PendientesDetallado]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ValesSalida_TX_PendientesDetallado]
GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_TX_PendientesResumido]    Script Date: 03/15/2011 11:48:23 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ValesSalida_TX_PendientesResumido]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ValesSalida_TX_PendientesResumido]
GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_TX_PorId]    Script Date: 03/15/2011 11:48:23 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ValesSalida_TX_PorId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ValesSalida_TX_PorId]
GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:23 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ValesSalida_TX_SetearComoTransmitido]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ValesSalida_TX_SetearComoTransmitido]
GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_TX_TodosLosItems]    Script Date: 03/15/2011 11:48:23 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ValesSalida_TX_TodosLosItems]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ValesSalida_TX_TodosLosItems]
GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_TX_TT]    Script Date: 03/15/2011 11:48:23 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ValesSalida_TX_TT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ValesSalida_TX_TT]
GO


/****** Object:  StoredProcedure [dbo].[_AlterTable]    Script Date: 03/15/2011 11:48:23 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



create procedure [dbo].[_AlterTable]

@tabla Varchar(100),
@campo varchar(100),
@esta int output

AS
set nocount on

CREATE TABLE [dbo].[#Auxiliar] (
	[table_name] [nvarchar] (384) COLLATE Modern_Spanish_CI_AS NULL ,
	[table_owner] [nvarchar] (384) COLLATE Modern_Spanish_CI_AS NULL ,
	[table_qualifier] [varchar] (100) COLLATE Modern_Spanish_CI_AS NULL ,
	[column_name] [nvarchar] (384) COLLATE Modern_Spanish_CI_AS NULL 
) ON [PRIMARY]

insert into #Auxiliar exec BD_TX_Campos @tabla
set @esta =0
if exists (select Column_name from #Auxiliar where Column_name = @campo)
set @esta =1

drop table #Auxiliar
set nocount off
Return (@esta)



GO

/****** Object:  StoredProcedure [dbo].[Acopios_TX_DatosAcopio]    Script Date: 03/15/2011 11:48:23 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE Procedure [dbo].[Acopios_TX_DatosAcopio]

@IdDetalleAcopios int

AS 

SELECT 
 DetAco.IdDetalleAcopios,
 DetAco.NumeroItem,
 DetAco.IdArticulo,
 DetAco.IdUnidad,
 DetAco.Cantidad,
 DetAco.Cantidad1,
 DetAco.Cantidad2,
 DetAco.IdControlCalidad,
 DetAco.IdCuenta,
 DetAco.Observaciones,
 Acopios.IdAcopio,
 Acopios.Fecha,
 Acopios.NumeroAcopio,
 Acopios.Aprobo,
 Articulos.Descripcion as [DescripcionArt],
 Unidades.Descripcion as [Unidad en],
 (Select Sum(DetRec.Cantidad)
  From DetalleRecepciones DetRec
  Left Outer Join Recepciones On DetRec.IdRecepcion = Recepciones.IdRecepcion
  Where DetAco.IdDetalleAcopios=DetRec.IdDetalleAcopios and 
	(Recepciones.Anulada is null or Recepciones.Anulada<>'SI')) as [Entregado],
 DetAco.Cantidad - Isnull((Select Sum(DetRec.Cantidad)
 				From DetalleRecepciones DetRec 
				Left Outer Join Recepciones On Recepciones.IdRecepcion=DetRec.IdRecepcion
				Where DetRec.IdDetalleAcopios=DetAco.IdDetalleAcopios and 
					(Recepciones.Anulada is null or Recepciones.Anulada<>'SI')),0)
 as [Pendiente],
 Acopios.IdObra as [IdObra],
 Obras.NumeroObra as [Obra],
 Equipos.Descripcion as [Equipo],
 Articulos.Codigo
FROM DetalleAcopios DetAco
LEFT OUTER JOIN Acopios ON DetAco.IdAcopio=Acopios.IdAcopio
LEFT OUTER JOIN Articulos ON DetAco.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Unidades ON DetAco.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN Obras ON Acopios.IdObra = Obras.IdObra
LEFT OUTER JOIN Equipos ON DetAco.IdEquipo = Equipos.IdEquipo
WHERE (DetAco.IdDetalleAcopios=@IdDetalleAcopios)





GO

/****** Object:  StoredProcedure [dbo].[AjustesStock_A]    Script Date: 03/15/2011 11:48:23 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE Procedure [dbo].[AjustesStock_A]

@IdAjusteStock int  output,
@NumeroAjusteStock int,
@FechaAjuste datetime,
@Observaciones ntext,
@IdRealizo int,
@FechaRegistro datetime,
@IdAprobo int,
@NumeroMarbete int,
@TipoAjuste varchar(1),
@EnviarEmail tinyint,
@IdAjusteStockOriginal int,
@IdOrigenTransmision int,
@FechaImportacionTransmision datetime

As 

Insert into AjustesStock
(
 NumeroAjusteStock,
 FechaAjuste,
 Observaciones,
 IdRealizo,
 FechaRegistro,
 IdAprobo,
 NumeroMarbete,
 TipoAjuste,
 EnviarEmail,
 IdAjusteStockOriginal,
 IdOrigenTransmision,
 FechaImportacionTransmision
)
Values
(
 @NumeroAjusteStock,
 @FechaAjuste,
 @Observaciones,
 @IdRealizo,
 @FechaRegistro,
 @IdAprobo,
 @NumeroMarbete,
 @TipoAjuste,
 @EnviarEmail,
 @IdAjusteStockOriginal,
 @IdOrigenTransmision,
 @FechaImportacionTransmision
)
Select @IdAjusteStock=@@identity
Return(@IdAjusteStock)


GO

/****** Object:  StoredProcedure [dbo].[AjustesStock_E]    Script Date: 03/15/2011 11:48:23 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[AjustesStock_E]
@IdAjusteStock int  AS 
Delete AjustesStock
where (IdAjusteStock=@IdAjusteStock)
































GO

/****** Object:  StoredProcedure [dbo].[AjustesStock_M]    Script Date: 03/15/2011 11:48:24 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO







CREATE Procedure [dbo].[AjustesStock_M]
@IdAjusteStock int,
@NumeroAjusteStock int,
@FechaAjuste datetime,
@Observaciones ntext,
@IdRealizo int,
@FechaRegistro datetime,
@IdAprobo int,
@NumeroMarbete int,
@TipoAjuste varchar(1),
@EnviarEmail tinyint,
@IdAjusteStockOriginal int,
@IdOrigenTransmision int,
@FechaImportacionTransmision datetime
As
Update AjustesStock
Set 
 NumeroAjusteStock=@NumeroAjusteStock,
 FechaAjuste=@FechaAjuste,
 Observaciones=@Observaciones,
 IdRealizo=@IdRealizo,
 FechaRegistro=@FechaRegistro,
 IdAprobo=@IdAprobo,
 NumeroMarbete=@NumeroMarbete,
 TipoAjuste=@TipoAjuste,
 EnviarEmail=@EnviarEmail,
 IdAjusteStockOriginal=@IdAjusteStockOriginal,
 IdOrigenTransmision=@IdOrigenTransmision,
 FechaImportacionTransmision=@FechaImportacionTransmision
Where (IdAjusteStock=@IdAjusteStock)
Return(@IdAjusteStock)






GO

/****** Object:  StoredProcedure [dbo].[AjustesStock_T]    Script Date: 03/15/2011 11:48:24 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[AjustesStock_T]
@IdAjusteStock int
AS 
SELECT * 
FROM AjustesStock
WHERE (IdAjusteStock=@IdAjusteStock)
































GO

/****** Object:  StoredProcedure [dbo].[AjustesStock_TT]    Script Date: 03/15/2011 11:48:24 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO







CREATE  Procedure [dbo].[AjustesStock_TT]
AS 
SELECT 
 AjustesStock.IdAjusteStock,
 AjustesStock.NumeroAjusteStock as Numero,
 AjustesStock.FechaAjuste as Fecha,
 AjustesStock.NumeroMarbete as Marbete,
 CASE 	WHEN AjustesStock.TipoAjuste='I' THEN 'Inventario' 
	ELSE 'Ajuste normal'
 END as [Tipo de ajuste],
 (Select Top 1 Empleados.Nombre from Empleados 
  Where AjustesStock.IdRealizo=Empleados.IdEmpleado) as [Realizada por],
 (Select Top 1 Empleados.Nombre from Empleados 
  Where AjustesStock.IdAprobo=Empleados.IdEmpleado) as [Liberada por],
 (Select Count(*) From  DetalleAjustesStock 
  Where DetalleAjustesStock.IdAjusteStock=AjustesStock.IdAjusteStock) as [Cant.Items]
FROM AjustesStock
ORDER BY FechaAjuste,NumeroAjusteStock






GO

/****** Object:  StoredProcedure [dbo].[AjustesStock_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:24 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE Procedure [dbo].[AjustesStock_TX_ParaTransmitir]
AS 
SELECT *
FROM AjustesStock
WHERE EnviarEmail=1





GO

/****** Object:  StoredProcedure [dbo].[AjustesStock_TX_PorMarbete]    Script Date: 03/15/2011 11:48:24 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[AjustesStock_TX_PorMarbete]
@NumeroMarbete int
AS 
SELECT * 
FROM AjustesStock
WHERE NumeroMarbete=@NumeroMarbete
































GO

/****** Object:  StoredProcedure [dbo].[AjustesStock_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:24 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE Procedure [dbo].[AjustesStock_TX_SetearComoTransmitido]
AS 
UPDATE AjustesStock
SET EnviarEmail=0
WHERE EnviarEmail<>0





GO

/****** Object:  StoredProcedure [dbo].[AjustesStock_TX_TT]    Script Date: 03/15/2011 11:48:24 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE  Procedure [dbo].[AjustesStock_TX_TT]
@IdAjusteStock int
AS 
SELECT 
AjustesStock.IdAjusteStock,
AjustesStock.NumeroAjusteStock as Numero,
AjustesStock.FechaAjuste as Fecha,
AjustesStock.NumeroMarbete as Marbete,
CASE 	WHEN AjustesStock.TipoAjuste='I' THEN 'Inventario'
	ELSE 'Ajuste normal'
END as [Tipo de ajuste],
(Select Top 1 Empleados.Nombre from Empleados 
 Where AjustesStock.IdRealizo=Empleados.IdEmpleado) as [Realizada por],
(Select Top 1 Empleados.Nombre from Empleados 
 Where AjustesStock.IdAprobo=Empleados.IdEmpleado) as [Liberada por],
(Select Count(*) From  DetalleAjustesStock 
 Where DetalleAjustesStock.IdAjusteStock=AjustesStock.IdAjusteStock) as [Cant.Items]
FROM AjustesStock
WHERE (IdAjusteStock=@IdAjusteStock)
































GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitir_TT]    Script Date: 03/15/2011 11:48:24 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO























CREATE Procedure [dbo].[ArchivosATransmitir_TT]
AS 
SELECT *
FROM ArchivosATransmitir
ORDER by IdArchivoATransmitir






















GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirDestinos_E]    Script Date: 03/15/2011 11:48:24 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[ArchivosATransmitirDestinos_E]
@IdArchivoATransmitirDestino int  AS 
Delete ArchivosATransmitirDestinos
where (IdArchivoATransmitirDestino=@IdArchivoATransmitirDestino)































GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirDestinos_M]    Script Date: 03/15/2011 11:48:24 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE  Procedure [dbo].[ArchivosATransmitirDestinos_M]
@IdArchivoATransmitirDestino int ,
@Descripcion varchar(50),
@Tipo int,
@Email varchar(50),
@Activo varchar(2),
@Nombre varchar(50),
@Direccion varchar(50),
@Localidad varchar(50),
@Telefono varchar(50),
@Celular varchar(50),
@Horario varchar(50),
@Contacto varchar(50),
@Observaciones ntext
AS
IF Exists(Select aatd.IdArchivoATransmitirDestino 
		From ArchivosATransmitirDestinos aatd 
		Where aatd.IdArchivoATransmitirDestino=@IdArchivoATransmitirDestino)
	BEGIN
		UPDATE ArchivosATransmitirDestinos
		SET
		 Descripcion=@Descripcion,
		 Tipo=@Tipo,
		 Email=@Email,
		 Activo=@Activo,
		 Nombre=@Nombre,
		 Direccion=@Direccion,
		 Localidad=@Localidad,
		 Telefono=@Telefono,
		 Celular=@Celular,
		 Horario=@Horario,
		 Contacto=@Contacto,
		 Observaciones=@Observaciones
		WHERE IdArchivoATransmitirDestino=@IdArchivoATransmitirDestino
	END
ELSE
	BEGIN
		INSERT INTO [ArchivosATransmitirDestinos]
		(
		 IdArchivoATransmitirDestino,
		 Descripcion,
		 Tipo,
		 Email,
		 Activo,
		 Nombre,
		 Direccion,
		 Localidad,
		 Telefono,
		 Celular,
		 Horario,
		 Contacto,
		 Observaciones
		)
		VALUES
		(
		 @IdArchivoATransmitirDestino,
		 @Descripcion,
		 @Tipo,
		 @Email,
		 @Activo,
		 @Nombre,
		 @Direccion,
		 @Localidad,
		 @Telefono,
		 @Celular,
		 @Horario,
		 @Contacto,
		 @Observaciones
		)
	END
RETURN(@IdArchivoATransmitirDestino)





GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirDestinos_T]    Script Date: 03/15/2011 11:48:24 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[ArchivosATransmitirDestinos_T]
@IdArchivoATransmitirDestino int
AS 
SELECT *
FROM ArchivosATransmitirDestinos
where (IdArchivoATransmitirDestino=@IdArchivoATransmitirDestino)































GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirDestinos_TL]    Script Date: 03/15/2011 11:48:24 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[ArchivosATransmitirDestinos_TL]
AS 
Select 
IdArchivoATransmitirDestino,
CASE 	WHEN Tipo=1 THEN 'Obra - ' + Descripcion 
	ELSE 'Tercerizado - ' + Descripcion 
END as [Titulo]
FROM ArchivosATransmitirDestinos
ORDER By Descripcion































GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirDestinos_TT]    Script Date: 03/15/2011 11:48:24 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[ArchivosATransmitirDestinos_TT]
AS 
Select 
IdArchivoATransmitirDestino,
Descripcion as [Archivo a transmitir],
CASE 	WHEN Tipo=1 THEN 'Obra'
	ELSE 'Tercerizado'
END as [Tipo de destino],
Email,
Activo as [Activo ?],
Nombre,
Direccion,
Localidad,
Telefono,
Celular,
Horario,
Contacto,
IdArchivoATransmitirDestino as [Identificador]
FROM ArchivosATransmitirDestinos
ORDER by Descripcion































GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirDestinos_TX_Activos]    Script Date: 03/15/2011 11:48:24 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[ArchivosATransmitirDestinos_TX_Activos]
AS 
Select *
FROM ArchivosATransmitirDestinos
WHERE Activo='SI'
ORDER by Descripcion































GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirDestinos_TX_DestinoActual]    Script Date: 03/15/2011 11:48:24 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO





CREATE Procedure [dbo].[ArchivosATransmitirDestinos_TX_DestinoActual]

AS 

DECLARE @IdArchivoATransmitirDestino int
SET @IdArchivoATransmitirDestino=IsNull((Select Top 1 IdArchivoATransmitirDestinoActivo
					 From Parametros Where IdParametro=1),0)
DECLARE @IdArchivoATransmitirDestinoPRONTO int,@EmailPRONTO varchar(50)
SET @IdArchivoATransmitirDestinoPRONTO=IsNull((Select Top 1 IdArchivoATransmitirDestinoPRONTO
							 From Parametros Where IdParametro=1),0)

SET @EmailPRONTO='PRONTO'
IF @IdArchivoATransmitirDestinoPRONTO<>0 
	SET @EmailPRONTO=IsNull((Select Top 1 Email
					 From ArchivosATransmitirDestinos 
					Where IdArchivoATransmitirDestino=@IdArchivoATransmitirDestinoPRONTO),'PRONTO')

SELECT 
 ArchivosATransmitirDestinos.*,
 @EmailPRONTO as [EmailPRONTO]
FROM ArchivosATransmitirDestinos
WHERE IdArchivoATransmitirDestino=@IdArchivoATransmitirDestino




GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirDestinos_TX_PorId]    Script Date: 03/15/2011 11:48:24 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO





CREATE Procedure [dbo].[ArchivosATransmitirDestinos_TX_PorId]
@IdArchivoATransmitirDestino int
AS 
SELECT *
FROM ArchivosATransmitirDestinos
WHERE (IdArchivoATransmitirDestino=@IdArchivoATransmitirDestino)




GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirDestinos_TX_TT]    Script Date: 03/15/2011 11:48:24 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[ArchivosATransmitirDestinos_TX_TT]
@IdArchivoATransmitirDestino int
AS 
Select 
IdArchivoATransmitirDestino,
Descripcion as [Archivo a transmitir],
CASE 	WHEN Tipo=1 THEN 'Obra'
	ELSE 'Tercerizado'
END as [Tipo de destino],
Email,
Activo as [Activo ?],
Nombre,
Direccion,
Localidad,
Telefono,
Celular,
Horario,
Contacto,
IdArchivoATransmitirDestino as [Identificador]
FROM ArchivosATransmitirDestinos
WHERE (IdArchivoATransmitirDestino=@IdArchivoATransmitirDestino)































GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirLoteo_A]    Script Date: 03/15/2011 11:48:24 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[ArchivosATransmitirLoteo_A]
@IdArchivoATransmitirLoteo int  output,
@IdArchivoATransmitir int,
@FechaTransmision datetime,
@IdArchivoATransmitirDestino int,
@NumeroLote int,
@Confirmado varchar(2),
@FechaRecepcionOK datetime
AS 
Insert into [ArchivosATransmitirLoteo]
(
 IdArchivoATransmitir,
 FechaTransmision,
 IdArchivoATransmitirDestino,
 NumeroLote,
 Confirmado,
 FechaRecepcionOK
)
Values
(
 @IdArchivoATransmitir,
 @FechaTransmision,
 @IdArchivoATransmitirDestino,
 @NumeroLote,
 @Confirmado,
 @FechaRecepcionOK
)
Select @IdArchivoATransmitirLoteo=@@identity
Return(@IdArchivoATransmitirLoteo)































GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirLoteo_E]    Script Date: 03/15/2011 11:48:24 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[ArchivosATransmitirLoteo_E]
@IdArchivoATransmitirLoteo int  AS 
Delete ArchivosATransmitirLoteo
where (IdArchivoATransmitirLoteo=@IdArchivoATransmitirLoteo)































GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirLoteo_M]    Script Date: 03/15/2011 11:48:24 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE  Procedure [dbo].[ArchivosATransmitirLoteo_M]
@IdArchivoATransmitirLoteo int,
@IdArchivoATransmitir int,
@FechaTransmision datetime,
@IdArchivoATransmitirDestino int,
@NumeroLote int,
@Confirmado varchar(2),
@FechaRecepcionOK datetime
AS
Update ArchivosATransmitirLoteo
SET
IdArchivoATransmitir=@IdArchivoATransmitir,
FechaTransmision=@FechaTransmision,
IdArchivoATransmitirDestino=@IdArchivoATransmitirDestino,
NumeroLote=@NumeroLote,
Confirmado=@Confirmado,
FechaRecepcionOK=@FechaRecepcionOK
where (IdArchivoATransmitirLoteo=@IdArchivoATransmitirLoteo)
Return(@IdArchivoATransmitirLoteo)































GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirLoteo_T]    Script Date: 03/15/2011 11:48:25 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[ArchivosATransmitirLoteo_T]
@IdArchivoATransmitirLoteo int
AS 
SELECT *
FROM ArchivosATransmitirLoteo
where IdArchivoATransmitirLoteo=@IdArchivoATransmitirLoteo































GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirLoteo_TT]    Script Date: 03/15/2011 11:48:25 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[ArchivosATransmitirLoteo_TT]
AS 
Select *
FROM ArchivosATransmitirLoteo































GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirLoteo_TX_EstadoGeneral]    Script Date: 03/15/2011 11:48:25 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[ArchivosATransmitirLoteo_TX_EstadoGeneral]
AS 
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='011111133'
set @vector_T='083313500'
Select 
atl.IdArchivoATransmitirLoteo,
FechaTransmision as [Fecha envio],
aat.Descripcion as [Archivo],
atd.Descripcion as [Destino],
atl.NumeroLote as [Lote],
atl.Confirmado,
atl.FechaRecepcionOK as [Fecha conf.],
@Vector_T as Vector_T,
@Vector_X as Vector_X
FROM ArchivosATransmitirLoteo atl
LEFT OUTER JOIN ArchivosATransmitir aat ON atl.IdArchivoATransmitir=aat.IdArchivoATransmitir
LEFT OUTER JOIN ArchivosATransmitirDestinos atd ON atl.IdArchivoATransmitirDestino=atd.IdArchivoATransmitirDestino
ORDER BY atl.FechaTransmision,aat.Descripcion































GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirLoteo_TX_PorArchivoLote]    Script Date: 03/15/2011 11:48:25 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[ArchivosATransmitirLoteo_TX_PorArchivoLote]
@NombreTabla varchar(50),
@Email varchar(50),
@NumeroLote int
AS 
Select Top 1 IdArchivoATransmitirLoteo
FROM ArchivosATransmitirLoteo
WHERE 	IdArchivoATransmitir=(Select aat.IdArchivoATransmitir 
				From ArchivosATransmitir aat 
				Where aat.Descripcion=@NombreTabla)
	and
      	IdArchivoATransmitirDestino=(Select aatd.IdArchivoATransmitirDestino 
					From ArchivosATransmitirDestinos aatd 
					Where aatd.Email=@Email)
	and
	NumeroLote=@NumeroLote































GO

/****** Object:  StoredProcedure [dbo].[ArchivosATransmitirLoteo_TX_UltimoLote]    Script Date: 03/15/2011 11:48:25 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[ArchivosATransmitirLoteo_TX_UltimoLote]
@IdArchivoATransmitirDestino int,
@IdArchivoATransmitir int
AS 
Select MAX(NumeroLote) as [Lote]
FROM ArchivosATransmitirLoteo
WHERE IdArchivoATransmitirDestino=@IdArchivoATransmitirDestino and 
	 IdArchivoATransmitir=@IdArchivoATransmitir































GO

/****** Object:  StoredProcedure [dbo].[Articulos_BorrarPorIdRubro]    Script Date: 03/15/2011 11:48:25 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO








CREATE Procedure [dbo].[Articulos_BorrarPorIdRubro]
@IdRubro int
AS
DELETE FROM Articulos
WHERE IdRubro=@IdRubro








GO

/****** Object:  StoredProcedure [dbo].[Articulos_E]    Script Date: 03/15/2011 11:48:25 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO




































CREATE Procedure [dbo].[Articulos_E]
@IdArticulo int  AS 
Delete Articulos
where (IdArticulo=@IdArticulo)




































GO

/****** Object:  StoredProcedure [dbo].[Articulos_M]    Script Date: 03/15/2011 11:48:25 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE  Procedure [dbo].[Articulos_M]

@IdArticulo int,
@IdRubro int,
@IdSubrubro int,
@IdFamilia int,
@Descripcion varchar(256),
@Productivo varchar(2),
@Ancho numeric(9,2),
@IdCalidad int,
@Diametro varchar(10),
@Espesor numeric(9,2),
@IdGrado numeric,
@Largo numeric(9,2),
@IdMaterial int,
@IdAcabado int,
@IdTipo int,
@Serie varchar(50),
@IdTratamiento int,
@IdUnidad int,
@Autorizacion varchar(2),
@IdInventario tinyint,
@IdCuenta int,
@IdScheduler int,
@Unidad1 int,
@Unidad2 int,
@Unidad3 int,
@Unidad4 int,
@Unidad5 int,
@Unidad6 int,
@Unidad7 int,
@Unidad8 int,
@Unidad9 int,
@Unidad10 int,
@Peso numeric(9,2),
@DiametroInterno numeric(9,2),
@IdCodigoUniversal int,
@IdRelacion int,
@IdForma int,
@IdSerie int,
@Altura numeric(9,2),
@Diametro2 numeric(9,2),
@IdColor int,
@IdNorma int,
@Capacidad numeric(9,2),
@Potencia numeric(9,2),
@IdRango int,
@IdAlimentacionElectrica int,
@IdModelo int,
@IdMarca int,
@IdAnioNorma int,
@Unidad11 int,
@Unidad12 int,
@Unidad13 int,
@Unidad14 int,
@Unidad15 int,
@IdCuantificacion int,
@IdControlCalidad int,
@IdCodigo int,
@Charpy varchar(2),
@IdCentroCosto int,
@UsuarioAlta varchar(50),
@FechaAlta datetime,
@FechaUltimaModificacion datetime,
@EspesorBase numeric(9,2),
@EspesorRevestimiento numeric(9,2),
@IdCalidadBase int,
@IdCalidadRevestimiento int,
@IdGradoBase int,
@IdGradoRevestimiento int,
@IdBiselado int,
@IdCalidadClad int,
@IdTipoRosca int,
@IdDensidad int,
@Rpm int,
@Datos1 numeric(12,0),
@Datos2 numeric(12,0),
@Datos3 numeric(12,0),
@Datos4 numeric(12,0),
@Datos5 numeric(12,0),
@Datos6 numeric(12,0),
@Datos7 numeric(12,0),
@Datos8 numeric(12,0),
@Datos9 numeric(12,0),
@Datos10 numeric(12,0),
@Unidad16 int,
@Unidad17 int,
@Unidad18 int,
@Unidad19 int,
@Unidad20 int,
@EnviarEmail tinyint,
@Codigo varchar(20),
@RegistrarStock varchar(2),
@StockMinimo numeric(18,2),
@DefineKit varchar(2),
@CostoPPP numeric(18,2),
@AlicuotaIVA numeric(6,2),
@CostoPPPDolar numeric(18,2),
@IdUbicacionStandar int,
@CostoReposicion numeric(18,2),
@CostoReposicionDolar numeric(18,2),
@Direccion varchar(50),
@IdLocalidad int,
@IdProvincia int,
@IdPais int,
@CodigoPostal varchar(20),
@NumeroManzana int,
@NumeroLote int,
@ActivoFijo varchar(2),
@EstadoActivoFijo varchar(2),
@NumeroActivoFijo int,
@IdGrupoActivoFijo int,
@BienImpositivo varchar(2),
@BienContable varchar(2),
@Amortiza varchar(2),
@FechaCompra datetime,
@IdCuentaAmortizacion int,
@VidaUtilImpositiva numeric(19,6),
@VidaUtilContable numeric(19,6),
@ValorOrigenContable numeric(19,2),
@ValorOrigenImpositivo numeric(19,2),
@ValorActualizado numeric(19,2),
@ValorResidual numeric(19,2),
@ValorResidualActualizado numeric(19,2),
@AmortizacionEjercicio numeric(19,2),
@AmortizacionEjercicioActualizada numeric(19,2),
@AmortizacionesAcumuladas numeric(19,2),
@AmortizacionesAcumuladasActualizada numeric(19,2),
@VidaUtilImpositivaRestante int,
@VidaUtilContableRestante int,
@FechaPrimeraAmortizacionImpositiva datetime,
@FechaPrimeraAmortizacionContable datetime,
@IdUbicacionActivoFijo int,
@IdSector int,
@FechaBajaAmortizacion datetime,
@ParaMantenimiento varchar(2),
@IdUnidadLecturaMantenimiento int,
@LecturaAcumulada numeric(19,2),
@LecturaBase numeric(19,2),
@UltimaLectura numeric(19,2),
@FechaUltimaLectura datetime,
@EstimadoAnual numeric(19,2),
@NumeroInventario varchar(20),
@ModeloMotor varchar(30),
@EquipoEnObra varchar(2),
@EstadoEquipo varchar(2),
@EsConsumible varchar(2),
@FechaUltimaModificacionArticulo datetime,
@EntidadOrigen varchar(50),
@ComprobanteCompra varchar(20),
@ModeloEspecifico varchar(20),
@NumeroPatente varchar(20),
@NumeroMotor varchar(20),
@NumeroChasis varchar(30),
@AñoFabricacion int,
@AñosAmortizacion int,
@AñoAlta int,
@Caracteristicas varchar(70),
@NumeroGarantia varchar(50),
@FechaCaducidadGarantia datetime,
@TipoCoberturaSeguro varchar(50),
@NumeroPolizaSeguro numeric(18,0),
@CompañiaSeguro varchar(30),
@FechaVigenciaSeguro datetime,
@FechaVencimientoVerificacionTecnica datetime,
@CalculaAmortizacion varchar(2),
@UltimoRevaluoContable numeric(18,2),
@FechaUltimoRevaluo datetime,
@CodigoLoteo varchar(20),
@Adrema varchar(20),
@Observaciones varchar(250),
@ConsumoStandarCombustible numeric(18,2)

AS

IF Exists(Select ar.IdArticulo From Articulos ar Where ar.IdArticulo=@IdArticulo)
    BEGIN
	Update Articulos
	Set
	 IdRubro=@IdRubro,
	 IdSubrubro=@IdSubrubro,
	 IdFamilia=@IdFamilia,
	 Descripcion=@Descripcion,
	 Productivo=@Productivo,
	 Ancho=@Ancho,
	 IdCalidad=@IdCalidad,
	 Diametro=@Diametro,
	 Espesor=@Espesor,
	 IdGrado=@IdGrado,
	 Largo=@Largo,
	 IdMaterial=@IdMaterial,
	 IdAcabado=@IdAcabado,
	 IdTipo=@IdTipo,
	 Serie=@Serie,
	 IdTratamiento=@IdTratamiento,
	 IdUnidad=@IdUnidad,
	 Autorizacion=@Autorizacion,
	 IdInventario=@IdInventario,
	 IdCuenta=@IdCuenta,
	 IdScheduler=@IdScheduler,
	 Unidad1=@Unidad1,
	 Unidad2=@Unidad2,
	 Unidad3=@Unidad3,
	 Unidad4=@Unidad4,
	 Unidad5=@Unidad5,
	 Unidad6=@Unidad6,
	 Unidad7=@Unidad7,
	 Unidad8=@Unidad8,
	 Unidad9=@Unidad9,
	 Unidad10=@Unidad10,
	 Peso=@Peso,
	 DiametroInterno=@DiametroInterno,
	 IdCodigoUniversal=@IdCodigoUniversal,
	 IdRelacion=@IdRelacion,
	 IdForma=@IdForma,	 IdSerie=@IdSerie,
	 Altura=@Altura,
	 Diametro2=@Diametro2,
	 IdColor=@IdColor,
	 IdNorma=@IdNorma,
	 Capacidad=@Capacidad,
	 Potencia=@Potencia,
	 IdRango=@IdRango,
	 IdAlimentacionElectrica=@IdAlimentacionElectrica,
	 IdModelo=@IdModelo,
	 IdMarca=@IdMarca,
	 IdAnioNorma=@IdAnioNorma,
	 Unidad11=@Unidad11,
	 Unidad12=@Unidad12,
	 Unidad13=@Unidad13,
	 Unidad14=@Unidad14,
	 Unidad15=@Unidad15,
	 IdCuantificacion=@IdCuantificacion,
	 IdControlCalidad=@IdControlCalidad,
	 IdCodigo=@IdCodigo,
	 Charpy=@Charpy,
	 IdCentroCosto=@IdCentroCosto,
	 UsuarioAlta=@UsuarioAlta,
	 FechaAlta=@FechaAlta,
	 FechaUltimaModificacion=@FechaUltimaModificacion,
	 EspesorBase=@EspesorBase,
	 EspesorRevestimiento=@EspesorRevestimiento,
	 IdCalidadBase=@IdCalidadBase,
	 IdCalidadRevestimiento=@IdCalidadRevestimiento,
	 IdGradoBase=@IdGradoBase,
	 IdGradoRevestimiento=@IdGradoRevestimiento,
	 IdBiselado=@IdBiselado,
	 IdCalidadClad=@IdCalidadClad,
	 IdTipoRosca=@IdTipoRosca,
	 IdDensidad=@IdDensidad,
	 Rpm=@Rpm,
	 Datos1=@Datos1,
	 Datos2=@Datos2,
	 Datos3=@Datos3,
	 Datos4=@Datos4,
	 Datos5=@Datos5,	 Datos6=@Datos6,
	 Datos7=@Datos7,
	 Datos8=@Datos8,
	 Datos9=@Datos9,
	 Datos10=@Datos10,
	 Unidad16=@Unidad16,
	 Unidad17=@Unidad17,	 Unidad18=@Unidad18,
	 Unidad19=@Unidad19,
	 Unidad20=@Unidad20,
	 EnviarEmail=@EnviarEmail,
	 Codigo=@Codigo,
	 RegistrarStock=@RegistrarStock,
	 StockMinimo=@StockMinimo,
	 DefineKit=@DefineKit,
	 CostoPPP=@CostoPPP,
	 AlicuotaIVA=@AlicuotaIVA,
	 CostoPPPDolar=@CostoPPPDolar,
	 IdUbicacionStandar=@IdUbicacionStandar,
	 CostoReposicion=@CostoReposicion,
	 CostoReposicionDolar=@CostoReposicionDolar,
	 Direccion=@Direccion,
	 IdLocalidad=@IdLocalidad,
	 IdProvincia=@IdProvincia,
	 IdPais=@IdPais,
	 CodigoPostal=@CodigoPostal,
	 NumeroManzana=@NumeroManzana,
	 NumeroLote=@NumeroLote,
	 ActivoFijo=@ActivoFijo,
	 EstadoActivoFijo=@EstadoActivoFijo,
	 NumeroActivoFijo=@NumeroActivoFijo,
	 IdGrupoActivoFijo=@IdGrupoActivoFijo,
	 BienImpositivo=@BienImpositivo,
	 BienContable=@BienContable,
	 Amortiza=@Amortiza,
	 FechaCompra=@FechaCompra,
	 IdCuentaAmortizacion=@IdCuentaAmortizacion,
	 VidaUtilImpositiva=@VidaUtilImpositiva,
	 VidaUtilContable=@VidaUtilContable,
	 ValorOrigenContable=@ValorOrigenContable,
	 ValorOrigenImpositivo=@ValorOrigenImpositivo,
	 ValorActualizado=@ValorActualizado,
	 ValorResidual=@ValorResidual,
	 ValorResidualActualizado=@ValorResidualActualizado,
	 AmortizacionEjercicio=@AmortizacionEjercicio,
	 AmortizacionEjercicioActualizada=@AmortizacionEjercicioActualizada,
	 AmortizacionesAcumuladas=@AmortizacionesAcumuladas,
	 AmortizacionesAcumuladasActualizada=@AmortizacionesAcumuladasActualizada,
	 VidaUtilImpositivaRestante=@VidaUtilImpositivaRestante,
	 VidaUtilContableRestante=@VidaUtilContableRestante,
	 FechaPrimeraAmortizacionImpositiva=@FechaPrimeraAmortizacionImpositiva,
	 FechaPrimeraAmortizacionContable=@FechaPrimeraAmortizacionContable,
	 IdUbicacionActivoFijo=@IdUbicacionActivoFijo,	 IdSector=@IdSector,
	 FechaBajaAmortizacion=@FechaBajaAmortizacion,
	 ParaMantenimiento=@ParaMantenimiento,
	 IdUnidadLecturaMantenimiento=@IdUnidadLecturaMantenimiento,
	 LecturaAcumulada=@LecturaAcumulada,
	 LecturaBase=@LecturaBase,
	 UltimaLectura=@UltimaLectura,
	 FechaUltimaLectura=@FechaUltimaLectura,
	 EstimadoAnual=@EstimadoAnual,
	 NumeroInventario=@NumeroInventario,
	 ModeloMotor=@ModeloMotor,
	 EquipoEnObra=@EquipoEnObra,
	 EstadoEquipo=@EstadoEquipo,
	 EsConsumible=@EsConsumible,
	 FechaUltimaModificacionArticulo=@FechaUltimaModificacionArticulo,
	 EntidadOrigen=@EntidadOrigen,
	 ComprobanteCompra=@ComprobanteCompra,
	 ModeloEspecifico=@ModeloEspecifico,
	 NumeroPatente=@NumeroPatente,
	 NumeroMotor=@NumeroMotor,
	 NumeroChasis=@NumeroChasis,
	 AñoFabricacion=@AñoFabricacion,
	 AñosAmortizacion=@AñosAmortizacion,
	 AñoAlta=@AñoAlta,
	 Caracteristicas=@Caracteristicas,
	 NumeroGarantia=@NumeroGarantia,
	 FechaCaducidadGarantia=@FechaCaducidadGarantia,
	 TipoCoberturaSeguro=@TipoCoberturaSeguro,
	 NumeroPolizaSeguro=@NumeroPolizaSeguro,
	 CompañiaSeguro=@CompañiaSeguro,
	 FechaVigenciaSeguro=@FechaVigenciaSeguro,
	 FechaVencimientoVerificacionTecnica=@FechaVencimientoVerificacionTecnica,
	 CalculaAmortizacion=@CalculaAmortizacion,
	 UltimoRevaluoContable=@UltimoRevaluoContable,
	 FechaUltimoRevaluo=@FechaUltimoRevaluo,
	 CodigoLoteo=@CodigoLoteo,
	 Adrema=@Adrema,
	 Observaciones=@Observaciones,
	 ConsumoStandarCombustible=@ConsumoStandarCombustible
	Where (IdArticulo=@IdArticulo)
    END
ELSE
    BEGIN
	Insert into [Articulos]
	(
	 IdArticulo,
	 IdRubro,
	 IdSubrubro,
	 IdFamilia,
	 Descripcion,
	 Productivo,
	 Ancho,
	 IdCalidad,
	 Diametro,
	 Espesor,
	 IdGrado,
	 Largo,
	 IdMaterial,
	 IdAcabado,
	 IdTipo,
	 Serie,
	 IdTratamiento,
	 IdUnidad,
	 Autorizacion,
	 IdInventario,
	 IdCuenta,
	 IdScheduler,
	 Unidad1,
	 Unidad2,
	 Unidad3,
	 Unidad4,
	 Unidad5,
	 Unidad6,
	 Unidad7,
	 Unidad8,
	 Unidad9,
	 Unidad10,
	 Peso,
	 DiametroInterno,
	 IdCodigoUniversal,
	 IdRelacion,
	 IdForma,
	 IdSerie,
	 Altura,
	 Diametro2,
	 IdColor,
	 IdNorma,
	 Capacidad,
	 Potencia,
	 IdRango,
	 IdAlimentacionElectrica,
	 IdModelo,
	 IdMarca,
	 IdAnioNorma,
	 Unidad11,
	 Unidad12,
	 Unidad13,
	 Unidad14,
	 Unidad15,
	 IdCuantificacion,
	 IdControlCalidad,
	 IdCodigo,
	 Charpy,
	 IdCentroCosto,
	 UsuarioAlta,
	 FechaAlta,
	 FechaUltimaModificacion,
	 EspesorBase,
	 EspesorRevestimiento,
	 IdCalidadBase,
	 IdCalidadRevestimiento,
	 IdGradoBase,
	 IdGradoRevestimiento,
	 IdBiselado,
	 IdCalidadClad,
	 IdTipoRosca,
	 IdDensidad,
	 Rpm,
	 Datos1,
	 Datos2,
	 Datos3,
	 Datos4,
	 Datos5,
	 Datos6,
	 Datos7,
	 Datos8,
	 Datos9,
	 Datos10,
	 Unidad16,
	 Unidad17,
	 Unidad18,
	 Unidad19,
	 Unidad20,
	 EnviarEmail,
	 Codigo,
	 RegistrarStock,
	 StockMinimo,
	 DefineKit,
	 CostoPPP,
	 AlicuotaIVA,
	 CostoPPPDolar,
	 IdUbicacionStandar,
	 CostoReposicion,
	 CostoReposicionDolar,
	 Direccion,
	 IdLocalidad,
	 IdProvincia,
	 IdPais,
	 CodigoPostal,
	 NumeroManzana,
	 NumeroLote,
	 ActivoFijo,
	 EstadoActivoFijo,
	 NumeroActivoFijo,
	 IdGrupoActivoFijo,
	 BienImpositivo,
	 BienContable,
	 Amortiza,
	 FechaCompra,
	 IdCuentaAmortizacion,
	 VidaUtilImpositiva,	 VidaUtilContable,
	 ValorOrigenContable,
	 ValorOrigenImpositivo,
	 ValorActualizado,
	 ValorResidual,
	 ValorResidualActualizado,
	 AmortizacionEjercicio,
	 AmortizacionEjercicioActualizada,
	 AmortizacionesAcumuladas,
	 AmortizacionesAcumuladasActualizada,
	 VidaUtilImpositivaRestante,
	 VidaUtilContableRestante,
	 FechaPrimeraAmortizacionImpositiva,
	 FechaPrimeraAmortizacionContable,
	 IdUbicacionActivoFijo,
	 IdSector,
	 FechaBajaAmortizacion,
	 ParaMantenimiento,
	 IdUnidadLecturaMantenimiento,
	 LecturaAcumulada,
	 LecturaBase,
	 UltimaLectura,
	 FechaUltimaLectura,
	 EstimadoAnual,
	 NumeroInventario,
	 ModeloMotor,
	 EquipoEnObra,
	 EstadoEquipo,
	 EsConsumible,
	 FechaUltimaModificacionArticulo,
	 EntidadOrigen,
	 ComprobanteCompra,
	 ModeloEspecifico,
	 NumeroPatente,
	 NumeroMotor,
	 NumeroChasis,
	 AñoFabricacion,
	 AñosAmortizacion,
	 AñoAlta,
	 Caracteristicas,
	 NumeroGarantia,
	 FechaCaducidadGarantia,
	 TipoCoberturaSeguro,
	 NumeroPolizaSeguro,
	 CompañiaSeguro,
	 FechaVigenciaSeguro,
	 FechaVencimientoVerificacionTecnica,
	 CalculaAmortizacion,
	 UltimoRevaluoContable,
	 FechaUltimoRevaluo,
	 CodigoLoteo,
	 Adrema,
	 Observaciones,
	 ConsumoStandarCombustible
	)
	Values
	(
	 @IdArticulo,
	 @IdRubro,
	 @IdSubrubro,
	 @IdFamilia,
	 @Descripcion,
	 @Productivo,
	 @Ancho,
	 @IdCalidad,
	 @Diametro,
	 @Espesor,
	 @IdGrado,
	 @Largo,
	 @IdMaterial,
	 @IdAcabado,
	 @IdTipo,
	 @Serie,
	 @IdTratamiento,
	 @IdUnidad,
	 @Autorizacion,
	 @IdInventario,
	 @IdCuenta,
	 @IdScheduler,
	 @Unidad1,
	 @Unidad2,
	 @Unidad3,
	 @Unidad4,
	 @Unidad5,
	 @Unidad6,
	 @Unidad7,
	 @Unidad8,
	 @Unidad9,
	 @Unidad10,
	 @Peso,
	 @DiametroInterno,
	 @IdCodigoUniversal,
	 @IdRelacion,
	 @IdForma,
	 @IdSerie,
	 @Altura,
	 @Diametro2,
	 @IdColor,
	 @IdNorma,
	 @Capacidad,
	 @Potencia,
	 @IdRango,
	 @IdAlimentacionElectrica,
	 @IdModelo,
	 @IdMarca,
	 @IdAnioNorma,
	 @Unidad11,
	 @Unidad12,
	 @Unidad13,
	 @Unidad14,	 @Unidad15,
	 @IdCuantificacion,
	 @IdControlCalidad,
	 @IdCodigo,
	 @Charpy,
	 @IdCentroCosto,
	 @UsuarioAlta,
	 @FechaAlta,
	 @FechaUltimaModificacion,
	 @EspesorBase,
	 @EspesorRevestimiento,	 @IdCalidadBase,
	 @IdCalidadRevestimiento,
	 @IdGradoBase,
	 @IdGradoRevestimiento,
	 @IdBiselado,	 @IdCalidadClad,
	 @IdTipoRosca,
	 @IdDensidad,
	 @Rpm,
	 @Datos1,
	 @Datos2,
	 @Datos3,
	 @Datos4,
	 @Datos5,
	 @Datos6,
	 @Datos7,
	 @Datos8,
	 @Datos9,
	 @Datos10,
	 @Unidad16,
	 @Unidad17,
	 @Unidad18,
	 @Unidad19,
	 @Unidad20,
	 @EnviarEmail,
	 @Codigo,
	 @RegistrarStock,
	 @StockMinimo,
	 @DefineKit,
	 @CostoPPP,
	 @AlicuotaIVA,
	 @CostoPPPDolar,
	 @IdUbicacionStandar,
	 @CostoReposicion,
	 @CostoReposicionDolar,
	 @Direccion,
	 @IdLocalidad,
	 @IdProvincia,
	 @IdPais,
	 @CodigoPostal,
	 @NumeroManzana,
	 @NumeroLote,
	 @ActivoFijo,
	 @EstadoActivoFijo,
	 @NumeroActivoFijo,
	 @IdGrupoActivoFijo,
	 @BienImpositivo,
	 @BienContable,
	 @Amortiza,
	 @FechaCompra,
	 @IdCuentaAmortizacion,
	 @VidaUtilImpositiva,
	 @VidaUtilContable,
	 @ValorOrigenContable,
	 @ValorOrigenImpositivo,
	 @ValorActualizado,
	 @ValorResidual,
	 @ValorResidualActualizado,
	 @AmortizacionEjercicio,
	 @AmortizacionEjercicioActualizada,
	 @AmortizacionesAcumuladas,
	 @AmortizacionesAcumuladasActualizada,
	 @VidaUtilImpositivaRestante,
	 @VidaUtilContableRestante,
	 @FechaPrimeraAmortizacionImpositiva,
	 @FechaPrimeraAmortizacionContable,
	 @IdUbicacionActivoFijo,
	 @IdSector,
	 @FechaBajaAmortizacion,
	 @ParaMantenimiento,
	 @IdUnidadLecturaMantenimiento,
	 @LecturaAcumulada,
	 @LecturaBase,
	 @UltimaLectura,
	 @FechaUltimaLectura,
	 @EstimadoAnual,
	 @NumeroInventario,
	 @ModeloMotor,
	 @EquipoEnObra,
	 @EstadoEquipo,
	 @EsConsumible,
	 @FechaUltimaModificacionArticulo,
	 @EntidadOrigen,
	 @ComprobanteCompra,
	 @ModeloEspecifico,
	 @NumeroPatente,
	 @NumeroMotor,
	 @NumeroChasis,
	 @AñoFabricacion,
	 @AñosAmortizacion,
	 @AñoAlta,
	 @Caracteristicas,
	 @NumeroGarantia,
	 @FechaCaducidadGarantia,
	 @TipoCoberturaSeguro,
	 @NumeroPolizaSeguro,
	 @CompañiaSeguro,
	 @FechaVigenciaSeguro,
	 @FechaVencimientoVerificacionTecnica,
	 @CalculaAmortizacion,
	 @UltimoRevaluoContable,
	 @FechaUltimoRevaluo,
	 @CodigoLoteo,
	 @Adrema,
	 @Observaciones,
	 @ConsumoStandarCombustible
	)
    END

RETURN(@IdArticulo)

GO

/****** Object:  StoredProcedure [dbo].[Articulos_RegistrarAlicuotaIVA]    Script Date: 03/15/2011 11:48:26 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE PROCEDURE [dbo].[Articulos_RegistrarAlicuotaIVA]

@IdArticulo int,
@AlicuotaIVA numeric(6,2)

As

Update Articulos
Set AlicuotaIVA=@AlicuotaIVA
Where IdArticulo=@IdArticulo
































GO

/****** Object:  StoredProcedure [dbo].[Articulos_T]    Script Date: 03/15/2011 11:48:26 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO




































CREATE Procedure [dbo].[Articulos_T]
@IdArticulo int
AS 
SELECT *
FROM Articulos
where (IdArticulo=@IdArticulo)




































GO

/****** Object:  StoredProcedure [dbo].[Articulos_TL]    Script Date: 03/15/2011 11:48:26 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO




































CREATE Procedure [dbo].[Articulos_TL]
AS 
Select IdArticulo,Descripcion as Titulo
FROM Articulos
ORDER by Descripcion




































GO

/****** Object:  StoredProcedure [dbo].[Articulos_TT]    Script Date: 03/15/2011 11:48:26 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO









CREATE Procedure [dbo].[Articulos_TT]

AS 

Declare @vector_X varchar(30),@vector_T varchar(30)
Set @vector_X='011111111111133'
Set @vector_T='051911234344000'

SELECT 
 Articulos.IdArticulo,
 Articulos.Codigo as [Codigo material],
 Articulos.Descripcion,
 Articulos.IdArticulo as [Identificador],
 Rubros.Descripcion as [Rubro],
 Subrubros.Descripcion as [Subrubro],
 Articulos.AlicuotaIVA as [% IVA],
 Case When Articulos.CostoPPP=0 Then Null Else Articulos.CostoPPP End as [Costo PPP],
 Case When Articulos.CostoPPPDolar=0 Then Null Else Articulos.CostoPPPDolar End as [Costo PPP u$s],
 Case When Articulos.CostoReposicion=0 Then Null Else Articulos.CostoReposicion End as [Costo Rep.],
 Case When Articulos.CostoReposicionDolar=0 Then Null Else Articulos.CostoReposicionDolar End as [Costo Rep u$s],
 (Select Sum(Stock.CantidadUnidades) 
  From Stock 
  Where Stock.IdArticulo=Articulos.IdArticulo) as [Stock actual],
 Depositos.Descripcion+' - Est.:'+Ubicaciones.Estanteria+
	' - Mod.:'+Ubicaciones.Modulo+' - Gab.:'+Ubicaciones.Gabeta as [Ubicacion],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM Articulos
LEFT OUTER JOIN Rubros ON Articulos.IdRubro = Rubros.IdRubro 
LEFT OUTER JOIN Subrubros ON Articulos.IdSubrubro = Subrubros.IdSubrubro 
LEFT OUTER JOIN Ubicaciones ON Articulos.IdUbicacionStandar = Ubicaciones.IdUbicacion
LEFT OUTER JOIN Depositos ON Ubicaciones.IdDeposito = Depositos.IdDeposito
ORDER by Rubros.Descripcion,Subrubros.Descripcion,Articulos.Codigo








GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_AgrupadoPorFamilia]    Script Date: 03/15/2011 11:48:26 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO




































CREATE Procedure [dbo].[Articulos_TX_AgrupadoPorFamilia]
@IdRubro int,
@IdSubrubro int
as
Select Articulos.IdFamilia,Familias.Descripcion
From Articulos
LEFT OUTER JOIN Familias ON Articulos.IdFamilia = Familias.IdFamilia
where (Articulos.IdRubro=@IdRubro or @IdRubro=-1) and (Articulos.IdSubrubro=@IdSubrubro or @IdSubrubro=-1)
group by Articulos.IdFamilia,Familias.Descripcion
order by Familias.Descripcion




































GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_AgrupadoPorRubro]    Script Date: 03/15/2011 11:48:26 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO















CREATE Procedure [dbo].[Articulos_TX_AgrupadoPorRubro]
as
Select Articulos.IdRubro,Rubros.Descripcion
From Articulos
LEFT OUTER JOIN Rubros ON Articulos.IdRubro = Rubros.IdRubro
group by Articulos.IdRubro,Rubros.Descripcion
order by Rubros.Descripcion















GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_AgrupadoPorSubrubro]    Script Date: 03/15/2011 11:48:26 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO




































CREATE Procedure [dbo].[Articulos_TX_AgrupadoPorSubrubro]
@IdRubro int
as
Select Articulos.IdSubrubro,Subrubros.Descripcion
From Articulos
LEFT OUTER JOIN Subrubros ON Articulos.IdSubrubro = Subrubros.IdSubrubro
where Articulos.IdRubro=@IdRubro or @IdRubro=-1
group by Articulos.IdSubrubro,Subrubros.Descripcion
order by Subrubros.Descripcion




































GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_Busca]    Script Date: 03/15/2011 11:48:27 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO





























CREATE Procedure [dbo].[Articulos_TX_Busca]
@Buscar varchar(50)
AS 
Select IdArticulo,Descripcion as Titulo
FROM Articulos
where descripcion LIKE '%' + @buscar + '%'
order by Descripcion




























GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_BuscaConFormato]    Script Date: 03/15/2011 11:48:27 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO





























CREATE Procedure [dbo].[Articulos_TX_BuscaConFormato]

@Buscar varchar(50)

AS 

Declare @vector_X varchar(30),@vector_T varchar(30)
Set @vector_X='0111111133'
Set @vector_T='0309019400'

SELECT 
 Articulos.IdArticulo,
 Articulos.Codigo as [Codigo material],
 Articulos.Descripcion,
 Articulos.IdArticulo as [Identificador],
 Rubros.Descripcion as [Rubro],
 Subrubros.Descripcion as [Subrubro],
 Familias.Descripcion as [Familia],
 Case When Articulos.CostoPPP=0 Then Null Else Articulos.CostoPPP End as [Costo PPP],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM Articulos
LEFT OUTER JOIN Rubros ON  Articulos.IdRubro = Rubros.IdRubro 
LEFT OUTER JOIN Subrubros ON Articulos.IdSubrubro = Subrubros.IdSubrubro left outer  JOIN Familias ON Articulos.IdFamilia = Familias.IdFamilia
WHERE Articulos.Descripcion LIKE '%' + @buscar + '%'
ORDER by Rubros.Descripcion,Subrubros.Descripcion,Familias.Descripcion




























GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_Clave]    Script Date: 03/15/2011 11:48:27 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




































CREATE Procedure [dbo].[Articulos_TX_Clave]
@IdArticulo int
AS 
SELECT
Convert(varchar,idRubro)+'|'+Convert(varchar,idSubrubro)+'|'+Convert(varchar,idFamilia)+'|' as [Clave]
FROM Articulos
WHERE (IdArticulo=@IdArticulo)




































GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_DatosConCuenta]    Script Date: 03/15/2011 11:48:27 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO



























CREATE Procedure [dbo].[Articulos_TX_DatosConCuenta]
@IdArticulo int
AS 
SELECT 
 Articulos.*,
 Rubros.IdCuenta
FROM Articulos
LEFT OUTER JOIN Rubros ON Rubros.IdRubro=Articulos.IdRubro
WHERE (IdArticulo=@IdArticulo)


























GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_ParaMenu]    Script Date: 03/15/2011 11:48:27 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO




































CREATE Procedure [dbo].[Articulos_TX_ParaMenu]
as
Select 
Articulos.IdRubro,Rubros.Descripcion as [Rubro],
Articulos.IdSubrubro,Subrubros.Descripcion as [Subrubro],
Articulos.IdFamilia,Familias.Descripcion as [Familia],
Articulos.IdArticulo,Articulos.Descripcion
From Articulos
LEFT OUTER JOIN Rubros ON Articulos.IdRubro = Rubros.IdRubro
LEFT OUTER JOIN Subrubros ON Articulos.IdSubrubro = Subrubros.IdSubrubro
LEFT OUTER JOIN Familias ON Articulos.IdFamilia = Familias.IdFamilia
order by Rubros.Descripcion,Subrubros.Descripcion,Familias.Descripcion,Articulos.Descripcion




































GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:27 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




































CREATE Procedure [dbo].[Articulos_TX_ParaTransmitir]
AS 
SELECT *
FROM Articulos
WHERE EnviarEmail=1




































GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_ParaTransmitir_Todos]    Script Date: 03/15/2011 11:48:27 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




































CREATE Procedure [dbo].[Articulos_TX_ParaTransmitir_Todos]
AS 
SELECT *
FROM Articulos




































GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_PorCodigo]    Script Date: 03/15/2011 11:48:27 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO



























CREATE Procedure [dbo].[Articulos_TX_PorCodigo]
@Codigo varchar(20)
AS 
SELECT *
FROM Articulos
WHERE (Codigo=@Codigo)


























GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_PorDescripcion]    Script Date: 03/15/2011 11:48:27 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO




































CREATE Procedure [dbo].[Articulos_TX_PorDescripcion]
@Buscar varchar(250)
AS 
Select IdArticulo
FROM Articulos
Where descripcion=@Buscar




































GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_PorGrupo]    Script Date: 03/15/2011 11:48:27 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO




































CREATE Procedure [dbo].[Articulos_TX_PorGrupo]
@IdRubro int,
@IdSubrubro int,
@IdFamilia int
as
Select IdArticulo,Descripcion
From Articulos
where (IdRubro=@IdRubro or @IdRubro=-1) and (IdSubrubro=@IdSubrubro or @IdSubrubro=-1) and (IdFamilia=@IdFamilia or @IdFamilia=-1)
order by Descripcion




































GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_PorId]    Script Date: 03/15/2011 11:48:27 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO



































CREATE Procedure [dbo].[Articulos_TX_PorId]
@IdArticulo int
AS 
SELECT *
FROM Articulos
WHERE (IdArticulo=@IdArticulo)



































GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_PorIdConDatos]    Script Date: 03/15/2011 11:48:27 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


























CREATE Procedure [dbo].[Articulos_TX_PorIdConDatos]
@IdArticulo int
AS 
SELECT 
 Articulos.*,
 Rubros.IdCuenta as [IdCuentaRubro]
FROM Articulos
LEFT OUTER JOIN Rubros ON  Articulos.IdRubro = Rubros.IdRubro 
WHERE (IdArticulo=@IdArticulo)

























GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_PorIdRubro]    Script Date: 03/15/2011 11:48:27 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO









CREATE Procedure [dbo].[Articulos_TX_PorIdRubro]

@IdRubro int

AS 

Declare @vector_X varchar(30),@vector_T varchar(30)
Set @vector_X='011111111111133'
Set @vector_T='051911234344000'

SELECT 
 Articulos.IdArticulo,
 Articulos.Codigo as [Codigo material],
 Articulos.Descripcion,
 Articulos.IdArticulo as [Identificador],
 Rubros.Descripcion as [Rubro],
 Subrubros.Descripcion as [Subrubro],
 Articulos.AlicuotaIVA as [% IVA],
 Case When Articulos.CostoPPP=0 Then Null Else Articulos.CostoPPP End as [Costo PPP],
 Case When Articulos.CostoPPPDolar=0 Then Null Else Articulos.CostoPPPDolar End as [Costo PPP u$s],
 Case When Articulos.CostoReposicion=0 Then Null Else Articulos.CostoReposicion End as [Costo Rep.],
 Case When Articulos.CostoReposicionDolar=0 Then Null Else Articulos.CostoReposicionDolar End as [Costo Rep u$s],
 (Select Sum(Stock.CantidadUnidades) 
  From Stock 
  Where Stock.IdArticulo=Articulos.IdArticulo) as [Stock actual],
 Depositos.Descripcion+' - Est.:'+Ubicaciones.Estanteria+
	' - Mod.:'+Ubicaciones.Modulo+' - Gab.:'+Ubicaciones.Gabeta as [Ubicacion],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM Articulos
LEFT OUTER JOIN Rubros ON Articulos.IdRubro = Rubros.IdRubro 
LEFT OUTER JOIN Subrubros ON Articulos.IdSubrubro = Subrubros.IdSubrubro 
LEFT OUTER JOIN Ubicaciones ON Articulos.IdUbicacionStandar = Ubicaciones.IdUbicacion
LEFT OUTER JOIN Depositos ON Ubicaciones.IdDeposito = Depositos.IdDeposito
WHERE Articulos.IdRubro=@IdRubro
ORDER by Rubros.Descripcion,Subrubros.Descripcion,Articulos.Codigo








GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_PorIdRubroParaCombo]    Script Date: 03/15/2011 11:48:27 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO

















CREATE Procedure [dbo].[Articulos_TX_PorIdRubroParaCombo]
@IdRubro int
AS 
SELECT 
 Articulos.IdArticulo,
 Articulos.Descripcion as [Titulo]
FROM Articulos
WHERE Articulos.IdRubro=@IdRubro
ORDER BY  Articulos.Descripcion

















GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_PorNumeroInventario]    Script Date: 03/15/2011 11:48:27 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE Procedure [dbo].[Articulos_TX_PorNumeroInventario]
@NumeroInventario varchar(20)
AS 
SELECT *
FROM Articulos
WHERE (NumeroInventario=@NumeroInventario)



GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_SaldosDeStockAFecha]    Script Date: 03/15/2011 11:48:27 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE Procedure [dbo].[Articulos_TX_SaldosDeStockAFecha]

@FechaHasta Datetime

AS

SET NOCOUNT ON

CREATE TABLE #Auxiliar1	
			(
			 IdArticulo INTEGER,
			 IdUbicacion INTEGER,
			 IdUnidad INTEGER,
			 Partida INTEGER,
			 IdObra INTEGER,
			 Cantidad NUMERIC(18, 2)
			)
INSERT INTO #Auxiliar1 
 SELECT
  DetalleAjustesStock.IdArticulo,
  DetalleAjustesStock.IdUbicacion,
  DetalleAjustesStock.IdUnidad,
  DetalleAjustesStock.Partida,
  DetalleAjustesStock.IdObra,
  DetalleAjustesStock.CantidadUnidades
 FROM DetalleAjustesStock
 LEFT OUTER JOIN AjustesStock ON DetalleAjustesStock.IdAjusteStock = AjustesStock.IdAjusteStock
 WHERE AjustesStock.FechaAjuste<=@FechaHasta

UNION ALL

 SELECT
  DetalleSalidasMateriales.IdArticulo,
  DetalleSalidasMateriales.IdUbicacion,
  DetalleSalidasMateriales.IdUnidad,
  DetalleSalidasMateriales.Partida,
  DetalleSalidasMateriales.IdObra,
  DetalleSalidasMateriales.Cantidad * -1
 FROM DetalleSalidasMateriales
 LEFT OUTER JOIN SalidasMateriales ON DetalleSalidasMateriales.IdSalidaMateriales = SalidasMateriales.IdSalidaMateriales
 WHERE SalidasMateriales.FechaSalidaMateriales<=@FechaHasta

UNION ALL

 SELECT
  DetalleRecepciones.IdArticulo,
  DetalleRecepciones.IdUbicacion,
  DetalleRecepciones.IdUnidad,
  DetalleRecepciones.Partida,
  DetalleRecepciones.IdObra,
  DetalleRecepciones.Cantidad
 FROM DetalleRecepciones
 LEFT OUTER JOIN Recepciones ON DetalleRecepciones.IdRecepcion = Recepciones.IdRecepcion
 WHERE Recepciones.FechaRecepcion<=@FechaHasta and 
	(Recepciones.Anulada is null or Recepciones.Anulada<>'SI')

UNION ALL

 SELECT
  DetalleOtrosIngresosAlmacen.IdArticulo,
  DetalleOtrosIngresosAlmacen.IdUbicacion,
  DetalleOtrosIngresosAlmacen.IdUnidad,
  DetalleOtrosIngresosAlmacen.Partida,
  DetalleOtrosIngresosAlmacen.IdObra,
  DetalleOtrosIngresosAlmacen.Cantidad
 FROM DetalleOtrosIngresosAlmacen
 LEFT OUTER JOIN OtrosIngresosAlmacen ON DetalleOtrosIngresosAlmacen.IdOtroIngresoAlmacen = OtrosIngresosAlmacen.IdOtroIngresoAlmacen
 WHERE OtrosIngresosAlmacen.FechaOtroIngresoAlmacen<=@FechaHasta 

CREATE TABLE #Auxiliar2	
			(
			 IdArticulo INTEGER,
			 IdUbicacion INTEGER,
			 IdUnidad INTEGER,
			 Partida INTEGER,
			 IdObra INTEGER,
			 Cantidad NUMERIC(18, 2)
			)
INSERT INTO #Auxiliar2 
 SELECT
  #Auxiliar1.IdArticulo,
  #Auxiliar1.IdUbicacion,
  #Auxiliar1.IdUnidad,
  #Auxiliar1.Partida,
  #Auxiliar1.IdObra,
  SUM(IsNull(#Auxiliar1.Cantidad,0))
 FROM #Auxiliar1
 GROUP BY #Auxiliar1.IdArticulo,#Auxiliar1.IdUbicacion,
	#Auxiliar1.IdUnidad,#Auxiliar1.Partida,#Auxiliar1.IdObra

SET NOCOUNT OFF

Declare @vector_X varchar(30),@vector_T varchar(30)
Set @vector_X='000011111133'
Set @vector_T='000021310100'

SELECT
 #Auxiliar2.IdArticulo,
 Articulos.Codigo as [K_Codigo],
 Articulos.Descripcion as [K_Articulo],
 1 as [K_Orden],
 Articulos.Codigo as [Codigo],
 Articulos.Descripcion as [Articulo],
 Depositos.Descripcion+' - Est.:'+Ubicaciones.Estanteria+
	' - Mod.:'+Ubicaciones.Modulo+' - Gab.:'+Ubicaciones.Gabeta as [Ubicacion],
 #Auxiliar2.Partida as [Partida],
 #Auxiliar2.Cantidad as [Cant.],
 Unidades.Abreviatura as [Unidad],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM #Auxiliar2
LEFT OUTER JOIN Articulos ON #Auxiliar2.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Unidades ON #Auxiliar2.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN Obras ON #Auxiliar2.IdUnidad = Obras.IdObra
LEFT OUTER JOIN Ubicaciones ON #Auxiliar2.IdUbicacion = Ubicaciones.IdUbicacion
LEFT OUTER JOIN Depositos ON Ubicaciones.IdDeposito = Depositos.IdDeposito

UNION ALL 

SELECT
 #Auxiliar2.IdArticulo,
 Articulos.Codigo as [K_Codigo],
 Articulos.Descripcion as [K_Articulo],
 2 as [K_Orden],
 Null as [Codigo],
 'TOTAL ARTICULO' as [Articulo],
 Null as [Ubicacion],
 Null as [Partida],
 SUM(#Auxiliar2.Cantidad) as [Cant.],
 Null as [Unidad],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM #Auxiliar2
LEFT OUTER JOIN Articulos ON #Auxiliar2.IdArticulo = Articulos.IdArticulo
GROUP BY #Auxiliar2.IdArticulo,Articulos.Codigo,Articulos.Descripcion

UNION ALL 

SELECT
 #Auxiliar2.IdArticulo,
 Articulos.Codigo as [K_Codigo],
 Articulos.Descripcion as [K_Articulo],
 3 as [K_Orden],
 Null as [Codigo],
 Null as [Articulo],
 Null as [Ubicacion],
 Null as [Partida],
 Null as [Cant.],
 Null as [Unidad],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM #Auxiliar2
LEFT OUTER JOIN Articulos ON #Auxiliar2.IdArticulo = Articulos.IdArticulo
GROUP BY #Auxiliar2.IdArticulo,Articulos.Codigo,Articulos.Descripcion

ORDER BY [K_Codigo],[K_Articulo],[K_Orden]

DROP TABLE #Auxiliar1
DROP TABLE #Auxiliar2





GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:27 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




































CREATE Procedure [dbo].[Articulos_TX_SetearComoTransmitido]
AS 
Update Articulos
SET EnviarEmail=0
WHERE EnviarEmail<>0




































GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_StockPorArticuloPartidaUnidadUbicacionObra]    Script Date: 03/15/2011 11:48:27 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO



CREATE Procedure [dbo].[Articulos_TX_StockPorArticuloPartidaUnidadUbicacionObra]

@IdArticulo int,
@Partida int,
@IdUnidad int,
@IdUbicacion int,
@IdObra int

As

Select Sum(CantidadUnidades) as [Stock]
From Stock 
Where IdArticulo=@IdArticulo and IsNull(Partida,0)=@Partida and IdUnidad=@IdUnidad and 
	IdUbicacion=@IdUbicacion and IdObra=@IdObra


GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_StockPorPartida]    Script Date: 03/15/2011 11:48:27 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE Procedure [dbo].[Articulos_TX_StockPorPartida]

@IdArticulo int

AS

SET NOCOUNT ON

CREATE TABLE #Auxiliar1	(
			 IdArticulo INTEGER,
			 IdUbicacion INTEGER,
			 IdUnidad INTEGER,
			 Partida INTEGER,
			 Cantidad NUMERIC(18, 2),
			 Reservado NUMERIC(18, 2)
			)
INSERT INTO #Auxiliar1 
 SELECT 
  Stk.IdArticulo,
  Stk.IdUbicacion,
  Stk.IdUnidad,
  Stk.Partida,
  Stk.CantidadUnidades,
 (Select Sum(DetalleReservas.CantidadUnidades) 
  From DetalleReservas
  Where DetalleReservas.IdStock=Stk.IdStock)
 FROM Stock Stk
 WHERE Stk.IdArticulo=@IdArticulo and Stk.CantidadUnidades<>0

UPDATE #Auxiliar1
SET Reservado=0 
WHERE Reservado IS NULL

CREATE TABLE #Auxiliar2	(
			 IdArticulo INTEGER,
			 IdUbicacion INTEGER,
			 IdUnidad INTEGER,
			 Partida INTEGER,
			 Cantidad NUMERIC(18, 2),
			 Reservado NUMERIC(18, 2)
			)
INSERT INTO #Auxiliar2 
 SELECT 
  #Auxiliar1.IdArticulo,
  #Auxiliar1.IdUbicacion,
  #Auxiliar1.IdUnidad,
  #Auxiliar1.Partida,
  SUM(#Auxiliar1.Cantidad),
  SUM(#Auxiliar1.Reservado)
 FROM #Auxiliar1
 GROUP BY #Auxiliar1.IdArticulo,#Auxiliar1.IdUbicacion,
	#Auxiliar1.IdUnidad,#Auxiliar1.Partida

SET NOCOUNT OFF

Declare @vector_X varchar(30),@vector_T varchar(30),@Clave varchar(3)
Set @vector_X='0101111101133'
Set @vector_T='0902013101300'
Set @Clave='SPP'

SELECT
 #Auxiliar2.IdArticulo,
 @Clave as [StockPorPartida],
 #Auxiliar2.IdArticulo,
 Articulos.Codigo as [Codigo],
 Articulos.Descripcion as [Articulo],
 Depositos.Descripcion+' - Est.:'+Ubicaciones.Estanteria+
	' - Mod.:'+Ubicaciones.Modulo+' - Gab.:'+Ubicaciones.Gabeta as [Ubicacion],
 #Auxiliar2.Partida,
 #Auxiliar2.Cantidad as [Cant.],
 #Auxiliar2.IdUnidad,
 Unidades.Descripcion as [Unidad],
 #Auxiliar2.Reservado as [Cant.Res.],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM #Auxiliar2
LEFT OUTER JOIN Articulos ON #Auxiliar2.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Unidades ON #Auxiliar2.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN Ubicaciones ON #Auxiliar2.IdUbicacion = Ubicaciones.IdUbicacion
LEFT OUTER JOIN Depositos ON Ubicaciones.IdDeposito = Depositos.IdDeposito

DROP TABLE #Auxiliar1
DROP TABLE #Auxiliar2






GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_StockTotalPorArticulo]    Script Date: 03/15/2011 11:48:27 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE Procedure [dbo].[Articulos_TX_StockTotalPorArticulo]
@IdArticulo int
As
Select Sum(CantidadUnidades) as [Stock]
From Stock 
Where IdArticulo=@IdArticulo





GO

/****** Object:  StoredProcedure [dbo].[Articulos_TX_TT]    Script Date: 03/15/2011 11:48:27 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

























CREATE Procedure [dbo].[Articulos_TX_TT]

@IdArticulo int

AS 

Declare @vector_X varchar(30),@vector_T varchar(30)
Set @vector_X='011111111111133'
Set @vector_T='053933923434400'

SELECT 
 Articulos.IdArticulo,
 Articulos.Codigo as [Codigo material],
 Articulos.Descripcion,
 Articulos.IdArticulo as [Identificador],
 Rubros.Descripcion as [Rubro],
 Subrubros.Descripcion as [Subrubro],
 Familias.Descripcion as [Familia],
 Articulos.AlicuotaIVA as [% IVA],
 Articulos.CostoPPP as [Costo PPP],
 Articulos.CostoPPPDolar as [Costo PPP u$s],
 Case When Articulos.CostoReposicion=0 Then Null Else Articulos.CostoReposicion End as [Costo Rep.],
 Case When Articulos.CostoReposicionDolar=0 Then Null Else Articulos.CostoReposicionDolar End as [Costo Rep u$s],
 (Select Sum(Stock.CantidadUnidades) From Stock Where Stock.IdArticulo=Articulos.IdArticulo) as [Stock actual],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM Articulos
LEFT OUTER JOIN Rubros ON  Articulos.IdRubro = Rubros.IdRubro 
LEFT OUTER JOIN Subrubros ON Articulos.IdSubrubro = Subrubros.IdSubrubro 
LEFT OUTER JOIN Familias ON Articulos.IdFamilia = Familias.IdFamilia
WHERE (IdArticulo=@IdArticulo)
























GO

/****** Object:  StoredProcedure [dbo].[ArticulosInformacionAdicional_A]    Script Date: 03/15/2011 11:48:28 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[ArticulosInformacionAdicional_A]
@IdArticuloInformacionAdicional int  output,
@IdArticulo int,
@Campo varchar(50),
@CampoItem varchar(50),
@ValorCampoChar varchar(50),
@ValorCampoNum numeric(12,2)
AS 
Insert into [ArticulosInformacionAdicional]
(
 IdArticulo,
 Campo,
 CampoItem,
 ValorCampoChar,
 ValorCampoNum
)
Values
(
 @IdArticulo,
 @Campo,
 @CampoItem,
 @ValorCampoChar,
 @ValorCampoNum
)
Select @IdArticuloInformacionAdicional=@@identity
Return(@IdArticuloInformacionAdicional)































GO

/****** Object:  StoredProcedure [dbo].[ArticulosInformacionAdicional_E]    Script Date: 03/15/2011 11:48:28 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[ArticulosInformacionAdicional_E]
@IdArticuloInformacionAdicional int  AS 
Delete [ArticulosInformacionAdicional]
where (IdArticuloInformacionAdicional=@IdArticuloInformacionAdicional)































GO

/****** Object:  StoredProcedure [dbo].[ArticulosInformacionAdicional_M]    Script Date: 03/15/2011 11:48:28 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[ArticulosInformacionAdicional_M]
@IdArticuloInformacionAdicional int,
@IdArticulo int,
@Campo varchar(50),
@CampoItem varchar(50),
@ValorCampoChar varchar(50),
@ValorCampoNum numeric(12,2)
as
Update [ArticulosInformacionAdicional]
SET 
IdArticulo=@IdArticulo,
Campo=@Campo,
CampoItem=@CampoItem,
ValorCampoChar=@ValorCampoChar,
ValorCampoNum=@ValorCampoNum
where (IdArticuloInformacionAdicional=@IdArticuloInformacionAdicional)
Return(@IdArticuloInformacionAdicional)































GO

/****** Object:  StoredProcedure [dbo].[ArticulosInformacionAdicional_T]    Script Date: 03/15/2011 11:48:28 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[ArticulosInformacionAdicional_T]
@IdArticuloInformacionAdicional int
AS 
SELECT *
FROM [ArticulosInformacionAdicional]
where (IdArticuloInformacionAdicional=@IdArticuloInformacionAdicional)































GO

/****** Object:  StoredProcedure [dbo].[ArticulosInformacionAdicional_TX_PorArticulo]    Script Date: 03/15/2011 11:48:28 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[ArticulosInformacionAdicional_TX_PorArticulo]
@IdArticulo int
AS 
Select *
FROM ArticulosInformacionAdicional
where IdArticulo=@IdArticulo































GO

/****** Object:  StoredProcedure [dbo].[Autorizaciones_A]    Script Date: 03/15/2011 11:48:28 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[Autorizaciones_A]
@IdAutorizacion int  output,
@IdFormulario int,
@FechaUltimaActualizacion datetime
AS 
Insert into [Autorizaciones]
(
IdFormulario,
FechaUltimaActualizacion
)
Values
(
@IdFormulario,
@FechaUltimaActualizacion
)
Select @IdAutorizacion=@@identity
Return(@IdAutorizacion)































GO

/****** Object:  StoredProcedure [dbo].[Autorizaciones_E]    Script Date: 03/15/2011 11:48:28 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[Autorizaciones_E]
@IdAutorizacion int  AS 
Delete Autorizaciones
where (IdAutorizacion=@IdAutorizacion)































GO

/****** Object:  StoredProcedure [dbo].[Autorizaciones_M]    Script Date: 03/15/2011 11:48:28 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE  Procedure [dbo].[Autorizaciones_M]
@IdAutorizacion int  output,
@IdFormulario int,
@FechaUltimaActualizacion datetime
AS
Update Autorizaciones
SET
IdFormulario=@IdFormulario,
FechaUltimaActualizacion=@FechaUltimaActualizacion
where (IdAutorizacion=@IdAutorizacion)
Return(@IdAutorizacion)































GO

/****** Object:  StoredProcedure [dbo].[Autorizaciones_T]    Script Date: 03/15/2011 11:48:28 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[Autorizaciones_T]
@IdAutorizacion int
AS 
SELECT *
FROM Autorizaciones
where (IdAutorizacion=@IdAutorizacion)































GO

/****** Object:  StoredProcedure [dbo].[Autorizaciones_TT]    Script Date: 03/15/2011 11:48:28 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[Autorizaciones_TT]
AS 
Select 
Autorizaciones.IdAutorizacion,
Formularios.Descripcion as [Formulario]
FROM Autorizaciones
INNER JOIN Formularios ON Autorizaciones.IdFormulario = Formularios.IdFormulario































GO

/****** Object:  StoredProcedure [dbo].[Autorizaciones_TX_CantidadAutorizaciones]    Script Date: 03/15/2011 11:48:28 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[Autorizaciones_TX_CantidadAutorizaciones]
@IdFormulario int
AS 
Select DetalleAutorizaciones.OrdenAutorizacion
FROM DetalleAutorizaciones
INNER JOIN Autorizaciones ON DetalleAutorizaciones.IdAutorizacion=Autorizaciones.IdAutorizacion
WHERE Autorizaciones.IdFormulario=@IdFormulario
ORDER BY DetalleAutorizaciones.OrdenAutorizacion































GO

/****** Object:  StoredProcedure [dbo].[Autorizaciones_TX_PorFormulario]    Script Date: 03/15/2011 11:48:28 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Autorizaciones_TX_PorFormulario]
@IdFormulario int,
@IdOrden int,
@IdSectorRM int,
@IdObra int
AS 
declare @SectorEmisor1 varchar(1),@SectorEmisor2 varchar(1),@SectorEmisor3 varchar(1)
declare @SectorEmisor4 varchar(1),@SectorEmisor5 varchar(1),@SectorEmisor6 varchar(1)
declare @IdSectorAutoriza1 int,@IdSectorAutoriza2 int,@IdSectorAutoriza3 int
declare @IdSectorAutoriza4 int,@IdSectorAutoriza5 int,@IdSectorAutoriza6 int
declare @IdCargoAutoriza1 int,@IdCargoAutoriza2 int,@IdCargoAutoriza3 int
declare @IdCargoAutoriza4 int,@IdCargoAutoriza5 int,@IdCargoAutoriza6 int
set @SectorEmisor1=(Select Top 1 DetAut.SectorEmisor1 FROM DetalleAutorizaciones DetAut
			INNER JOIN Autorizaciones ON DetAut.IdAutorizacion=Autorizaciones.IdAutorizacion 
			WHERE Autorizaciones.IdFormulario=@IdFormulario and DetAut.OrdenAutorizacion=@IdOrden)
set @SectorEmisor2=(Select Top 1 DetAut.SectorEmisor2 FROM DetalleAutorizaciones DetAut
			INNER JOIN Autorizaciones ON DetAut.IdAutorizacion=Autorizaciones.IdAutorizacion 
			WHERE Autorizaciones.IdFormulario=@IdFormulario and DetAut.OrdenAutorizacion=@IdOrden)
set @SectorEmisor3=(Select Top 1 DetAut.SectorEmisor3 FROM DetalleAutorizaciones DetAut
			INNER JOIN Autorizaciones ON DetAut.IdAutorizacion=Autorizaciones.IdAutorizacion 
			WHERE Autorizaciones.IdFormulario=@IdFormulario and DetAut.OrdenAutorizacion=@IdOrden)
set @SectorEmisor4=(Select Top 1 DetAut.SectorEmisor4 FROM DetalleAutorizaciones DetAut
			INNER JOIN Autorizaciones ON DetAut.IdAutorizacion=Autorizaciones.IdAutorizacion 
			WHERE Autorizaciones.IdFormulario=@IdFormulario and DetAut.OrdenAutorizacion=@IdOrden)
set @SectorEmisor5=(Select Top 1 DetAut.SectorEmisor5 FROM DetalleAutorizaciones DetAut
			INNER JOIN Autorizaciones ON DetAut.IdAutorizacion=Autorizaciones.IdAutorizacion 
			WHERE Autorizaciones.IdFormulario=@IdFormulario and DetAut.OrdenAutorizacion=@IdOrden)
set @SectorEmisor6=(Select Top 1 DetAut.SectorEmisor6 FROM DetalleAutorizaciones DetAut
			INNER JOIN Autorizaciones ON DetAut.IdAutorizacion=Autorizaciones.IdAutorizacion 
			WHERE Autorizaciones.IdFormulario=@IdFormulario and DetAut.OrdenAutorizacion=@IdOrden)
set @IdSectorAutoriza1=(Select Top 1 DetAut.IdSectorAutoriza1
			FROM DetalleAutorizaciones DetAut
			INNER JOIN Autorizaciones ON DetAut.IdAutorizacion=Autorizaciones.IdAutorizacion 
			WHERE Autorizaciones.IdFormulario=@IdFormulario and DetAut.OrdenAutorizacion=@IdOrden)
set @IdSectorAutoriza2=(Select Top 1 DetAut.IdSectorAutoriza2
			FROM DetalleAutorizaciones DetAut
			INNER JOIN Autorizaciones ON DetAut.IdAutorizacion=Autorizaciones.IdAutorizacion 
			WHERE Autorizaciones.IdFormulario=@IdFormulario and DetAut.OrdenAutorizacion=@IdOrden)
set @IdSectorAutoriza3=(Select Top 1 DetAut.IdSectorAutoriza3
			FROM DetalleAutorizaciones DetAut
			INNER JOIN Autorizaciones ON DetAut.IdAutorizacion=Autorizaciones.IdAutorizacion 
			WHERE Autorizaciones.IdFormulario=@IdFormulario and DetAut.OrdenAutorizacion=@IdOrden)
set @IdSectorAutoriza4=(Select Top 1 DetAut.IdSectorAutoriza4
			FROM DetalleAutorizaciones DetAut
			INNER JOIN Autorizaciones ON DetAut.IdAutorizacion=Autorizaciones.IdAutorizacion 
			WHERE Autorizaciones.IdFormulario=@IdFormulario and DetAut.OrdenAutorizacion=@IdOrden)
set @IdSectorAutoriza5=(Select Top 1 DetAut.IdSectorAutoriza5
			FROM DetalleAutorizaciones DetAut
			INNER JOIN Autorizaciones ON DetAut.IdAutorizacion=Autorizaciones.IdAutorizacion 
			WHERE Autorizaciones.IdFormulario=@IdFormulario and DetAut.OrdenAutorizacion=@IdOrden)
set @IdSectorAutoriza6=(Select Top 1 DetAut.IdSectorAutoriza6
			FROM DetalleAutorizaciones DetAut
			INNER JOIN Autorizaciones ON DetAut.IdAutorizacion=Autorizaciones.IdAutorizacion 
			WHERE Autorizaciones.IdFormulario=@IdFormulario and DetAut.OrdenAutorizacion=@IdOrden)
set @IdCargoAutoriza1=(Select Top 1 DetAut.IdCargoAutoriza1
			FROM DetalleAutorizaciones DetAut
			INNER JOIN Autorizaciones ON DetAut.IdAutorizacion=Autorizaciones.IdAutorizacion 
			WHERE Autorizaciones.IdFormulario=@IdFormulario and DetAut.OrdenAutorizacion=@IdOrden)
set @IdCargoAutoriza2=(Select Top 1 DetAut.IdCargoAutoriza2
			FROM DetalleAutorizaciones DetAut
			INNER JOIN Autorizaciones ON DetAut.IdAutorizacion=Autorizaciones.IdAutorizacion 
			WHERE Autorizaciones.IdFormulario=@IdFormulario and DetAut.OrdenAutorizacion=@IdOrden)
set @IdCargoAutoriza3=(Select Top 1 DetAut.IdCargoAutoriza3
			FROM DetalleAutorizaciones DetAut
			INNER JOIN Autorizaciones ON DetAut.IdAutorizacion=Autorizaciones.IdAutorizacion 
			WHERE Autorizaciones.IdFormulario=@IdFormulario and DetAut.OrdenAutorizacion=@IdOrden)
set @IdCargoAutoriza4=(Select Top 1 DetAut.IdCargoAutoriza4
			FROM DetalleAutorizaciones DetAut
			INNER JOIN Autorizaciones ON DetAut.IdAutorizacion=Autorizaciones.IdAutorizacion 
			WHERE Autorizaciones.IdFormulario=@IdFormulario and DetAut.OrdenAutorizacion=@IdOrden)
set @IdCargoAutoriza5=(Select Top 1 DetAut.IdCargoAutoriza5
			FROM DetalleAutorizaciones DetAut
			INNER JOIN Autorizaciones ON DetAut.IdAutorizacion=Autorizaciones.IdAutorizacion 
			WHERE Autorizaciones.IdFormulario=@IdFormulario and DetAut.OrdenAutorizacion=@IdOrden)
set @IdCargoAutoriza6=(Select Top 1 DetAut.IdCargoAutoriza6
			FROM DetalleAutorizaciones DetAut
			INNER JOIN Autorizaciones ON DetAut.IdAutorizacion=Autorizaciones.IdAutorizacion 
			WHERE Autorizaciones.IdFormulario=@IdFormulario and DetAut.OrdenAutorizacion=@IdOrden)
Select Distinct
Emp.IdEmpleado,
Emp.Nombre
From Empleados Emp
Left Outer Join Obras On Obras.IdObra=@IdObra
Where 
	(@SectorEmisor1='N' and ((@IdSectorAutoriza1=Emp.IdSector  and @IdCargoAutoriza1=Emp.IdCargo ) or
				 (@IdSectorAutoriza1=Emp.IdSector1 and @IdCargoAutoriza1=Emp.IdCargo1) or
				 (@IdSectorAutoriza1=Emp.IdSector2 and @IdCargoAutoriza1=Emp.IdCargo2) or
				 (@IdSectorAutoriza1=Emp.IdSector3 and @IdCargoAutoriza1=Emp.IdCargo3) or
				 (@IdSectorAutoriza1=Emp.IdSector4 and @IdCargoAutoriza1=Emp.IdCargo4)	))
	OR
	(@SectorEmisor2='N' and ((@IdSectorAutoriza2=Emp.IdSector  and @IdCargoAutoriza2=Emp.IdCargo ) or
				 (@IdSectorAutoriza2=Emp.IdSector1 and @IdCargoAutoriza2=Emp.IdCargo1) or
				 (@IdSectorAutoriza2=Emp.IdSector2 and @IdCargoAutoriza2=Emp.IdCargo2) or
				 (@IdSectorAutoriza2=Emp.IdSector3 and @IdCargoAutoriza2=Emp.IdCargo3) or
				 (@IdSectorAutoriza2=Emp.IdSector4 and @IdCargoAutoriza2=Emp.IdCargo4)	))
	OR
	(@SectorEmisor3='N' and ((@IdSectorAutoriza3=Emp.IdSector  and @IdCargoAutoriza3=Emp.IdCargo ) or
				 (@IdSectorAutoriza3=Emp.IdSector1 and @IdCargoAutoriza3=Emp.IdCargo1) or
				 (@IdSectorAutoriza3=Emp.IdSector2 and @IdCargoAutoriza3=Emp.IdCargo2) or
				 (@IdSectorAutoriza3=Emp.IdSector3 and @IdCargoAutoriza3=Emp.IdCargo3) or
				 (@IdSectorAutoriza3=Emp.IdSector4 and @IdCargoAutoriza3=Emp.IdCargo4)	))
	OR
	(@SectorEmisor4='N' and ((@IdSectorAutoriza4=Emp.IdSector  and @IdCargoAutoriza4=Emp.IdCargo ) or
				 (@IdSectorAutoriza4=Emp.IdSector1 and @IdCargoAutoriza4=Emp.IdCargo1) or
				 (@IdSectorAutoriza4=Emp.IdSector2 and @IdCargoAutoriza4=Emp.IdCargo2) or
				 (@IdSectorAutoriza4=Emp.IdSector3 and @IdCargoAutoriza4=Emp.IdCargo3) or
				 (@IdSectorAutoriza4=Emp.IdSector4 and @IdCargoAutoriza4=Emp.IdCargo4)	))
	OR
	(@SectorEmisor5='N' and ((@IdSectorAutoriza5=Emp.IdSector  and @IdCargoAutoriza5=Emp.IdCargo ) or
				 (@IdSectorAutoriza5=Emp.IdSector1 and @IdCargoAutoriza5=Emp.IdCargo1) or
				 (@IdSectorAutoriza5=Emp.IdSector2 and @IdCargoAutoriza5=Emp.IdCargo2) or
				 (@IdSectorAutoriza5=Emp.IdSector3 and @IdCargoAutoriza5=Emp.IdCargo3) or
				 (@IdSectorAutoriza5=Emp.IdSector4 and @IdCargoAutoriza5=Emp.IdCargo4)	))
	OR
	(@SectorEmisor6='N' and ((@IdSectorAutoriza6=Emp.IdSector  and @IdCargoAutoriza6=Emp.IdCargo ) or
				 (@IdSectorAutoriza6=Emp.IdSector1 and @IdCargoAutoriza6=Emp.IdCargo1) or
				 (@IdSectorAutoriza6=Emp.IdSector2 and @IdCargoAutoriza6=Emp.IdCargo2) or
				 (@IdSectorAutoriza6=Emp.IdSector3 and @IdCargoAutoriza6=Emp.IdCargo3) or
				 (@IdSectorAutoriza6=Emp.IdSector4 and @IdCargoAutoriza6=Emp.IdCargo4)	))
	OR
	(@SectorEmisor1='S' and ((@IdSectorRM=Emp.IdSector  and @IdCargoAutoriza1=Emp.IdCargo ) or
				 (@IdSectorRM=Emp.IdSector1 and @IdCargoAutoriza1=Emp.IdCargo1) or
				 (@IdSectorRM=Emp.IdSector2 and @IdCargoAutoriza1=Emp.IdCargo2) or
				 (@IdSectorRM=Emp.IdSector3 and @IdCargoAutoriza1=Emp.IdCargo3) or
				 (@IdSectorRM=Emp.IdSector4 and @IdCargoAutoriza1=Emp.IdCargo4)	))
	OR
	(@SectorEmisor2='S' and ((@IdSectorRM=Emp.IdSector  and @IdCargoAutoriza2=Emp.IdCargo ) or
				 (@IdSectorRM=Emp.IdSector1 and @IdCargoAutoriza2=Emp.IdCargo1) or
				 (@IdSectorRM=Emp.IdSector2 and @IdCargoAutoriza2=Emp.IdCargo2) or
				 (@IdSectorRM=Emp.IdSector3 and @IdCargoAutoriza2=Emp.IdCargo3) or
				 (@IdSectorRM=Emp.IdSector4 and @IdCargoAutoriza2=Emp.IdCargo4)	))
	OR
	(@SectorEmisor3='S' and ((@IdSectorRM=Emp.IdSector  and @IdCargoAutoriza3=Emp.IdCargo ) or
				 (@IdSectorRM=Emp.IdSector1 and @IdCargoAutoriza3=Emp.IdCargo1) or
				 (@IdSectorRM=Emp.IdSector2 and @IdCargoAutoriza3=Emp.IdCargo2) or
				 (@IdSectorRM=Emp.IdSector3 and @IdCargoAutoriza3=Emp.IdCargo3) or
				 (@IdSectorRM=Emp.IdSector4 and @IdCargoAutoriza3=Emp.IdCargo4)	))
	OR
	(@SectorEmisor4='S' and ((@IdSectorRM=Emp.IdSector  and @IdCargoAutoriza4=Emp.IdCargo ) or
				 (@IdSectorRM=Emp.IdSector1 and @IdCargoAutoriza4=Emp.IdCargo1) or
				 (@IdSectorRM=Emp.IdSector2 and @IdCargoAutoriza4=Emp.IdCargo2) or
				 (@IdSectorRM=Emp.IdSector3 and @IdCargoAutoriza4=Emp.IdCargo3) or
				 (@IdSectorRM=Emp.IdSector4 and @IdCargoAutoriza4=Emp.IdCargo4)	))
	OR
	(@SectorEmisor5='S' and ((@IdSectorRM=Emp.IdSector  and @IdCargoAutoriza5=Emp.IdCargo ) or
				 (@IdSectorRM=Emp.IdSector1 and @IdCargoAutoriza5=Emp.IdCargo1) or
				 (@IdSectorRM=Emp.IdSector2 and @IdCargoAutoriza5=Emp.IdCargo2) or
				 (@IdSectorRM=Emp.IdSector3 and @IdCargoAutoriza5=Emp.IdCargo3) or
				 (@IdSectorRM=Emp.IdSector4 and @IdCargoAutoriza5=Emp.IdCargo4)	))
	OR
	(@SectorEmisor6='S' and ((@IdSectorRM=Emp.IdSector  and @IdCargoAutoriza6=Emp.IdCargo ) or
				 (@IdSectorRM=Emp.IdSector1 and @IdCargoAutoriza6=Emp.IdCargo1) or
				 (@IdSectorRM=Emp.IdSector2 and @IdCargoAutoriza6=Emp.IdCargo2) or
				 (@IdSectorRM=Emp.IdSector3 and @IdCargoAutoriza6=Emp.IdCargo3) or
				 (@IdSectorRM=Emp.IdSector4 and @IdCargoAutoriza6=Emp.IdCargo4)	))
	OR
	(@SectorEmisor1='O' and Emp.IdEmpleado=Obras.IdJefe)
	OR
	(@SectorEmisor2='O' and Emp.IdEmpleado=Obras.IdJefe)
	OR
	(@SectorEmisor3='O' and Emp.IdEmpleado=Obras.IdJefe)
	OR
	(@SectorEmisor4='O' and Emp.IdEmpleado=Obras.IdJefe)
	OR
	(@SectorEmisor5='O' and Emp.IdEmpleado=Obras.IdJefe)
	OR
	(@SectorEmisor6='O' and Emp.IdEmpleado=Obras.IdJefe)































GO

/****** Object:  StoredProcedure [dbo].[Autorizaciones_TX_PorIdFormulario]    Script Date: 03/15/2011 11:48:28 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Autorizaciones_TX_PorIdFormulario]
@IdFormulario int
AS 
Select *
FROM Autorizaciones
WHERE IdFormulario=@IdFormulario































GO

/****** Object:  StoredProcedure [dbo].[Autorizaciones_TX_TT]    Script Date: 03/15/2011 11:48:28 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[Autorizaciones_TX_TT]
@IdAutorizacion int
AS 
Select 
Autorizaciones.IdAutorizacion,
Formularios.Descripcion as [Formulario]
FROM Autorizaciones
INNER JOIN Formularios ON Autorizaciones.IdFormulario = Formularios.IdFormulario
where (IdAutorizacion=@IdAutorizacion)































GO

/****** Object:  StoredProcedure [dbo].[AutorizacionesPorComprobante_A]    Script Date: 03/15/2011 11:48:28 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[AutorizacionesPorComprobante_A]
@IdAutorizacionPorComprobante int  output,
@IdFormulario int,
@IdComprobante int,
@OrdenAutorizacion int,
@IdAutorizo int,
@FechaAutorizacion datetime
AS 
Insert into [AutorizacionesPorComprobante]
(
 IdFormulario,
 IdComprobante,
 OrdenAutorizacion,
 IdAutorizo,
 FechaAutorizacion
)
Values
(
 @IdFormulario,
 @IdComprobante,
 @OrdenAutorizacion,
 @IdAutorizo,
 @FechaAutorizacion
)
Select @IdAutorizacionPorComprobante=@@identity
Return(@IdAutorizacionPorComprobante)
































GO

/****** Object:  StoredProcedure [dbo].[AutorizacionesPorComprobante_E]    Script Date: 03/15/2011 11:48:28 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[AutorizacionesPorComprobante_E]
@IdAutorizacionPorComprobante int 
AS 
Delete AutorizacionesPorComprobante
where (IdAutorizacionPorComprobante=@IdAutorizacionPorComprobante)
































GO

/****** Object:  StoredProcedure [dbo].[AutorizacionesPorComprobante_Generar]    Script Date: 03/15/2011 11:48:28 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
















CREATE Procedure [dbo].[AutorizacionesPorComprobante_Generar]

AS

TRUNCATE TABLE _TempAutorizaciones

INSERT INTO _TempAutorizaciones
SELECT 
	Aco.IdAcopio as [IdComp],
	'Acopio' as [Tipo],
	str(Aco.NumeroAcopio,8) as [Numero],
	Autorizaciones.IdAutorizacion,
	Autorizaciones.IdFormulario,
	DetAut.IdDetalleAutorizacion,
	DetAut.SectorEmisor1,
	DetAut.OrdenAutorizacion,
	CASE
		WHEN DetAut.SectorEmisor1='N' THEN
		     (  Select Top 1 Emp.IdEmpleado
			From Empleados Emp
			Where (DetAut.IdSectorAutoriza1=Emp.IdSector  and DetAut.IdCargoAutoriza1=Emp.IdCargo ) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector1 and DetAut.IdCargoAutoriza1=Emp.IdCargo1) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector2 and DetAut.IdCargoAutoriza1=Emp.IdCargo2) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector3 and DetAut.IdCargoAutoriza1=Emp.IdCargo3) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector4 and DetAut.IdCargoAutoriza1=Emp.IdCargo4) )
		WHEN DetAut.SectorEmisor1='S' THEN
		     (  Select Top 1 Emp.IdEmpleado
			From Empleados Emp
			Where ( Select Top 1 Emp1.IdSector 
				From Empleados Emp1
				Where Emp1.IdEmpleado=Aco.Aprobo)=Emp.IdSector and 
				      (DetAut.IdCargoAutoriza1=Emp.IdCargo  or DetAut.IdCargoAutoriza1=Emp.IdCargo1 or 
				       DetAut.IdCargoAutoriza1=Emp.IdCargo2 or DetAut.IdCargoAutoriza1=Emp.IdCargo3 or 
				       DetAut.IdCargoAutoriza1=Emp.IdCargo4) )
		ELSE Null 
	END as [Autoriza],
	CASE
		WHEN DetAut.SectorEmisor1='N' THEN
		     (  Select Top 1 Emp.IdSector
			From Empleados Emp
			Where (DetAut.IdSectorAutoriza1=Emp.IdSector  and DetAut.IdCargoAutoriza1=Emp.IdCargo ) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector1 and DetAut.IdCargoAutoriza1=Emp.IdCargo1) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector2 and DetAut.IdCargoAutoriza1=Emp.IdCargo2) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector3 and DetAut.IdCargoAutoriza1=Emp.IdCargo3) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector4 and DetAut.IdCargoAutoriza1=Emp.IdCargo4) )
		WHEN DetAut.SectorEmisor1='S' THEN
		     (  Select Top 1 Emp.IdSector
			From Empleados Emp
			Where Emp.IdEmpleado=Aco.Aprobo )
		ELSE Null 
	END as [Sector],
	Aco.Aprobo as [IdLibero],
	Aco.Fecha as [Fecha]
FROM Acopios Aco
LEFT OUTER JOIN Autorizaciones ON Autorizaciones.IdFormulario=1
LEFT OUTER JOIN DetalleAutorizaciones DetAut ON Autorizaciones.IdAutorizacion=DetAut.IdAutorizacion
WHERE Aco.Aprobo is not null and 
	NOT EXISTS(Select * from AutorizacionesPorComprobante Aut 
			Where Aut.IdFormulario=1 and Aut.IdComprobante=Aco.IdAcopio and Aut.OrdenAutorizacion=DetAut.OrdenAutorizacion) 

UNION ALL

SELECT 
	LMat.IdLMateriales as [IdComp],
	'L.Materiales' as [Tipo],
	str(LMat.NumeroLMateriales,8) as [Numero],
	Autorizaciones.IdAutorizacion,
	Autorizaciones.IdFormulario,
	DetAut.IdDetalleAutorizacion,
	DetAut.SectorEmisor1,
	DetAut.OrdenAutorizacion,
	CASE
		WHEN DetAut.SectorEmisor1='N' THEN
		     (  Select Top 1 Emp.IdEmpleado
			From Empleados Emp
			Where (DetAut.IdSectorAutoriza1=Emp.IdSector  and DetAut.IdCargoAutoriza1=Emp.IdCargo ) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector1 and DetAut.IdCargoAutoriza1=Emp.IdCargo1) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector2 and DetAut.IdCargoAutoriza1=Emp.IdCargo2) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector3 and DetAut.IdCargoAutoriza1=Emp.IdCargo3) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector4 and DetAut.IdCargoAutoriza1=Emp.IdCargo4) )
		WHEN DetAut.SectorEmisor1='S' THEN
		     (  Select Top 1 Emp.IdEmpleado
			From Empleados Emp
			Where ( Select Top 1 Emp1.IdSector 
				From Empleados Emp1
				Where Emp1.IdEmpleado=LMat.Aprobo)=Emp.IdSector and 
				      (DetAut.IdCargoAutoriza1=Emp.IdCargo  or DetAut.IdCargoAutoriza1=Emp.IdCargo1 or 
				       DetAut.IdCargoAutoriza1=Emp.IdCargo2 or DetAut.IdCargoAutoriza1=Emp.IdCargo3 or 
				       DetAut.IdCargoAutoriza1=Emp.IdCargo4) )
		ELSE Null 
	END as [Autoriza],
	CASE
		WHEN DetAut.SectorEmisor1='N' THEN
		     (  Select Top 1 Emp.IdSector
			From Empleados Emp
			Where (DetAut.IdSectorAutoriza1=Emp.IdSector  and DetAut.IdCargoAutoriza1=Emp.IdCargo ) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector1 and DetAut.IdCargoAutoriza1=Emp.IdCargo1) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector2 and DetAut.IdCargoAutoriza1=Emp.IdCargo2) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector3 and DetAut.IdCargoAutoriza1=Emp.IdCargo3) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector4 and DetAut.IdCargoAutoriza1=Emp.IdCargo4) )
		WHEN DetAut.SectorEmisor1='S' THEN
		     (  Select Top 1 Emp.IdSector
			From Empleados Emp
			Where Emp.IdEmpleado=LMat.Aprobo )
		ELSE Null 
	END as [Sector],
	LMat.Aprobo as [IdLibero],
	LMat.Fecha as [Fecha]
FROM LMateriales LMat
LEFT OUTER JOIN Autorizaciones ON Autorizaciones.IdFormulario=2
LEFT OUTER JOIN DetalleAutorizaciones DetAut ON Autorizaciones.IdAutorizacion=DetAut.IdAutorizacion
WHERE LMat.Aprobo is not null and 
	NOT EXISTS(Select * from AutorizacionesPorComprobante Aut 
			Where Aut.IdFormulario=2 and Aut.IdComprobante=LMat.IdLMateriales and Aut.OrdenAutorizacion=DetAut.OrdenAutorizacion) 

UNION ALL

SELECT 
	Req.IdRequerimiento as [IdComp],
	'R.M.' as [Tipo],
	str(Req.NumeroRequerimiento,8) as [Numero],
	Autorizaciones.IdAutorizacion,
	Autorizaciones.IdFormulario,
	DetAut.IdDetalleAutorizacion,
	DetAut.SectorEmisor1,
	DetAut.OrdenAutorizacion,
	CASE
		WHEN DetAut.SectorEmisor1='O' THEN 
			CASE 
				WHEN NOT Obras.TipoObra is null AND Obras.TipoObra<>1
					THEN Obras.IdJefe
				ELSE 	
					CASE 
						WHEN DetAut.SectorEmisor2='N' THEN
						     (  Select Top 1 Emp.IdEmpleado
							From Empleados Emp
							Where (DetAut.IdSectorAutoriza2=Emp.IdSector  and DetAut.IdCargoAutoriza2=Emp.IdCargo ) or 
							      (DetAut.IdSectorAutoriza2=Emp.IdSector1 and DetAut.IdCargoAutoriza2=Emp.IdCargo1) or 
							      (DetAut.IdSectorAutoriza2=Emp.IdSector2 and DetAut.IdCargoAutoriza2=Emp.IdCargo2) or 
							      (DetAut.IdSectorAutoriza2=Emp.IdSector3 and DetAut.IdCargoAutoriza2=Emp.IdCargo3) or 
							      (DetAut.IdSectorAutoriza2=Emp.IdSector4 and DetAut.IdCargoAutoriza2=Emp.IdCargo4) )
						WHEN DetAut.SectorEmisor2='S' THEN
						     (  Select Top 1 Emp.IdEmpleado
							From Empleados Emp
							Where (Req.IdSector=Emp.IdSector  and DetAut.IdCargoAutoriza2=Emp.IdCargo ) or 
							      (Req.IdSector=Emp.IdSector1 and DetAut.IdCargoAutoriza2=Emp.IdCargo1) or 
							      (Req.IdSector=Emp.IdSector2 and DetAut.IdCargoAutoriza2=Emp.IdCargo2) or 
							      (Req.IdSector=Emp.IdSector3 and DetAut.IdCargoAutoriza2=Emp.IdCargo3) or 
							      (Req.IdSector=Emp.IdSector4 and DetAut.IdCargoAutoriza2=Emp.IdCargo4) )
						ELSE Null 
					END
			END
		WHEN DetAut.SectorEmisor1='N' THEN
		     (  Select Top 1 Emp.IdEmpleado
			From Empleados Emp
			Where (DetAut.IdSectorAutoriza1=Emp.IdSector  and DetAut.IdCargoAutoriza1=Emp.IdCargo ) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector1 and DetAut.IdCargoAutoriza1=Emp.IdCargo1) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector2 and DetAut.IdCargoAutoriza1=Emp.IdCargo2) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector3 and DetAut.IdCargoAutoriza1=Emp.IdCargo3) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector4 and DetAut.IdCargoAutoriza1=Emp.IdCargo4) )
		WHEN DetAut.SectorEmisor1='S' THEN
		     (  Select Top 1 Emp.IdEmpleado
			From Empleados Emp
			Where (Req.IdSector=Emp.IdSector  and DetAut.IdCargoAutoriza1=Emp.IdCargo ) or 
			      (Req.IdSector=Emp.IdSector1 and DetAut.IdCargoAutoriza1=Emp.IdCargo1) or 
			      (Req.IdSector=Emp.IdSector2 and DetAut.IdCargoAutoriza1=Emp.IdCargo2) or 
			      (Req.IdSector=Emp.IdSector3 and DetAut.IdCargoAutoriza1=Emp.IdCargo3) or 
			      (Req.IdSector=Emp.IdSector4 and DetAut.IdCargoAutoriza1=Emp.IdCargo4) )
		ELSE Null 
	END as [Autoriza],
	CASE
		WHEN DetAut.SectorEmisor1='O' THEN 
			CASE 
				WHEN NOT Obras.TipoObra is null AND Obras.TipoObra<>1
					THEN  ( Select Top 1 Emp.IdSector
						From Empleados Emp Where Emp.IdEmpleado=Obras.IdJefe )
				ELSE 	
					CASE 
						WHEN DetAut.SectorEmisor2='N' THEN
						     (  Select Top 1 Emp.IdSector
							From Empleados Emp
							Where (DetAut.IdSectorAutoriza2=Emp.IdSector  and DetAut.IdCargoAutoriza2=Emp.IdCargo ) or 
							      (DetAut.IdSectorAutoriza2=Emp.IdSector1 and DetAut.IdCargoAutoriza2=Emp.IdCargo1) or 
							      (DetAut.IdSectorAutoriza2=Emp.IdSector2 and DetAut.IdCargoAutoriza2=Emp.IdCargo2) or 
							      (DetAut.IdSectorAutoriza2=Emp.IdSector3 and DetAut.IdCargoAutoriza2=Emp.IdCargo3) or 
							      (DetAut.IdSectorAutoriza2=Emp.IdSector4 and DetAut.IdCargoAutoriza2=Emp.IdCargo4) )
						WHEN DetAut.SectorEmisor2='S' THEN Req.IdSector
						ELSE Null 
					END
			END
		WHEN DetAut.SectorEmisor1='N' THEN
		     (  Select Top 1 Emp.IdSector
			From Empleados Emp
			Where (DetAut.IdSectorAutoriza1=Emp.IdSector  and DetAut.IdCargoAutoriza1=Emp.IdCargo ) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector1 and DetAut.IdCargoAutoriza1=Emp.IdCargo1) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector2 and DetAut.IdCargoAutoriza1=Emp.IdCargo2) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector3 and DetAut.IdCargoAutoriza1=Emp.IdCargo3) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector4 and DetAut.IdCargoAutoriza1=Emp.IdCargo4) )
		WHEN DetAut.SectorEmisor1='S' THEN Req.IdSector
		ELSE Null 
	END as [Sector],
	Req.Aprobo as [IdLibero],
	Req.FechaRequerimiento as [Fecha]
FROM Requerimientos Req
LEFT OUTER JOIN Obras ON Req.IdObra=Obras.IdObra
LEFT OUTER JOIN Autorizaciones ON Autorizaciones.IdFormulario=3
LEFT OUTER JOIN DetalleAutorizaciones DetAut ON Autorizaciones.IdAutorizacion=DetAut.IdAutorizacion
WHERE Req.Aprobo is not null and 
	(Req.Cumplido is null or Req.Cumplido='NO') and 
	NOT EXISTS(Select * from AutorizacionesPorComprobante Aut 
			Where Aut.IdFormulario=3 and Aut.IdComprobante=Req.IdRequerimiento and Aut.OrdenAutorizacion=DetAut.OrdenAutorizacion) And
	NOT ( DetAut.OrdenAutorizacion=3 And (Obras.TipoObra is null Or Obras.TipoObra<>1) )

UNION ALL

SELECT 
	Ped.IdPedido as [IdComp],
	'Pedido' as [Tipo],
	Case 	When Ped.SubNumero is not null 
		Then str(Ped.NumeroPedido,8)+' / '+str(Ped.SubNumero,2)
		Else str(Ped.NumeroPedido,8)
	End as [Numero],
	Autorizaciones.IdAutorizacion,
	Autorizaciones.IdFormulario,
	DetAut.IdDetalleAutorizacion,
	DetAut.SectorEmisor1,
	DetAut.OrdenAutorizacion,
	CASE
		WHEN DetAut.SectorEmisor1='N' THEN
		     (  Select Top 1 Emp.IdEmpleado
			From Empleados Emp
			Where (DetAut.IdSectorAutoriza1=Emp.IdSector  and DetAut.IdCargoAutoriza1=Emp.IdCargo ) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector1 and DetAut.IdCargoAutoriza1=Emp.IdCargo1) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector2 and DetAut.IdCargoAutoriza1=Emp.IdCargo2) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector3 and DetAut.IdCargoAutoriza1=Emp.IdCargo3) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector4 and DetAut.IdCargoAutoriza1=Emp.IdCargo4) )
		WHEN DetAut.SectorEmisor1='S' THEN
		     (  Select Top 1 Emp.IdEmpleado
			From Empleados Emp
			Where ( Select Top 1 Emp1.IdSector 
				From Empleados Emp1
				Where Emp1.IdEmpleado=Ped.Aprobo)=Emp.IdSector and 
				      (DetAut.IdCargoAutoriza1=Emp.IdCargo  or DetAut.IdCargoAutoriza1=Emp.IdCargo1 or 
				       DetAut.IdCargoAutoriza1=Emp.IdCargo2 or DetAut.IdCargoAutoriza1=Emp.IdCargo3 or 
				       DetAut.IdCargoAutoriza1=Emp.IdCargo4) )
		ELSE Null 
	END as [Autoriza],
	CASE
		WHEN DetAut.SectorEmisor1='N' THEN
		     (  Select Top 1 Emp.IdSector
			From Empleados Emp
			Where (DetAut.IdSectorAutoriza1=Emp.IdSector  and DetAut.IdCargoAutoriza1=Emp.IdCargo ) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector1 and DetAut.IdCargoAutoriza1=Emp.IdCargo1) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector2 and DetAut.IdCargoAutoriza1=Emp.IdCargo2) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector3 and DetAut.IdCargoAutoriza1=Emp.IdCargo3) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector4 and DetAut.IdCargoAutoriza1=Emp.IdCargo4) )
		WHEN DetAut.SectorEmisor1='S' THEN
		     (  Select Top 1 Emp.IdSector
			From Empleados Emp
			Where Emp.IdEmpleado=Ped.Aprobo )
		ELSE Null 
	END as [Sector],
	Ped.Aprobo as [IdLibero],
	Ped.FechaPedido as [Fecha]
FROM Pedidos Ped
LEFT OUTER JOIN Autorizaciones ON Autorizaciones.IdFormulario=4
LEFT OUTER JOIN DetalleAutorizaciones DetAut ON Autorizaciones.IdAutorizacion=DetAut.IdAutorizacion
WHERE Ped.Aprobo is not null and 
	(Ped.Cumplido is null or Ped.Cumplido<>'AN') and 
	NOT EXISTS(Select * from AutorizacionesPorComprobante Aut 
			Where Aut.IdFormulario=4 and Aut.IdComprobante=Ped.IdPedido and Aut.OrdenAutorizacion=DetAut.OrdenAutorizacion) 

UNION ALL

SELECT 
	Comp.IdComparativa as [IdComp],
	'Comparativa' as [Tipo],
	str(Comp.Numero,8) as [Numero],
	Autorizaciones.IdAutorizacion,
	Autorizaciones.IdFormulario,
	DetAut.IdDetalleAutorizacion,
	DetAut.SectorEmisor1,
	DetAut.OrdenAutorizacion,
	CASE
		WHEN DetAut.SectorEmisor1='N' THEN
		     (  Select Top 1 Emp.IdEmpleado
			From Empleados Emp
			Where (DetAut.IdSectorAutoriza1=Emp.IdSector  and DetAut.IdCargoAutoriza1=Emp.IdCargo ) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector1 and DetAut.IdCargoAutoriza1=Emp.IdCargo1) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector2 and DetAut.IdCargoAutoriza1=Emp.IdCargo2) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector3 and DetAut.IdCargoAutoriza1=Emp.IdCargo3) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector4 and DetAut.IdCargoAutoriza1=Emp.IdCargo4) )
		WHEN DetAut.SectorEmisor1='S' THEN
		     (  Select Top 1 Emp.IdEmpleado
			From Empleados Emp
			Where ( Select Top 1 Emp1.IdSector 
				From Empleados Emp1
				Where Emp1.IdEmpleado=Comp.IdAprobo)=Emp.IdSector and 
				      (DetAut.IdCargoAutoriza1=Emp.IdCargo  or DetAut.IdCargoAutoriza1=Emp.IdCargo1 or 
				       DetAut.IdCargoAutoriza1=Emp.IdCargo2 or DetAut.IdCargoAutoriza1=Emp.IdCargo3 or 
				       DetAut.IdCargoAutoriza1=Emp.IdCargo4) )
		ELSE Null 
	END as [Autoriza],
	CASE
		WHEN DetAut.SectorEmisor1='N' THEN
		     (  Select Top 1 Emp.IdSector
			From Empleados Emp
			Where (DetAut.IdSectorAutoriza1=Emp.IdSector  and DetAut.IdCargoAutoriza1=Emp.IdCargo ) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector1 and DetAut.IdCargoAutoriza1=Emp.IdCargo1) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector2 and DetAut.IdCargoAutoriza1=Emp.IdCargo2) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector3 and DetAut.IdCargoAutoriza1=Emp.IdCargo3) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector4 and DetAut.IdCargoAutoriza1=Emp.IdCargo4) )
		WHEN DetAut.SectorEmisor1='S' THEN
		     (  Select Top 1 Emp.IdSector
			From Empleados Emp
			Where Emp.IdEmpleado=Comp.IdAprobo )
		ELSE Null 
	END as [Sector],
	Comp.IdAprobo as [IdLibero],
	Comp.Fecha as [Fecha]
FROM Comparativas Comp
LEFT OUTER JOIN Autorizaciones ON Autorizaciones.IdFormulario=5
LEFT OUTER JOIN DetalleAutorizaciones DetAut ON Autorizaciones.IdAutorizacion=DetAut.IdAutorizacion
WHERE Comp.IdAprobo is not null and 
	NOT EXISTS(Select * from AutorizacionesPorComprobante Aut 
			Where Aut.IdFormulario=5 and Aut.IdComprobante=Comp.IdComparativa and Aut.OrdenAutorizacion=DetAut.OrdenAutorizacion) 

UNION ALL

SELECT 
	Aju.IdAjusteStock as [IdComp],
	'Ajuste Stock' as [Tipo],
	str(Aju.NumeroAjusteStock,8) as [Numero],
	Autorizaciones.IdAutorizacion,
	Autorizaciones.IdFormulario,
	DetAut.IdDetalleAutorizacion,
	DetAut.SectorEmisor1,
	DetAut.OrdenAutorizacion,
	CASE
		WHEN DetAut.SectorEmisor1='N' THEN
		     (  Select Top 1 Emp.IdEmpleado
			From Empleados Emp
			Where (DetAut.IdSectorAutoriza1=Emp.IdSector  and DetAut.IdCargoAutoriza1=Emp.IdCargo ) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector1 and DetAut.IdCargoAutoriza1=Emp.IdCargo1) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector2 and DetAut.IdCargoAutoriza1=Emp.IdCargo2) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector3 and DetAut.IdCargoAutoriza1=Emp.IdCargo3) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector4 and DetAut.IdCargoAutoriza1=Emp.IdCargo4) )
		WHEN DetAut.SectorEmisor1='S' THEN
		     (  Select Top 1 Emp.IdEmpleado
			From Empleados Emp
			Where ( Select Top 1 Emp1.IdSector 
				From Empleados Emp1
				Where Emp1.IdEmpleado=Aju.IdAprobo)=Emp.IdSector and 
				      (DetAut.IdCargoAutoriza1=Emp.IdCargo  or DetAut.IdCargoAutoriza1=Emp.IdCargo1 or 
				       DetAut.IdCargoAutoriza1=Emp.IdCargo2 or DetAut.IdCargoAutoriza1=Emp.IdCargo3 or 
				       DetAut.IdCargoAutoriza1=Emp.IdCargo4) )
		ELSE Null 
	END as [Autoriza],
	CASE
		WHEN DetAut.SectorEmisor1='N' THEN
		     (  Select Top 1 Emp.IdSector
			From Empleados Emp
			Where (DetAut.IdSectorAutoriza1=Emp.IdSector  and DetAut.IdCargoAutoriza1=Emp.IdCargo ) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector1 and DetAut.IdCargoAutoriza1=Emp.IdCargo1) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector2 and DetAut.IdCargoAutoriza1=Emp.IdCargo2) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector3 and DetAut.IdCargoAutoriza1=Emp.IdCargo3) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector4 and DetAut.IdCargoAutoriza1=Emp.IdCargo4) )
		WHEN DetAut.SectorEmisor1='S' THEN
		     (  Select Top 1 Emp.IdSector
			From Empleados Emp
			Where Emp.IdEmpleado=Aju.IdAprobo )
		ELSE Null 
	END as [Sector],
	Aju.IdAprobo as [IdLibero],
	Aju.FechaAjuste as [Fecha]
FROM AjustesStock Aju
LEFT OUTER JOIN Autorizaciones ON Autorizaciones.IdFormulario=6
LEFT OUTER JOIN DetalleAutorizaciones DetAut ON Autorizaciones.IdAutorizacion=DetAut.IdAutorizacion
WHERE Aju.IdAprobo is not null and 
	NOT EXISTS(Select * from AutorizacionesPorComprobante Aut 
			Where Aut.IdFormulario=6 and Aut.IdComprobante=Aju.IdAjusteStock and Aut.OrdenAutorizacion=DetAut.OrdenAutorizacion) 

ORDER BY Tipo,IdComp,DetAut.OrdenAutorizacion















GO

/****** Object:  StoredProcedure [dbo].[AutorizacionesPorComprobante_GenerarFirmas]    Script Date: 03/15/2011 11:48:29 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
















CREATE Procedure [dbo].[AutorizacionesPorComprobante_GenerarFirmas]

AS

Declare @CantidadAcopios int,@CantidadLMateriales int,@CantidadRequerimientos int,
	@CantidadPedidos int,@CantidadComparativas int,@CantidadAjustesStock int

set @CantidadAcopios =	      (	Select Max(DetalleAutorizaciones.OrdenAutorizacion)
				From DetalleAutorizaciones
				Inner Join Autorizaciones On DetalleAutorizaciones.IdAutorizacion=Autorizaciones.IdAutorizacion
				Where Autorizaciones.IdFormulario=1 )
set @CantidadLMateriales =    ( Select Max(DetalleAutorizaciones.OrdenAutorizacion)
				From DetalleAutorizaciones
				Inner Join Autorizaciones On DetalleAutorizaciones.IdAutorizacion=Autorizaciones.IdAutorizacion
				Where Autorizaciones.IdFormulario=2 )
set @CantidadRequerimientos = ( Select Max(DetalleAutorizaciones.OrdenAutorizacion)
				From DetalleAutorizaciones
				Inner Join Autorizaciones On DetalleAutorizaciones.IdAutorizacion=Autorizaciones.IdAutorizacion
				Where Autorizaciones.IdFormulario=3 )
set @CantidadPedidos =        ( Select Max(DetalleAutorizaciones.OrdenAutorizacion)
				From DetalleAutorizaciones
				Inner Join Autorizaciones On DetalleAutorizaciones.IdAutorizacion=Autorizaciones.IdAutorizacion
				Where Autorizaciones.IdFormulario=4 )
set @CantidadComparativas =   ( Select Max(DetalleAutorizaciones.OrdenAutorizacion)
				From DetalleAutorizaciones
				Inner Join Autorizaciones On DetalleAutorizaciones.IdAutorizacion=Autorizaciones.IdAutorizacion
				Where Autorizaciones.IdFormulario=5 )
set @CantidadAjustesStock =   ( Select Max(DetalleAutorizaciones.OrdenAutorizacion)
				From DetalleAutorizaciones
				Inner Join Autorizaciones On DetalleAutorizaciones.IdAutorizacion=Autorizaciones.IdAutorizacion
				Where Autorizaciones.IdFormulario=6 )

TRUNCATE TABLE _TempEstadoDeFirmas

INSERT INTO _TempEstadoDeFirmas
Select 
Aco.IdAcopio,
'Acopio',
str(Aco.NumeroAcopio,8),
Aco.Fecha,
@CantidadAcopios,
Aco.Aprobo,
Aco.FechaAprobacion,
Case 	When @CantidadAcopios>=1
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=1 and Aut.IdComprobante=Aco.IdAcopio and Aut.OrdenAutorizacion=1)
	Else -1
End,
Case 	When @CantidadAcopios>=1
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=1 and Aut.IdComprobante=Aco.IdAcopio and Aut.OrdenAutorizacion=1)
	Else Null
End,
Case 	When @CantidadAcopios>=2
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=1 and Aut.IdComprobante=Aco.IdAcopio and Aut.OrdenAutorizacion=2)
	Else -1
End,
Case 	When @CantidadAcopios>=2
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=1 and Aut.IdComprobante=Aco.IdAcopio and Aut.OrdenAutorizacion=2)
	Else Null
End,
Case 	When @CantidadAcopios>=3
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=1 and Aut.IdComprobante=Aco.IdAcopio and Aut.OrdenAutorizacion=3)
	Else -1
End,
Case 	When @CantidadAcopios>=3
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=1 and Aut.IdComprobante=Aco.IdAcopio and Aut.OrdenAutorizacion=3)
	Else Null
End,
Case 	When @CantidadAcopios>=4
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=1 and Aut.IdComprobante=Aco.IdAcopio and Aut.OrdenAutorizacion=4)
	Else -1
End,
Case 	When @CantidadAcopios>=4
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=1 and Aut.IdComprobante=Aco.IdAcopio and Aut.OrdenAutorizacion=4)
	Else Null
End,
Case 	When @CantidadAcopios>=5
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=1 and Aut.IdComprobante=Aco.IdAcopio and Aut.OrdenAutorizacion=5)
	Else -1
End,
Case 	When @CantidadAcopios>=5
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=1 and Aut.IdComprobante=Aco.IdAcopio and Aut.OrdenAutorizacion=5)
	Else Null
End,
Case 	When @CantidadAcopios>=6
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=1 and Aut.IdComprobante=Aco.IdAcopio and Aut.OrdenAutorizacion=6)
	Else -1
End,
Case 	When @CantidadAcopios>=6
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=1 and Aut.IdComprobante=Aco.IdAcopio and Aut.OrdenAutorizacion=6)
	Else Null
End,
Case 	When @CantidadAcopios>=7
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=1 and Aut.IdComprobante=Aco.IdAcopio and Aut.OrdenAutorizacion=7)
	Else -1
End,
Case 	When @CantidadAcopios>=7
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=1 and Aut.IdComprobante=Aco.IdAcopio and Aut.OrdenAutorizacion=7)
	Else Null
End,
Case 	When @CantidadAcopios>=8
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=1 and Aut.IdComprobante=Aco.IdAcopio and Aut.OrdenAutorizacion=8)
	Else -1
End,
Case 	When @CantidadAcopios>=8
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=1 and Aut.IdComprobante=Aco.IdAcopio and Aut.OrdenAutorizacion=8)
	Else Null
End,
Aco.IdObra,
Null,
Null
From Acopios Aco

Union All

Select 
LMat.IdLMateriales,
'L.Materiales',
str(LMat.NumeroLMateriales,8),
LMat.Fecha,
@CantidadLMateriales,
LMat.Aprobo,
Null,
Case 	When @CantidadLMateriales>=1
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=2 and Aut.IdComprobante=LMat.IdLMateriales and Aut.OrdenAutorizacion=1)
	Else -1
End,
Case 	When @CantidadLMateriales>=1
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=2 and Aut.IdComprobante=LMat.IdLMateriales and Aut.OrdenAutorizacion=1)
	Else Null
End,
Case 	When @CantidadLMateriales>=2
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=2 and Aut.IdComprobante=LMat.IdLMateriales and Aut.OrdenAutorizacion=2)
	Else -1
End,
Case 	When @CantidadLMateriales>=2
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=2 and Aut.IdComprobante=LMat.IdLMateriales and Aut.OrdenAutorizacion=2)
	Else Null
End,
Case 	When @CantidadLMateriales>=3
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=2 and Aut.IdComprobante=LMat.IdLMateriales and Aut.OrdenAutorizacion=3)
	Else -1
End,
Case 	When @CantidadLMateriales>=3
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=2 and Aut.IdComprobante=LMat.IdLMateriales and Aut.OrdenAutorizacion=3)
	Else Null
End,
Case 	When @CantidadLMateriales>=4
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=2 and Aut.IdComprobante=LMat.IdLMateriales and Aut.OrdenAutorizacion=4)
	Else -1
End,
Case 	When @CantidadLMateriales>=4
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=2 and Aut.IdComprobante=LMat.IdLMateriales and Aut.OrdenAutorizacion=4)
	Else Null
End,
Case 	When @CantidadLMateriales>=5
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=2 and Aut.IdComprobante=LMat.IdLMateriales and Aut.OrdenAutorizacion=5)
	Else -1
End,
Case 	When @CantidadLMateriales>=5
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=2 and Aut.IdComprobante=LMat.IdLMateriales and Aut.OrdenAutorizacion=5)
	Else Null
End,
Case 	When @CantidadLMateriales>=6
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=2 and Aut.IdComprobante=LMat.IdLMateriales and Aut.OrdenAutorizacion=6)
	Else -1
End,Case 	When @CantidadLMateriales>=6
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=2 and Aut.IdComprobante=LMat.IdLMateriales and Aut.OrdenAutorizacion=6)
	Else Null
End,
Case 	When @CantidadLMateriales>=7
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=2 and Aut.IdComprobante=LMat.IdLMateriales and Aut.OrdenAutorizacion=7)
	Else -1
End,
Case 	When @CantidadLMateriales>=7
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=2 and Aut.IdComprobante=LMat.IdLMateriales and Aut.OrdenAutorizacion=7)
	Else Null
End,
Case 	When @CantidadLMateriales>=8
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=2 and Aut.IdComprobante=LMat.IdLMateriales and Aut.OrdenAutorizacion=8)
	Else -1
End,
Case 	When @CantidadLMateriales>=8
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=2 and Aut.IdComprobante=LMat.IdLMateriales and Aut.OrdenAutorizacion=8)
	Else Null
End,
LMat.IdObra,
LMat.IdEquipo,
Null
From LMateriales LMat

Union All

Select 
Req.IdRequerimiento,
'R.M.',
str(Req.NumeroRequerimiento,8),
Req.FechaRequerimiento,
@CantidadRequerimientos,
Req.Aprobo,
Req.FechaAprobacion,
Case 	When @CantidadRequerimientos>=1
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=3 and Aut.IdComprobante=Req.IdRequerimiento and Aut.OrdenAutorizacion=1)
	Else -1
End,
Case 	When @CantidadRequerimientos>=1
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=3 and Aut.IdComprobante=Req.IdRequerimiento and Aut.OrdenAutorizacion=1)
	Else Null
End,
Case 	When @CantidadRequerimientos>=2
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=3 and Aut.IdComprobante=Req.IdRequerimiento and Aut.OrdenAutorizacion=2)
	Else -1
End,
Case 	When @CantidadRequerimientos>=2
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=3 and Aut.IdComprobante=Req.IdRequerimiento and Aut.OrdenAutorizacion=2)
	Else Null
End,
Case 	When @CantidadRequerimientos>=3
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=3 and Aut.IdComprobante=Req.IdRequerimiento and Aut.OrdenAutorizacion=3)
	Else -1
End,
Case 	When @CantidadRequerimientos>=3
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=3 and Aut.IdComprobante=Req.IdRequerimiento and Aut.OrdenAutorizacion=3)
	Else Null
End,
Case 	When @CantidadRequerimientos>=4
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=3 and Aut.IdComprobante=Req.IdRequerimiento and Aut.OrdenAutorizacion=4)
	Else -1
End,
Case 	When @CantidadRequerimientos>=4
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=3 and Aut.IdComprobante=Req.IdRequerimiento and Aut.OrdenAutorizacion=4)
	Else Null
End,
Case 	When @CantidadRequerimientos>=5
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=3 and Aut.IdComprobante=Req.IdRequerimiento and Aut.OrdenAutorizacion=5)
	Else -1
End,
Case 	When @CantidadRequerimientos>=5
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=3 and Aut.IdComprobante=Req.IdRequerimiento and Aut.OrdenAutorizacion=5)
	Else Null
End,
Case 	When @CantidadRequerimientos>=6
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=3 and Aut.IdComprobante=Req.IdRequerimiento and Aut.OrdenAutorizacion=6)
	Else -1
End,
Case 	When @CantidadRequerimientos>=6
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=3 and Aut.IdComprobante=Req.IdRequerimiento and Aut.OrdenAutorizacion=6)
	Else Null
End,
Case 	When @CantidadRequerimientos>=7
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=3 and Aut.IdComprobante=Req.IdRequerimiento and Aut.OrdenAutorizacion=7)
	Else -1
End,
Case 	When @CantidadRequerimientos>=7
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=3 and Aut.IdComprobante=Req.IdRequerimiento and Aut.OrdenAutorizacion=7)
	Else Null
End,
Case 	When @CantidadRequerimientos>=8
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=3 and Aut.IdComprobante=Req.IdRequerimiento and Aut.OrdenAutorizacion=8)
	Else -1
End,
Case 	When @CantidadRequerimientos>=8
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=3 and Aut.IdComprobante=Req.IdRequerimiento and Aut.OrdenAutorizacion=8)
	Else Null
End,
Req.IdObra,
Null,
Req.IdCentroCosto
From Requerimientos Req

Union All

Select 
Ped.IdPedido,
'Pedido',
Case 	When Ped.SubNumero is not null 
	Then str(Ped.NumeroPedido,8)+' / '+str(Ped.SubNumero,2)
	Else str(Ped.NumeroPedido,8)
End,
Ped.FechaPedido,
@CantidadPedidos,
Ped.Aprobo,
Ped.FechaAprobacion,
Case 	When @CantidadPedidos>=1
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=4 and Aut.IdComprobante=Ped.IdPedido and Aut.OrdenAutorizacion=1)
	Else -1
End,
Case 	When @CantidadPedidos>=1
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=4 and Aut.IdComprobante=Ped.IdPedido and Aut.OrdenAutorizacion=1)
	Else Null
End,
Case 	When @CantidadPedidos>=2
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=4 and Aut.IdComprobante=Ped.IdPedido and Aut.OrdenAutorizacion=2)
	Else -1
End,
Case 	When @CantidadPedidos>=2
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=4 and Aut.IdComprobante=Ped.IdPedido and Aut.OrdenAutorizacion=2)
	Else Null
End,
Case 	When @CantidadPedidos>=3
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=4 and Aut.IdComprobante=Ped.IdPedido and Aut.OrdenAutorizacion=3)
	Else -1
End,
Case 	When @CantidadPedidos>=3
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=4 and Aut.IdComprobante=Ped.IdPedido and Aut.OrdenAutorizacion=3)
	Else Null
End,
Case 	When @CantidadPedidos>=4
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=4 and Aut.IdComprobante=Ped.IdPedido and Aut.OrdenAutorizacion=4)
	Else -1
End,
Case 	When @CantidadPedidos>=4
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=4 and Aut.IdComprobante=Ped.IdPedido and Aut.OrdenAutorizacion=4)
	Else Null
End,
Case 	When @CantidadPedidos>=5
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=4 and Aut.IdComprobante=Ped.IdPedido and Aut.OrdenAutorizacion=5)
	Else -1
End,
Case 	When @CantidadPedidos>=5
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=4 and Aut.IdComprobante=Ped.IdPedido and Aut.OrdenAutorizacion=5)
	Else Null
End,
Case 	When @CantidadPedidos>=6
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=4 and Aut.IdComprobante=Ped.IdPedido and Aut.OrdenAutorizacion=6)
	Else -1
End,
Case 	When @CantidadPedidos>=6
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=4 and Aut.IdComprobante=Ped.IdPedido and Aut.OrdenAutorizacion=6)
	Else Null
End,
Case 	When @CantidadPedidos>=7
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=4 and Aut.IdComprobante=Ped.IdPedido and Aut.OrdenAutorizacion=7)
	Else -1
End,
Case 	When @CantidadPedidos>=7
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=4 and Aut.IdComprobante=Ped.IdPedido and Aut.OrdenAutorizacion=7)
	Else Null
End,
Case 	When @CantidadPedidos>=8
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=4 and Aut.IdComprobante=Ped.IdPedido and Aut.OrdenAutorizacion=8)
	Else -1
End,
Case 	When @CantidadPedidos>=8
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=4 and Aut.IdComprobante=Ped.IdPedido and Aut.OrdenAutorizacion=8)
	Else Null
End,
Null,
Null,
Null
From Pedidos Ped

Union All

Select 
Com.IdComparativa,
'Comparativa',
str(Com.Numero,8),
Com.Fecha,
@CantidadComparativas,
Com.IdAprobo,
Com.FechaAprobacion,
Case 	When @CantidadComparativas>=1
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=5 and Aut.IdComprobante=Com.IdComparativa and Aut.OrdenAutorizacion=1)
	Else -1
End,
Case 	When @CantidadComparativas>=1
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=5 and Aut.IdComprobante=Com.IdComparativa and Aut.OrdenAutorizacion=1)
	Else Null
End,
Case 	When @CantidadComparativas>=2
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=5 and Aut.IdComprobante=Com.IdComparativa and Aut.OrdenAutorizacion=2)
	Else -1
End,
Case 	When @CantidadComparativas>=2
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=5 and Aut.IdComprobante=Com.IdComparativa and Aut.OrdenAutorizacion=2)
	Else Null
End,
Case 	When @CantidadComparativas>=3
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=5 and Aut.IdComprobante=Com.IdComparativa and Aut.OrdenAutorizacion=3)
	Else -1
End,
Case 	When @CantidadComparativas>=3
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=5 and Aut.IdComprobante=Com.IdComparativa and Aut.OrdenAutorizacion=3)
	Else Null
End,
Case 	When @CantidadComparativas>=4
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=5 and Aut.IdComprobante=Com.IdComparativa and Aut.OrdenAutorizacion=4)
	Else -1
End,
Case 	When @CantidadComparativas>=4
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=5 and Aut.IdComprobante=Com.IdComparativa and Aut.OrdenAutorizacion=4)
	Else Null
End,
Case 	When @CantidadComparativas>=5
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=5 and Aut.IdComprobante=Com.IdComparativa and Aut.OrdenAutorizacion=5)
	Else -1
End,
Case 	When @CantidadComparativas>=5
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=5 and Aut.IdComprobante=Com.IdComparativa and Aut.OrdenAutorizacion=5)
	Else Null
End,
Case 	When @CantidadComparativas>=6
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=5 and Aut.IdComprobante=Com.IdComparativa and Aut.OrdenAutorizacion=6)
	Else -1
End,
Case 	When @CantidadComparativas>=6
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=5 and Aut.IdComprobante=Com.IdComparativa and Aut.OrdenAutorizacion=6)
	Else Null
End,
Case 	When @CantidadComparativas>=7
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=5 and Aut.IdComprobante=Com.IdComparativa and Aut.OrdenAutorizacion=7)
	Else -1
End,
Case 	When @CantidadComparativas>=7
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=5 and Aut.IdComprobante=Com.IdComparativa and Aut.OrdenAutorizacion=7)
	Else Null
End,
Case 	When @CantidadComparativas>=8
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=5 and Aut.IdComprobante=Com.IdComparativa and Aut.OrdenAutorizacion=8)
	Else -1
End,
Case 	When @CantidadComparativas>=8
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=5 and Aut.IdComprobante=Com.IdComparativa and Aut.OrdenAutorizacion=8)
	Else Null
End,
Null,
Null,
Null
From Comparativas Com

Union All

Select 
Aju.IdAjusteStock,
'Ajuste Stock',
str(Aju.NumeroAjusteStock,8),
Aju.FechaAjuste,
@CantidadAjustesStock,
Aju.IdAprobo,
Aju.FechaRegistro,
Case 	When @CantidadAjustesStock>=1
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=6 and Aut.IdComprobante=Aju.IdAjusteStock and Aut.OrdenAutorizacion=1)
	Else -1
End,
Case 	When @CantidadAjustesStock>=1
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=6 and Aut.IdComprobante=Aju.IdAjusteStock and Aut.OrdenAutorizacion=1)
	Else Null
End,
Case 	When @CantidadAjustesStock>=2
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=6 and Aut.IdComprobante=Aju.IdAjusteStock and Aut.OrdenAutorizacion=2)
	Else -1
End,
Case 	When @CantidadAjustesStock>=2
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=6 and Aut.IdComprobante=Aju.IdAjusteStock and Aut.OrdenAutorizacion=2)
	Else Null
End,
Case 	When @CantidadAjustesStock>=3
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=6 and Aut.IdComprobante=Aju.IdAjusteStock and Aut.OrdenAutorizacion=3)
	Else -1
End,
Case 	When @CantidadAjustesStock>=3
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=6 and Aut.IdComprobante=Aju.IdAjusteStock and Aut.OrdenAutorizacion=3)
	Else Null
End,
Case 	When @CantidadAjustesStock>=4
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=6 and Aut.IdComprobante=Aju.IdAjusteStock and Aut.OrdenAutorizacion=4)
	Else -1
End,
Case 	When @CantidadAjustesStock>=4
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=6 and Aut.IdComprobante=Aju.IdAjusteStock and Aut.OrdenAutorizacion=4)
	Else Null
End,
Case 	When @CantidadAjustesStock>=5
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=6 and Aut.IdComprobante=Aju.IdAjusteStock and Aut.OrdenAutorizacion=5)
	Else -1
End,
Case 	When @CantidadAjustesStock>=5
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=6 and Aut.IdComprobante=Aju.IdAjusteStock and Aut.OrdenAutorizacion=5)
	Else Null
End,
Case 	When @CantidadAjustesStock>=6
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=6 and Aut.IdComprobante=Aju.IdAjusteStock and Aut.OrdenAutorizacion=6)
	Else -1
End,
Case 	When @CantidadAjustesStock>=6
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=6 and Aut.IdComprobante=Aju.IdAjusteStock and Aut.OrdenAutorizacion=6)
	Else Null
End,
Case 	When @CantidadAjustesStock>=7
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=6 and Aut.IdComprobante=Aju.IdAjusteStock and Aut.OrdenAutorizacion=7)
	Else -1
End,
Case 	When @CantidadAjustesStock>=7
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=6 and Aut.IdComprobante=Aju.IdAjusteStock and Aut.OrdenAutorizacion=7)
	Else Null
End,
Case 	When @CantidadAjustesStock>=8
	Then (Select Top 1 Aut.IdAutorizo
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=6 and Aut.IdComprobante=Aju.IdAjusteStock and Aut.OrdenAutorizacion=8)
	Else -1
End,
Case 	When @CantidadAjustesStock>=8
	Then (Select Top 1 Aut.FechaAutorizacion
		from AutorizacionesPorComprobante Aut 
		Where Aut.IdFormulario=6 and Aut.IdComprobante=Aju.IdAjusteStock and Aut.OrdenAutorizacion=8)
	Else Null
End,
Null,
Null,
Null
From AjustesStock Aju















GO

/****** Object:  StoredProcedure [dbo].[AutorizacionesPorComprobante_M]    Script Date: 03/15/2011 11:48:29 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE  Procedure [dbo].[AutorizacionesPorComprobante_M]
@IdAutorizacionPorComprobante int,
@IdFormulario int,
@IdComprobante int,
@OrdenAutorizacion int,
@IdAutorizo int,
@FechaAutorizacion datetime
AS
Update AutorizacionesPorComprobante
SET
 IdFormulario=@IdFormulario,
 IdComprobante=@IdComprobante,
 OrdenAutorizacion=@OrdenAutorizacion,
 IdAutorizo=@IdAutorizo,
 FechaAutorizacion=@FechaAutorizacion
where (IdAutorizacionPorComprobante=@IdAutorizacionPorComprobante)
Return(@IdAutorizacionPorComprobante)
































GO

/****** Object:  StoredProcedure [dbo].[AutorizacionesPorComprobante_T]    Script Date: 03/15/2011 11:48:29 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[AutorizacionesPorComprobante_T]
@IdAutorizacionPorComprobante int
AS 
SELECT *
FROM AutorizacionesPorComprobante
where (IdAutorizacionPorComprobante=@IdAutorizacionPorComprobante)
































GO

/****** Object:  StoredProcedure [dbo].[AutorizacionesPorComprobante_TT]    Script Date: 03/15/2011 11:48:29 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[AutorizacionesPorComprobante_TT]
AS 
Select *
FROM AutorizacionesPorComprobante
































GO

/****** Object:  StoredProcedure [dbo].[AutorizacionesPorComprobante_TX_AutorizacionesPorComprobante]    Script Date: 03/15/2011 11:48:29 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[AutorizacionesPorComprobante_TX_AutorizacionesPorComprobante]
@IdFormulario int,
@IdComprobante int
AS
SELECT *
From AutorizacionesPorComprobante
Where AutorizacionesPorComprobante.IdFormulario=@IdFormulario and AutorizacionesPorComprobante.IdComprobante=@IdComprobante
Order By AutorizacionesPorComprobante.OrdenAutorizacion
































GO

/****** Object:  StoredProcedure [dbo].[AutorizacionesPorComprobante_TX_AutorizaPorSector]    Script Date: 03/15/2011 11:48:29 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[AutorizacionesPorComprobante_TX_AutorizaPorSector]
@IdSector int
AS
SELECT DISTINCT 
_TempAutorizaciones.IdAutoriza,
Empleados.Nombre as [Autoriza]
From _TempAutorizaciones
LEFT OUTER JOIN Empleados ON _TempAutorizaciones.IdAutoriza=Empleados.IdEmpleado
Where _TempAutorizaciones.IdAutoriza is not null and _TempAutorizaciones.IdSector=@IdSector
Order By Empleados.Nombre
































GO

/****** Object:  StoredProcedure [dbo].[AutorizacionesPorComprobante_TX_ComprobantesSinFirmar]    Script Date: 03/15/2011 11:48:29 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[AutorizacionesPorComprobante_TX_ComprobantesSinFirmar]
AS
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='0111111111111111111111111133'
set @vector_T='0254116141414141414141431100'
select 
IdComprobante,
TipoComprobante as [Tipo],
NumeroComprobante as [Numero],
FechaComprobante as [Fecha],
CantidadFirmas as [Firmas],
(Select Empleados.Nombre From Empleados Where Empleados.IdEmpleado=IdLibero) as [Liberado por],
FechaLiberacion as [Fecha liberacion],
Case 	When Firma1=-1 then 'No definida'
	Else (Select Empleados.Nombre From Empleados Where Empleados.IdEmpleado=Firma1)
End as [Firma 1],
FechaFirma1 as [Fecha firma 1],
Case 	When Firma2=-1 then 'No definida'
	Else (Select Empleados.Nombre From Empleados Where Empleados.IdEmpleado=Firma2)
End as [Firma 2],
FechaFirma2 as [Fecha firma 2],
Case 	When Firma3=-1 then 'No definida'
	Else (Select Empleados.Nombre From Empleados Where Empleados.IdEmpleado=Firma3)
End as [Firma 3],
FechaFirma3 as [Fecha firma 3],
Case 	When Firma4=-1 then 'No definida'
	Else (Select Empleados.Nombre From Empleados Where Empleados.IdEmpleado=Firma4)
End as [Firma 4],
FechaFirma4 as [Fecha firma 4],
Case 	When Firma5=-1 then 'No definida'
	Else (Select Empleados.Nombre From Empleados Where Empleados.IdEmpleado=Firma5)
End as [Firma 5],
FechaFirma5 as [Fecha firma 5],
Case 	When Firma6=-1 then 'No definida'
	Else (Select Empleados.Nombre From Empleados Where Empleados.IdEmpleado=Firma6)
End as [Firma 6],
FechaFirma6 as [Fecha firma 6],
Case 	When Firma7=-1 then 'No definida'
	Else (Select Empleados.Nombre From Empleados Where Empleados.IdEmpleado=Firma7)
End as [Firma 7],
FechaFirma7 as [Fecha firma 7],
Case 	When Firma8=-1 then 'No definida'
	Else (Select Empleados.Nombre From Empleados Where Empleados.IdEmpleado=Firma8)
End as [Firma 8],
FechaFirma8 as [Fecha firma 8],
Obras.NumeroObra as [Obra],
Equipos.Tag as [Equipo],
CentrosCosto.Descripcion as [Centro costo],
@Vector_T as Vector_T,
@Vector_X as Vector_X
From _TempEstadoDeFirmas
Left Outer Join Obras On Obras.IdObra=_TempEstadoDeFirmas.IdObra
Left Outer Join Equipos On Equipos.IdEquipo=_TempEstadoDeFirmas.IdEquipo
Left Outer Join CentrosCosto On CentrosCosto.IdCentroCosto=_TempEstadoDeFirmas.IdCentroCosto
Where 	Firma1 is null or Firma2 is null or Firma3 is null or Firma4 is null or 
	Firma4 is null or Firma5 is null or Firma6 is null or Firma8 is null 
Order By TipoComprobante,NumeroComprobante
































GO

/****** Object:  StoredProcedure [dbo].[AutorizacionesPorComprobante_TX_DocumentosPorAutoriza]    Script Date: 03/15/2011 11:48:29 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO







CREATE Procedure [dbo].[AutorizacionesPorComprobante_TX_DocumentosPorAutoriza]
@IdAutoriza int
AS
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='01111111111111111133'
set @vector_T='03541441313559999900'
SELECT  
Aut.IdComprobante,
Aut.TipoComprobante as [Documento],
Aut.Numero as [Numero],
Aut.Fecha as [Fecha],
Empleados.Nombre as [Liberado por],
CASE
	WHEN Aut.IdFormulario=3 THEN (Select Top 1 Requerimientos.MontoParaCompra
					From Requerimientos
					Where Aut.IdComprobante=Requerimientos.IdRequerimiento )
	WHEN Aut.IdFormulario=4 THEN (Select Top 1 Pedidos.TotalPedido
					From Pedidos
					Where Aut.IdComprobante=Pedidos.IdPedido )
	ELSE Null
END as [Monto p/compra],
CASE
	WHEN Aut.IdFormulario=1 THEN (Select Top 1 Acopios.MontoPrevisto 
					From Acopios
					Where Aut.IdComprobante=Acopios.IdAcopio )
	WHEN Aut.IdFormulario=3 THEN (Select Top 1 Requerimientos.MontoPrevisto 
					From Requerimientos
					Where Aut.IdComprobante=Requerimientos.IdRequerimiento )
	ELSE Null
END as [Monto previsto],
Aut.OrdenAutorizacion as [Orden],
CASE
	WHEN Aut.IdFormulario=1 THEN (Select Top 1 Obras.NumeroObra 
					from Obras
					Where (	Select Acopios.IdObra
						From Acopios
						Where Aut.IdComprobante=Acopios.IdAcopio )=Obras.IdObra )
	WHEN Aut.IdFormulario=2 THEN (Select Top 1 Obras.NumeroObra 
					from Obras
					Where (	Select LMateriales.IdObra
						From LMateriales
						Where Aut.IdComprobante=LMateriales.IdLMateriales )=Obras.IdObra )
	WHEN Aut.IdFormulario=3 THEN (Select Top 1 Obras.NumeroObra 
					from Obras
					Where (	Select Requerimientos.IdObra
						From Requerimientos
						Where Aut.IdComprobante=Requerimientos.IdRequerimiento )=Obras.IdObra )
	ELSE Null
END as [Obra],
CASE
	WHEN Aut.IdFormulario=3 THEN ( Select Top 1 Sectores.Descripcion 
					   From Sectores 
					   Where Sectores.IdSector=
						( Select Top 1 Requerimientos.IdSector 
						  From Requerimientos
						  Where Aut.IdComprobante=Requerimientos.IdRequerimiento ) )
	ELSE Null
END as [Sector],
CASE
	WHEN Aut.IdFormulario=3 THEN (Select Top 1 CentrosCosto.Descripcion
					from CentrosCosto
					Where (	Select Requerimientos.IdCentroCosto
						From Requerimientos
						Where Aut.IdComprobante=Requerimientos.IdRequerimiento )=CentrosCosto.IdCentroCosto )
	ELSE Null
END as [Centro de costo],
CASE
	WHEN Aut.IdFormulario=1 THEN (Select Top 1 Clientes.RazonSocial 
					from Clientes
					Where (	Select Acopios.IdCliente
						From Acopios
						Where Aut.IdComprobante=Acopios.IdAcopio )=Clientes.IdCliente )
	WHEN Aut.IdFormulario=2 THEN (Select Top 1 Clientes.RazonSocial 
					from Clientes
					Where (	Select LMateriales.IdCliente
						From LMateriales
						Where Aut.IdComprobante=LMateriales.IdLMateriales )=Clientes.IdCliente )
	WHEN Aut.IdFormulario=3 THEN (Select Top 1 Clientes.RazonSocial 
					from Clientes
					Where (	Select TOP 1 Obras.IdCliente
						From Obras
						Where ( Select Top 1 Requerimientos.IdObra 
							From Requerimientos
							Where Aut.IdComprobante=Requerimientos.IdRequerimiento )=Obras.IdObra ) = Clientes.IdCliente )
	ELSE Null
END as [Cliente],
CASE
	WHEN Aut.IdFormulario=4 THEN (Select Top 1 Proveedores.RazonSocial 
					from Proveedores
					Where (	Select Pedidos.IdProveedor
						From Pedidos
						Where Aut.IdComprobante=Pedidos.IdPedido )=Proveedores.IdProveedor )
	ELSE Null
END as [Proveedor],
Aut.IdFormulario,
Aut.OrdenAutorizacion as [Nro.Orden],
CASE
	WHEN Aut.IdFormulario=3 THEN (Select Top 1 Requerimientos.IdSector 
					From Requerimientos
					Where Aut.IdComprobante=Requerimientos.IdRequerimiento )
	ELSE 0
END as [SectorEmisor],
CASE
	WHEN Aut.IdFormulario=3 THEN (Select Top 1 Requerimientos.IdObra 
					From Requerimientos
					Where Aut.IdComprobante=Requerimientos.IdRequerimiento )
	ELSE Null
END as [IdObra],
Aut.IdComprobante as [IdAux],
@Vector_T as Vector_T,
@Vector_X as Vector_X
From _TempAutorizaciones Aut
Left Outer Join Empleados On Aut.IdLibero=Empleados.IdEmpleado
Where Aut.IdAutoriza is not null and Aut.IdAutoriza=@IdAutoriza
Order By Aut.TipoComprobante,Aut.Numero,Aut.OrdenAutorizacion






GO

/****** Object:  StoredProcedure [dbo].[AutorizacionesPorComprobante_TX_FirmasPendientes]    Script Date: 03/15/2011 11:48:29 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[AutorizacionesPorComprobante_TX_FirmasPendientes]
AS
SELECT IdAutoriza
FROM _TempAutorizaciones
WHERE IdAutoriza is not null
GROUP BY IdAutoriza
































GO

/****** Object:  StoredProcedure [dbo].[AutorizacionesPorComprobante_TX_PorIdRM]    Script Date: 03/15/2011 11:48:29 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO



















CREATE Procedure [dbo].[AutorizacionesPorComprobante_TX_PorIdRM]
@IdRequerimiento int
AS
SELECT distinct
	Req.NumeroRequerimiento,
	CASE
		WHEN DetAut.SectorEmisor1='O' THEN 
			CASE 
				WHEN NOT Obras.TipoObra is null AND Obras.TipoObra<>1
					THEN Obras.IdJefe
				ELSE 	
					CASE 
						WHEN DetAut.SectorEmisor2='N' THEN
						     (  Select Top 1 Emp.IdEmpleado
							From Empleados Emp
							Where (DetAut.IdSectorAutoriza2=Emp.IdSector  and DetAut.IdCargoAutoriza2=Emp.IdCargo ) or 
							      (DetAut.IdSectorAutoriza2=Emp.IdSector1 and DetAut.IdCargoAutoriza2=Emp.IdCargo1) or 
							      (DetAut.IdSectorAutoriza2=Emp.IdSector2 and DetAut.IdCargoAutoriza2=Emp.IdCargo2) or 
							      (DetAut.IdSectorAutoriza2=Emp.IdSector3 and DetAut.IdCargoAutoriza2=Emp.IdCargo3) or 
							      (DetAut.IdSectorAutoriza2=Emp.IdSector4 and DetAut.IdCargoAutoriza2=Emp.IdCargo4) )
						WHEN DetAut.SectorEmisor2='S' THEN
						     (  Select Top 1 Emp.IdEmpleado
							From Empleados Emp
							Where (Req.IdSector=Emp.IdSector  and DetAut.IdCargoAutoriza2=Emp.IdCargo ) or 
							      (Req.IdSector=Emp.IdSector1 and DetAut.IdCargoAutoriza2=Emp.IdCargo1) or 
							      (Req.IdSector=Emp.IdSector2 and DetAut.IdCargoAutoriza2=Emp.IdCargo2) or 
							      (Req.IdSector=Emp.IdSector3 and DetAut.IdCargoAutoriza2=Emp.IdCargo3) or 
							      (Req.IdSector=Emp.IdSector4 and DetAut.IdCargoAutoriza2=Emp.IdCargo4) )
						ELSE Null 
					END
			END
		WHEN DetAut.SectorEmisor1='N' THEN
		     (  Select Top 1 Emp.IdEmpleado
			From Empleados Emp
			Where (DetAut.IdSectorAutoriza1=Emp.IdSector  and DetAut.IdCargoAutoriza1=Emp.IdCargo ) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector1 and DetAut.IdCargoAutoriza1=Emp.IdCargo1) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector2 and DetAut.IdCargoAutoriza1=Emp.IdCargo2) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector3 and DetAut.IdCargoAutoriza1=Emp.IdCargo3) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector4 and DetAut.IdCargoAutoriza1=Emp.IdCargo4) )
		WHEN DetAut.SectorEmisor1='S' THEN
		     (  Select Top 1 Emp.IdEmpleado
			From Empleados Emp
			Where (Req.IdSector=Emp.IdSector  and DetAut.IdCargoAutoriza1=Emp.IdCargo ) or 
			      (Req.IdSector=Emp.IdSector1 and DetAut.IdCargoAutoriza1=Emp.IdCargo1) or 
			      (Req.IdSector=Emp.IdSector2 and DetAut.IdCargoAutoriza1=Emp.IdCargo2) or 
			      (Req.IdSector=Emp.IdSector3 and DetAut.IdCargoAutoriza1=Emp.IdCargo3) or 
			      (Req.IdSector=Emp.IdSector4 and DetAut.IdCargoAutoriza1=Emp.IdCargo4) )
		ELSE Null 
	END as [Autoriza],
	CASE
		WHEN DetAut.SectorEmisor1='O' THEN 
			CASE 
				WHEN NOT Obras.TipoObra is null AND Obras.TipoObra<>1
					THEN  ( Select Top 1 Emp.IdSector
						From Empleados Emp Where Emp.IdEmpleado=Obras.IdJefe )
				ELSE 	
					CASE 
						WHEN DetAut.SectorEmisor2='N' THEN
						     (  Select Top 1 Emp.IdSector
							From Empleados Emp
							Where (DetAut.IdSectorAutoriza2=Emp.IdSector  and DetAut.IdCargoAutoriza2=Emp.IdCargo ) or 
							      (DetAut.IdSectorAutoriza2=Emp.IdSector1 and DetAut.IdCargoAutoriza2=Emp.IdCargo1) or 
							      (DetAut.IdSectorAutoriza2=Emp.IdSector2 and DetAut.IdCargoAutoriza2=Emp.IdCargo2) or 
							      (DetAut.IdSectorAutoriza2=Emp.IdSector3 and DetAut.IdCargoAutoriza2=Emp.IdCargo3) or 
							      (DetAut.IdSectorAutoriza2=Emp.IdSector4 and DetAut.IdCargoAutoriza2=Emp.IdCargo4) )
						WHEN DetAut.SectorEmisor2='S' THEN Req.IdSector
						ELSE Null 
					END
			END
		WHEN DetAut.SectorEmisor1='N' THEN
		     (  Select Top 1 Emp.IdSector
			From Empleados Emp
			Where (DetAut.IdSectorAutoriza1=Emp.IdSector  and DetAut.IdCargoAutoriza1=Emp.IdCargo ) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector1 and DetAut.IdCargoAutoriza1=Emp.IdCargo1) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector2 and DetAut.IdCargoAutoriza1=Emp.IdCargo2) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector3 and DetAut.IdCargoAutoriza1=Emp.IdCargo3) or 
			      (DetAut.IdSectorAutoriza1=Emp.IdSector4 and DetAut.IdCargoAutoriza1=Emp.IdCargo4) )
		WHEN DetAut.SectorEmisor1='S' THEN Req.IdSector
		ELSE Null 
	END as [Sector]
FROM Requerimientos Req
LEFT OUTER JOIN Obras ON Req.IdObra=Obras.IdObra
LEFT OUTER JOIN Autorizaciones ON Autorizaciones.IdFormulario=3
LEFT OUTER JOIN DetalleAutorizaciones DetAut ON Autorizaciones.IdAutorizacion=DetAut.IdAutorizacion
WHERE Req.Aprobo is not null and @IdRequerimiento=Req.IdRequerimiento and 
	 NOT EXISTS(Select * from AutorizacionesPorComprobante Aut 
			Where Aut.IdFormulario=3 and Aut.IdComprobante=Req.IdRequerimiento and Aut.OrdenAutorizacion=DetAut.OrdenAutorizacion)
ORDER By Req.NumeroRequerimiento


















GO

/****** Object:  StoredProcedure [dbo].[AutorizacionesPorComprobante_TX_Sectores]    Script Date: 03/15/2011 11:48:29 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[AutorizacionesPorComprobante_TX_Sectores]
AS
SELECT DISTINCT 
_TempAutorizaciones.IdSector,
Sectores.Descripcion as [Sector]
From _TempAutorizaciones
LEFT OUTER JOIN Sectores ON _TempAutorizaciones.IdSector=Sectores.IdSector
Where _TempAutorizaciones.IdSector is not null
Order By Sectores.Descripcion
































GO

/****** Object:  StoredProcedure [dbo].[BD_TX_BaseDeDatos]    Script Date: 03/15/2011 11:48:29 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE PROCEDURE [dbo].[BD_TX_BaseDeDatos]
AS
Select DB_NAME()































GO

/****** Object:  StoredProcedure [dbo].[BD_TX_BasesInstaladas]    Script Date: 03/15/2011 11:48:29 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO





CREATE Procedure [dbo].[BD_TX_BasesInstaladas]
AS 
SELECT 
 dbId as [IdAux],
 Name as [Titulo] 
FROM master.dbo.sysdatabases
ORDER BY name




GO

/****** Object:  StoredProcedure [dbo].[BD_TX_Campos]    Script Date: 03/15/2011 11:48:29 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE [dbo].[BD_TX_Campos] 

(
				 @table_name		nvarchar(384),
				 @table_owner		nvarchar(384) = null,
				 @table_qualifier	sysname = null,
				 @column_name		nvarchar(384) = null,
				 @ODBCVer			int = 2)
AS

    DECLARE @full_table_name	nvarchar(769)
    DECLARE @table_id int
	if @ODBCVer <> 3
		select @ODBCVer = 2
	if @column_name is null /*	If column name not supplied, match all */
		select @column_name = '%'
	if @table_qualifier is not null
    begin
		if db_name() <> @table_qualifier
		begin	/* If qualifier doesn't match current database */
			raiserror (15250, -1,-1)
			return
		end
    end
	if @table_name is null
	begin	/*	If table name not supplied, match all */
		select @table_name = '%'
	end
	if @table_owner is null
	begin	/* If unqualified table name */
		SELECT @full_table_name = quotename(@table_name)
    end
    else
	begin	/* Qualified table name */
		if @table_owner = ''
		begin	/* If empty owner name */
			SELECT @full_table_name = quotename(@table_owner)
		end
		else
		begin
			SELECT @full_table_name = quotename(@table_owner) +
				'.' + quotename(@table_name)
		end
    end
	/*	Get Object ID */
	SELECT @table_id = object_id(@full_table_name)
	if ((isnull(charindex('%', @full_table_name),0) = 0) and
		(isnull(charindex('[', @table_name),0) = 0) and
		(isnull(charindex('[', @table_owner),0) = 0) and
		(isnull(charindex('_', @full_table_name),0) = 0) and
		@table_id <> 0)
    begin
		/* this block is for the case where there is no pattern
			matching required for the table name */
		SELECT
			TABLE_QUALIFIER = convert(sysname,DB_NAME()),
			TABLE_OWNER = convert(sysname,USER_NAME(o.uid)),
			TABLE_NAME = convert(sysname,o.name),
			COLUMN_NAME = convert(sysname,c.name)
		FROM
			sysobjects o,
			systypes t,
			syscolumns c
			LEFT OUTER JOIN syscomments m on c.cdefault = m.id
				AND m.colid = 1
		WHERE
			o.id = @table_id
			AND c.id = o.id
			AND o.type <> 'P'
			AND c.xusertype = t.xusertype
			AND c.name like @column_name
		ORDER BY COLUMN_NAME
	end
	else
    begin
		/* this block is for the case where there IS pattern
			matching done on the table name */
		if @table_owner is null /*	If owner not supplied, match all */
			select @table_owner = '%'
		SELECT
			TABLE_QUALIFIER = convert(sysname,DB_NAME()),
			TABLE_OWNER = convert(sysname,USER_NAME(o.uid)),
			TABLE_NAME = convert(sysname,o.name),
			COLUMN_NAME = convert(sysname,c.name)
		FROM
			sysobjects o,
			systypes t,
			syscolumns c
			LEFT OUTER JOIN syscomments m on c.cdefault = m.id
				AND m.colid = 1
		WHERE
			o.name like @table_name
			AND user_name(o.uid) like @table_owner
			AND o.id = c.id
			AND o.type <> 'P'
			AND c.xusertype = t.xusertype
			AND c.name like @column_name
		ORDER BY COLUMN_NAME
	end








GO

/****** Object:  StoredProcedure [dbo].[BD_TX_Host]    Script Date: 03/15/2011 11:48:29 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


































CREATE PROCEDURE [dbo].[BD_TX_Host]
AS
Select HOST_NAME()































GO

/****** Object:  StoredProcedure [dbo].[BD_TX_Tablas]    Script Date: 03/15/2011 11:48:29 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE procedure [dbo].[BD_TX_Tablas](
			   @table_name		nvarchar(384)	= null,
			   @table_owner 	nvarchar(384)	= null,
			   @table_qualifier sysname	= null,
			   @table_type		varchar(100) = null)
as
	declare @type1 varchar(3)
	declare @tableindex int
	/* Special feature #1:	enumerate databases when owner and name
		 are blank but qualifier is explicitly '%'.  */
	if @table_qualifier = '%' and
		@table_owner = '' and
		@table_name = ''
	begin	/* If enumerating databases */
		select
			TABLE_QUALIFIER = convert(sysname,d.name),
			TABLE_OWNER = convert(sysname,null),
			TABLE_NAME = convert(sysname,null),
			TABLE_TYPE = convert(varchar(32),null),
			REMARKS = convert(varchar(254),null)	/* Remarks are NULL */
		from master.dbo.sysdatabases d
		where d.name <> 'model'	/* eliminate MODEL database */
		order by 1
	end
	/* Special feature #2:	enumerate owners when qualifier and name
		 are blank but owner is explicitly '%'.  */
	else if @table_qualifier = '' and
		@table_owner = '%' and
		@table_name = ''
	begin	/* If enumerating owners */
		select distinct
			TABLE_QUALIFIER = convert(sysname,null),
			TABLE_OWNER = convert(sysname,user_name(uid)),
			TABLE_NAME = convert(sysname,null),
			TABLE_TYPE = convert(varchar(32),null),
			REMARKS = convert(varchar(254),null)	/* Remarks are NULL */
		from sysobjects
		order by 2
	end
	/* Special feature #3:	enumerate table types when qualifier, owner and
		 name are blank but table type is explicitly '%'.	*/
	else if @table_qualifier = '' and
		@table_owner = '' and
		@table_name = '' and
		@table_type = '%'
	begin	/* If enumerating table types */
		select
			TABLE_QUALIFIER = convert(sysname,null),
			TABLE_OWNER = convert(sysname,null),
			TABLE_NAME = convert(sysname,null),
			TABLE_TYPE = convert(varchar(32),rtrim(substring('SYSTEM TABLETABLE       VIEW',(colid-1)*12+1,12))),
			REMARKS = convert(varchar(254),null)	/* Remarks are NULL */
		from sysobjects o, syscolumns c
		where o.id=c.id and o.name='sysusers' and colid<=3
	end
	else
	begin /* end of special features - do normal processing */
		if @table_qualifier is not null
		begin
			if db_name() <> @table_qualifier
			begin
				if @table_qualifier = ''
				begin  /* If empty qualifier supplied */
					/* Force an empty result set */
					select @table_name = ''
					select @table_owner = ''
				end
				else
				begin	/* If qualifier doesn't match current database */
					raiserror (15250, -1,-1)
					return
				end
			end
		end
		if @table_type is null
		begin	/* Select all ODBC supported table types */
			select @type1 = 'U'
		end
		else
		begin
			/*	TableType is case sensitive if CS server */
			select @type1 = ''
			if (charindex('''SYSTEM TABLE''',@table_type) <> 0)
				select @type1 = @type1 + 'S'	/* Add System Tables */
			if (charindex('''TABLE''',@table_type) <> 0)
				select @type1 = @type1 + 'U'	/* Add User Tables */
			if (charindex('''VIEW''',@table_type) <> 0)
				select @type1 = @type1 + 'V'	/* Add Views */
		end
		if @table_name is null
		begin	/*	If table name not supplied, match all */
			select @table_name = '%'
		end
		else
		begin
			if (@table_owner is null) and (charindex('%', @table_name) = 0)
			begin	/* If owner not specified and table is specified */
				if exists (select * from sysobjects
					where uid = user_id()
					and name = @table_name
					and (type = 'U' or type = 'V' or type = 'S'))
				begin	/* Override supplied owner w/owner of table */
					select @table_owner = user_name()
				end
			end
		end
		if @table_owner is null /* If no owner supplied, force wildcard */
			select @table_owner = '%'
		select
			TABLE_QUALIFIER = convert(sysname,db_name()),
			TABLE_OWNER = convert(sysname,user_name(o.uid)),
			TABLE_NAME = convert(sysname,o.name),	/* make nullable */
			TABLE_TYPE = convert(varchar(32),rtrim(
				substring('SYSTEM TABLE            TABLE       VIEW       ',
					(ascii(o.type)-83)*12+1,12))),	/* 'S'=0,'U'=2,'V'=3 */
			REMARKS = convert(varchar(254),null)	/* Remarks are NULL */
		from sysobjects o
		where
			o.name like @table_name
			and user_name(o.uid) like @table_owner
			and o.type in ('U','V','S')
			and charindex(substring(o.type,1,1),@type1) <> 0 /* Only desired types */
			and permissions (o.id)&4096 <> 0
		order by 4, 1, 2, 3
	end































GO

/****** Object:  StoredProcedure [dbo].[BZ_Pesadas_A]    Script Date: 03/15/2011 11:48:29 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE Procedure [dbo].[BZ_Pesadas_A]

	@IdPesada  int output,
	@NumeroPesada int,

	@IdUsuarioIngreso int ,
	@FechaIngreso datetime ,
	@Anulada varchar(2) ,
	@IdUsuarioAnulo int ,
	@FechaAnulacion datetime ,
	@Observaciones varchar(200) ,

	@IdArticulo int  ,
	@IdStock int ,
	@Partida varchar(20),
	@IdUnidad int,
	@IdUbicacion int ,
	@Cantidad numeric(12,2) ,

	@PesoBruto numeric(18,2) ,
	@PesoNeto numeric(18,2) ,
	@Tara numeric(18,2) ,

	@Chofer int , --id?
	@TxtChofer varchar(30) , --mientras no haya id
	@IdCamion int , -- id?
	@TxtCamion varchar(30) ,	

	@IdTransportista int , --id? Sí, el pronto tiene tabla de transportistas
	@IdProveedor int ,
	@IdCliente int ,
	@IdObra int ,

	@RemitoMaterial int ,
	@RemitoTransportista int,

	@CantidadEnOrigen numeric(12,2) ,
	@PesoBrutoIngresadoManualmente varchar(2),
	@TaraIngresadaManualmente varchar(2),

	@Tipo varchar(15),
	@IdSalidaMateriales int,
	@IdOtroIngresoAlmacen int,
	@IdRecepcion int,
	@IdRemito int,
	
	@NetoEquivalente  numeric(12,2) ,

	@IdChofer int,
	@IdFlete int,
	@RemitoTransportista2 int,
	@DistanciaRecorrida numeric(18,2),
	@CodigoTarifador varchar(10),
	@RemitoMaterial2 int,
	@NumeroOrdenCarga int,
	@Patente varchar(10),
	@IdDetallePedido int,
	@IdTarifaFlete int,
	@TarifaFlete numeric(18,2)

AS 

INSERT INTO [BZ_Pesadas]
(	NumeroPesada ,

	IdUsuarioIngreso  ,
	FechaIngreso  ,
	Anulada  ,
	IdUsuarioAnulo  ,
	FechaAnulacion  ,
	Observaciones  ,

	IdArticulo   ,
	IdStock  ,
	Partida ,
	IdUnidad ,
	IdUbicacion  ,
	Cantidad  ,

	PesoBruto  ,
	PesoNeto  ,
	Tara  ,

	Chofer  , 
	TxtChofer  ,
	IdCamion ,
	TxtCamion  ,	

	IdTransportista  , 
	IdProveedor  ,
	IdCliente  ,
	IdObra  ,

	RemitoMaterial  ,
	RemitoTransportista ,

	CantidadEnOrigen, 
	PesoBrutoIngresadoManualmente,
	TaraIngresadaManualmente,


	Tipo ,
	IdSalidaMateriales ,
	IdOtroIngresoAlmacen ,
	IdRecepcion ,
	IdRemito,

	NetoEquivalente,

	IdChofer,
	IdFlete,
	RemitoTransportista2,
	DistanciaRecorrida,
	CodigoTarifador,
	RemitoMaterial2,
	NumeroOrdenCarga,
	Patente,
	IdDetallePedido,
	IdTarifaFlete,
	TarifaFlete
)
VALUES
(
	@NumeroPesada ,

	@IdUsuarioIngreso  ,
	@FechaIngreso  ,
	@Anulada  ,
	@IdUsuarioAnulo  ,
	@FechaAnulacion  ,
	@Observaciones  ,

	@IdArticulo   ,
	@IdStock  ,
	@Partida ,
	@IdUnidad ,
	@IdUbicacion  ,
	@Cantidad  ,

	@PesoBruto  ,
	@PesoNeto  ,
	@Tara  ,

	@Chofer  , 
	@TxtChofer  ,
	@IdCamion ,
	@TxtCamion  ,	

	@IdTransportista  , 
	@IdProveedor  ,
	@IdCliente  ,
	@IdObra  ,

	@RemitoMaterial  ,
	@RemitoTransportista  ,

	@CantidadEnOrigen , 	
	@PesoBrutoIngresadoManualmente,
	@TaraIngresadaManualmente ,


	@Tipo ,
	@IdSalidaMateriales ,
	@IdOtroIngresoAlmacen ,
	@IdRecepcion ,
	@IdRemito ,

	@NetoEquivalente,

	@IdChofer,
	@IdFlete,
	@RemitoTransportista2,
	@DistanciaRecorrida,
	@CodigoTarifador,
	@RemitoMaterial2,
	@NumeroOrdenCarga,
	@Patente,
	@IdDetallePedido,
	@IdTarifaFlete,
	@TarifaFlete
)

SELECT @IdPesada=@@identity
RETURN(@IdPesada)

GO

/****** Object:  StoredProcedure [dbo].[BZ_Pesadas_M]    Script Date: 03/15/2011 11:48:30 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE Procedure [dbo].[BZ_Pesadas_M]

	@IdPesada  int,
	@NumeroPesada int,

	@IdUsuarioIngreso int ,
	@FechaIngreso datetime ,
	@Anulada varchar(2) ,
	@IdUsuarioAnulo int ,
	@FechaAnulacion datetime ,
	@Observaciones varchar(200) ,

	@IdArticulo int  ,
	@IdStock int ,
	@Partida varchar(20),
	@IdUnidad int,
	@IdUbicacion int ,
	@Cantidad numeric(12,2) ,

	@PesoBruto numeric(18,2) ,
	@PesoNeto numeric(18,2) ,
	@Tara numeric(18,2) ,

	@Chofer int , --id?
	@TxtChofer varchar(30) , --mientras no haya id
	@IdCamion int , -- id?
	@TxtCamion varchar(30) ,	

	@IdTransportista int , --id? Sí, el pronto tiene tabla de transportistas
	@IdProveedor int ,
	@IdCliente int ,
	@IdObra int ,

	@RemitoMaterial int ,
	@RemitoTransportista int ,

	@CantidadEnOrigen numeric(12,2), 	
	@PesoBrutoIngresadoManualmente varchar(2),
	@TaraIngresadaManualmente varchar(2),

	@Tipo varchar(15),
	@IdSalidaMateriales int,
	@IdOtroIngresoAlmacen int,
	@IdRecepcion int,
	@IdRemito int,

	@NetoEquivalente int,

	@IdChofer int,
	@IdFlete int,
	@RemitoTransportista2 int,
	@DistanciaRecorrida numeric(18,2),
	@CodigoTarifador varchar(10),
	@RemitoMaterial2 int,
	@NumeroOrdenCarga int,
	@Patente varchar(10),
	@IdDetallePedido int,
	@IdTarifaFlete int,
	@TarifaFlete numeric(18,2)

AS 

UPDATE [BZ_Pesadas]
SET

	NumeroPesada=@NumeroPesada ,

	IdUsuarioIngreso=@IdUsuarioIngreso  ,
	FechaIngreso=@FechaIngreso  ,
	Anulada=@Anulada  ,
	IdUsuarioAnulo=@IdUsuarioAnulo  ,
	FechaAnulacion=@FechaAnulacion  ,
	Observaciones=@Observaciones  ,

	IdArticulo=@IdArticulo   ,
	IdStock=@IdStock  ,
	Partida=@Partida ,
	IdUnidad=@IdUnidad ,
	IdUbicacion=@IdUbicacion  ,
	Cantidad=@Cantidad  ,

	PesoBruto=@PesoBruto  ,
	PesoNeto=@PesoNeto  ,
	Tara=@Tara  ,

	Chofer=@Chofer  , 
	TxtChofer=@TxtChofer  ,
	IdCamion=@IdCamion ,
	TxtCamion=@TxtCamion  ,	

	IdTransportista=@IdTransportista  , 
	IdProveedor=@IdProveedor  ,
	IdCliente=@IdCliente  ,
	IdObra=@IdObra  ,

	RemitoMaterial=@RemitoMaterial  ,
	RemitoTransportista=@RemitoTransportista ,

	CantidadEnOrigen=@CantidadEnOrigen, 	
	PesoBrutoIngresadoManualmente=@PesoBrutoIngresadoManualmente,
	TaraIngresadaManualmente=@TaraIngresadaManualmente,


	Tipo=@Tipo ,
	IdSalidaMateriales=@IdSalidaMateriales ,
	IdOtroIngresoAlmacen=@IdOtroIngresoAlmacen ,
	IdRecepcion=@IdRecepcion ,
	IdRemito=@IdRemito,

	NetoEquivalente=@NetoEquivalente,

	IdChofer=@IdChofer,
	IdFlete=@IdFlete,
	RemitoTransportista2=@RemitoTransportista2,
	DistanciaRecorrida=@DistanciaRecorrida,
	CodigoTarifador=@CodigoTarifador,
	RemitoMaterial2=@RemitoMaterial2,
	NumeroOrdenCarga=@NumeroOrdenCarga,
	Patente=@Patente,
	IdDetallePedido=@IdDetallePedido,
	IdTarifaFlete=@IdTarifaFlete,
	TarifaFlete=@TarifaFlete
WHERE (IdPesada=@IdPesada)

RETURN(@IdPesada)

GO

/****** Object:  StoredProcedure [dbo].[BZ_Pesadas_T]    Script Date: 03/15/2011 11:48:30 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE  Procedure [dbo].[BZ_Pesadas_T]
@idPesada int
AS 

--SET @CodigoPresupuesto=IsNull(@CodigoPresupuesto,0)

SELECT *
FROM BZ_Pesadas p
WHERE (p.IdPesada=@IdPesada)


GO

/****** Object:  StoredProcedure [dbo].[BZ_Pesadas_TL]    Script Date: 03/15/2011 11:48:30 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE Procedure [dbo].[BZ_Pesadas_TL]
AS 
Select 
IdPesada--, Descripcion as [Titulo]
FROM BZ_Pesadas 



GO

/****** Object:  StoredProcedure [dbo].[BZ_Pesadas_TT]    Script Date: 03/15/2011 11:48:30 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE Procedure [dbo].[BZ_Pesadas_TT]

AS 

Declare @vector_X varchar(30),@vector_T varchar(30)
Set @vector_X='01111111111111111133'
Set @vector_T='0241E911111E11111E00'

SELECT 

BZ_Pesadas.idPesada,
BZ_Pesadas.NumeroPesada as [N° Pesada],
BZ_Pesadas.FechaIngreso as [Fecha],
Articulos.Codigo as [Código],
Articulos.Descripcion as [Artículo],

BZ_Pesadas.Cantidad,
Unidades.descripcion as [Uni.],
Partida,
isnull(Clientes.RazonSocial, Proveedores.RazonSocial) as [Razon Social],
RemitoMaterial as [Remito],

Transportistas.RazonSocial as Transportista,
Camiones.Descripcion as [Camión],
RemitoTransportista as [Remito Trans.],
TxtChofer as Chofer,
PesoBruto as [Peso Bruto],

Tara,
PesoNeto as [Peso Neto],
BZ_Pesadas.Observaciones,

 @Vector_T as Vector_T,
 @Vector_X as Vector_X

FROM BZ_Pesadas 
LEFT OUTER JOIN Clientes ON  BZ_Pesadas.IdCliente = Clientes.IdCliente
LEFT OUTER JOIN Proveedores ON  BZ_Pesadas.IdProveedor = Proveedores.IdProveedor
LEFT OUTER JOIN Transportistas ON  BZ_Pesadas.IdTransportista = Transportistas.IdTransportista
LEFT OUTER JOIN Unidades ON BZ_Pesadas.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN Articulos ON BZ_Pesadas.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Articulos Camiones ON BZ_Pesadas.IdCamion = Camiones.IdArticulo
ORDER BY BZ_Pesadas.idPesada

GO

/****** Object:  StoredProcedure [dbo].[BZ_Pesadas_TX_Entradas]    Script Date: 03/15/2011 11:48:30 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE Procedure [dbo].[BZ_Pesadas_TX_Entradas]


@Desde datetime ='1/1/1900',
@Hasta datetime ='1/1/2100'

AS 
Declare @vector_X varchar(30),@vector_T varchar(30)
---------------123456789012345678901234567890	
Set @vector_X='01111111111111111133'
Set @vector_T='0111E111111E11111E00'
SELECT 

BZ_Pesadas.idPesada,
BZ_Pesadas.NumeroPesada as [N° Pesada],
BZ_Pesadas.FechaIngreso as [Fecha],
Articulos.Codigo as [Código],
Articulos.Descripcion as [Artículo],

BZ_Pesadas.Cantidad,
Unidades.descripcion as [Uni.],
Partida,
isnull(Clientes.RazonSocial, Proveedores.RazonSocial) as [Razon Social],
RemitoMaterial as [Remito],

Transportistas.RazonSocial as Transportista,
Camiones.Descripcion as [Camión],
RemitoTransportista as [Remito Trans.],
TxtChofer as Chofer,
PesoBruto as [Peso Bruto],

Tara,
PesoNeto as [Peso Neto],
BZ_Pesadas.Observaciones,

 @Vector_T as Vector_T,
 @Vector_X as Vector_X

FROM BZ_Pesadas 
LEFT OUTER JOIN Clientes ON  BZ_Pesadas.IdCliente = Clientes.IdCliente
LEFT OUTER JOIN Proveedores ON  BZ_Pesadas.IdProveedor = Proveedores.IdProveedor
LEFT OUTER JOIN Transportistas ON  BZ_Pesadas.IdTransportista = Transportistas.IdTransportista
LEFT OUTER JOIN Unidades ON BZ_Pesadas.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN Articulos ON BZ_Pesadas.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Articulos Camiones ON BZ_Pesadas.IdCamion = Camiones.IdArticulo
where not BZ_Pesadas.IdProveedor is null
	and (BZ_Pesadas.FechaIngreso Between @Desde And @hasta) --DATEADD(n,1439,@hasta))
ORDER BY Articulos.Codigo,BZ_Pesadas.idPesada


GO

/****** Object:  StoredProcedure [dbo].[BZ_Pesadas_TX_Pendientes]    Script Date: 03/15/2011 11:48:30 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE Procedure [dbo].[BZ_Pesadas_TX_Pendientes]

AS 

DECLARE @vector_X varchar(30),@vector_T varchar(30)

SET @vector_X='01111111111111111133'
SET @vector_T='0111E911111E11111E00'

SELECT 
 BZ_Pesadas.idPesada,
 BZ_Pesadas.NumeroPesada as [N° Pesada],
 BZ_Pesadas.FechaIngreso as [Fecha],
 Articulos.Codigo as [Código],
 Articulos.Descripcion as [Artículo],

 BZ_Pesadas.Cantidad,
 Unidades.descripcion as [Uni.],
 Partida,
 isnull(Clientes.RazonSocial, Proveedores.RazonSocial) as [Razon Social],
 RemitoMaterial as [Remito],

 Transportistas.RazonSocial as Transportista,
 Camiones.Descripcion as [Camión],
 RemitoTransportista as [Remito Trans.],
 TxtChofer as Chofer,
 PesoBruto as [Peso Bruto],

 Tara,
 PesoNeto as [Peso Neto],
 BZ_Pesadas.Observaciones,

 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM BZ_Pesadas 
LEFT OUTER JOIN Clientes ON  BZ_Pesadas.IdCliente = Clientes.IdCliente
LEFT OUTER JOIN Proveedores ON  BZ_Pesadas.IdProveedor = Proveedores.IdProveedor
LEFT OUTER JOIN Transportistas ON  BZ_Pesadas.IdTransportista = Transportistas.IdTransportista
LEFT OUTER JOIN Unidades ON BZ_Pesadas.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN Articulos ON BZ_Pesadas.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Articulos Camiones ON BZ_Pesadas.IdCamion = Camiones.IdArticulo
WHERE 	(Tara is null) or (Tara=0) or (PesoBruto is null) or (PesoBruto=0)
ORDER BY BZ_Pesadas.idPesada

GO

/****** Object:  StoredProcedure [dbo].[BZ_Pesadas_TX_Salidas]    Script Date: 03/15/2011 11:48:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE Procedure [dbo].[BZ_Pesadas_TX_Salidas]

@Desde datetime ='1/1/1900',
@Hasta datetime ='1/1/2100'

AS 

Declare @vector_X varchar(30),@vector_T varchar(30)
---------------123456789012345678901234567890	
Set @vector_X='01111111111111111133'
Set @vector_T='0111E111111E11111E00'

SELECT 
 BZ_Pesadas.idPesada,
 BZ_Pesadas.NumeroPesada as [N° Pesada],
 BZ_Pesadas.FechaIngreso as [Fecha],
 Articulos.Codigo as [Código],
 Articulos.Descripcion as [Artículo],

 BZ_Pesadas.Cantidad,
 Unidades.descripcion as [Uni.],
 Partida,
 isnull(Clientes.RazonSocial, Proveedores.RazonSocial) as [Razon Social],
 RemitoMaterial as [Remito],

 Transportistas.RazonSocial as Transportista,
 Camiones.Descripcion as [Camión],
 RemitoTransportista as [Remito Trans.],
 TxtChofer as Chofer,
 PesoBruto as [Peso Bruto],

 Tara,
 PesoNeto as [Peso Neto],
 BZ_Pesadas.Observaciones,

 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM BZ_Pesadas 
LEFT OUTER JOIN Clientes ON  BZ_Pesadas.IdCliente = Clientes.IdCliente
LEFT OUTER JOIN Proveedores ON  BZ_Pesadas.IdProveedor = Proveedores.IdProveedor
LEFT OUTER JOIN Transportistas ON  BZ_Pesadas.IdTransportista = Transportistas.IdTransportista
LEFT OUTER JOIN Unidades ON BZ_Pesadas.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN Articulos ON BZ_Pesadas.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Articulos Camiones ON BZ_Pesadas.IdArticulo = Camiones.IdArticulo
WHERE not BZ_Pesadas.IdCliente is null and (BZ_Pesadas.FechaIngreso Between @Desde And @hasta) --DATEADD(n,1439,@hasta))
ORDER BY Articulos.Codigo,BZ_Pesadas.idPesada

GO

/****** Object:  StoredProcedure [dbo].[BZ_Pesadas_TX_Todas]    Script Date: 03/15/2011 11:48:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE Procedure [dbo].[BZ_Pesadas_TX_Todas]


@Desde datetime ='1/1/1900',
@Hasta datetime ='1/1/2100'

AS 

Declare @vector_X varchar(30),@vector_T varchar(30)
Set @vector_X='01111111111111111133'
Set @vector_T='0142E911111E11111E00'

SELECT 
 BZ_Pesadas.idPesada,
 BZ_Pesadas.NumeroPesada as [N° Pesada],
 BZ_Pesadas.FechaIngreso as [Fecha],
 Articulos.Codigo as [Código],
 Articulos.Descripcion as [Artículo],

 BZ_Pesadas.Cantidad,
 Unidades.descripcion as [Uni.],
 Partida,
 isnull(Clientes.RazonSocial, Proveedores.RazonSocial) as [Razon Social],
 RemitoMaterial as [Remito],

 Transportistas.RazonSocial as Transportista,
 Camiones.Descripcion as [Camión],
 RemitoTransportista as [Remito Trans.],
 TxtChofer as Chofer,
 PesoBruto as [Peso Bruto],

 Tara,
 PesoNeto as [Peso Neto],
 BZ_Pesadas.Observaciones,

 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM BZ_Pesadas 
LEFT OUTER JOIN Clientes ON  BZ_Pesadas.IdCliente = Clientes.IdCliente
LEFT OUTER JOIN Proveedores ON  BZ_Pesadas.IdProveedor = Proveedores.IdProveedor
LEFT OUTER JOIN Transportistas ON  BZ_Pesadas.IdTransportista = Transportistas.IdTransportista
LEFT OUTER JOIN Unidades ON BZ_Pesadas.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN Articulos ON BZ_Pesadas.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Articulos Camiones ON BZ_Pesadas.IdArticulo = Camiones.IdArticulo
WHERE (BZ_Pesadas.FechaIngreso Between @Desde And @hasta) --DATEADD(n,1439,@hasta))

UNION ALL 

SELECT DISTINCT
	8888888 as idPesada,
	Null as [N° Pesada],
 	convert(varchar,dateadd(d,1,BZ_Pesadas.FechaIngreso),111) as [Fecha],
	Articulos.Codigo as [Código],
	'TOTAL ' + isnull(Articulos.Descripcion,'') + ' ' +  convert(varchar,BZ_Pesadas.FechaIngreso,111) as [Artículo],

	sum(BZ_Pesadas.Cantidad) as Cantidad,
	Unidades.descripcion as [Uni.],
	Null as Partida,
	Null as [Razon Social],
	Null as [Remito],
	
	Null as Transportista,
	Null as [Camión],
	Null as [Remito Trans.],
	Null as Chofer,
	sum(PesoBruto) as [Peso Bruto],

	sum(Tara) as Tara,
	sum(PesoNeto) as [Peso Neto],
	Null as Observaciones

 	,@Vector_T as Vector_T,
	@Vector_X as Vector_X
FROM BZ_Pesadas 
LEFT OUTER JOIN Clientes ON  BZ_Pesadas.IdCliente = Clientes.IdCliente
LEFT OUTER JOIN Proveedores ON  BZ_Pesadas.IdProveedor = Proveedores.IdProveedor
LEFT OUTER JOIN Transportistas ON  BZ_Pesadas.IdTransportista = Transportistas.IdTransportista
LEFT OUTER JOIN Unidades ON BZ_Pesadas.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN Articulos ON BZ_Pesadas.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Articulos Camiones ON BZ_Pesadas.IdArticulo = Camiones.IdArticulo
WHERE (BZ_Pesadas.FechaIngreso Between @Desde And @hasta) --DATEADD(n,1439,@hasta))
GROUP BY 
	Articulos.Codigo,
	Articulos.Descripcion,
 	convert(varchar,dateadd(d,1,BZ_Pesadas.FechaIngreso),111),
	'TOTAL ' + isnull(Articulos.Descripcion,'') +  + ' ' +convert(varchar,BZ_Pesadas.FechaIngreso,111),
	Unidades.descripcion

UNION ALL 

SELECT 
	999999999 as idPesada,
	Null as [N° Pesada],
	Null as [Fecha],
	Articulos.Codigo as [Código],
	'TOTAL ' + isnull(Articulos.Descripcion,'') as [Artículo],
	
	sum(BZ_Pesadas.Cantidad) as Cantidad,
	Unidades.descripcion as [Uni.],
	Null as Partida,
	Null as [Razon Social],
	Null as [Remito],
	
	Null as Transportista,
	Null as [Camión],
	Null as [Remito Trans.],
	Null as Chofer,
	sum(PesoBruto) as [Peso Bruto],
	
	sum(Tara) as Tara,
	sum(PesoNeto) as [Peso Neto],
	Null as Observaciones

 	,@Vector_T as Vector_T,
	@Vector_X as Vector_X
FROM BZ_Pesadas 
LEFT OUTER JOIN Clientes ON  BZ_Pesadas.IdCliente = Clientes.IdCliente
LEFT OUTER JOIN Proveedores ON  BZ_Pesadas.IdProveedor = Proveedores.IdProveedor
LEFT OUTER JOIN Transportistas ON  BZ_Pesadas.IdTransportista = Transportistas.IdTransportista
LEFT OUTER JOIN Unidades ON BZ_Pesadas.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN Articulos ON BZ_Pesadas.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Articulos Camiones ON BZ_Pesadas.IdArticulo = Camiones.IdArticulo
WHERE (BZ_Pesadas.FechaIngreso Between @Desde And @hasta) --DATEADD(n,1439,@hasta))
GROUP BY Articulos.Codigo,Articulos.Descripcion,Unidades.descripcion

UNION ALL 

SELECT 
	999999999 as idPesada,
	Null as [N° Pesada],
	Null as [Fecha],
	'zzzzzzzzzz' as [Código], --para que al ordenar quede al final
	'TOTAL GENERAL' as [Artículo],
	
	sum(BZ_Pesadas.Cantidad) as Cantidad,
	Null as [Uni.],
	Null as Partida,
	Null as [Razon Social],
	Null as [Remito],
	
	Null as Transportista,
	Null as [Camión],
	Null as [Remito Trans.],
	Null as Chofer,
	sum(PesoBruto) as [Peso Bruto],
	
	sum(Tara) as Tara,
	sum(PesoNeto) as [Peso Neto],
	Null as Observaciones

	,@Vector_T as Vector_T,
	@Vector_X as Vector_X
FROM BZ_Pesadas 
LEFT OUTER JOIN Clientes ON  BZ_Pesadas.IdCliente = Clientes.IdCliente
LEFT OUTER JOIN Proveedores ON  BZ_Pesadas.IdProveedor = Proveedores.IdProveedor
LEFT OUTER JOIN Transportistas ON  BZ_Pesadas.IdTransportista = Transportistas.IdTransportista
LEFT OUTER JOIN Unidades ON BZ_Pesadas.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN Articulos ON BZ_Pesadas.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Articulos Camiones ON BZ_Pesadas.IdArticulo = Camiones.IdArticulo
WHERE (BZ_Pesadas.FechaIngreso Between @Desde And @hasta) --DATEADD(n,1439,@hasta))
--GROUP BY Articulos.Codigo,Articulos.Descripcion,Unidades.descripcion

ORDER BY Articulos.Codigo,BZ_Pesadas.idPesada

GO

/****** Object:  StoredProcedure [dbo].[BZ_Pesadas_TX_TT]    Script Date: 03/15/2011 11:48:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE Procedure [dbo].[BZ_Pesadas_TX_TT]
@idPesada int

AS 

DECLARE @vector_X varchar(30),@vector_T varchar(30)
---------------123456789012345678901234567890	
SET @vector_X='01111111111111111133'
SET @vector_T='0111E111111E11111E00'

SELECT 
 BZ_Pesadas.idPesada,
 BZ_Pesadas.NumeroPesada as [N° Pesada],
 BZ_Pesadas.FechaIngreso as [Fecha],
 Articulos.Codigo as [Código],
 Articulos.Descripcion as [Artículo],

 BZ_Pesadas.Cantidad,
 Unidades.descripcion as [Uni.],
 Partida,
 isnull(Clientes.RazonSocial, Proveedores.RazonSocial) as [Razon Social],
 RemitoMaterial as [Remito],

 Transportistas.RazonSocial as Transportista,
 Camiones.Descripcion as [Camión],
 RemitoTransportista as [Remito Trans.],
 TxtChofer as Chofer,
 PesoBruto as [Peso Bruto],

 Tara,
 PesoNeto as [Peso Neto],
 BZ_Pesadas.Observaciones,

 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM BZ_Pesadas 
LEFT OUTER JOIN Clientes ON  BZ_Pesadas.IdCliente = Clientes.IdCliente
LEFT OUTER JOIN Proveedores ON  BZ_Pesadas.IdProveedor = Proveedores.IdProveedor
LEFT OUTER JOIN Transportistas ON  BZ_Pesadas.IdTransportista = Transportistas.IdTransportista
--LEFT OUTER JOIN Empleados ON  BZ_Pesadas.IdEmpleado = Empleados.IdEmpleado
LEFT OUTER JOIN Unidades ON BZ_Pesadas.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN Articulos ON BZ_Pesadas.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Articulos Camiones ON BZ_Pesadas.IdCamion = Articulos.IdArticulo
WHERE (idPesada=@idPesada)
ORDER BY BZ_Pesadas.idPesada

GO

/****** Object:  StoredProcedure [dbo].[Camiones_A]    Script Date: 03/15/2011 11:48:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


create Procedure [dbo].[Camiones_A]
	@IdCamion  int output,
	@NumeroCamion int,


	@IdUsuarioIngreso int  , 
	@FechaIngreso datetime ,

	@Anulada varchar(2) ,
	@IdUsuarioAnulo int ,
	@FechaAnulacion datetime ,

	@Observaciones varchar(200) ,

	@Patente  varchar(20),
	@Descripcion  varchar(50),

	@IdTransportista int
	

AS 

INSERT INTO [Camiones]
(
	NumeroCamion ,

	IdUsuarioIngreso  , 
	FechaIngreso ,

	Anulada  ,
	IdUsuarioAnulo  ,
	FechaAnulacion  ,

	Observaciones  ,
	
	Patente  ,
	Descripcion  ,

	IdTransportista 
)
VALUES
(


	@NumeroCamion ,

	@IdUsuarioIngreso  , 
	@FechaIngreso ,

	@Anulada  ,
	@IdUsuarioAnulo  ,
	@FechaAnulacion  ,

	@Observaciones ,
	
	@Patente  ,
	@Descripcion  ,

	@IdTransportista 
)

SELECT @IdCamion=@@identity
RETURN(@IdCamion)




GO

/****** Object:  StoredProcedure [dbo].[Camiones_M]    Script Date: 03/15/2011 11:48:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


create Procedure [dbo].[Camiones_M]

	@IdCamion  int ,


	@NumeroCamion int,


	@IdUsuarioIngreso int  , 
	@FechaIngreso datetime ,

	@Anulada varchar(2) ,
	@IdUsuarioAnulo int ,
	@FechaAnulacion datetime ,

	@Observaciones varchar(200) ,

	@Patente  varchar(20),
	@Descripcion  varchar(50),

	@IdTransportista int
	

AS 

UPDATE [Camiones]
SET

	NumeroCamion=@NumeroCamion ,

	IdUsuarioIngreso=@IdUsuarioIngreso  ,
	FechaIngreso=@FechaIngreso  ,
	Anulada=@Anulada  ,

	IdUsuarioAnulo=@IdUsuarioAnulo  ,
	FechaAnulacion=@FechaAnulacion  ,

	Observaciones=@Observaciones  ,

	Patente=@Patente  ,
	Descripcion=@Descripcion  ,

	IdTransportista=@IdTransportista 


WHERE (IdCamion=@IdCamion)

RETURN(@IdCamion)



GO

/****** Object:  StoredProcedure [dbo].[Camiones_T]    Script Date: 03/15/2011 11:48:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE  Procedure [dbo].[Camiones_T]
@idCamion int
AS 

--SET @CodigoPresupuesto=IsNull(@CodigoPresupuesto,0)

SELECT *
FROM Camiones p
WHERE (p.IdCamion=@IdCamion)


GO

/****** Object:  StoredProcedure [dbo].[Camiones_TL]    Script Date: 03/15/2011 11:48:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE Procedure [dbo].[Camiones_TL]
AS 
Select 
IdCamion, Descripcion as [Titulo]
FROM Camiones 



GO

/****** Object:  StoredProcedure [dbo].[Camiones_TT]    Script Date: 03/15/2011 11:48:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE Procedure [dbo].[Camiones_TT]

AS 
Declare @vector_X varchar(30),@vector_T varchar(30)
---------------123456789012345678901234567890	
Set @vector_X='01133'
Set @vector_T='01100'

SELECT 

Camiones.idCamion,
--Camiones.NumeroCamion as [N° Camion],
--Camiones.FechaIngreso as [Fecha],
Camiones.Patente,
Camiones.Descripcion,
--Articulos.Codigo as [Código],
--Articulos.Descripcion as [Artículo],


 @Vector_T as Vector_T,
 @Vector_X as Vector_X

FROM Camiones 
--LEFT OUTER JOIN Clientes ON  Camiones.IdCliente = Clientes.IdCliente
--LEFT OUTER JOIN Proveedores ON  Camiones.IdProveedor = Proveedores.IdProveedor
LEFT OUTER JOIN Transportistas ON  Camiones.IdTransportista = Transportistas.IdTransportista
--LEFT OUTER JOIN Unidades ON Camiones.IdUnidad = Unidades.IdUnidad
--LEFT OUTER JOIN Articulos ON Camiones.IdArticulo = Articulos.IdArticulo
--LEFT OUTER JOIN Articulos Camiones ON Camiones.IdCamion = Camiones.IdArticulo
ORDER BY Camiones.idCamion


GO

/****** Object:  StoredProcedure [dbo].[Camiones_TX_TT]    Script Date: 03/15/2011 11:48:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE Procedure [dbo].[Camiones_TX_TT]
@idCamion int

AS 
Declare @vector_X varchar(30),@vector_T varchar(30)
---------------123456789012345678901234567890	
Set @vector_X='01133'
Set @vector_T='01100'

SELECT 

Camiones.idCamion,
--Camiones.NumeroCamion as [N° Camion],
--Camiones.FechaIngreso as [Fecha],
Camiones.Patente,
Camiones.Descripcion,
--Articulos.Codigo as [Código],
--Articulos.Descripcion as [Artículo],

--Camiones.Cantidad,
--Unidades.descripcion as [Uni.],
--Partida,
--isnull(Clientes.RazonSocial, Proveedores.RazonSocial) as [Razon Social],

--Tara,
--PesoNeto as [Peso Neto],
--Camiones.Observaciones,

 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM Camiones 
--LEFT OUTER JOIN Clientes ON  Camiones.IdCliente = Clientes.IdCliente
--LEFT OUTER JOIN Proveedores ON  Camiones.IdProveedor = Proveedores.IdProveedor
LEFT OUTER JOIN Transportistas ON  Camiones.IdTransportista = Transportistas.IdTransportista
--LEFT OUTER JOIN Empleados ON  Camiones.IdEmpleado = Empleados.IdEmpleado

--LEFT OUTER JOIN Unidades ON Camiones.IdUnidad = Unidades.IdUnidad
--LEFT OUTER JOIN Articulos ON Camiones.IdArticulo = Articulos.IdArticulo
--LEFT OUTER JOIN Articulos Camiones ON Camiones.IdCamion = Articulos.IdArticulo
WHERE (idCamion=@idCamion)
ORDER BY Camiones.idCamion



GO

/****** Object:  StoredProcedure [dbo].[Cargos_A]    Script Date: 03/15/2011 11:48:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Cargos_A]
@IdCargo int  output,
@Descripcion varchar(50)
AS 
Insert into [Cargos]
(Descripcion)
Values(@Descripcion)
Select @IdCargo=@@identity
Return(@IdCargo)































GO

/****** Object:  StoredProcedure [dbo].[Cargos_E]    Script Date: 03/15/2011 11:48:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Cargos_E]
@IdCargo int  AS 
Delete Cargos
where (IdCargo=@IdCargo)































GO

/****** Object:  StoredProcedure [dbo].[Cargos_M]    Script Date: 03/15/2011 11:48:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE  Procedure [dbo].[Cargos_M]
@IdCargo int ,
@Descripcion varchar(50)
AS
Update Cargos
SET
Descripcion=@Descripcion
where (IdCargo=@IdCargo)
Return(@IdCargo)































GO

/****** Object:  StoredProcedure [dbo].[Cargos_T]    Script Date: 03/15/2011 11:48:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Cargos_T]
@IdCargo int
AS 
SELECT IdCargo, Descripcion
FROM Cargos
where (IdCargo=@IdCargo)































GO

/****** Object:  StoredProcedure [dbo].[Cargos_TL]    Script Date: 03/15/2011 11:48:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Cargos_TL]
AS 
Select IdCargo,Descripcion as Titulo
FROM Cargos
order by Descripcion































GO

/****** Object:  StoredProcedure [dbo].[Cargos_TT]    Script Date: 03/15/2011 11:48:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Cargos_TT]
AS 
Select IdCargo,Descripcion
FROM Cargos
order by Descripcion































GO

/****** Object:  StoredProcedure [dbo].[Cargos_TX_TT]    Script Date: 03/15/2011 11:48:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Cargos_TX_TT]
@IdCargo int
AS 
Select IdCargo,Descripcion
FROM Cargos
where (IdCargo=@IdCargo)































GO

/****** Object:  StoredProcedure [dbo].[CentrosCosto_A]    Script Date: 03/15/2011 11:48:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[CentrosCosto_A]
@IdCentroCosto int  output,
@Codigo varchar(10),
@Descripcion varchar(50)
AS 
Insert into [CentrosCosto]
(
Codigo,
Descripcion
)
Values(
@Codigo,
@Descripcion
)
Select @IdCentroCosto=@@identity
Return(@IdCentroCosto)
































GO

/****** Object:  StoredProcedure [dbo].[CentrosCosto_E]    Script Date: 03/15/2011 11:48:32 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[CentrosCosto_E]
@IdCentroCosto int  AS 
Delete CentrosCosto
where (IdCentroCosto=@IdCentroCosto)
































GO

/****** Object:  StoredProcedure [dbo].[CentrosCosto_M]    Script Date: 03/15/2011 11:48:32 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE  Procedure [dbo].[CentrosCosto_M]
@IdCentroCosto int,
@Codigo varchar(10),
@Descripcion varchar(50)
AS
Update CentrosCosto
SET
Codigo=@Codigo,
Descripcion=@Descripcion
where (IdCentroCosto=@IdCentroCosto)
Return(@IdCentroCosto)
































GO

/****** Object:  StoredProcedure [dbo].[CentrosCosto_T]    Script Date: 03/15/2011 11:48:32 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[CentrosCosto_T]
@IdCentroCosto int
AS 
SELECT *
FROM CentrosCosto
where (IdCentroCosto=@IdCentroCosto)
































GO

/****** Object:  StoredProcedure [dbo].[CentrosCosto_TL]    Script Date: 03/15/2011 11:48:32 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[CentrosCosto_TL]
AS 
Select IdCentroCosto,Codigo + ' ' + Descripcion as Titulo
FROM CentrosCosto
order by Descripcion
































GO

/****** Object:  StoredProcedure [dbo].[CentrosCosto_TT]    Script Date: 03/15/2011 11:48:32 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[CentrosCosto_TT]
AS 
Select *
FROM CentrosCosto
order by Descripcion
































GO

/****** Object:  StoredProcedure [dbo].[CentrosCosto_TX_TT]    Script Date: 03/15/2011 11:48:32 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[CentrosCosto_TX_TT]
@IdCentroCosto int
AS 
Select *
FROM CentrosCosto
where (IdCentroCosto=@IdCentroCosto)
































GO

/****** Object:  StoredProcedure [dbo].[Choferes_A]    Script Date: 03/15/2011 11:48:32 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE Procedure [dbo].[Choferes_A]

@IdChofer int  output,
@Nombre varchar(50),
@PathImagen1 varchar(200)

AS 

INSERT INTO [Choferes]
(
 Nombre,
 PathImagen1
)
VALUES
(
 @Nombre,
 @PathImagen1
)

SELECT @IdChofer=@@identity
RETURN(@IdChofer)


GO

/****** Object:  StoredProcedure [dbo].[Choferes_E]    Script Date: 03/15/2011 11:48:32 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO



CREATE Procedure [dbo].[Choferes_E]

@IdChofer int  

AS 

DELETE Choferes
WHERE (IdChofer=@IdChofer)


GO

/****** Object:  StoredProcedure [dbo].[Choferes_M]    Script Date: 03/15/2011 11:48:32 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE  Procedure [dbo].[Choferes_M]

@IdChofer int ,
@Nombre varchar(50),
@PathImagen1 varchar(200)

AS

IF EXISTS(Select IdChofer From Choferes Where IdChofer=@IdChofer)
    BEGIN
	UPDATE Choferes
	SET
	 Nombre=@Nombre,
	 PathImagen1=@PathImagen1
	WHERE (IdChofer=@IdChofer)
    END
ELSE
    BEGIN
	INSERT INTO [Choferes]
	(
	 IdChofer,
	 Nombre,
	 PathImagen1
	)
	VALUES
	(
	 @IdChofer,
	 @Nombre,
	 @PathImagen1
	)
	SELECT @IdChofer=@@identity
    END

RETURN(@IdChofer)

GO

/****** Object:  StoredProcedure [dbo].[Choferes_T]    Script Date: 03/15/2011 11:48:32 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO



CREATE Procedure [dbo].[Choferes_T]

@IdChofer int

AS 

SELECT*
FROM Choferes
WHERE (IdChofer=@IdChofer)


GO

/****** Object:  StoredProcedure [dbo].[Choferes_TL]    Script Date: 03/15/2011 11:48:32 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO



CREATE Procedure [dbo].[Choferes_TL]

AS 

SELECT IdChofer, Nombre as [Titulo]
FROM Choferes 
ORDER BY Nombre


GO

/****** Object:  StoredProcedure [dbo].[Choferes_TT]    Script Date: 03/15/2011 11:48:32 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO



CREATE Procedure [dbo].[Choferes_TT]

AS 

SELECT *
FROM Choferes
ORDER BY Nombre


GO

/****** Object:  StoredProcedure [dbo].[Choferes_TX_TT]    Script Date: 03/15/2011 11:48:32 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO



CREATE Procedure [dbo].[Choferes_TX_TT]

@IdChofer int

AS 

SELECT *
FROM Choferes
WHERE (IdChofer=@IdChofer)


GO

/****** Object:  StoredProcedure [dbo].[Clientes_E]    Script Date: 03/15/2011 11:48:32 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



































CREATE Procedure [dbo].[Clientes_E]
@IdCliente int  AS 
Delete Clientes
where (IdCliente=@IdCliente)



































GO

/****** Object:  StoredProcedure [dbo].[Clientes_M]    Script Date: 03/15/2011 11:48:32 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE  Procedure [dbo].[Clientes_M]
	@IdCliente		int,
	@RazonSocial	 	varchar(50),
	@Direccion 		varchar(50),
	@IdLocalidad	 	int,
	@CodigoPostal	 	varchar(30),
	@IdProvincia	 	int,
	@IdPais	 		int,
	@Telefono 		varchar(50),
	@Fax	 		varchar(50),
	@Email 			varchar(50),
	@Cuit	 		varchar(13),
	@IdCodigoIva	 	tinyint,
	@FechaAlta	 	datetime,
	@Contacto 		varchar(50),
	@EnviarEmail		tinyint,
	@DireccionEntrega	varchar(50),
	@IdLocalidadEntrega	int,
	@IdProvinciaEntrega	int,
	@CodigoCliente		int,
	@IdCuenta		int,
	@Saldo			numeric(18,2),
	@SaldoDocumentos	numeric(18,2),
	@Vendedor1		int,
	@CreditoMaximo		numeric(18,2),
	@IGCondicion		int,
	@IdCondicionVenta	int,
	@IdMoneda		int,
	@IBNumeroInscripcion	varchar(20),
	@IBCondicion		int,
	@TipoCliente		int,
	@Codigo			varchar(10),
	@IdListaPrecios		int,
	@IdIBCondicionPorDefecto int,
	@Confirmado		varchar(2),
	@CodigoPresto		varchar(13),
	@Observaciones		ntext
AS 
IF Exists(Select cli.IdCliente From Clientes cli Where cli.IdCliente=@IdCliente)
	BEGIN
		UPDATE Clientes
		SET
			RazonSocial	 	= @RazonSocial,
			Direccion		= @Direccion,
			IdLocalidad	 	= @IdLocalidad,
			CodigoPostal		= @CodigoPostal,
			IdProvincia	 	= @IdProvincia,
			IdPais	 		= @IdPais,
			Telefono	 	= @Telefono,
			Fax	 		= @Fax,
			Email 			= @Email,
			Cuit	 		= @Cuit,
			IdCodigoIva	 	= @IdCodigoIva,
			FechaAlta	 	= @FechaAlta,
			Contacto	 	= @Contacto,
			EnviarEmail		= @EnviarEmail,
			DireccionEntrega	= @DireccionEntrega,
			IdLocalidadEntrega	= @IdLocalidadEntrega,
			IdProvinciaEntrega	= @IdProvinciaEntrega,
			CodigoCliente		= @CodigoCliente,
			IdCuenta		= @IdCuenta,
			Saldo			= @Saldo,
			SaldoDocumentos	= @SaldoDocumentos,
			Vendedor1		= @Vendedor1,
			CreditoMaximo		= @CreditoMaximo,
			IGCondicion		= @IGCondicion,
			IdCondicionVenta	= @IdCondicionVenta,
			IdMoneda		= @IdMoneda,
			IBNumeroInscripcion	= @IBNumeroInscripcion,
			IBCondicion		= @IBCondicion,
			TipoCliente		= @TipoCliente,
			Codigo			= @Codigo,
			IdListaPrecios		= @IdListaPrecios,
			IdIBCondicionPorDefecto = @IdIBCondicionPorDefecto,
			Confirmado		=@Confirmado,
			CodigoPresto		=@CodigoPresto,
			Observaciones		=@Observaciones
		WHERE 
			( [IdCliente]	 	= @IdCliente)
	END
ELSE
	BEGIN
		INSERT INTO Clientes
		(
			RazonSocial,
			Direccion,
			IdLocalidad,
			CodigoPostal,
			IdProvincia,
			IdPais,
			Telefono,
			Fax,
			Email,
			Cuit,
			IdCodigoIva,
			FechaAlta,
			Contacto,
			EnviarEmail,
			DireccionEntrega,
			IdLocalidadEntrega,
			IdProvinciaEntrega,
			CodigoCliente,
			IdCuenta,
			Saldo,
			SaldoDocumentos,
			Vendedor1,
			CreditoMaximo,
			IGCondicion,
			IdCondicionVenta,
			IdMoneda,
			IBNumeroInscripcion,
			IBCondicion,
			TipoCliente,
			Codigo,
			IdListaPrecios,
			IdIBCondicionPorDefecto,
			Confirmado,
			CodigoPresto,
			Observaciones
		)
		 VALUES 
		(
			 @RazonSocial,
			 @Direccion,
			 @IdLocalidad,
			 @CodigoPostal,
			 @IdProvincia,
			 @IdPais,
			 @Telefono,
			 @Fax,
			 @Email,
			 @Cuit,
			 @IdCodigoIva,
			 @FechaAlta,
			 @Contacto,
			 @EnviarEmail,
			 @DireccionEntrega,
			 @IdLocalidadEntrega,
			 @IdProvinciaEntrega,
			 @CodigoCliente,
			 @IdCuenta,
			 @Saldo,
			 @SaldoDocumentos,
			 @Vendedor1,
			 @CreditoMaximo,
			 @IGCondicion,
			 @IdCondicionVenta,
			 @IdMoneda,
			 @IBNumeroInscripcion,
			 @IBCondicion,
			 @TipoCliente,
			 @Codigo,
			 @IdListaPrecios,
			 @IdIBCondicionPorDefecto,
			 @Confirmado,
			 @CodigoPresto,
			@Observaciones
		)
	END
RETURN(@IdCliente)





GO

/****** Object:  StoredProcedure [dbo].[Clientes_T]    Script Date: 03/15/2011 11:48:32 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



































CREATE Procedure [dbo].[Clientes_T]
@IdCliente int
AS 
SELECT * 
FROM Clientes
WHERE (IdCliente=@IdCliente)



































GO

/****** Object:  StoredProcedure [dbo].[Clientes_TL]    Script Date: 03/15/2011 11:48:32 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



































CREATE Procedure [dbo].[Clientes_TL]
AS 
Select IdCliente,RazonSocial as Titulo
FROM Clientes order by RazonSocial



































GO

/****** Object:  StoredProcedure [dbo].[Clientes_TT]    Script Date: 03/15/2011 11:48:33 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO








CREATE  Procedure [dbo].[Clientes_TT]
AS 
SELECT 
 Clientes.IdCliente, 
 Clientes.RazonSocial as [Razon social],
 Clientes.Codigo as [Codigo],
 Clientes.Direccion, 
 (Select Localidades.Nombre From Localidades 
  Where Clientes.IdLocalidad=Localidades.IdLocalidad) as [Localidad], 
 Clientes.CodigoPostal, 
 (Select Provincias.Nombre From Provincias 
  Where Clientes.IdProvincia=Provincias.IdProvincia) as [Provincia], 
 Paises.Descripcion as [Pais], 
 Clientes.Telefono, 
 Clientes.Fax, 
 Clientes.Email, 
 Clientes.Cuit, 
 DescripcionIva.Descripcion as [Condicion IVA], 
 Clientes.FechaAlta as [Fecha alta], 
 Clientes.Contacto,
 Clientes.DireccionEntrega as [Direccion de entrega], 
 (Select Localidades.Nombre From Localidades 
  Where Clientes.IdLocalidadEntrega=Localidades.IdLocalidad) AS [Localidad (entrega)], 
 (Select Provincias.Nombre From Provincias 
  Where Clientes.IdProvinciaEntrega=Provincias.IdProvincia) AS [Provincia (entrega)],
 Clientes.CodigoPresto as [Codigo PRESTO],
 Clientes.Observaciones
FROM Clientes 
LEFT OUTER JOIN DescripcionIva ON Clientes.IdCodigoIva = DescripcionIva.IdCodigoIva 
LEFT OUTER JOIN Paises ON Clientes.IdPais = Paises.IdPais
WHERE (Clientes.Confirmado is null or Clientes.Confirmado<>'NO')
ORDER BY Clientes.RazonSocial







GO

/****** Object:  StoredProcedure [dbo].[Clientes_TX_Busca]    Script Date: 03/15/2011 11:48:33 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO
























CREATE Procedure [dbo].[Clientes_TX_Busca]
@Buscar varchar(50)
as 
Select 
 IdCliente,
 RazonSocial as [Titulo]
From Clientes
Where RazonSocial LIKE '%' + @buscar + '%' 
Order by RazonSocial
























GO

/****** Object:  StoredProcedure [dbo].[Clientes_TX_Busca1]    Script Date: 03/15/2011 11:48:33 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO
























CREATE Procedure [dbo].[Clientes_TX_Busca1]
@Buscar varchar(50)
AS 
SELECT 
 IdCliente,
 RazonSocial as [Titulo]
FROM Clientes
WHERE (RazonSocial LIKE '%' + @buscar + '%' OR Codigo LIKE '%' + @buscar + '%')
ORDER by [Titulo]























GO

/****** Object:  StoredProcedure [dbo].[Clientes_TX_PorCodigo]    Script Date: 03/15/2011 11:48:33 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO






























CREATE Procedure [dbo].[Clientes_TX_PorCodigo]
@Codigo varchar(10)
AS 
SELECT * 
FROM Clientes
WHERE (Codigo=@Codigo)





























GO

/****** Object:  StoredProcedure [dbo].[Clientes_TX_PorCuit]    Script Date: 03/15/2011 11:48:33 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO























CREATE Procedure [dbo].[Clientes_TX_PorCuit]
@Cuit varchar(13)
AS 
SELECT * 
FROM Clientes
WHERE Cuit=@Cuit























GO

/****** Object:  StoredProcedure [dbo].[Clientes_TX_PorId]    Script Date: 03/15/2011 11:48:33 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO













CREATE Procedure [dbo].[Clientes_TX_PorId]
@IdCliente int
AS 
SELECT * 
FROM Clientes
WHERE (IdCliente=@IdCliente)













GO

/****** Object:  StoredProcedure [dbo].[Clientes_TX_PorIdConDatos]    Script Date: 03/15/2011 11:48:33 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO



















CREATE  Procedure [dbo].[Clientes_TX_PorIdConDatos]
@IdCliente int
AS 
SELECT 
 Clientes.*, 
 Localidades.Nombre as [Localidad],
 Provincias.Nombre as [Provincia],
 Paises.Descripcion as [Pais], 
 DescripcionIva.Descripcion as [CondicionIVA]
FROM Clientes 
LEFT OUTER JOIN Localidades ON Clientes.IdLocalidad = Localidades.IdLocalidad
LEFT OUTER JOIN Provincias ON Clientes.IdProvincia = Provincias.IdProvincia
LEFT OUTER JOIN Paises ON Clientes.IdPais = Paises.IdPais
LEFT OUTER JOIN DescripcionIva ON Clientes.IdCodigoIva = DescripcionIva.IdCodigoIva 
WHERE (IdCliente=@IdCliente)


















GO

/****** Object:  StoredProcedure [dbo].[Clientes_TX_PorRazonSocial]    Script Date: 03/15/2011 11:48:33 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO



















CREATE Procedure [dbo].[Clientes_TX_PorRazonSocial]
@RazonSocial varchar(50)
AS 
SELECT * 
FROM Clientes
WHERE (RazonSocial=@RazonSocial)



















GO

/****** Object:  StoredProcedure [dbo].[Clientes_TX_TT]    Script Date: 03/15/2011 11:48:33 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO








CREATE  Procedure [dbo].[Clientes_TX_TT]
@IdCliente int
AS 
SELECT 
 Clientes.IdCliente, 
 Clientes.RazonSocial as [Razon social],
 Clientes.Codigo as [Codigo],
 Clientes.Direccion, 
 (Select Localidades.Nombre From Localidades 
  Where Clientes.IdLocalidad=Localidades.IdLocalidad) as [Localidad], 
 Clientes.CodigoPostal, 
 (Select Provincias.Nombre From Provincias 
  Where Clientes.IdProvincia=Provincias.IdProvincia) as [Provincia], 
 Paises.Descripcion as [Pais], 
 Clientes.Telefono, 
 Clientes.Fax, 
 Clientes.Email, 
 Clientes.Cuit, 
 DescripcionIva.Descripcion as [Condicion IVA], 
 Clientes.FechaAlta as [Fecha alta], 
 Clientes.Contacto,
 Clientes.DireccionEntrega as [Direccion de entrega], 
 (Select Localidades.Nombre From Localidades 
  Where Clientes.IdLocalidadEntrega=Localidades.IdLocalidad) AS [Localidad (entrega)], 
 (Select Provincias.Nombre From Provincias 
  Where Clientes.IdProvinciaEntrega=Provincias.IdProvincia) AS [Provincia (entrega)],
 Clientes.CodigoPresto as [Codigo PRESTO],
 Clientes.Observaciones
FROM Clientes 
LEFT OUTER JOIN DescripcionIva ON 	Clientes.IdCodigoIva = DescripcionIva.IdCodigoIva 
LEFT OUTER JOIN Paises ON Clientes.IdPais = Paises.IdPais
WHERE (IdCliente=@IdCliente)







GO

/****** Object:  StoredProcedure [dbo].[Clientes_TX_ValidarCodigo]    Script Date: 03/15/2011 11:48:33 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[Clientes_TX_ValidarCodigo]
@CodigoCliente int,
@TipoCliente int,
@IdCliente int
AS 
SELECT * 
FROM Clientes
WHERE (@IdCliente<=0 or Clientes.IdCliente<>@IdCliente) and 
	CodigoCliente=@CodigoCliente and TipoCliente=@TipoCliente






























GO

/****** Object:  StoredProcedure [dbo].[CondicionesCompra_M]    Script Date: 03/15/2011 11:48:33 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE  Procedure [dbo].[CondicionesCompra_M]
@IdCondicionCompra int,
@Descripcion varchar(50),
@CantidadDias int,
@CodigoCondicion varchar(2),
@CantidadDias1 int,
@CantidadDias2 int,
@CantidadDias3 int,
@CantidadDias4 int,
@CantidadDias5 int,
@CantidadDias6 int,
@Porcentaje1 int,
@Porcentaje2 int,
@Porcentaje3 int,
@Porcentaje4 int,
@Porcentaje5 int,
@Porcentaje6 int,
@CantidadDias7 int,
@CantidadDias8 int,
@CantidadDias9 int,
@CantidadDias10 int,
@CantidadDias11 int,
@CantidadDias12 int,
@Porcentaje7 int,
@Porcentaje8 int,
@Porcentaje9 int,
@Porcentaje10 int,
@Porcentaje11 int,
@Porcentaje12 int,
@Observaciones ntext
AS
IF Exists(Select cc.IdCondicionCompra From [Condiciones Compra] cc Where cc.IdCondicionCompra=@IdCondicionCompra)
	BEGIN
		UPDATE [Condiciones Compra]
		SET
		 Descripcion=@Descripcion,
		 CantidadDias=@CantidadDias,
		 CodigoCondicion=@CodigoCondicion,
		 CantidadDias1=@CantidadDias1,
		 CantidadDias2=@CantidadDias2,
		 CantidadDias3=@CantidadDias3,
		 CantidadDias4=@CantidadDias4,
		 CantidadDias5=@CantidadDias5,
		 CantidadDias6=@CantidadDias6,
		 Porcentaje1=@Porcentaje1,
		 Porcentaje2=@Porcentaje2,
		 Porcentaje3=@Porcentaje3,
		 Porcentaje4=@Porcentaje4,
		 Porcentaje5=@Porcentaje5,
		 Porcentaje6=@Porcentaje6,
		 CantidadDias7=@CantidadDias7,
		 CantidadDias8=@CantidadDias8,
		 CantidadDias9=@CantidadDias9,
		 CantidadDias10=@CantidadDias10,
		 CantidadDias11=@CantidadDias11,
		 CantidadDias12=@CantidadDias12,
		 Porcentaje7=@Porcentaje7,
		 Porcentaje8=@Porcentaje8,
		 Porcentaje9=@Porcentaje9,
		 Porcentaje10=@Porcentaje10,
		 Porcentaje11=@Porcentaje11,
		 Porcentaje12=@Porcentaje12,
		 Observaciones=@Observaciones
		WHERE (IdCondicionCompra=@IdCondicionCompra)
	END
ELSE
	BEGIN
		INSERT INTO [Condiciones Compra]
		(
		 IdCondicionCompra,
		 Descripcion,
		 CantidadDias,
		 CodigoCondicion,
		 CantidadDias1,
		 CantidadDias2,
		 CantidadDias3,
		 CantidadDias4,
		 CantidadDias5,
		 CantidadDias6,
		 Porcentaje1,
		 Porcentaje2,
		 Porcentaje3,
		 Porcentaje4,
		 Porcentaje5,
		 Porcentaje6,
		 CantidadDias7,
		 CantidadDias8,
		 CantidadDias9,
		 CantidadDias10,
		 CantidadDias11,
		 CantidadDias12,
		 Porcentaje7,
		 Porcentaje8,
		 Porcentaje9,
		 Porcentaje10,
		 Porcentaje11,
		 Porcentaje12,
		 Observaciones
		)
		VALUES
		(
		 @IdCondicionCompra,
		 @Descripcion,
		 @CantidadDias,
		 @CodigoCondicion,
		 @CantidadDias1,
		 @CantidadDias2,
		 @CantidadDias3,
		 @CantidadDias4,
		 @CantidadDias5,
		 @CantidadDias6,
		 @Porcentaje1,
		 @Porcentaje2,
		 @Porcentaje3,
		 @Porcentaje4,
		 @Porcentaje5,
		 @Porcentaje6,
		 @CantidadDias7,
		 @CantidadDias8,
		 @CantidadDias9,
		 @CantidadDias10,
		 @CantidadDias11,
		 @CantidadDias12,
		 @Porcentaje7,
		 @Porcentaje8,
		 @Porcentaje9,
		 @Porcentaje10,
		 @Porcentaje11,
		 @Porcentaje12,
		 @Observaciones
		)
	END
RETURN(@IdCondicionCompra)



GO

/****** Object:  StoredProcedure [dbo].[CondicionesCompra_T]    Script Date: 03/15/2011 11:48:33 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE Procedure [dbo].[CondicionesCompra_T]
@IdCondicionCompra int
AS 
SELECT *
FROM [Condiciones Compra]
WHERE (IdCondicionCompra=@IdCondicionCompra)



GO

/****** Object:  StoredProcedure [dbo].[CondicionesCompra_TL]    Script Date: 03/15/2011 11:48:33 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE Procedure [dbo].[CondicionesCompra_TL]
AS 
SELECT IdCondicionCompra, Descripcion as Titulo
FROM [Condiciones Compra]
ORDER BY Descripcion



GO

/****** Object:  StoredProcedure [dbo].[Conjuntos_M]    Script Date: 03/15/2011 11:48:33 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO



CREATE Procedure [dbo].[Conjuntos_M]

@IdConjunto int,
@IdArticulo int,
@Observaciones ntext,
@IdRealizo int,
@FechaRegistro datetime,
@CodigoConjunto varchar(10)

AS 

IF Exists(Select IdConjunto From Conjuntos Where IdConjunto=@IdConjunto)
    BEGIN
	UPDATE Conjuntos
	SET 
	 IdArticulo=@IdArticulo,
	 Observaciones=@Observaciones,
	 IdRealizo=@IdRealizo,
	 FechaRegistro=@FechaRegistro,
	 CodigoConjunto=@CodigoConjunto
	WHERE (IdConjunto=@IdConjunto)
    END
ELSE
    BEGIN
	INSERT INTO Conjuntos
	(
	 IdConjunto,
	 IdArticulo,
	 Observaciones,
	 IdRealizo,
	 FechaRegistro,
	 CodigoConjunto
	)
	VALUES
	(
	 @IdConjunto,
	 @IdArticulo,
	 @Observaciones,
	 @IdRealizo,
	 @FechaRegistro,
	 @CodigoConjunto
	)
    END

RETURN(@IdConjunto)


GO

/****** Object:  StoredProcedure [dbo].[Conjuntos_T]    Script Date: 03/15/2011 11:48:34 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO



CREATE Procedure [dbo].[Conjuntos_T]

@IdConjunto int

AS 

SELECT *
FROM [Conjuntos]
WHERE IdConjunto=@IdConjunto


GO

/****** Object:  StoredProcedure [dbo].[Conjuntos_TX_DetallesPorIdArticulo]    Script Date: 03/15/2011 11:48:34 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO



CREATE PROCEDURE [dbo].[Conjuntos_TX_DetallesPorIdArticulo]

@IdArticulo int

AS

SELECT DetalleConjuntos.*
FROM DetalleConjuntos 
LEFT OUTER JOIN Conjuntos ON DetalleConjuntos.IdConjunto = Conjuntos.IdConjunto
WHERE (Conjuntos.IdArticulo = @IdArticulo)


GO

/****** Object:  StoredProcedure [dbo].[Consulta_TX_PorSQL]    Script Date: 03/15/2011 11:48:34 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO





CREATE Procedure [dbo].[Consulta_TX_PorSQL]
@sql nvarchar(4000)
AS 
EXEC sp_executesql @sql




GO

/****** Object:  StoredProcedure [dbo].[ConsultaStockCompleto_TX1]    Script Date: 03/15/2011 11:48:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE Procedure [dbo].[ConsultaStockCompleto_TX1]

AS

Declare @vector_X varchar(30),@vector_T varchar(30),@Clave varchar(3)
Set @vector_X='011111111111666666661133'
Set @vector_T='0993DH511909444445452300'
Set @Clave='SCD'

SELECT 
 Stk.IdStock,
 @Clave as [Stock],
 Stk.IdArticulo,
 Articulos.Codigo as [Codigo],
 Articulos.Descripcion as [Articulo],
 Depositos.Descripcion+' - Est.:'+Ubicaciones.Estanteria+
	' - Mod.:'+Ubicaciones.Modulo+' - Gab.:'+Ubicaciones.Gabeta as [Ubicacion],
 Obras.NumeroObra as [Obra],
 Stk.Partida,
 Stk.CantidadUnidades as [Cant.],
 (	select sum(DetalleReservas.CantidadUnidades) 
	from DetalleReservas
	where DetalleReservas.IdStock=Stk.IdStock	) as [Cant.Res.],
 Unidades.Abreviatura as [En :],
 Stk.IdStock,
 Articulos.CostoPPP as [Costo PPP $],
 Stk.CantidadUnidades*Articulos.CostoPPP as [Stock val. $],
 Articulos.CostoPPPDolar as [Costo PPP u$s],
 Stk.CantidadUnidades*Articulos.CostoPPPDolar as [Stock val. u$s],
 Articulos.CostoReposicion as [Costo Rep. $],
 Stk.CantidadUnidades*Articulos.CostoReposicion as [Stock val. rep. $],
 Articulos.CostoReposicionDolar as [Costo Rep u$s.],
 Stk.CantidadUnidades*Articulos.CostoReposicionDolar as [Stock val. rep. u$s],
 Rubros.Descripcion as [Rubro],
 Articulos.StockMinimo as [Stock Min.],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM Stock Stk
LEFT OUTER JOIN Articulos ON Stk.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Unidades ON Stk.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN Ubicaciones ON Stk.IdUbicacion = Ubicaciones.IdUbicacion
LEFT OUTER JOIN Depositos ON Ubicaciones.IdDeposito = Depositos.IdDeposito
LEFT OUTER JOIN Obras ON Stk.IdObra = Obras.IdObra
LEFT OUTER JOIN Rubros ON Articulos.IdRubro = Rubros.IdRubro
WHERE NOT Stk.CantidadUnidades=0



GO

/****** Object:  StoredProcedure [dbo].[ConsultaStockCompleto_TX2]    Script Date: 03/15/2011 11:48:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE Procedure [dbo].[ConsultaStockCompleto_TX2]

AS

declare @vector_X varchar(30),@vector_T varchar(30),@Clave varchar(3)
set @vector_X='0111111666666661133'
set @vector_T='093D209444445452300'
set @Clave='SCR'

SELECT 
 Stk.IdArticulo,
 @Clave as [Stock],
 Articulos.Codigo as [Codigo],
 Articulos.Descripcion as [Articulo],
 SUM(Stk.CantidadUnidades) as [Cantidad],
 Unidades.Abreviatura as [En :],
 Stk.IdArticulo,
 Articulos.CostoPPP as [Costo PPP $],
 SUM(Stk.CantidadUnidades)*Articulos.CostoPPP as [Stock val. $],
 Articulos.CostoPPPDolar as [Costo PPP u$s],
 SUM(Stk.CantidadUnidades)*Articulos.CostoPPPDolar as [Stock val. u$s],
 Articulos.CostoReposicion as [Costo Rep. $],
 SUM(Stk.CantidadUnidades)*Articulos.CostoReposicion as [Stock val. rep. $],
 Articulos.CostoReposicionDolar as [Costo Rep u$s.],
 SUM(Stk.CantidadUnidades)*Articulos.CostoReposicionDolar as [Stock val. rep. u$s],
 Rubros.Descripcion as [Rubro],
 Max(Articulos.StockMinimo) as [Stock Min.],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM Stock Stk
LEFT OUTER JOIN Articulos ON Stk.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Unidades ON Stk.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN Rubros ON Articulos.IdRubro = Rubros.IdRubro
WHERE NOT Stk.CantidadUnidades=0
GROUP by Stk.IdArticulo,Articulos.Codigo,Articulos.Descripcion,
		Unidades.Abreviatura,Articulos.CostoPPP,Articulos.CostoPPPDolar,
		Articulos.CostoReposicion,Articulos.CostoReposicionDolar,Rubros.Descripcion



GO

/****** Object:  StoredProcedure [dbo].[ControlesCalidad_A]    Script Date: 03/15/2011 11:48:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[ControlesCalidad_A]
@IdControlCalidad int  output,
@Descripcion varchar(250),
@Inspeccion varchar(2),
@Abreviatura varchar(2),
@Detalle ntext
AS 
Insert into [ControlesCalidad]
(
Descripcion,
Inspeccion,
Abreviatura,
Detalle
)
Values
(
@Descripcion,
@Inspeccion,
@Abreviatura,
@Detalle
)
Select @IdControlCalidad=@@identity
Return(@IdControlCalidad)
































GO

/****** Object:  StoredProcedure [dbo].[ControlesCalidad_E]    Script Date: 03/15/2011 11:48:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[ControlesCalidad_E]
@IdControlCalidad smallint  AS 
Delete ControlesCalidad
where (IdControlCalidad=@IdControlCalidad)
































GO

/****** Object:  StoredProcedure [dbo].[ControlesCalidad_M]    Script Date: 03/15/2011 11:48:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE  Procedure [dbo].[ControlesCalidad_M]
@IdControlCalidad int ,
@Descripcion varchar(250),
@Inspeccion varchar(2),
@Abreviatura varchar(2),
@Detalle ntext
AS
Update ControlesCalidad
SET
Descripcion=@Descripcion,
Inspeccion=@Inspeccion,
Abreviatura=@Abreviatura,
Detalle=@Detalle
where (IdControlCalidad=@IdControlCalidad)
Return(@IdControlCalidad)
































GO

/****** Object:  StoredProcedure [dbo].[ControlesCalidad_T]    Script Date: 03/15/2011 11:48:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[ControlesCalidad_T]
@IdControlCalidad int
AS 
SELECT *
FROM ControlesCalidad
where (IdControlCalidad=@IdControlCalidad)
































GO

/****** Object:  StoredProcedure [dbo].[ControlesCalidad_TL]    Script Date: 03/15/2011 11:48:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[ControlesCalidad_TL]
AS 
Select IdControlCalidad,Descripcion as Titulo
FROM ControlesCalidad
































GO

/****** Object:  StoredProcedure [dbo].[ControlesCalidad_TT]    Script Date: 03/15/2011 11:48:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[ControlesCalidad_TT]
AS 
Select 
IdControlCalidad,
Descripcion,
Inspeccion,
Abreviatura
FROM ControlesCalidad
































GO

/****** Object:  StoredProcedure [dbo].[ControlesCalidad_TX_Alfabetico]    Script Date: 03/15/2011 11:48:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[ControlesCalidad_TX_Alfabetico]
AS 
Select 
IdControlCalidad,
Descripcion as [Control],
Inspeccion as [Inspeccion],
Abreviatura as [Abreviatura],
Detalle as [Detalle]
FROM ControlesCalidad
ORDER BY Descripcion
































GO

/****** Object:  StoredProcedure [dbo].[ControlesCalidad_TX_TT]    Script Date: 03/15/2011 11:48:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[ControlesCalidad_TX_TT]
@IdControlCalidad int
AS 
Select 
IdControlCalidad,
Descripcion,
Inspeccion,
Abreviatura
FROM ControlesCalidad
where (IdControlCalidad=@IdControlCalidad)
































GO

/****** Object:  StoredProcedure [dbo].[Cotizaciones_A]    Script Date: 03/15/2011 11:48:34 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE Procedure [dbo].[Cotizaciones_A]
@IdCotizacion int  output,
@Fecha Datetime,
@IdMoneda int,
@Cotizacion numeric(18,4),
@CotizacionLibre numeric(18,4)
AS 
INSERT INTO [Cotizaciones]
(
 Fecha,
 IdMoneda,
 Cotizacion,
 CotizacionLibre
)
VALUES
(
 @Fecha,
 @IdMoneda,
 @Cotizacion,
 @CotizacionLibre
)
SELECT @IdCotizacion=@@identity
RETURN(@IdCotizacion)



GO

/****** Object:  StoredProcedure [dbo].[Cotizaciones_E]    Script Date: 03/15/2011 11:48:34 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO


































CREATE Procedure [dbo].[Cotizaciones_E]
@IdCotizacion int  AS 
Delete Cotizaciones
where (IdCotizacion=@IdCotizacion)


































GO

/****** Object:  StoredProcedure [dbo].[Cotizaciones_M]    Script Date: 03/15/2011 11:48:34 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE  Procedure [dbo].[Cotizaciones_M]

@IdCotizacion int ,
@Fecha Datetime,
@IdMoneda int,
@Cotizacion numeric(18,4),
@CotizacionLibre numeric(18,4)

AS

IF Exists(Select co.IdCotizacion From Cotizaciones co Where co.IdCotizacion=@IdCotizacion)
    BEGIN
	UPDATE Cotizaciones
	SET
	 Fecha=@Fecha,
	 IdMoneda=@IdMoneda,
	 Cotizacion=@Cotizacion,
	 CotizacionLibre=@CotizacionLibre
	WHERE (IdCotizacion=@IdCotizacion)
    END
ELSE
    BEGIN
	INSERT INTO [Cotizaciones]
	(
	 Fecha,
	 IdMoneda,
	 Cotizacion,
	 CotizacionLibre
	)
	VALUES
	(
	 @Fecha,
	 @IdMoneda,
	 @Cotizacion,
	 @CotizacionLibre
	)
	SELECT @IdCotizacion=@@identity
    END
RETURN(@IdCotizacion)



GO

/****** Object:  StoredProcedure [dbo].[Cotizaciones_T]    Script Date: 03/15/2011 11:48:34 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO





CREATE Procedure [dbo].[Cotizaciones_T]
@IdCotizacion int
AS 
SELECT *
FROM Cotizaciones
WHERE (IdCotizacion=@IdCotizacion)




GO

/****** Object:  StoredProcedure [dbo].[Cotizaciones_TT]    Script Date: 03/15/2011 11:48:35 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


































CREATE Procedure [dbo].[Cotizaciones_TT]
AS 
Select 
 IdCotizacion,
 Fecha,
 Monedas.Nombre as [Moneda],
 Cotizacion,
 CotizacionLibre [Cotizacion libre]
FROM Cotizaciones
LEFT OUTER JOIN Monedas ON Cotizaciones.IdMoneda=Monedas.IdMoneda
ORDER BY Monedas.Nombre,Fecha


































GO

/****** Object:  StoredProcedure [dbo].[Cotizaciones_TX_PorFechaMoneda]    Script Date: 03/15/2011 11:48:35 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE Procedure [dbo].[Cotizaciones_TX_PorFechaMoneda]
@Fecha datetime,
@IdMoneda int
AS 
Select Top 1 *
FROM Cotizaciones
WHERE Fecha=@Fecha And IdMoneda=@IdMoneda





GO

/****** Object:  StoredProcedure [dbo].[Cotizaciones_TX_TT]    Script Date: 03/15/2011 11:48:35 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


































CREATE Procedure [dbo].[Cotizaciones_TX_TT]
@IdCotizacion int
AS 
Select 
 IdCotizacion,
 Fecha,
 Monedas.Nombre as [Moneda],
 Cotizacion,
 CotizacionLibre [Cotizacion libre]
FROM Cotizaciones
LEFT OUTER JOIN Monedas ON Cotizaciones.IdMoneda=Monedas.IdMoneda
WHERE (IdCotizacion=@IdCotizacion)


































GO

/****** Object:  StoredProcedure [dbo].[Cotizaciones_TXAnio]    Script Date: 03/15/2011 11:48:35 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO








CREATE Procedure [dbo].[Cotizaciones_TXAnio]
As
SELECT 
min(CONVERT(varchar, YEAR(Fecha))) AS Período,YEAR(Fecha)
FROM Cotizaciones
GROUP BY  YEAR(Fecha) 
ORDER by  YEAR(Fecha)  desc







GO

/****** Object:  StoredProcedure [dbo].[Cotizaciones_TXFecha]    Script Date: 03/15/2011 11:48:35 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


































CREATE PROCEDURE [dbo].[Cotizaciones_TXFecha]
	@Desde datetime,
	@Hasta datetime
AS
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='0111133'
set @vector_T='0555800'
SELECT 
 IdCotizacion,
 Fecha,
 Monedas.Nombre as [Moneda],
 Cotizacion,
 CotizacionLibre [Cotizacion libre],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM Cotizaciones
LEFT OUTER JOIN Monedas ON Cotizaciones.IdMoneda=Monedas.IdMoneda
WHERE Fecha between @Desde and @hasta
ORDER BY Monedas.Nombre,Fecha


































GO

/****** Object:  StoredProcedure [dbo].[Cotizaciones_TXMes]    Script Date: 03/15/2011 11:48:35 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO


































CREATE Procedure [dbo].[Cotizaciones_TXMes]
@Anio int
As
SELECT 
min(CONVERT(varchar, MONTH(Fecha)) + '/' + CONVERT(varchar, YEAR(Fecha)) )  AS Período,
YEAR(Fecha), 
MONTH(Fecha),
CASE 
	WHEN MONTH(Fecha)=1 THEN 'Enero'
	WHEN MONTH(Fecha)=2 THEN 'Febrero'
	WHEN MONTH(Fecha)=3 THEN 'Marzo'
	WHEN MONTH(Fecha)=4 THEN 'Abril'
	WHEN MONTH(Fecha)=5 THEN 'Mayo'
	WHEN MONTH(Fecha)=6 THEN 'Junio'
	WHEN MONTH(Fecha)=7 THEN 'Julio'
	WHEN MONTH(Fecha)=8 THEN 'Agosto'
	WHEN MONTH(Fecha)=9 THEN 'Setiembre'
	WHEN MONTH(Fecha)=10 THEN 'Octubre'
	WHEN MONTH(Fecha)=11 THEN 'Noviembre'
	WHEN MONTH(Fecha)=12 THEN 'Diciembre'
	ELSE 'Error'
END as Mes
FROM Cotizaciones
WHERE YEAR(Fecha)=@Anio
GROUP BY  YEAR(Fecha) , MONTH(Fecha)  
ORDER by  YEAR(Fecha)  desc , MONTH(Fecha)  desc


































GO

/****** Object:  StoredProcedure [dbo].[Cuentas_A]    Script Date: 03/15/2011 11:48:35 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO







CREATE Procedure [dbo].[Cuentas_A]
@IdCuenta int  output,
@Codigo int,
@Descripcion varchar(50),
@IdTipoCuenta int,
@NivelTotal int,
@IdRubroContable int,
@Jerarquia varchar(20),
@IdObra int,
@IdCuentaGasto int,
@DebeHaber varchar(1),
@IdTipoCuentaGrupo int,
@VaAlCiti varchar(2),
@PresupuestoTeoricoMes01 numeric(18,2),
@PresupuestoTeoricoMes02 numeric(18,2),
@PresupuestoTeoricoMes03 numeric(18,2),
@PresupuestoTeoricoMes04 numeric(18,2),
@PresupuestoTeoricoMes05 numeric(18,2),
@PresupuestoTeoricoMes06 numeric(18,2),
@PresupuestoTeoricoMes07 numeric(18,2),
@PresupuestoTeoricoMes08 numeric(18,2),
@PresupuestoTeoricoMes09 numeric(18,2),
@PresupuestoTeoricoMes10 numeric(18,2),
@PresupuestoTeoricoMes11 numeric(18,2),
@PresupuestoTeoricoMes12 numeric(18,2)
As 
Insert into [Cuentas]
(
 Codigo,
 Descripcion,
 IdTipoCuenta,
 NivelTotal,
 IdRubroContable,
 Jerarquia,
 IdObra,
 IdCuentaGasto,
 DebeHaber,
 IdTipoCuentaGrupo,
 VaAlCiti,
 PresupuestoTeoricoMes01,
 PresupuestoTeoricoMes02,
 PresupuestoTeoricoMes03,
 PresupuestoTeoricoMes04,
 PresupuestoTeoricoMes05,
 PresupuestoTeoricoMes06,
 PresupuestoTeoricoMes07,
 PresupuestoTeoricoMes08,
 PresupuestoTeoricoMes09,
 PresupuestoTeoricoMes10,
 PresupuestoTeoricoMes11,
 PresupuestoTeoricoMes12
)
Values
(
 @Codigo,
 @Descripcion,
 @IdTipoCuenta,
 @NivelTotal,
 @IdRubroContable,
 @Jerarquia,
 @IdObra,
 @IdCuentaGasto,
 @DebeHaber,
 @IdTipoCuentaGrupo,
 @VaAlCiti,
 @PresupuestoTeoricoMes01,
 @PresupuestoTeoricoMes02,
 @PresupuestoTeoricoMes03,
 @PresupuestoTeoricoMes04,
 @PresupuestoTeoricoMes05,
 @PresupuestoTeoricoMes06,
 @PresupuestoTeoricoMes07,
 @PresupuestoTeoricoMes08,
 @PresupuestoTeoricoMes09,
 @PresupuestoTeoricoMes10,
 @PresupuestoTeoricoMes11,
 @PresupuestoTeoricoMes12
)
Select @IdCuenta=@@identity
Return(@IdCuenta)






GO

/****** Object:  StoredProcedure [dbo].[Cuentas_E]    Script Date: 03/15/2011 11:48:35 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO






































CREATE Procedure [dbo].[Cuentas_E]
@IdCuenta int  AS 
Delete Cuentas
where (IdCuenta=@IdCuenta)






































GO

/****** Object:  StoredProcedure [dbo].[Cuentas_M]    Script Date: 03/15/2011 11:48:35 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE  Procedure [dbo].[Cuentas_M]
@IdCuenta int ,
@Codigo int,
@Descripcion varchar(50),
@IdTipoCuenta int,
@NivelTotal int,
@IdRubroContable int,
@Jerarquia varchar(20),
@IdObra int,
@IdCuentaGasto int,
@DebeHaber varchar(1),
@IdTipoCuentaGrupo int,
@VaAlCiti varchar(2),
@PresupuestoTeoricoMes01 numeric(18,2),
@PresupuestoTeoricoMes02 numeric(18,2),
@PresupuestoTeoricoMes03 numeric(18,2),
@PresupuestoTeoricoMes04 numeric(18,2),
@PresupuestoTeoricoMes05 numeric(18,2),
@PresupuestoTeoricoMes06 numeric(18,2),
@PresupuestoTeoricoMes07 numeric(18,2),
@PresupuestoTeoricoMes08 numeric(18,2),
@PresupuestoTeoricoMes09 numeric(18,2),
@PresupuestoTeoricoMes10 numeric(18,2),
@PresupuestoTeoricoMes11 numeric(18,2),
@PresupuestoTeoricoMes12 numeric(18,2)
AS
IF Exists(Select Aux.IdCuenta From Cuentas Aux Where Aux.IdCuenta=@IdCuenta)
	BEGIN
		UPDATE Cuentas
		SET
		 Codigo=@Codigo,
		 Descripcion=@Descripcion,
		 IdTipoCuenta=@IdTipoCuenta,
		 NivelTotal=@NivelTotal,
		 IdRubroContable=@IdRubroContable,
		 Jerarquia=@Jerarquia,
		 IdObra=@IdObra,
		 IdCuentaGasto=@IdCuentaGasto,
		 DebeHaber=@DebeHaber,
		 IdTipoCuentaGrupo=@IdTipoCuentaGrupo,
		 VaAlCiti=@VaAlCiti,
		 PresupuestoTeoricoMes01=@PresupuestoTeoricoMes01,
		 PresupuestoTeoricoMes02=@PresupuestoTeoricoMes02,
		 PresupuestoTeoricoMes03=@PresupuestoTeoricoMes03,
		 PresupuestoTeoricoMes04=@PresupuestoTeoricoMes04,
		 PresupuestoTeoricoMes05=@PresupuestoTeoricoMes05,
		 PresupuestoTeoricoMes06=@PresupuestoTeoricoMes06,
		 PresupuestoTeoricoMes07=@PresupuestoTeoricoMes07,
		 PresupuestoTeoricoMes08=@PresupuestoTeoricoMes08,
		 PresupuestoTeoricoMes09=@PresupuestoTeoricoMes09,
		 PresupuestoTeoricoMes10=@PresupuestoTeoricoMes10,
		 PresupuestoTeoricoMes11=@PresupuestoTeoricoMes11,
		 PresupuestoTeoricoMes12=@PresupuestoTeoricoMes12
		WHERE IdCuenta=@IdCuenta
	END
ELSE
	BEGIN
		INSERT INTO [Cuentas]
		(
		 IdCuenta,
		 Codigo,
		 Descripcion,
		 IdTipoCuenta,
		 NivelTotal,
		 IdRubroContable,
		 Jerarquia,
		 IdObra,
		 IdCuentaGasto,
		 DebeHaber,
		 IdTipoCuentaGrupo,
		 VaAlCiti,
		 PresupuestoTeoricoMes01,
		 PresupuestoTeoricoMes02,
		 PresupuestoTeoricoMes03,
		 PresupuestoTeoricoMes04,
		 PresupuestoTeoricoMes05,
		 PresupuestoTeoricoMes06,
		 PresupuestoTeoricoMes07,
		 PresupuestoTeoricoMes08,
		 PresupuestoTeoricoMes09,
		 PresupuestoTeoricoMes10,
		 PresupuestoTeoricoMes11,
		 PresupuestoTeoricoMes12
		)
		VALUES
		(
		 @IdCuenta,
		 @Codigo,
		 @Descripcion,
		 @IdTipoCuenta,
		 @NivelTotal,
		 @IdRubroContable,
		 @Jerarquia,
		 @IdObra,
		 @IdCuentaGasto,
		 @DebeHaber,
		 @IdTipoCuentaGrupo,
		 @VaAlCiti,
		 @PresupuestoTeoricoMes01,
		 @PresupuestoTeoricoMes02,
		 @PresupuestoTeoricoMes03,
		 @PresupuestoTeoricoMes04,
		 @PresupuestoTeoricoMes05,
		 @PresupuestoTeoricoMes06,
		 @PresupuestoTeoricoMes07,
		 @PresupuestoTeoricoMes08,
		 @PresupuestoTeoricoMes09,
		 @PresupuestoTeoricoMes10,
		 @PresupuestoTeoricoMes11,
		 @PresupuestoTeoricoMes12
		)
	END
RETURN(@IdCuenta)





GO

/****** Object:  StoredProcedure [dbo].[Cuentas_T]    Script Date: 03/15/2011 11:48:35 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO






































CREATE Procedure [dbo].[Cuentas_T]
@IdCuenta int
AS 
SELECT *
FROM Cuentas
where (IdCuenta=@IdCuenta)






































GO

/****** Object:  StoredProcedure [dbo].[Cuentas_TL]    Script Date: 03/15/2011 11:48:35 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Cuentas_TL]
AS 
Select 
 IdCuenta,
 Descripcion + ' ' + Convert(varchar,Codigo) as [Titulo]
FROM Cuentas
WHERE IdTipoCuenta=2
GROUP By IdCuenta,Codigo,Descripcion
ORDER by Descripcion






























GO

/****** Object:  StoredProcedure [dbo].[Cuentas_TT]    Script Date: 03/15/2011 11:48:35 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO








CREATE Procedure [dbo].[Cuentas_TT]
AS 
Select 
 Cuentas.IdCuenta,
 Cuentas.Descripcion,
 Cuentas.Codigo,
 TiposCuenta.Descripcion as [Tipo de cuenta],
 Cuentas.Jerarquia,
 RubrosContables.Descripcion as [Rubro],
 TiposCuentaGrupos.Descripcion as [Grupo cuenta],
 Obras.Descripcion as [Obra / Centro de costo]
FROM Cuentas 
LEFT OUTER JOIN TiposCuenta ON TiposCuenta.IdTipoCuenta=Cuentas.IdTipoCuenta
LEFT OUTER JOIN RubrosContables ON RubrosContables.IdRubroContable=Cuentas.IdRubroContable
LEFT OUTER JOIN TiposCuentaGrupos ON TiposCuentaGrupos.IdTipoCuentaGrupo=Cuentas.IdTipoCuentaGrupo
LEFT OUTER JOIN Obras ON Obras.IdObra=Cuentas.IdObra
ORDER by Cuentas.Codigo







GO

/****** Object:  StoredProcedure [dbo].[Cuentas_TX_PorId]    Script Date: 03/15/2011 11:48:35 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Cuentas_TX_PorId]
@IdCuenta int
AS 
SELECT 
 Cuentas.*,
 TiposCuentaGrupos.EsCajaBanco
FROM Cuentas
LEFT OUTER JOIN TiposCuentaGrupos ON TiposCuentaGrupos.IdTipoCuentaGrupo=Cuentas.IdTipoCuentaGrupo
WHERE (IdCuenta=@IdCuenta)






























GO

/****** Object:  StoredProcedure [dbo].[Cuentas_TX_TT]    Script Date: 03/15/2011 11:48:35 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO








CREATE Procedure [dbo].[Cuentas_TX_TT]
@IdCuenta int
AS 
SELECT  
 Cuentas.IdCuenta,
 Cuentas.Descripcion,
 Cuentas.Codigo,
 TiposCuenta.Descripcion as [Tipo de cuenta],
 Cuentas.Jerarquia,
 RubrosContables.Descripcion as [Rubro],
 TiposCuentaGrupos.Descripcion as [Grupo cuenta],
 Obras.Descripcion as [Obra / Centro de costo]
FROM Cuentas 
LEFT OUTER JOIN TiposCuenta ON TiposCuenta.IdTipoCuenta=Cuentas.IdTipoCuenta
LEFT OUTER JOIN RubrosContables ON RubrosContables.IdRubroContable=Cuentas.IdRubroContable
LEFT OUTER JOIN TiposCuentaGrupos ON TiposCuentaGrupos.IdTipoCuentaGrupo=Cuentas.IdTipoCuentaGrupo
LEFT OUTER JOIN Obras ON Obras.IdObra=Cuentas.IdObra
WHERE (IdCuenta=@IdCuenta)







GO

/****** Object:  StoredProcedure [dbo].[Depositos_E]    Script Date: 03/15/2011 11:48:35 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO






























CREATE Procedure [dbo].[Depositos_E]
@IdDeposito int  AS 
Delete Depositos
Where (IdDeposito=@IdDeposito)






























GO

/****** Object:  StoredProcedure [dbo].[Depositos_M]    Script Date: 03/15/2011 11:48:35 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE  Procedure [dbo].[Depositos_M]
@IdDeposito int ,
@Descripcion varchar(50),
@Abreviatura varchar(10)
AS
IF Exists(Select de.IdDeposito From Depositos de Where de.IdDeposito=@IdDeposito)
	BEGIN
		UPDATE Depositos
		SET
		 Descripcion=@Descripcion,
		 Abreviatura=@Abreviatura
		WHERE IdDeposito=@IdDeposito
	END
ELSE
	BEGIN
		INSERT INTO [Depositos]
		(
		 IdDeposito,
		 Descripcion,
		 Abreviatura
		)
		VALUES
		(
		 @IdDeposito,
		 @Descripcion,
		 @Abreviatura
		)
	END
RETURN(@IdDeposito)





GO

/****** Object:  StoredProcedure [dbo].[Depositos_T]    Script Date: 03/15/2011 11:48:35 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO






























CREATE Procedure [dbo].[Depositos_T]
@IdDeposito int
AS 
SELECT *
FROM Depositos
WHERE (IdDeposito=@IdDeposito)






























GO

/****** Object:  StoredProcedure [dbo].[Depositos_TL]    Script Date: 03/15/2011 11:48:36 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO






























CREATE Procedure [dbo].[Depositos_TL]
AS 
SELECT IdDeposito,Descripcion as Titulo
FROM Depositos 
ORDER by Descripcion






























GO

/****** Object:  StoredProcedure [dbo].[Depositos_TT]    Script Date: 03/15/2011 11:48:36 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO






























CREATE Procedure [dbo].[Depositos_TT]
AS 
SELECT *
FROM Depositos
ORDER by Descripcion






























GO

/****** Object:  StoredProcedure [dbo].[Depositos_TX_TT]    Script Date: 03/15/2011 11:48:36 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO






























CREATE Procedure [dbo].[Depositos_TX_TT]
@IdDeposito int
AS 
SELECT *
FROM Depositos
WHERE (IdDeposito=@IdDeposito)






























GO

/****** Object:  StoredProcedure [dbo].[DescripcionIva_M]    Script Date: 03/15/2011 11:48:36 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE  Procedure [dbo].[DescripcionIva_M]

@IdCodigoIva int,
@Descripcion varchar(50),
@IvaDiscriminado int,
@CodigoAFIP int,
@ExigirCAI varchar(2),
@InformacionAuxiliar varchar(50)

AS

IF NOT EXISTS(Select Top 1 IdCodigoIva From DescripcionIva Where IdCodigoIva=@IdCodigoIva)
	INSERT INTO [DescripcionIva]
	(
	 IdCodigoIva,
	 Descripcion,
	 IvaDiscriminado,
	 CodigoAFIP,
	 ExigirCAI,
	 InformacionAuxiliar
	)
	VALUES
	(
	 @IdCodigoIva,
	 @Descripcion,
	 @IvaDiscriminado,
	 @CodigoAFIP,
	 @ExigirCAI,
	 @InformacionAuxiliar
	)
ELSE
	UPDATE DescripcionIva
	SET
	 Descripcion=@Descripcion,
	 IvaDiscriminado=@IvaDiscriminado,
	 CodigoAFIP=@CodigoAFIP,
	 ExigirCAI=@ExigirCAI,
	 InformacionAuxiliar=@InformacionAuxiliar
	WHERE (IdCodigoIva=@IdCodigoIva)
RETURN(@IdCodigoIva)

GO

/****** Object:  StoredProcedure [dbo].[DescripcionIva_T]    Script Date: 03/15/2011 11:48:36 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE Procedure [dbo].[DescripcionIva_T]
@IdCodigoIva int 
AS 
SELECT *
FROM DescripcionIva
WHERE (IdCodigoIva=@IdCodigoIva)



GO

/****** Object:  StoredProcedure [dbo].[DescripcionIva_TL]    Script Date: 03/15/2011 11:48:36 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[DescripcionIva_TL]
AS 
Select IdCodigoIva,Descripcion as Titulo
FROM DescripcionIva order by Descripcion
































GO

/****** Object:  StoredProcedure [dbo].[DescripcionIva_TT]    Script Date: 03/15/2011 11:48:36 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[DescripcionIva_TT]
AS 
Select *
FROM DescripcionIva 
order by Descripcion
































GO

/****** Object:  StoredProcedure [dbo].[DescripcionIva_TX_PorId]    Script Date: 03/15/2011 11:48:36 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO







CREATE Procedure [dbo].[DescripcionIva_TX_PorId]
@IdCodigoIva tinyint 
AS 
SELECT *
FROM DescripcionIva 
WHERE (IdCodigoIva=@IdCodigoIva)






GO

/****** Object:  StoredProcedure [dbo].[DescripcionIva_TX_TT]    Script Date: 03/15/2011 11:48:36 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO







CREATE Procedure [dbo].[DescripcionIva_TX_TT]
@IdCodigoIva tinyint 
AS 
SELECT *
FROM DescripcionIva 
WHERE (IdCodigoIva=@IdCodigoIva)






GO

/****** Object:  StoredProcedure [dbo].[DetAjustesStock_A]    Script Date: 03/15/2011 11:48:36 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE Procedure [dbo].[DetAjustesStock_A]

@IdDetalleAjusteStock int  output,
@IdAjusteStock int,
@IdArticulo int,
@Partida int,
@CantidadUnidades numeric(12,2),
@CantidadAdicional numeric(12,2),
@IdUnidad int,
@Cantidad1 numeric(12,2),
@Cantidad2 numeric(12,2),
@Observaciones ntext,
@IdUbicacion int,
@IdObra int,
@EnviarEmail tinyint,
@IdDetalleAjusteStockOriginal int

AS 

SET @Partida=IsNull(@Partida,0)

INSERT INTO [DetalleAjustesStock]
(
 IdAjusteStock,
 IdArticulo,
 Partida,
 CantidadUnidades,
 CantidadAdicional,
 IdUnidad,
 Cantidad1,
 Cantidad2,
 Observaciones,
 IdUbicacion,
 IdObra,
 EnviarEmail,
 IdDetalleAjusteStockOriginal
)
VALUES
(
 @IdAjusteStock,
 @IdArticulo,
 @Partida,
 @CantidadUnidades,
 @CantidadAdicional,
 @IdUnidad,
 @Cantidad1,
 @Cantidad2,
 @Observaciones,
 @IdUbicacion,
 @IdObra,
 @EnviarEmail,
 @IdDetalleAjusteStockOriginal
)

SELECT @IdDetalleAjusteStock=@@identity
RETURN(@IdDetalleAjusteStock)


GO

/****** Object:  StoredProcedure [dbo].[DetAjustesStock_E]    Script Date: 03/15/2011 11:48:36 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[DetAjustesStock_E]
@IdDetalleAjusteStock int  AS 
Delete [DetalleAjustesStock]
where (IdDetalleAjusteStock=@IdDetalleAjusteStock)
































GO

/****** Object:  StoredProcedure [dbo].[DetAjustesStock_M]    Script Date: 03/15/2011 11:48:36 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE Procedure [dbo].[DetAjustesStock_M]

@IdDetalleAjusteStock int,
@IdAjusteStock int,
@IdArticulo int,
@Partida int,
@CantidadUnidades numeric(12,2),
@CantidadAdicional numeric(12,2),
@IdUnidad int,
@Cantidad1 numeric(12,2),
@Cantidad2 numeric(12,2),
@Observaciones ntext,
@IdUbicacion int,
@IdObra int,
@EnviarEmail tinyint,
@IdDetalleAjusteStockOriginal int

AS

SET @Partida=IsNull(@Partida,0)

UPDATE [DetalleAjustesStock]
SET 
 IdAjusteStock=@IdAjusteStock,
 IdArticulo=@IdArticulo,
 Partida=@Partida,
 CantidadUnidades=@CantidadUnidades,
 CantidadAdicional=@CantidadAdicional,
 IdUnidad=@IdUnidad,
 Cantidad1=@Cantidad1,
 Cantidad2=@Cantidad2,
 Observaciones=@Observaciones,
 IdUbicacion=@IdUbicacion,
 IdObra=@IdObra,
 EnviarEmail=@EnviarEmail,
 IdDetalleAjusteStockOriginal=@IdDetalleAjusteStockOriginal
WHERE (IdDetalleAjusteStock=@IdDetalleAjusteStock)

RETURN(@IdDetalleAjusteStock)


GO

/****** Object:  StoredProcedure [dbo].[DetAjustesStock_T]    Script Date: 03/15/2011 11:48:36 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[DetAjustesStock_T]
@IdDetalleAjusteStock int
AS 
SELECT *
FROM [DetalleAjustesStock]
where (IdDetalleAjusteStock=@IdDetalleAjusteStock)
































GO

/****** Object:  StoredProcedure [dbo].[DetAjustesStock_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:36 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE Procedure [dbo].[DetAjustesStock_TX_ParaTransmitir]
AS 
SELECT Det.*
FROM DetalleAjustesStock Det
WHERE Det.EnviarEmail=1





GO

/****** Object:  StoredProcedure [dbo].[DetAjustesStock_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:36 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE Procedure [dbo].[DetAjustesStock_TX_SetearComoTransmitido]
AS 
UPDATE DetalleAjustesStock
SET DetalleAjustesStock.EnviarEmail=0
WHERE DetalleAjustesStock.EnviarEmail<>0





GO

/****** Object:  StoredProcedure [dbo].[DetAjustesStock_TXAjStk]    Script Date: 03/15/2011 11:48:36 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO














CREATE PROCEDURE [dbo].[DetAjustesStock_TXAjStk]

@IdAjusteStock int

AS

declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='000111111111133'
set @vector_T='000312342210600'

SELECT
 DetAju.IdDetalleAjusteStock,
 DetAju.IdAjusteStock,
 DetAju.IdArticulo,
 Articulos.Codigo as [Codigo],
 Articulos.Descripcion as [Articulo],
 DetAju.Partida,
 DetAju.CantidadUnidades as [Cantidad],
 (Select Sum(Stock.CantidadUnidades) 
  From Stock Where Stock.IdArticulo=DetAju.IdArticulo)  as [Stock tot.actual],
 DetAju.Cantidad1 as [Med.1],
 DetAju.Cantidad2 as [Med.2],
 Unidades.Abreviatura as [En :],
 Depositos.Descripcion+' - E:'+Ubicaciones.Estanteria+
	' M:'+Ubicaciones.Modulo+' G:'+Ubicaciones.Gabeta as [Ubicacion],
 Obras.NumeroObra as [Obra],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleAjustesStock DetAju
LEFT OUTER JOIN Articulos ON DetAju.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Unidades ON DetAju.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN Ubicaciones ON DetAju.IdUbicacion = Ubicaciones.IdUbicacion
LEFT OUTER JOIN Depositos ON Ubicaciones.IdDeposito = Depositos.IdDeposito
LEFT OUTER JOIN Obras ON DetAju.IdObra = Obras.IdObra
WHERE (DetAju.IdAjusteStock = @IdAjusteStock)













GO

/****** Object:  StoredProcedure [dbo].[DetAjustesStock_TXPrimero]    Script Date: 03/15/2011 11:48:36 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO














CREATE PROCEDURE [dbo].[DetAjustesStock_TXPrimero]

AS

declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='000111111111133'
set @vector_T='000312342210600'

SELECT TOP 1
 DetAju.IdDetalleAjusteStock,
 DetAju.IdAjusteStock,
 DetAju.IdArticulo,
 Articulos.Codigo as [Codigo],
 Articulos.Descripcion as [Articulo],
 DetAju.Partida,
 DetAju.CantidadUnidades as [Cantidad],
 (Select Sum(Stock.CantidadUnidades) 
  From Stock Where Stock.IdArticulo=DetAju.IdArticulo)  as [Stock tot.actual],
 DetAju.Cantidad1 as [Med.1],
 DetAju.Cantidad2 as [Med.2],
 Unidades.Abreviatura as [En :],
 Depositos.Descripcion+' - E:'+Ubicaciones.Estanteria+
	' M:'+Ubicaciones.Modulo+' G:'+Ubicaciones.Gabeta as [Ubicacion],
 Obras.NumeroObra as [Obra],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleAjustesStock DetAju
LEFT OUTER JOIN Articulos ON DetAju.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Unidades ON DetAju.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN Ubicaciones ON DetAju.IdUbicacion = Ubicaciones.IdUbicacion
LEFT OUTER JOIN Depositos ON Ubicaciones.IdDeposito = Depositos.IdDeposito
LEFT OUTER JOIN Obras ON DetAju.IdObra = Obras.IdObra













GO

/****** Object:  StoredProcedure [dbo].[DetArticulosActivosFijos_A]    Script Date: 03/15/2011 11:48:36 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO








CREATE Procedure [dbo].[DetArticulosActivosFijos_A]
@IdDetalleArticuloActivosFijos int output,
@IdArticulo int,
@Fecha datetime,
@TipoConcepto varchar(1),
@Detalle varchar(50),
@ModificacionVidaUtilImpositiva int,
@ModificacionVidaUtilContable int,
@Importe numeric(18,4),
@IdRevaluo int,
@ImporteRevaluo numeric(18,4),
@VidaUtilRevaluo int
As 
Insert into [DetalleArticulosActivosFijos]
(
 IdArticulo,
 Fecha,
 TipoConcepto,
 Detalle,
 ModificacionVidaUtilImpositiva,
 ModificacionVidaUtilContable,
 Importe,
 IdRevaluo,
 ImporteRevaluo,
 VidaUtilRevaluo
)
Values
(
 @IdArticulo,
 @Fecha,
 @TipoConcepto,
 @Detalle,
 @ModificacionVidaUtilImpositiva,
 @ModificacionVidaUtilContable,
 @Importe,
 @IdRevaluo,
 @ImporteRevaluo,
 @VidaUtilRevaluo
)
Select @IdDetalleArticuloActivosFijos=@@identity
Return(@IdDetalleArticuloActivosFijos)







GO

/****** Object:  StoredProcedure [dbo].[DetArticulosActivosFijos_E]    Script Date: 03/15/2011 11:48:37 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO
















CREATE Procedure [dbo].[DetArticulosActivosFijos_E]
@IdDetalleArticuloActivosFijos int  
As 
Delete [DetalleArticulosActivosFijos]
Where (IdDetalleArticuloActivosFijos=@IdDetalleArticuloActivosFijos)
















GO

/****** Object:  StoredProcedure [dbo].[DetArticulosActivosFijos_M]    Script Date: 03/15/2011 11:48:37 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO








CREATE Procedure [dbo].[DetArticulosActivosFijos_M]
@IdDetalleArticuloActivosFijos int,
@IdArticulo int,
@Fecha datetime,
@TipoConcepto varchar(1),
@Detalle varchar(50),
@ModificacionVidaUtilImpositiva int,
@ModificacionVidaUtilContable int,
@Importe numeric(18,4),
@IdRevaluo int,
@ImporteRevaluo numeric(18,4),
@VidaUtilRevaluo int
As
Update [DetalleArticulosActivosFijos]
Set 
 IdArticulo=@IdArticulo,
 Fecha=@Fecha,
 TipoConcepto=@TipoConcepto,
 Detalle=@Detalle,
 ModificacionVidaUtilImpositiva=@ModificacionVidaUtilImpositiva,
 ModificacionVidaUtilContable=@ModificacionVidaUtilContable,
 Importe=@Importe,
 IdRevaluo=@IdRevaluo,
 ImporteRevaluo=@ImporteRevaluo,
 VidaUtilRevaluo=@VidaUtilRevaluo
Where (IdDetalleArticuloActivosFijos=@IdDetalleArticuloActivosFijos)
Return(@IdDetalleArticuloActivosFijos)







GO

/****** Object:  StoredProcedure [dbo].[DetArticulosActivosFijos_T]    Script Date: 03/15/2011 11:48:37 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO
















CREATE Procedure [dbo].[DetArticulosActivosFijos_T]
@IdDetalleArticuloActivosFijos int
AS 
SELECT *
FROM [DetalleArticulosActivosFijos]
WHERE (IdDetalleArticuloActivosFijos=@IdDetalleArticuloActivosFijos)
















GO

/****** Object:  StoredProcedure [dbo].[DetArticulosActivosFijos_TX_AFijos]    Script Date: 03/15/2011 11:48:37 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO







CREATE PROCEDURE [dbo].[DetArticulosActivosFijos_TX_AFijos]

@IdArticulo int

AS

Declare @vector_X varchar(30),@vector_T varchar(30)
Set @vector_X='00111611111133'
Set @vector_T='00554588243800'

SELECT
 DetAFijos.IdDetalleArticuloActivosFijos,
 DetAFijos.IdArticulo,
 DetAFijos.Fecha as [Fecha],
 Case 	When DetAFijos.TipoConcepto='A' Then 'Adquisición'
	When DetAFijos.TipoConcepto='M' Then 'Mejora'
	When DetAFijos.TipoConcepto='B' Then 'Baja'
	When DetAFijos.TipoConcepto='R' Then 'Revaluo'
	 Else Null
 End as [Tipo concepto],
 DetAFijos.Detalle as [Detalle],
 DetAFijos.Importe,
 DetAFijos.ModificacionVidaUtilImpositiva as [Mod. vida util imp.],
 DetAFijos.ModificacionVidaUtilContable as [Mod. vida util cont.],
 Revaluos.Descripcion as [Revaluo],
 Revaluos.FechaRevaluo as [Fecha rev.],
 DetAFijos.ImporteRevaluo as [Imp.Revaluo],
 DetAFijos.VidaUtilRevaluo as [Vida util revaluo],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleArticulosActivosFijos DetAFijos
LEFT OUTER JOIN Revaluos ON Revaluos.IdRevaluo=DetAFijos.IdRevaluo
WHERE (DetAFijos.IdArticulo = @IdArticulo)
ORDER by Revaluos.FechaRevaluo,DetAFijos.Fecha






GO

/****** Object:  StoredProcedure [dbo].[DetArticulosActivosFijos_TXPrimero]    Script Date: 03/15/2011 11:48:37 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO









CREATE PROCEDURE [dbo].[DetArticulosActivosFijos_TXPrimero]

AS

Declare @vector_X varchar(30),@vector_T varchar(30)
Set @vector_X='00111611111133'
Set @vector_T='00454566243800'

SELECT TOP 1
 DetAFijos.IdDetalleArticuloActivosFijos,
 DetAFijos.IdArticulo,
 DetAFijos.Fecha as [Fecha],
 Case 	When DetAFijos.TipoConcepto='A' Then 'Adquisición'
	When DetAFijos.TipoConcepto='M' Then 'Mejora'
	When DetAFijos.TipoConcepto='B' Then 'Baja'
	When DetAFijos.TipoConcepto='R' Then 'Revaluo'
	 Else Null
 End as [Tipo concepto],
 DetAFijos.Detalle as [Detalle],
 DetAFijos.Importe,
 DetAFijos.ModificacionVidaUtilImpositiva as [Mod. vida util imp.],
 DetAFijos.ModificacionVidaUtilContable as [Mod. vida util cont.],
 Revaluos.Descripcion as [Revaluo],
 Revaluos.FechaRevaluo as [Fecha rev.],
 DetAFijos.ImporteRevaluo as [Imp.Revaluo],
 DetAFijos.VidaUtilRevaluo as [Vida util revaluo],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleArticulosActivosFijos DetAFijos
LEFT OUTER JOIN Revaluos ON Revaluos.IdRevaluo=DetAFijos.IdRevaluo







GO

/****** Object:  StoredProcedure [dbo].[DetArticulosDocumentos_A]    Script Date: 03/15/2011 11:48:37 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO













CREATE Procedure [dbo].[DetArticulosDocumentos_A]
@IdDetalleArticuloDocumentos int output,
@IdArticulo int,
@PathDocumento varchar(200)
As 
Insert into [DetalleArticulosDocumentos]
(
 IdArticulo,
 PathDocumento
)
Values
(
 @IdArticulo,
 @PathDocumento
)
Select @IdDetalleArticuloDocumentos=@@identity
Return(@IdDetalleArticuloDocumentos)













GO

/****** Object:  StoredProcedure [dbo].[DetArticulosDocumentos_E]    Script Date: 03/15/2011 11:48:37 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO













CREATE Procedure [dbo].[DetArticulosDocumentos_E]
@IdDetalleArticuloDocumentos int  
As 
Delete [DetalleArticulosDocumentos]
Where (IdDetalleArticuloDocumentos=@IdDetalleArticuloDocumentos)













GO

/****** Object:  StoredProcedure [dbo].[DetArticulosDocumentos_M]    Script Date: 03/15/2011 11:48:37 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO













CREATE Procedure [dbo].[DetArticulosDocumentos_M]
@IdDetalleArticuloDocumentos int,
@IdArticulo int,
@PathDocumento varchar(200)
As
Update [DetalleArticulosDocumentos]
Set 
 IdArticulo=@IdArticulo,
 PathDocumento=@PathDocumento
Where (IdDetalleArticuloDocumentos=@IdDetalleArticuloDocumentos)
Return(@IdDetalleArticuloDocumentos)













GO

/****** Object:  StoredProcedure [dbo].[DetArticulosDocumentos_T]    Script Date: 03/15/2011 11:48:37 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO













CREATE Procedure [dbo].[DetArticulosDocumentos_T]
@IdDetalleArticuloDocumentos int
AS 
SELECT *
FROM [DetalleArticulosDocumentos]
WHERE (IdDetalleArticuloDocumentos=@IdDetalleArticuloDocumentos)













GO

/****** Object:  StoredProcedure [dbo].[DetArticulosDocumentos_TX_Doc]    Script Date: 03/15/2011 11:48:37 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO













CREATE PROCEDURE [dbo].[DetArticulosDocumentos_TX_Doc]

@IdArticulo int

AS

Declare @vector_X varchar(30),@vector_T varchar(30)
Set @vector_X='00133'
Set @vector_T='00500'

SELECT
 DetDoc.IdDetalleArticuloDocumentos,
 DetDoc.IdArticulo,
 DetDoc.PathDocumento as [Documento],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleArticulosDocumentos DetDoc
WHERE (DetDoc.IdArticulo = @IdArticulo)
ORDER by DetDoc.PathDocumento











GO

/****** Object:  StoredProcedure [dbo].[DetArticulosDocumentos_TXPrimero]    Script Date: 03/15/2011 11:48:37 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO













CREATE PROCEDURE [dbo].[DetArticulosDocumentos_TXPrimero]

AS

Declare @vector_X varchar(30),@vector_T varchar(30)
Set @vector_X='00133'
Set @vector_T='00500'

SELECT TOP 1
 DetDoc.IdDetalleArticuloDocumentos,
 DetDoc.IdArticulo,
 DetDoc.PathDocumento as [Documento],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleArticulosDocumentos DetDoc











GO

/****** Object:  StoredProcedure [dbo].[DetArticulosImagenes_A]    Script Date: 03/15/2011 11:48:37 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO













CREATE Procedure [dbo].[DetArticulosImagenes_A]
@IdDetalleArticuloImagenes int output,
@IdArticulo int,
@PathImagen varchar(200)
As 
Insert into [DetalleArticulosImagenes]
(
 IdArticulo,
 PathImagen
)
Values
(
 @IdArticulo,
 @PathImagen
)
Select @IdDetalleArticuloImagenes=@@identity
Return(@IdDetalleArticuloImagenes)













GO

/****** Object:  StoredProcedure [dbo].[DetArticulosImagenes_E]    Script Date: 03/15/2011 11:48:37 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO













CREATE Procedure [dbo].[DetArticulosImagenes_E]
@IdDetalleArticuloImagenes int  
As 
Delete [DetalleArticulosImagenes]
Where (IdDetalleArticuloImagenes=@IdDetalleArticuloImagenes)













GO

/****** Object:  StoredProcedure [dbo].[DetArticulosImagenes_M]    Script Date: 03/15/2011 11:48:37 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO













CREATE Procedure [dbo].[DetArticulosImagenes_M]
@IdDetalleArticuloImagenes int,
@IdArticulo int,
@PathImagen varchar(200)
As
Update [DetalleArticulosImagenes]
Set 
 IdArticulo=@IdArticulo,
 PathImagen=@PathImagen
Where (IdDetalleArticuloImagenes=@IdDetalleArticuloImagenes)
Return(@IdDetalleArticuloImagenes)













GO

/****** Object:  StoredProcedure [dbo].[DetArticulosImagenes_T]    Script Date: 03/15/2011 11:48:37 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO













CREATE Procedure [dbo].[DetArticulosImagenes_T]
@IdDetalleArticuloImagenes int
AS 
SELECT *
FROM [DetalleArticulosImagenes]
WHERE (IdDetalleArticuloImagenes=@IdDetalleArticuloImagenes)













GO

/****** Object:  StoredProcedure [dbo].[DetArticulosImagenes_TX_Img]    Script Date: 03/15/2011 11:48:37 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO













CREATE PROCEDURE [dbo].[DetArticulosImagenes_TX_Img]

@IdArticulo int

AS

Declare @vector_X varchar(30),@vector_T varchar(30)
Set @vector_X='00133'
Set @vector_T='00500'

SELECT
 DetImg.IdDetalleArticuloImagenes,
 DetImg.IdArticulo,
 DetImg.PathImagen,
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleArticulosImagenes DetImg
WHERE (DetImg.IdArticulo = @IdArticulo)
ORDER by DetImg.PathImagen












GO

/****** Object:  StoredProcedure [dbo].[DetArticulosImagenes_TXPrimero]    Script Date: 03/15/2011 11:48:37 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO













CREATE PROCEDURE [dbo].[DetArticulosImagenes_TXPrimero]

AS

Declare @vector_X varchar(30),@vector_T varchar(30)
Set @vector_X='00133'
Set @vector_T='00500'

SELECT TOP 1
 DetImg.IdDetalleArticuloImagenes,
 DetImg.IdArticulo,
 DetImg.PathImagen,
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleArticulosImagenes DetImg













GO

/****** Object:  StoredProcedure [dbo].[DetArticulosUnidades_M]    Script Date: 03/15/2011 11:48:37 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE Procedure [dbo].[DetArticulosUnidades_M]

@IdDetalleArticuloUnidades int,
@IdArticulo int,
@IdUnidad int,
@Equivalencia numeric(18,6)

AS

IF Exists(Select dau.IdDetalleArticuloUnidades From DetalleArticulosUnidades dau Where dau.IdDetalleArticuloUnidades=@IdDetalleArticuloUnidades)
    BEGIN
	UPDATE [DetalleArticulosUnidades]
	SET 
	 IdArticulo=@IdArticulo,
	 IdUnidad=@IdUnidad,
	 Equivalencia=@Equivalencia
	WHERE (IdDetalleArticuloUnidades=@IdDetalleArticuloUnidades)
    END
ELSE
    BEGIN
	INSERT INTO [DetalleArticulosUnidades]
	(
	 IdDetalleArticuloUnidades,
	 IdArticulo,
	 IdUnidad,
	 Equivalencia
	)
	VALUES
	(
	 @IdDetalleArticuloUnidades,
	 @IdArticulo,
	 @IdUnidad,
	 @Equivalencia
	)
    END

RETURN(@IdDetalleArticuloUnidades)

GO

/****** Object:  StoredProcedure [dbo].[DetArticulosUnidades_T]    Script Date: 03/15/2011 11:48:37 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE Procedure [dbo].[DetArticulosUnidades_T]

@IdDetalleArticuloUnidades int

AS 

SELECT *
FROM [DetalleArticulosUnidades]
WHERE (IdDetalleArticuloUnidades=@IdDetalleArticuloUnidades)

GO

/****** Object:  StoredProcedure [dbo].[DetArticulosUnidades_TT]    Script Date: 03/15/2011 11:48:37 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE Procedure [dbo].[DetArticulosUnidades_TT]
--@IdDetalleArticuloUnidades int
AS 
SELECT *
FROM [DetalleArticulosUnidades]
--WHERE (IdDetalleArticuloUnidades=@IdDetalleArticuloUnidades)


GO

/****** Object:  StoredProcedure [dbo].[DetArticulosUnidades_TX_Uni]    Script Date: 03/15/2011 11:48:38 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[DetArticulosUnidades_TX_Uni]

@IdArticulo int

AS

DECLARE @vector_X varchar(30),@vector_T varchar(30)
SET @vector_X='00001133'
SET @vector_T='00001000'

SELECT
 Det.IdDetalleArticuloUnidades,
 Det.IdArticulo,
 Det.Equivalencia as [Equivalencia],
 Articulos.IdUnidad as [IdUnidadArticulo],
 Det.IdUnidad as [IdUnidad],
 Unidades.Abreviatura as [Un.],
 Det.Equivalencia as [Equiv.],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleArticulosUnidades Det
LEFT OUTER JOIN Articulos ON Articulos.IdArticulo=Det.IdArticulo
LEFT OUTER JOIN Unidades ON Unidades.IdUnidad=Det.IdUnidad
WHERE (Det.IdArticulo = @IdArticulo)
ORDER BY Unidades.Abreviatura

GO

/****** Object:  StoredProcedure [dbo].[DetArticulosUnidades_TXPrimero]    Script Date: 03/15/2011 11:48:38 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[DetArticulosUnidades_TXPrimero]

AS

DECLARE @vector_X varchar(30),@vector_T varchar(30)
SET @vector_X='000001133'
SET @vector_T='000005500'

SELECT TOP 1
 Det.IdDetalleArticuloUnidades,
 Det.IdArticulo,
 Det.Equivalencia as [Equivalencia],
 Articulos.IdUnidad as [IdUnidadArticulo],
 Det.IdUnidad as [IdUnidad],
 Unidades.Abreviatura as [Un.],
 Det.Equivalencia as [Equiv.],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleArticulosUnidades Det
LEFT OUTER JOIN Articulos ON Articulos.IdArticulo=Det.IdArticulo
LEFT OUTER JOIN Unidades ON Unidades.IdUnidad=Det.IdUnidad

GO

/****** Object:  StoredProcedure [dbo].[DetAutorizaciones_A]    Script Date: 03/15/2011 11:48:38 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[DetAutorizaciones_A]
@IdDetalleAutorizacion int  output,
@IdAutorizacion int,
@OrdenAutorizacion int,
@SectorEmisor1 varchar(1),
@IdSectorAutoriza1 int,
@IdCargoAutoriza1 int,
@SectorEmisor2 varchar(1),
@IdSectorAutoriza2 int,
@IdCargoAutoriza2 int,
@SectorEmisor3 varchar(1),
@IdSectorAutoriza3 int,
@IdCargoAutoriza3 int,
@SectorEmisor4 varchar(1),
@IdSectorAutoriza4 int,
@IdCargoAutoriza4 int,
@SectorEmisor5 varchar(1),
@IdSectorAutoriza5 int,
@IdCargoAutoriza5 int,
@SectorEmisor6 varchar(1),
@IdSectorAutoriza6 int,
@IdCargoAutoriza6 int
AS 
Insert into [DetalleAutorizaciones]
(
 IdAutorizacion,
 OrdenAutorizacion,
 SectorEmisor1,
 IdSectorAutoriza1,
 IdCargoAutoriza1,
 SectorEmisor2,
 IdSectorAutoriza2,
 IdCargoAutoriza2,
 SectorEmisor3,
 IdSectorAutoriza3,
 IdCargoAutoriza3,
 SectorEmisor4,
 IdSectorAutoriza4,
 IdCargoAutoriza4,
 SectorEmisor5,
 IdSectorAutoriza5,
 IdCargoAutoriza5,
 SectorEmisor6,
 IdSectorAutoriza6,
 IdCargoAutoriza6
)
Values
(
 @IdAutorizacion,
 @OrdenAutorizacion,
 @SectorEmisor1,
 @IdSectorAutoriza1,
 @IdCargoAutoriza1,
 @SectorEmisor2,
 @IdSectorAutoriza2,
 @IdCargoAutoriza2,
 @SectorEmisor3,
 @IdSectorAutoriza3,
 @IdCargoAutoriza3,
 @SectorEmisor4,
 @IdSectorAutoriza4,
 @IdCargoAutoriza4,
 @SectorEmisor5,
 @IdSectorAutoriza5,
 @IdCargoAutoriza5,
 @SectorEmisor6,
 @IdSectorAutoriza6,
 @IdCargoAutoriza6
)
Select @IdDetalleAutorizacion=@@identity
Return(@IdDetalleAutorizacion)
































GO

/****** Object:  StoredProcedure [dbo].[DetAutorizaciones_E]    Script Date: 03/15/2011 11:48:38 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[DetAutorizaciones_E]
@IdDetalleAutorizacion int  AS 
Delete [DetalleAutorizaciones]
where (IdDetalleAutorizacion=@IdDetalleAutorizacion)
































GO

/****** Object:  StoredProcedure [dbo].[DetAutorizaciones_M]    Script Date: 03/15/2011 11:48:38 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[DetAutorizaciones_M]
@IdDetalleAutorizacion int,
@IdAutorizacion int,
@OrdenAutorizacion int,
@SectorEmisor1 varchar(1),
@IdSectorAutoriza1 int,
@IdCargoAutoriza1 int,
@SectorEmisor2 varchar(1),
@IdSectorAutoriza2 int,
@IdCargoAutoriza2 int,
@SectorEmisor3 varchar(1),
@IdSectorAutoriza3 int,
@IdCargoAutoriza3 int,
@SectorEmisor4 varchar(1),
@IdSectorAutoriza4 int,
@IdCargoAutoriza4 int,
@SectorEmisor5 varchar(1),
@IdSectorAutoriza5 int,
@IdCargoAutoriza5 int,
@SectorEmisor6 varchar(1),
@IdSectorAutoriza6 int,
@IdCargoAutoriza6 int
as
Update [DetalleAutorizaciones]
SET 
IdAutorizacion=@IdAutorizacion,
OrdenAutorizacion=@OrdenAutorizacion,
SectorEmisor1=@SectorEmisor1,
IdSectorAutoriza1=@IdSectorAutoriza1,
IdCargoAutoriza1=@IdCargoAutoriza1,
SectorEmisor2=@SectorEmisor2,
IdSectorAutoriza2=@IdSectorAutoriza2,
IdCargoAutoriza2=@IdCargoAutoriza2,
SectorEmisor3=@SectorEmisor3,
IdSectorAutoriza3=@IdSectorAutoriza3,
IdCargoAutoriza3=@IdCargoAutoriza3,
SectorEmisor4=@SectorEmisor4,
IdSectorAutoriza4=@IdSectorAutoriza4,
IdCargoAutoriza4=@IdCargoAutoriza4,
SectorEmisor5=@SectorEmisor5,
IdSectorAutoriza5=@IdSectorAutoriza5,
IdCargoAutoriza5=@IdCargoAutoriza5,
SectorEmisor6=@SectorEmisor6,
IdSectorAutoriza6=@IdSectorAutoriza6,
IdCargoAutoriza6=@IdCargoAutoriza6
where (IdDetalleAutorizacion=@IdDetalleAutorizacion)
Return(@IdDetalleAutorizacion)
































GO

/****** Object:  StoredProcedure [dbo].[DetAutorizaciones_T]    Script Date: 03/15/2011 11:48:38 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[DetAutorizaciones_T]
@IdDetalleAutorizacion int
AS 
SELECT *
FROM [DetalleAutorizaciones]
where (IdDetalleAutorizacion=@IdDetalleAutorizacion)
































GO

/****** Object:  StoredProcedure [dbo].[DetAutorizaciones_TXAut]    Script Date: 03/15/2011 11:48:38 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE PROCEDURE [dbo].[DetAutorizaciones_TXAut]
@IdAutorizacion int
as
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='00111111133'
set @vector_T='00200000000'
SELECT
DetAut.IdDetalleAutorizacion,
DetAut.IdAutorizacion,
DetAut.OrdenAutorizacion as [Ord.aut.],
CASE
	WHEN SectorEmisor1='O' THEN
		'Sector emisor : [ Jefe de obra ]'
	WHEN SectorEmisor1='S' THEN
		'Sector emisor : [ ' + 
		(Select Top 1 Cargos.Descripcion 
		 From Cargos
		 Where DetAut.IdCargoAutoriza1=Cargos.IdCargo) + ' ]'
	ELSE
		(Select Top 1 Sectores.Descripcion 
		 From Sectores 
		 Where DetAut.IdSectorAutoriza1=Sectores.IdSector) + ' : [ ' +
		(Select Top 1 Cargos.Descripcion 
		 From Cargos
		 Where DetAut.IdCargoAutoriza1=Cargos.IdCargo) + ' ]' 
END as [Autorizacion 1],
CASE
	WHEN SectorEmisor2='O' THEN
		'Sector emisor : [ Jefe de obra ]'
	WHEN SectorEmisor2='S' THEN
		'Sector emisor : [ ' + 
		(Select Top 1 Cargos.Descripcion 
		 From Cargos
		 Where DetAut.IdCargoAutoriza2=Cargos.IdCargo) + ' ]'
	ELSE
		(Select Top 1 Sectores.Descripcion 
		 From Sectores 
		 Where DetAut.IdSectorAutoriza2=Sectores.IdSector) + ' : [ ' +
		(Select Top 1 Cargos.Descripcion 
		 From Cargos
		 Where DetAut.IdCargoAutoriza2=Cargos.IdCargo) + ' ]' 
END as [Autorizacion 2],
CASE
	WHEN SectorEmisor3='O' THEN
		'Sector emisor : [ Jefe de obra ]'
	WHEN SectorEmisor3='S' THEN
		'Sector emisor : [ ' + 
		(Select Top 1 Cargos.Descripcion 
		 From Cargos
		 Where DetAut.IdCargoAutoriza3=Cargos.IdCargo) + ' ]'
	ELSE
		(Select Top 1 Sectores.Descripcion 
		 From Sectores 
		 Where DetAut.IdSectorAutoriza3=Sectores.IdSector) + ' : [ ' +
		(Select Top 1 Cargos.Descripcion 
		 From Cargos
		 Where DetAut.IdCargoAutoriza3=Cargos.IdCargo) + ' ]' 
END as [Autorizacion 3],
CASE
	WHEN SectorEmisor4='O' THEN
		'Sector emisor : [ Jefe de obra ]'
	WHEN SectorEmisor4='S' THEN
		'Sector emisor : [ ' + 
		(Select Top 1 Cargos.Descripcion 
		 From Cargos
		 Where DetAut.IdCargoAutoriza4=Cargos.IdCargo) + ' ]'
	ELSE
		(Select Top 1 Sectores.Descripcion 
		 From Sectores 
		 Where DetAut.IdSectorAutoriza4=Sectores.IdSector) + ' : [ ' +
		(Select Top 1 Cargos.Descripcion 
		 From Cargos
		 Where DetAut.IdCargoAutoriza4=Cargos.IdCargo) + ' ]' 
END as [Autorizacion 4],
CASE
	WHEN SectorEmisor5='O' THEN
		'Sector emisor : [ Jefe de obra ]'
	WHEN SectorEmisor5='S' THEN
		'Sector emisor : [ ' + 
		(Select Top 1 Cargos.Descripcion 
		 From Cargos
		 Where DetAut.IdCargoAutoriza5=Cargos.IdCargo) + ' ]'
	ELSE
		(Select Top 1 Sectores.Descripcion 
		 From Sectores 
		 Where DetAut.IdSectorAutoriza5=Sectores.IdSector) + ' : [ ' +
		(Select Top 1 Cargos.Descripcion 
		 From Cargos
		 Where DetAut.IdCargoAutoriza5=Cargos.IdCargo) + ' ]' 
END as [Autorizacion 5],
CASE
	WHEN SectorEmisor6='O' THEN
		'Sector emisor : [ Jefe de obra ]'
	WHEN SectorEmisor6='S' THEN
		'Sector emisor : [ ' + 
		(Select Top 1 Cargos.Descripcion 
		 From Cargos
		 Where DetAut.IdCargoAutoriza6=Cargos.IdCargo) + ' ]'
	ELSE
		(Select Top 1 Sectores.Descripcion 
		 From Sectores 
		 Where DetAut.IdSectorAutoriza6=Sectores.IdSector) + ' : [ ' +
		(Select Top 1 Cargos.Descripcion 
		 From Cargos
		 Where DetAut.IdCargoAutoriza6=Cargos.IdCargo) + ' ]' 
END as [Autorizacion 6],
@Vector_T as Vector_T,
@Vector_X as Vector_X
FROM DetalleAutorizaciones DetAut
WHERE (DetAut.IdAutorizacion = @IdAutorizacion)
Order By DetAut.OrdenAutorizacion
































GO

/****** Object:  StoredProcedure [dbo].[DetAutorizaciones_TXPrimero]    Script Date: 03/15/2011 11:48:38 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE PROCEDURE [dbo].[DetAutorizaciones_TXPrimero]
as
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='00111111133'
set @vector_T='00811111100'
SELECT Top 1
DetAut.IdDetalleAutorizacion,
DetAut.IdAutorizacion,
DetAut.OrdenAutorizacion as [Orden de autoriz.],
Null as [Autorizacion 1],
Null as [Autorizacion 2],
Null as [Autorizacion 3],
Null as [Autorizacion 4],
Null as [Autorizacion 5],
Null as [Autorizacion 6],
@Vector_T as Vector_T,
@Vector_X as Vector_X
FROM DetalleAutorizaciones DetAut
































GO

/****** Object:  StoredProcedure [dbo].[DetConjuntos_M]    Script Date: 03/15/2011 11:48:38 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO



CREATE Procedure [dbo].[DetConjuntos_M]

@IdDetalleConjunto int,
@IdConjunto int,
@IdArticulo int,
@Cantidad numeric(18,3),
@IdUnidad int,
@Cantidad1 numeric(18,2),
@Cantidad2 numeric(18,2),
@Observaciones ntext,
@FechaAlta datetime,
@FechaModificacion datetime

AS

IF Exists(Select IdDetalleConjunto From DetalleConjuntos Where IdDetalleConjunto=@IdDetalleConjunto)
    BEGIN
	UPDATE [DetalleConjuntos]
	SET 
	 IdConjunto=@IdConjunto,
	 IdArticulo=@IdArticulo,
	 Cantidad=@Cantidad,
	 IdUnidad=@IdUnidad,
	 Cantidad1=@Cantidad1,
	 Cantidad2=@Cantidad2,
	 Observaciones=@Observaciones,
	 FechaAlta=@FechaAlta,
	 FechaModificacion=GetDate()
	WHERE (IdDetalleConjunto=@IdDetalleConjunto)
    END
ELSE
    BEGIN
	INSERT INTO [DetalleConjuntos]
	(
	 IdDetalleConjunto,
	 IdConjunto,
	 IdArticulo,
	 Cantidad,
	 IdUnidad,
	 Cantidad1,
	 Cantidad2,
	 Observaciones,
	 FechaAlta,
	 FechaModificacion
	)
	VALUES
	(
	 @IdDetalleConjunto,
	 @IdConjunto,
	 @IdArticulo,
	 @Cantidad,
	 @IdUnidad,
	 @Cantidad1,
	 @Cantidad2,
	 @Observaciones,
	 GetDate(),
	 Null
	)
    END

RETURN(@IdDetalleConjunto)


GO

/****** Object:  StoredProcedure [dbo].[DetConjuntos_T]    Script Date: 03/15/2011 11:48:38 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE Procedure [dbo].[DetConjuntos_T]

@IdDetalleConjunto int

AS 

SELECT *
FROM [DetalleConjuntos]
WHERE (IdDetalleConjunto=@IdDetalleConjunto)


GO

/****** Object:  StoredProcedure [dbo].[DetControlesCalidad_A]    Script Date: 03/15/2011 11:48:38 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[DetControlesCalidad_A]
@IdDetalleControlCalidad int  output,
@IdDetalleRecepcion int,
@IdRecepcion int,
@Fecha datetime,
@IdMotivoRechazo int,
@Cantidad numeric(18,2),
@Observaciones ntext,
@CantidadAdicional numeric(18,2),
@IdRealizo int,
@CantidadRechazada numeric(18,2),
@Trasabilidad varchar(10)
AS 
Insert into [DetalleControlesCalidad]
(
 IdDetalleRecepcion,
 IdRecepcion,
 Fecha,
 IdMotivoRechazo,
 Cantidad,
 Observaciones,
 CantidadAdicional,
 IdRealizo,
 CantidadRechazada,
 Trasabilidad
)
Values
(
 @IdDetalleRecepcion,
 @IdRecepcion,
 @Fecha,
 @IdMotivoRechazo,
 @Cantidad,
 @Observaciones,
 @CantidadAdicional,
 @IdRealizo,
 @CantidadRechazada,
 @Trasabilidad
)
Select @IdDetalleControlCalidad=@@identity
Return(@IdDetalleControlCalidad)
































GO

/****** Object:  StoredProcedure [dbo].[DetControlesCalidad_E]    Script Date: 03/15/2011 11:48:38 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[DetControlesCalidad_E]
@IdDetalleControlCalidad int  AS 
Delete [DetalleControlesCalidad]
where (IdDetalleControlCalidad=@IdDetalleControlCalidad)
































GO

/****** Object:  StoredProcedure [dbo].[DetControlesCalidad_M]    Script Date: 03/15/2011 11:48:38 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[DetControlesCalidad_M]
@IdDetalleControlCalidad int,
@IdDetalleRecepcion int,
@IdRecepcion int,
@Fecha datetime,
@IdMotivoRechazo int,
@Cantidad numeric(18,2),
@Observaciones ntext,
@CantidadAdicional numeric(18,2),
@IdRealizo int,
@CantidadRechazada numeric(18,2),
@Trasabilidad varchar(10)
As
Update [DetalleControlesCalidad]
SET 
IdDetalleRecepcion=@IdDetalleRecepcion,
IdRecepcion=@IdRecepcion,
Fecha=@Fecha,
IdMotivoRechazo=@IdMotivoRechazo,
Cantidad=@Cantidad,
Observaciones=@Observaciones,
CantidadAdicional=@CantidadAdicional,
IdRealizo=@IdRealizo,
CantidadRechazada=@CantidadRechazada,
Trasabilidad=@Trasabilidad
Where (IdDetalleControlCalidad=@IdDetalleControlCalidad)
Return(@IdDetalleControlCalidad)
































GO

/****** Object:  StoredProcedure [dbo].[DetControlesCalidad_T]    Script Date: 03/15/2011 11:48:38 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[DetControlesCalidad_T]
@IdDetalleControlCalidad int
AS 
SELECT *
FROM [DetalleControlesCalidad]
where (IdDetalleControlCalidad=@IdDetalleControlCalidad)
































GO

/****** Object:  StoredProcedure [dbo].[DetControlesCalidad_TXCal]    Script Date: 03/15/2011 11:48:38 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE PROCEDURE [dbo].[DetControlesCalidad_TXCal]
@IdDetalleRecepcion int
as
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='0011111033'
set @vector_T='0044444000'
SELECT
DetCal.IdDetalleControlCalidad,
DetCal.IdRecepcion,
DetCal.fecha as [Fecha],
DetCal.Cantidad as [Cantidad],
DetCal.CantidadRechazada as [Cant.rech.],
MotivosRechazo.Descripcion as [Motivo],
DetCal.Trasabilidad,
DetCal.Observaciones,
@Vector_T as Vector_T,
@Vector_X as Vector_X
FROM DetalleControlesCalidad DetCal
LEFT OUTER JOIN MotivosRechazo ON DetCal.IdMotivoRechazo=MotivosRechazo.IdMotivoRechazo
WHERE (DetCal.IdDetalleRecepcion = @IdDetalleRecepcion)
ORDER by DetCal.Fecha
































GO

/****** Object:  StoredProcedure [dbo].[DetControlesCalidad_TXPrimero]    Script Date: 03/15/2011 11:48:38 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE PROCEDURE [dbo].[DetControlesCalidad_TXPrimero]
as
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='0011111133'
set @vector_T='0044444000'
SELECT TOP 1
DetCal.IdDetalleControlCalidad,
DetCal.IdRecepcion,
DetCal.fecha as [Fecha],
DetCal.Cantidad as [Cantidad],
DetCal.CantidadRechazada as [Cant.rech.],
MotivosRechazo.Descripcion as [Motivo],
DetCal.Trasabilidad,
DetCal.Observaciones,
@Vector_T as Vector_T,
@Vector_X as Vector_X
FROM DetalleControlesCalidad DetCal
LEFT OUTER JOIN MotivosRechazo ON DetCal.IdMotivoRechazo=MotivosRechazo.IdMotivoRechazo
































GO

/****** Object:  StoredProcedure [dbo].[DetEmpleados_A]    Script Date: 03/15/2011 11:48:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[DetEmpleados_A]
@IdDetalleEmpleado int  output,
@IdEmpleado int,
@FechaIngreso Datetime,
@FechaEgreso Datetime
AS 
Insert into [DetalleEmpleados]
(
 IdEmpleado,
 FechaIngreso,
 FechaEgreso
)
Values
(
 @IdEmpleado,
 @FechaIngreso,
 @FechaEgreso
)
Select @IdDetalleEmpleado=@@identity
Return(@IdDetalleEmpleado)































GO

/****** Object:  StoredProcedure [dbo].[DetEmpleados_E]    Script Date: 03/15/2011 11:48:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[DetEmpleados_E]
@IdDetalleEmpleado int  
AS 
Delete [DetalleEmpleados]
where (IdDetalleEmpleado=@IdDetalleEmpleado)































GO

/****** Object:  StoredProcedure [dbo].[DetEmpleados_M]    Script Date: 03/15/2011 11:48:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[DetEmpleados_M]
@IdDetalleEmpleado int,
@IdEmpleado int,
@FechaIngreso Datetime,
@FechaEgreso Datetime
as
Update [DetalleEmpleados]
SET 
IdEmpleado=@IdEmpleado,
FechaIngreso=@FechaIngreso,
FechaEgreso=@FechaEgreso
where (IdDetalleEmpleado=@IdDetalleEmpleado)
Return(@IdDetalleEmpleado)































GO

/****** Object:  StoredProcedure [dbo].[DetEmpleados_T]    Script Date: 03/15/2011 11:48:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[DetEmpleados_T]
@IdDetalleEmpleado int
AS 
SELECT *
FROM [DetalleEmpleados]
where (IdDetalleEmpleado=@IdDetalleEmpleado)































GO

/****** Object:  StoredProcedure [dbo].[DetEmpleados_TX_Emp]    Script Date: 03/15/2011 11:48:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE PROCEDURE [dbo].[DetEmpleados_TX_Emp]
@IdEmpleado int
as
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='001133'
set @vector_T='005500'
SELECT
DetEqu.IdDetalleEmpleado,
DetEqu.IdEmpleado,
DetEqu.FechaIngreso,
DetEqu.FechaEgreso,
@Vector_T as Vector_T,
@Vector_X as Vector_X
FROM DetalleEmpleados DetEqu
WHERE (DetEqu.IdEmpleado = @IdEmpleado)
ORDER by DetEqu.FechaIngreso































GO

/****** Object:  StoredProcedure [dbo].[DetEmpleados_TXPrimero]    Script Date: 03/15/2011 11:48:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE PROCEDURE [dbo].[DetEmpleados_TXPrimero]
as
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='001133'
set @vector_T='005500'
SELECT TOP 1
DetEqu.IdDetalleEmpleado,
DetEqu.IdEmpleado,
DetEqu.FechaIngreso,
DetEqu.FechaEgreso,
@Vector_T as Vector_T,
@Vector_X as Vector_X
FROM DetalleEmpleados DetEqu































GO

/****** Object:  StoredProcedure [dbo].[DetEmpleadosSectores_A]    Script Date: 03/15/2011 11:48:39 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[DetEmpleadosSectores_A]
@IdDetalleEmpleadoSector int  output,
@IdEmpleado int,
@FechaCambio Datetime,
@IdSectorNuevo int
AS 
Insert into [DetalleEmpleadosSectores]
(
 IdEmpleado,
 FechaCambio,
 IdSectorNuevo
)
Values
(
 @IdEmpleado,
 @FechaCambio,
 @IdSectorNuevo
)
Select @IdDetalleEmpleadoSector=@@identity
Return(@IdDetalleEmpleadoSector)































GO

/****** Object:  StoredProcedure [dbo].[DetEmpleadosSectores_E]    Script Date: 03/15/2011 11:48:39 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[DetEmpleadosSectores_E]
@IdDetalleEmpleadoSector int  
AS 
Delete [DetalleEmpleadosSectores]
where (IdDetalleEmpleadoSector=@IdDetalleEmpleadoSector)































GO

/****** Object:  StoredProcedure [dbo].[DetEmpleadosSectores_M]    Script Date: 03/15/2011 11:48:39 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[DetEmpleadosSectores_M]
@IdDetalleEmpleadoSector int,
@IdEmpleado int,
@FechaCambio Datetime,
@IdSectorNuevo int
as
Update [DetalleEmpleadosSectores]
SET 
IdEmpleado=@IdEmpleado,
FechaCambio=@FechaCambio,
IdSectorNuevo=@IdSectorNuevo
where (IdDetalleEmpleadoSector=@IdDetalleEmpleadoSector)
Return(@IdDetalleEmpleadoSector)































GO

/****** Object:  StoredProcedure [dbo].[DetEmpleadosSectores_T]    Script Date: 03/15/2011 11:48:39 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[DetEmpleadosSectores_T]
@IdDetalleEmpleadoSector int
AS 
SELECT *
FROM [DetalleEmpleadosSectores]
where (IdDetalleEmpleadoSector=@IdDetalleEmpleadoSector)































GO

/****** Object:  StoredProcedure [dbo].[DetEmpleadosSectores_TX_EmpSec]    Script Date: 03/15/2011 11:48:39 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE PROCEDURE [dbo].[DetEmpleadosSectores_TX_EmpSec]
@IdEmpleado int
as
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='001133'
set @vector_T='005000'
SELECT
DetEmpSec.IdDetalleEmpleadoSector,
DetEmpSec.IdEmpleado,
DetEmpSec.FechaCambio as [Fecha Cambio],
Sectores.Descripcion as [Sector nuevo],
@Vector_T as Vector_T,
@Vector_X as Vector_X
FROM DetalleEmpleadosSectores DetEmpSec
LEFT OUTER JOIN Sectores ON Sectores.IdSector=DetEmpSec.IdSectorNuevo
WHERE (DetEmpSec.IdEmpleado = @IdEmpleado)
ORDER by DetEmpSec.FechaCambio































GO

/****** Object:  StoredProcedure [dbo].[DetEmpleadosSectores_TXPrimero]    Script Date: 03/15/2011 11:48:39 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE PROCEDURE [dbo].[DetEmpleadosSectores_TXPrimero]
as
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='001133'
set @vector_T='005500'
SELECT TOP 1
DetEmpSec.IdDetalleEmpleadoSector,
DetEmpSec.IdEmpleado,
DetEmpSec.FechaCambio as [Fecha Cambio],
Sectores.Descripcion as [Sector nuevo],
@Vector_T as Vector_T,
@Vector_X as Vector_X
FROM DetalleEmpleadosSectores DetEmpSec
LEFT OUTER JOIN Sectores ON Sectores.IdSector=DetEmpSec.IdSectorNuevo































GO

/****** Object:  StoredProcedure [dbo].[DetEquipos_E]    Script Date: 03/15/2011 11:48:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[DetEquipos_E]
@IdDetalleEquipo int  AS 
Delete [DetalleEquipos]
where (IdDetalleEquipo=@IdDetalleEquipo)
































GO

/****** Object:  StoredProcedure [dbo].[DetEquipos_M]    Script Date: 03/15/2011 11:48:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE Procedure [dbo].[DetEquipos_M]
@IdDetalleEquipo int,
@IdEquipo int,
@IdPlano int,
@EnviarEmail tinyint
AS
IF Exists(Select de.IdDetalleEquipo From DetalleEquipos de Where de.IdDetalleEquipo=@IdDetalleEquipo)
	BEGIN
		UPDATE DetalleEquipos
		SET
		 IdEquipo=@IdEquipo,
		 IdPlano=@IdPlano,
		 EnviarEmail=@EnviarEmail
		WHERE IdDetalleEquipo=@IdDetalleEquipo
	END
ELSE
	BEGIN
		INSERT INTO DetalleEquipos
		(
		 IdDetalleEquipo,
		 IdEquipo,
		 IdPlano,
		 EnviarEmail
		)
		VALUES
		(
		 @IdDetalleEquipo,
		 @IdEquipo,
		 @IdPlano,
		 @EnviarEmail
		)
	END
RETURN(@IdDetalleEquipo)





GO

/****** Object:  StoredProcedure [dbo].[DetEquipos_T]    Script Date: 03/15/2011 11:48:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[DetEquipos_T]
@IdDetalleEquipo int
AS 
SELECT *
FROM [DetalleEquipos]
where (IdDetalleEquipo=@IdDetalleEquipo)
































GO

/****** Object:  StoredProcedure [dbo].[DetEquipos_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[DetEquipos_TX_ParaTransmitir]
AS 
SELECT *
FROM DetalleEquipos
WHERE EnviarEmail=1
































GO

/****** Object:  StoredProcedure [dbo].[DetEquipos_TX_ParaTransmitir_Todos]    Script Date: 03/15/2011 11:48:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[DetEquipos_TX_ParaTransmitir_Todos]
AS 
SELECT *
FROM DetalleEquipos
































GO

/****** Object:  StoredProcedure [dbo].[DetEquipos_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[DetEquipos_TX_SetearComoTransmitido]
AS 
Update DetalleEquipos
SET EnviarEmail=0
WHERE EnviarEmail<>0
































GO

/****** Object:  StoredProcedure [dbo].[DetEquipos_TXEquipo]    Script Date: 03/15/2011 11:48:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE PROCEDURE [dbo].[DetEquipos_TXEquipo]
@IdEquipo int
as
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='0001133'
set @vector_T='0005500'
SELECT
DetEqu.IdDetalleEquipo,
DetEqu.IdEquipo,
DetEqu.IdPlano,
Planos.NumeroPlano,
Planos.Descripcion,
@Vector_T as Vector_T,
@Vector_X as Vector_X
FROM DetalleEquipos DetEqu
LEFT OUTER JOIN Planos ON DetEqu.IdPlano = Planos.IdPlano
WHERE (DetEqu.IdEquipo = @IdEquipo)
order by Planos.NumeroPlano
































GO

/****** Object:  StoredProcedure [dbo].[DetEquipos_TXPrimero]    Script Date: 03/15/2011 11:48:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE PROCEDURE [dbo].[DetEquipos_TXPrimero]
as
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='0001133'
set @vector_T='0005500'
SELECT TOP 1
DetEqu.IdDetalleEquipo,
DetEqu.IdEquipo,
DetEqu.IdPlano,
Planos.NumeroPlano,
Planos.Descripcion,
@Vector_T as Vector_T,
@Vector_X as Vector_X
FROM DetalleEquipos DetEqu
LEFT OUTER JOIN Planos ON DetEqu.IdPlano = Planos.IdPlano
































GO

/****** Object:  StoredProcedure [dbo].[DetEventosDelSistema_A]    Script Date: 03/15/2011 11:48:39 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[DetEventosDelSistema_A]
@IdDetalleEventoDelSistema int  output,
@IdEventoDelSistema int,
@IdEmpleado int
AS 
Insert into [DetalleEventosDelSistema]
(
 IdEventoDelSistema,
 IdEmpleado
)
Values
(
 @IdEventoDelSistema,
 @IdEmpleado
)
Select @IdDetalleEventoDelSistema=@@identity
Return(@IdDetalleEventoDelSistema)































GO

/****** Object:  StoredProcedure [dbo].[DetEventosDelSistema_E]    Script Date: 03/15/2011 11:48:39 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[DetEventosDelSistema_E]
@IdDetalleEventoDelSistema int  
AS 
Delete [DetalleEventosDelSistema]
where (IdDetalleEventoDelSistema=@IdDetalleEventoDelSistema)































GO

/****** Object:  StoredProcedure [dbo].[DetEventosDelSistema_M]    Script Date: 03/15/2011 11:48:39 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[DetEventosDelSistema_M]
@IdDetalleEventoDelSistema int,
@IdEventoDelSistema int,
@IdEmpleado int
as
Update [DetalleEventosDelSistema]
SET 
IdEventoDelSistema=@IdEventoDelSistema,
IdEmpleado=@IdEmpleado
where (IdDetalleEventoDelSistema=@IdDetalleEventoDelSistema)
Return(@IdDetalleEventoDelSistema)































GO

/****** Object:  StoredProcedure [dbo].[DetEventosDelSistema_T]    Script Date: 03/15/2011 11:48:39 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[DetEventosDelSistema_T]
@IdDetalleEventoDelSistema int
AS 
SELECT *
FROM [DetalleEventosDelSistema]
where (IdDetalleEventoDelSistema=@IdDetalleEventoDelSistema)































GO

/****** Object:  StoredProcedure [dbo].[DetEventosDelSistema_TX_PorEvento]    Script Date: 03/15/2011 11:48:39 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE PROCEDURE [dbo].[DetEventosDelSistema_TX_PorEvento]
@IdEventoDelSistema int
as
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='0001133'
set @vector_T='0005500'
SELECT
DetEv.IdDetalleEventoDelSistema,
DetEv.IdEventoDelSistema,
DetEv.IdEmpleado,
Empleados.Legajo as [Legajo],
Empleados.Nombre as [Apellido y nombre],
@Vector_T as Vector_T,
@Vector_X as Vector_X
FROM DetalleEventosDelSistema DetEv
LEFT OUTER JOIN Empleados ON DetEv.IdEmpleado=Empleados.IdEmpleado
WHERE (DetEv.IdEventoDelSistema = @IdEventoDelSistema)
ORDER by Empleados.Nombre































GO

/****** Object:  StoredProcedure [dbo].[DetEventosDelSistema_TXPrimero]    Script Date: 03/15/2011 11:48:39 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE PROCEDURE [dbo].[DetEventosDelSistema_TXPrimero]
as
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='0001133'
set @vector_T='0005500'
SELECT TOP 1
DetEv.IdDetalleEventoDelSistema,
DetEv.IdEventoDelSistema,
DetEv.IdEmpleado,
Empleados.Legajo as [Legajo],
Empleados.Nombre as [Apellido y nombre],
@Vector_T as Vector_T,
@Vector_X as Vector_X
FROM DetalleEventosDelSistema DetEv
LEFT OUTER JOIN Empleados ON DetEv.IdEmpleado=Empleados.IdEmpleado































GO

/****** Object:  StoredProcedure [dbo].[DetObrasPolizas_A]    Script Date: 03/15/2011 11:48:39 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[DetObrasPolizas_A]

@IdDetalleObraPoliza int  output,
@IdObra int,
@IdTipoPoliza int,
@IdProveedor int,
@NumeroPoliza numeric(18,0),
@FechaVigencia datetime,
@FechaVencimientoCuota datetime,
@Importe numeric(18,2)

AS 

Insert into [DetalleObrasPolizas]
(
 IdObra,
 IdTipoPoliza,
 IdProveedor,
 NumeroPoliza,
 FechaVigencia,
 FechaVencimientoCuota,
 Importe
)
Values
(
 @IdObra,
 @IdTipoPoliza,
 @IdProveedor,
 @NumeroPoliza,
 @FechaVigencia,
 @FechaVencimientoCuota,
 @Importe
)
Select @IdDetalleObraPoliza=@@identity
Return(@IdDetalleObraPoliza)































GO

/****** Object:  StoredProcedure [dbo].[DetObrasPolizas_E]    Script Date: 03/15/2011 11:48:39 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[DetObrasPolizas_E]
@IdDetalleObraPoliza int  
As 
Delete [DetalleObrasPolizas]
Where (IdDetalleObraPoliza=@IdDetalleObraPoliza)































GO

/****** Object:  StoredProcedure [dbo].[DetObrasPolizas_M]    Script Date: 03/15/2011 11:48:40 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[DetObrasPolizas_M]

@IdDetalleObraPoliza int,
@IdObra int,
@IdTipoPoliza int,
@IdProveedor int,
@NumeroPoliza numeric(18,0),
@FechaVigencia datetime,
@FechaVencimientoCuota datetime,
@Importe numeric(18,2)

As

Update [DetalleObrasPolizas]
Set 
 IdObra=@IdObra,
 IdTipoPoliza=@IdTipoPoliza,
 IdProveedor=@IdProveedor,
 NumeroPoliza=@NumeroPoliza,
 FechaVigencia=@FechaVigencia,
 FechaVencimientoCuota=@FechaVencimientoCuota,
 Importe=@Importe
Where (IdDetalleObraPoliza=@IdDetalleObraPoliza)

Return(@IdDetalleObraPoliza)































GO

/****** Object:  StoredProcedure [dbo].[DetObrasPolizas_T]    Script Date: 03/15/2011 11:48:40 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[DetObrasPolizas_T]
@IdDetalleObraPoliza int
AS 
SELECT *
FROM [DetalleObrasPolizas]
WHERE (IdDetalleObraPoliza=@IdDetalleObraPoliza)
































GO

/****** Object:  StoredProcedure [dbo].[DetObrasPolizas_TXPolizas]    Script Date: 03/15/2011 11:48:40 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE PROCEDURE [dbo].[DetObrasPolizas_TXPolizas]

@IdObra int

AS

Declare @vector_X varchar(30),@vector_T varchar(30)
Set @vector_X='011111133'
Set @vector_T='031356300'

SELECT
 DetPol.IdDetalleObraPoliza,
 Proveedores.RazonSocial as [Aseguradora],
 TiposPoliza.Descripcion as [Tipo poliza],
 DetPol.NumeroPoliza as [Nro. poliza],
 DetPol.FechaVigencia as [Fecha vig.],
 DetPol.FechaVencimientoCuota as [Fecha vto.cuota],
 DetPol.Importe as [Importe],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleObrasPolizas DetPol
LEFT OUTER JOIN Proveedores ON DetPol.IdProveedor = Proveedores.IdProveedor
LEFT OUTER JOIN TiposPoliza ON DetPol.IdTipoPoliza = TiposPoliza.IdTipoPoliza
WHERE (DetPol.IdObra = @IdObra)
ORDER by DetPol.NumeroPoliza






























GO

/****** Object:  StoredProcedure [dbo].[DetObrasPolizas_TXPrimero]    Script Date: 03/15/2011 11:48:40 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE PROCEDURE [dbo].[DetObrasPolizas_TXPrimero]

AS

Declare @vector_X varchar(30),@vector_T varchar(30)
Set @vector_X='011111133'
Set @vector_T='031356300'

SELECT TOP 1
 DetPol.IdDetalleObraPoliza,
 Proveedores.RazonSocial as [Aseguradora],
 TiposPoliza.Descripcion as [Tipo poliza],
 DetPol.NumeroPoliza as [Nro. poliza],
 DetPol.FechaVigencia as [Fecha vig.],
 DetPol.FechaVencimientoCuota as [Fecha vto.cuota],
 DetPol.Importe as [Importe],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleObrasPolizas DetPol
LEFT OUTER JOIN Proveedores ON DetPol.IdProveedor = Proveedores.IdProveedor
LEFT OUTER JOIN TiposPoliza ON DetPol.IdTipoPoliza = TiposPoliza.IdTipoPoliza






























GO

/****** Object:  StoredProcedure [dbo].[DetOtrosIngresosAlmacen_A]    Script Date: 03/15/2011 11:48:40 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE Procedure [dbo].[DetOtrosIngresosAlmacen_A]

@IdDetalleOtroIngresoAlmacen int  output,
@IdOtroIngresoAlmacen int,
@IdArticulo int,
@IdStock int,
@Partida int,
@Cantidad numeric(12,2),
@CantidadAdicional numeric(12,2),
@IdUnidad int,
@Cantidad1 numeric(12,2),
@Cantidad2 numeric(12,2),
@Adjunto varchar(2),
@ArchivoAdjunto1 varchar(100),
@ArchivoAdjunto2 varchar(100),
@ArchivoAdjunto3 varchar(100),
@ArchivoAdjunto4 varchar(100),
@ArchivoAdjunto5 varchar(100),
@ArchivoAdjunto6 varchar(100),
@ArchivoAdjunto7 varchar(100),
@ArchivoAdjunto8 varchar(100),
@ArchivoAdjunto9 varchar(100),
@ArchivoAdjunto10 varchar(100),
@Observaciones ntext,
@IdUbicacion int,
@IdObra int,
@EnviarEmail tinyint,
@IdDetalleOtroIngresoAlmacenOriginal int,
@IdOtroIngresoAlmacenOriginal int,
@IdOrigenTransmision int 

AS 

BEGIN TRAN

--SET @Partida=IsNull(@Partida,0)

DECLARE @IdStock1 int, @Anulado varchar(2)
SET @Anulado=IsNull((Select Top 1 OtrosIngresosAlmacen.Anulado
			From OtrosIngresosAlmacen 
			Where OtrosIngresosAlmacen.IdOtroIngresoAlmacen=@IdOtroIngresoAlmacen),'NO')
IF @Anulado<>'SI'
   BEGIN
	SET @IdStock1=IsNull((Select Top 1 Stock.IdStock
				From Stock 
				Where IdArticulo=@IdArticulo and IsNull(Partida,0)=IsNull(@Partida,0) and 
					IdUbicacion=@IdUbicacion and IdObra=@IdObra and 
					IdUnidad=@IdUnidad),0)
	IF @IdStock1>0 
		UPDATE Stock
		SET CantidadUnidades=IsNull(CantidadUnidades,0)+IsNull(@Cantidad,0)
		WHERE IdStock=@IdStock1
	ELSE
		INSERT INTO Stock (IdArticulo, Partida, CantidadUnidades, CantidadAdicional,
					IdUnidad, IdUbicacion, IdObra)
		VALUES (@IdArticulo, @Partida, IsNull(@Cantidad,0), Null, @IdUnidad, @IdUbicacion, @IdObra)
   END

INSERT INTO [DetalleOtrosIngresosAlmacen]
(
 IdOtroIngresoAlmacen,
 IdArticulo,
 IdStock,
 Partida,
 Cantidad,
 CantidadAdicional,
 IdUnidad,
 Cantidad1,
 Cantidad2,
 Adjunto,
 ArchivoAdjunto1,
 ArchivoAdjunto2,
 ArchivoAdjunto3,
 ArchivoAdjunto4,
 ArchivoAdjunto5,
 ArchivoAdjunto6,
 ArchivoAdjunto7,
 ArchivoAdjunto8,
 ArchivoAdjunto9,
 ArchivoAdjunto10,
 Observaciones,
 IdUbicacion,
 IdObra,
 EnviarEmail,
 IdDetalleOtroIngresoAlmacenOriginal,
 IdOtroIngresoAlmacenOriginal,
 IdOrigenTransmision
)
VALUES
(
 @IdOtroIngresoAlmacen,
 @IdArticulo,
 @IdStock,
 @Partida,
 @Cantidad,
 @CantidadAdicional,
 @IdUnidad,
 @Cantidad1,
 @Cantidad2,
 @Adjunto,
 @ArchivoAdjunto1,
 @ArchivoAdjunto2,
 @ArchivoAdjunto3,
 @ArchivoAdjunto4,
 @ArchivoAdjunto5,
 @ArchivoAdjunto6,
 @ArchivoAdjunto7,
 @ArchivoAdjunto8,
 @ArchivoAdjunto9,
 @ArchivoAdjunto10,
 @Observaciones,
 @IdUbicacion,
 @IdObra,
 @EnviarEmail,
 @IdDetalleOtroIngresoAlmacenOriginal,
 @IdOtroIngresoAlmacenOriginal,
 @IdOrigenTransmision
)
SELECT @IdDetalleOtroIngresoAlmacen=@@identity

IF @@ERROR <> 0 GOTO AbortTransaction

COMMIT TRAN
GOTO EndTransaction

AbortTransaction:
ROLLBACK TRAN

EndTransaction:
RETURN(@IdDetalleOtroIngresoAlmacen)


GO

/****** Object:  StoredProcedure [dbo].[DetOtrosIngresosAlmacen_E]    Script Date: 03/15/2011 11:48:40 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO


























CREATE Procedure [dbo].[DetOtrosIngresosAlmacen_E]
@IdDetalleOtroIngresoAlmacen int  AS 
Delete [DetalleOtrosIngresosAlmacen]
Where (IdDetalleOtroIngresoAlmacen=@IdDetalleOtroIngresoAlmacen)


























GO

/****** Object:  StoredProcedure [dbo].[DetOtrosIngresosAlmacen_M]    Script Date: 03/15/2011 11:48:40 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE Procedure [dbo].[DetOtrosIngresosAlmacen_M]

@IdDetalleOtroIngresoAlmacen int,
@IdOtroIngresoAlmacen int,
@IdArticulo int,
@IdStock int,
@Partida int,
@Cantidad numeric(12,2),
@CantidadAdicional numeric(12,2),
@IdUnidad int,
@Cantidad1 numeric(12,2),
@Cantidad2 numeric(12,2),
@Adjunto varchar(2),
@ArchivoAdjunto1 varchar(100),
@ArchivoAdjunto2 varchar(100),
@ArchivoAdjunto3 varchar(100),
@ArchivoAdjunto4 varchar(100),
@ArchivoAdjunto5 varchar(100),
@ArchivoAdjunto6 varchar(100),
@ArchivoAdjunto7 varchar(100),
@ArchivoAdjunto8 varchar(100),
@ArchivoAdjunto9 varchar(100),
@ArchivoAdjunto10 varchar(100),
@Observaciones ntext,
@IdUbicacion int,
@IdObra int,
@EnviarEmail tinyint,
@IdDetalleOtroIngresoAlmacenOriginal int,
@IdOtroIngresoAlmacenOriginal int,
@IdOrigenTransmision int 

AS

BEGIN TRAN

--SET @Partida=IsNull(@Partida,0)

DECLARE @IdStockAnt int, @IdArticuloAnt int, @PartidaAnt int, @CantidadUnidadesAnt numeric(18,2),
	@IdUnidadAnt int, @IdUbicacionAnt int, @IdObraAnt int, @IdStock1 int, @Anulado varchar(2)

SET @Anulado=IsNull((Select Top 1 OtrosIngresosAlmacen.Anulado
			From OtrosIngresosAlmacen 
			Where OtrosIngresosAlmacen.IdOtroIngresoAlmacen=@IdOtroIngresoAlmacen),'NO')

IF @Anulado<>'SI'
   BEGIN
	SET @IdArticuloAnt=IsNull((Select Top 1 IdArticulo From DetalleOtrosIngresosAlmacen 
				   Where IdDetalleOtroIngresoAlmacen=@IdDetalleOtroIngresoAlmacen),0)
	SET @PartidaAnt=IsNull((Select Top 1 Partida From DetalleOtrosIngresosAlmacen 
				Where IdDetalleOtroIngresoAlmacen=@IdDetalleOtroIngresoAlmacen),0)
	SET @CantidadUnidadesAnt=IsNull((Select Top 1 Cantidad From DetalleOtrosIngresosAlmacen 
					 Where IdDetalleOtroIngresoAlmacen=@IdDetalleOtroIngresoAlmacen),0)
	SET @IdUnidadAnt=IsNull((Select Top 1 IdUnidad From DetalleOtrosIngresosAlmacen 
				 Where IdDetalleOtroIngresoAlmacen=@IdDetalleOtroIngresoAlmacen),0)
	SET @IdUbicacionAnt=IsNull((Select Top 1 IdUbicacion From DetalleOtrosIngresosAlmacen 
				    Where IdDetalleOtroIngresoAlmacen=@IdDetalleOtroIngresoAlmacen),0)
	SET @IdObraAnt=IsNull((Select Top 1 IdObra From OtrosIngresosAlmacen 
				Where IdOtroIngresoAlmacen=@IdOtroIngresoAlmacen),0)
	SET @IdStockAnt=IsNull((Select Top 1 Stock.IdStock
				From Stock 
				Where IdArticulo=@IdArticuloAnt and IsNull(Partida,0)=@PartidaAnt and 
					IdUbicacion=@IdUbicacionAnt and IdObra=@IdObraAnt and 
					IdUnidad=@IdUnidadAnt),0)
	IF @IdStockAnt>0 
		UPDATE Stock
		SET CantidadUnidades=IsNull(CantidadUnidades,0)-@CantidadUnidadesAnt
		WHERE IdStock=@IdStockAnt
	ELSE
		INSERT INTO Stock (IdArticulo, Partida, CantidadUnidades, CantidadAdicional,
					IdUnidad, IdUbicacion, IdObra)
		VALUES (@IdArticuloAnt, @PartidaAnt, @CantidadUnidadesAnt*-1, Null, @IdUnidadAnt, 
			@IdUbicacionAnt, @IdObraAnt)
	
	SET @IdStock1=IsNull((Select Top 1 Stock.IdStock
				From Stock 
				Where IdArticulo=@IdArticulo and IsNull(Partida,0)=IsNull(@Partida,0) and 
					IdUbicacion=@IdUbicacion and IdObra=@IdObra and 
					IdUnidad=@IdUnidad),0)
	IF @IdStock1>0 
		UPDATE Stock
		SET CantidadUnidades=IsNull(CantidadUnidades,0)+IsNull(@Cantidad,0)
		WHERE IdStock=@IdStock1
	ELSE
		INSERT INTO Stock (IdArticulo, Partida, CantidadUnidades, CantidadAdicional,
					IdUnidad, IdUbicacion, IdObra)
		VALUES (@IdArticulo, @Partida, IsNull(@Cantidad,0), Null, @IdUnidad, @IdUbicacion, @IdObra)
   END

UPDATE [DetalleOtrosIngresosAlmacen]
SET 
 IdOtroIngresoAlmacen=@IdOtroIngresoAlmacen,
 IdArticulo=@IdArticulo,
 IdStock=@IdStock,
 Partida=@Partida,
 Cantidad=@Cantidad,
 CantidadAdicional=@CantidadAdicional,
 IdUnidad=@IdUnidad,
 Cantidad1=@Cantidad1,
 Cantidad2=@Cantidad2,
 Adjunto=@Adjunto,
 ArchivoAdjunto1=@ArchivoAdjunto1,
 ArchivoAdjunto2=@ArchivoAdjunto2,
 ArchivoAdjunto3=@ArchivoAdjunto3,
 ArchivoAdjunto4=@ArchivoAdjunto4,
 ArchivoAdjunto5=@ArchivoAdjunto5,
 ArchivoAdjunto6=@ArchivoAdjunto6,
 ArchivoAdjunto7=@ArchivoAdjunto7,
 ArchivoAdjunto8=@ArchivoAdjunto8,
 ArchivoAdjunto9=@ArchivoAdjunto9,
 ArchivoAdjunto10=@ArchivoAdjunto10,
 Observaciones=@Observaciones,
 IdUbicacion=@IdUbicacion,
 EnviarEmail=@EnviarEmail,
 IdDetalleOtroIngresoAlmacenOriginal=@IdDetalleOtroIngresoAlmacenOriginal,
 IdOtroIngresoAlmacenOriginal=@IdOtroIngresoAlmacenOriginal,
 IdOrigenTransmision=@IdOrigenTransmision
WHERE (IdDetalleOtroIngresoAlmacen=@IdDetalleOtroIngresoAlmacen)

IF @@ERROR <> 0 GOTO AbortTransaction

COMMIT TRAN
GOTO EndTransaction

AbortTransaction:
ROLLBACK TRAN

EndTransaction:
RETURN(@IdDetalleOtroIngresoAlmacen)


GO

/****** Object:  StoredProcedure [dbo].[DetOtrosIngresosAlmacen_T]    Script Date: 03/15/2011 11:48:40 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO


























CREATE Procedure [dbo].[DetOtrosIngresosAlmacen_T]
@IdDetalleOtroIngresoAlmacen int
AS 
SELECT *
FROM [DetalleOtrosIngresosAlmacen]
WHERE (IdDetalleOtroIngresoAlmacen=@IdDetalleOtroIngresoAlmacen)


























GO

/****** Object:  StoredProcedure [dbo].[DetOtrosIngresosAlmacen_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:40 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE Procedure [dbo].[DetOtrosIngresosAlmacen_TX_ParaTransmitir]
AS 
SELECT Det.*
FROM DetalleOtrosIngresosAlmacen Det
WHERE Det.EnviarEmail=1





GO

/****** Object:  StoredProcedure [dbo].[DetOtrosIngresosAlmacen_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:40 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE Procedure [dbo].[DetOtrosIngresosAlmacen_TX_SetearComoTransmitido]
AS 
UPDATE DetalleOtrosIngresosAlmacen
SET DetalleOtrosIngresosAlmacen.EnviarEmail=0
WHERE DetalleOtrosIngresosAlmacen.EnviarEmail<>0





GO

/****** Object:  StoredProcedure [dbo].[DetOtrosIngresosAlmacen_TX_Todos]    Script Date: 03/15/2011 11:48:40 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO


























CREATE Procedure [dbo].[DetOtrosIngresosAlmacen_TX_Todos]
@IdOtroIngresoAlmacen int
AS 
SELECT *
FROM DetalleOtrosIngresosAlmacen
WHERE IdOtroIngresoAlmacen=@IdOtroIngresoAlmacen


























GO

/****** Object:  StoredProcedure [dbo].[DetOtrosIngresosAlmacen_TXOtros]    Script Date: 03/15/2011 11:48:41 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO

























CREATE PROCEDURE [dbo].[DetOtrosIngresosAlmacen_TXOtros]

@IdOtroIngresoAlmacen int

AS

declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='000011111111133'
set @vector_T='000041103322400'

SELECT
 DetOtr.IdDetalleOtroIngresoAlmacen,
 DetOtr.IdOtroIngresoAlmacen,
 DetOtr.IdArticulo,
 DetOtr.IdUnidad,
 Articulos.Codigo as [Codigo],
 Articulos.Descripcion as [Articulo],
 DetOtr.Partida,
 DetOtr.Cantidad as [Cant.],
 DetOtr.Cantidad1 as [Med.1],
 DetOtr.Cantidad2 as [Med.2],
 Unidades.Descripcion as [En :],
 Depositos.Descripcion+' - E:'+Ubicaciones.Estanteria+
	' M:'+Ubicaciones.Modulo+' G:'+Ubicaciones.Gabeta as [Ubicacion],
 Obras.NumeroObra as [Obra],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleOtrosIngresosAlmacen DetOtr
LEFT OUTER JOIN Articulos ON DetOtr.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Unidades ON DetOtr.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN Ubicaciones ON DetOtr.IdUbicacion = Ubicaciones.IdUbicacion
LEFT OUTER JOIN Depositos ON Ubicaciones.IdDeposito = Depositos.IdDeposito
LEFT OUTER JOIN Obras ON DetOtr.IdObra = Obras.IdObra
WHERE (DetOtr.IdOtroIngresoAlmacen = @IdOtroIngresoAlmacen)
























GO

/****** Object:  StoredProcedure [dbo].[DetOtrosIngresosAlmacen_TXPrimero]    Script Date: 03/15/2011 11:48:41 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO

























CREATE PROCEDURE [dbo].[DetOtrosIngresosAlmacen_TXPrimero]

AS

declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='000011111111133'
set @vector_T='000041103322400'

SELECT TOP 1
 DetOtr.IdDetalleOtroIngresoAlmacen,
 DetOtr.IdOtroIngresoAlmacen,
 DetOtr.IdArticulo,
 DetOtr.IdUnidad,
 Articulos.Codigo as [Codigo],
 Articulos.Descripcion as [Articulo],
 DetOtr.Partida,
 DetOtr.Cantidad as [Cant.],
 DetOtr.Cantidad1 as [Med.1],
 DetOtr.Cantidad2 as [Med.2],
 Unidades.Descripcion as [En :],
 Depositos.Descripcion+' - E:'+Ubicaciones.Estanteria+
	' M:'+Ubicaciones.Modulo+' G:'+Ubicaciones.Gabeta as [Ubicacion],
 Obras.NumeroObra as [Obra],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleOtrosIngresosAlmacen DetOtr
LEFT OUTER JOIN Articulos ON DetOtr.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Unidades ON DetOtr.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN Ubicaciones ON DetOtr.IdUbicacion = Ubicaciones.IdUbicacion
LEFT OUTER JOIN Depositos ON Ubicaciones.IdDeposito = Depositos.IdDeposito
LEFT OUTER JOIN Obras ON DetOtr.IdObra = Obras.IdObra
























GO

/****** Object:  StoredProcedure [dbo].[DetPedidos_A]    Script Date: 03/15/2011 11:48:41 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE  Procedure [dbo].[DetPedidos_A]
@IdDetallePedido int output,
@IdPedido int,
@NumeroItem int,
@Cantidad numeric(12,2),
@IdUnidad int,
@IdArticulo int,
@FechaEntrega datetime,
@IdControlCalidad int,
@Precio numeric(12,4),
@Observaciones ntext,
@Cantidad1 numeric(12,2),
@Cantidad2 numeric(12,2),
@IdDetalleAcopios int,
@IdDetalleRequerimiento int,
@Cumplido varchar(2),
@CantidadAdicional numeric(16,2),
@CantidadRecibida numeric(12,2),
@CantidadAdicionalRecibida numeric(16,2),
@Adjunto varchar(2),
@ArchivoAdjunto varchar(50),
@FechaNecesidad datetime,
@IdDetalleLMateriales int,
@IdCuenta int,
@OrigenDescripcion int,
@ArchivoAdjunto1 varchar(100),
@ArchivoAdjunto2 varchar(100),
@ArchivoAdjunto3 varchar(100),
@ArchivoAdjunto4 varchar(100),
@ArchivoAdjunto5 varchar(100),
@ArchivoAdjunto6 varchar(100),
@ArchivoAdjunto7 varchar(100),
@ArchivoAdjunto8 varchar(100),
@ArchivoAdjunto9 varchar(100),
@ArchivoAdjunto10 varchar(100),
@IdAutorizoCumplido int,
@IdDioPorCumplido int,
@FechaDadoPorCumplido datetime,
@ObservacionesCumplido ntext,
@IdCentroCosto int,
@PorcentajeBonificacion numeric(6,2),
@ImporteBonificacion numeric(18,4),
@PorcentajeIVA numeric(6,2),
@ImporteIVA numeric(18,4),
@ImporteTotalItem numeric(18,4),
@Costo numeric(18,2),
@PRESTOPedido varchar(13),
@PRESTOFechaProceso datetime,
@IdAsignacionCosto int,
@CostoAsignado numeric(18,4),
@IdUsuarioAsignoCosto int,
@FechaAsignacionCosto datetime,
@EnviarEmail tinyint,
@IdDetallePedidoOriginal int,
@IdPedidoOriginal int,
@IdOrigenTransmision int

AS

INSERT INTO [DetallePedidos]
(
 IdPedido,
 NumeroItem,
 Cantidad,
 IdUnidad,
 IdArticulo,
 FechaEntrega,
 IdControlCalidad,
 Precio,
 Observaciones,
 Cantidad1,
 Cantidad2,
 IdDetalleAcopios,
 IdDetalleRequerimiento,
 Cumplido,
 CantidadAdicional,
 CantidadRecibida,
 CantidadAdicionalRecibida,
 Adjunto,
 ArchivoAdjunto,
 FechaNecesidad,
 IdDetalleLMateriales,
 IdCuenta,
 OrigenDescripcion,
 ArchivoAdjunto1,
 ArchivoAdjunto2,
 ArchivoAdjunto3,
 ArchivoAdjunto4,
 ArchivoAdjunto5,
 ArchivoAdjunto6,
 ArchivoAdjunto7,
 ArchivoAdjunto8,
 ArchivoAdjunto9,
 ArchivoAdjunto10,
 IdAutorizoCumplido,
 IdDioPorCumplido,
 FechaDadoPorCumplido,
 ObservacionesCumplido,
 IdCentroCosto,
 PorcentajeBonificacion,
 ImporteBonificacion,
 PorcentajeIVA,
 ImporteIVA,
 ImporteTotalItem,
 Costo,
 PRESTOPedido,
 PRESTOFechaProceso,
 IdAsignacionCosto,
 CostoAsignado,
 IdUsuarioAsignoCosto,
 FechaAsignacionCosto,
 EnviarEmail,
 IdDetallePedidoOriginal,
 IdPedidoOriginal,
 IdOrigenTransmision
)
VALUES
(
 @IdPedido,
 @NumeroItem,
 @Cantidad,
 @IdUnidad,
 @IdArticulo,
 @FechaEntrega,
 @IdControlCalidad,
 @Precio,
 @Observaciones,
 @Cantidad1,
 @Cantidad2,
 @IdDetalleAcopios,
 @IdDetalleRequerimiento,
 @Cumplido,
 @CantidadAdicional,
 @CantidadRecibida,
 @CantidadAdicionalRecibida,
 @Adjunto,
 @ArchivoAdjunto,
 @FechaNecesidad,
 @IdDetalleLMateriales,
 @IdCuenta,
 @OrigenDescripcion,
 @ArchivoAdjunto1,
 @ArchivoAdjunto2,
 @ArchivoAdjunto3,
 @ArchivoAdjunto4,
 @ArchivoAdjunto5,
 @ArchivoAdjunto6,
 @ArchivoAdjunto7,
 @ArchivoAdjunto8,
 @ArchivoAdjunto9,
 @ArchivoAdjunto10,
 @IdAutorizoCumplido,
 @IdDioPorCumplido,
 @FechaDadoPorCumplido,
 @ObservacionesCumplido,
 @IdCentroCosto,
 @PorcentajeBonificacion,
 @ImporteBonificacion,
 @PorcentajeIVA,
 @ImporteIVA,
 @ImporteTotalItem,
 @Costo,
 @PRESTOPedido,
 @PRESTOFechaProceso,
 @IdAsignacionCosto,
 @CostoAsignado,
 @IdUsuarioAsignoCosto,
 @FechaAsignacionCosto,
 @EnviarEmail,
 @IdDetallePedidoOriginal,
 @IdPedidoOriginal,
 @IdOrigenTransmision
)
SELECT @IdDetallePedido=@@identity
RETURN(@IdDetallePedido)



GO

/****** Object:  StoredProcedure [dbo].[DetPedidos_M]    Script Date: 03/15/2011 11:48:41 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE  Procedure [dbo].[DetPedidos_M]
@IdDetallePedido int output,
@IdPedido int,
@NumeroItem int,
@Cantidad numeric(12,2),
@IdUnidad int,
@IdArticulo int,
@FechaEntrega datetime,
@IdControlCalidad int,
@Precio numeric(12,4),
@Observaciones ntext,
@Cantidad1 numeric(12,2),
@Cantidad2 numeric(12,2),
@IdDetalleAcopios int,
@IdDetalleRequerimiento int,
@Cumplido varchar(2),
@CantidadAdicional numeric(16,2),
@CantidadRecibida numeric(12,2),
@CantidadAdicionalRecibida numeric(16,2),
@Adjunto varchar(2),
@ArchivoAdjunto varchar(50),
@FechaNecesidad datetime,
@IdDetalleLMateriales int,
@IdCuenta int,
@OrigenDescripcion int,
@ArchivoAdjunto1 varchar(100),
@ArchivoAdjunto2 varchar(100),
@ArchivoAdjunto3 varchar(100),
@ArchivoAdjunto4 varchar(100),
@ArchivoAdjunto5 varchar(100),
@ArchivoAdjunto6 varchar(100),
@ArchivoAdjunto7 varchar(100),
@ArchivoAdjunto8 varchar(100),
@ArchivoAdjunto9 varchar(100),
@ArchivoAdjunto10 varchar(100),
@IdAutorizoCumplido int,
@IdDioPorCumplido int,
@FechaDadoPorCumplido datetime,
@ObservacionesCumplido ntext,
@IdCentroCosto int,
@PorcentajeBonificacion numeric(6,2),
@ImporteBonificacion numeric(18,4),
@PorcentajeIVA numeric(6,2),
@ImporteIVA numeric(18,4),
@ImporteTotalItem numeric(18,4),
@Costo numeric(18,2),
@PRESTOPedido varchar(13),
@PRESTOFechaProceso datetime,
@IdAsignacionCosto int,
@CostoAsignado numeric(18,4),
@IdUsuarioAsignoCosto int,
@FechaAsignacionCosto datetime,
@EnviarEmail tinyint,
@IdDetallePedidoOriginal int,
@IdPedidoOriginal int,
@IdOrigenTransmision int

AS

UPDATE DetallePedidos
SET
 IdPedido=@IdPedido,
 NumeroItem=@NumeroItem,
 Cantidad=@Cantidad,
 IdUnidad=@IdUnidad,
 IdArticulo=@IdArticulo,
 FechaEntrega=@FechaEntrega,
 IdControlCalidad=@IdControlCalidad,
 Precio=@Precio,
 Observaciones=@Observaciones,
 Cantidad1=@Cantidad1,
 Cantidad2=@Cantidad2,
 IdDetalleAcopios=@IdDetalleAcopios,
 IdDetalleRequerimiento=@IdDetalleRequerimiento,
 Cumplido=@Cumplido,
 CantidadAdicional=@CantidadAdicional,
 CantidadRecibida=@CantidadRecibida,
 CantidadAdicionalRecibida=@CantidadAdicionalRecibida,
 Adjunto=@Adjunto,
 ArchivoAdjunto=@ArchivoAdjunto,
 FechaNecesidad=@FechaNecesidad,
 IdDetalleLMateriales=@IdDetalleLMateriales,
 IdCuenta=@IdCuenta,
 OrigenDescripcion=@OrigenDescripcion,
 ArchivoAdjunto1=@ArchivoAdjunto1,
 ArchivoAdjunto2=@ArchivoAdjunto2,
 ArchivoAdjunto3=@ArchivoAdjunto3,
 ArchivoAdjunto4=@ArchivoAdjunto4,
 ArchivoAdjunto5=@ArchivoAdjunto5,
 ArchivoAdjunto6=@ArchivoAdjunto6,
 ArchivoAdjunto7=@ArchivoAdjunto7,
 ArchivoAdjunto8=@ArchivoAdjunto8,
 ArchivoAdjunto9=@ArchivoAdjunto9,
 ArchivoAdjunto10=@ArchivoAdjunto10,
 IdAutorizoCumplido=@IdAutorizoCumplido,
 IdDioPorCumplido=@IdDioPorCumplido,
 FechaDadoPorCumplido=@FechaDadoPorCumplido,
 ObservacionesCumplido=@ObservacionesCumplido,
 IdCentroCosto=@IdCentroCosto,
 PorcentajeBonificacion=@PorcentajeBonificacion,
 ImporteBonificacion=@ImporteBonificacion,
 PorcentajeIVA=@PorcentajeIVA,
 ImporteIVA=@ImporteIVA,
 ImporteTotalItem=@ImporteTotalItem,
 Costo=@Costo,
 PRESTOPedido=@PRESTOPedido,
 PRESTOFechaProceso=@PRESTOFechaProceso,
 IdAsignacionCosto=@IdAsignacionCosto,
 CostoAsignado=@CostoAsignado,
 IdUsuarioAsignoCosto=@IdUsuarioAsignoCosto,
 FechaAsignacionCosto=@FechaAsignacionCosto,
 EnviarEmail=@EnviarEmail,
 IdDetallePedidoOriginal=@IdDetallePedidoOriginal,
 IdPedidoOriginal=@IdPedidoOriginal,
 IdOrigenTransmision=@IdOrigenTransmision
WHERE IdDetallePedido=@IdDetallePedido
RETURN(@IdDetallePedido)



GO

/****** Object:  StoredProcedure [dbo].[DetPedidos_T]    Script Date: 03/15/2011 11:48:42 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[DetPedidos_T]
@IdDetallePedido int
AS 
SELECT *
FROM [DetallePedidos]
where (IdDetallePedido=@IdDetallePedido)
































GO

/****** Object:  StoredProcedure [dbo].[DetPedidos_TX_BuscarItemRM]    Script Date: 03/15/2011 11:48:42 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE PROCEDURE [dbo].[DetPedidos_TX_BuscarItemRM]

@IdDetalleRequerimiento int

AS

SELECT
 DetPed.IdDetallePedido,
 DetPed.IdPedido,
 Pedidos.NumeroPedido,
 DetPed.NumeroItem,
 DetPed.Cantidad
FROM DetallePedidos DetPed
LEFT OUTER JOIN Pedidos ON DetPed.IdPedido = Pedidos.IdPedido
WHERE DetPed.IdDetalleRequerimiento = @IdDetalleRequerimiento and 
	IsNull(Pedidos.Cumplido,'NO')<>'AN' and IsNull(DetPed.Cumplido,'NO')<>'AN'
ORDER BY Pedidos.NumeroPedido



GO

/****** Object:  StoredProcedure [dbo].[DetPedidos_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:42 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE Procedure [dbo].[DetPedidos_TX_ParaTransmitir]
AS 
SELECT Det.*
FROM DetallePedidos Det
LEFT OUTER JOIN Pedidos ON Det.IdPedido = Pedidos.IdPedido
WHERE Det.EnviarEmail=1 and Pedidos.Aprobo is not null



GO

/****** Object:  StoredProcedure [dbo].[DetPedidos_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:42 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE Procedure [dbo].[DetPedidos_TX_SetearComoTransmitido]
AS 
UPDATE DetallePedidos 
SET EnviarEmail=0
WHERE EnviarEmail<>0 and 
	(Select Top 1 Pedidos.Aprobo From Pedidos 
	 Where DetallePedidos.IdPedido = Pedidos.IdPedido) is not null



GO

/****** Object:  StoredProcedure [dbo].[DetPedidos_TX_T]    Script Date: 03/15/2011 11:48:42 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE Procedure [dbo].[DetPedidos_TX_T]
@IdDetallePedido int
AS 
SELECT *
FROM [DetallePedidos]
where (IdDetallePedido=@IdDetallePedido)





GO

/****** Object:  StoredProcedure [dbo].[DetPedidos_TXPed]    Script Date: 03/15/2011 11:48:42 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE [dbo].[DetPedidos_TXPed]

@IdPedido int

AS

declare @vector_X varchar(70),@vector_T varchar(70)
set @vector_X='00100111011011111111111101000111110000000000001111161133'
set @vector_T='00000011000020444333333400000531310000000000003992930600'

SELECT
 DetPed.IdDetallePedido,
 DetPed.IdPedido,
 DetPed.NumeroItem as [Item],
 DetPed.IdDetalleAcopios,
 DetPed.IdDetalleRequerimiento,
 DetPed.Cantidad as [Cant.],
 DetPed.Cantidad1 as [Med.1],
 DetPed.Cantidad2 as [Med.2],
 DetPed.IdUnidad,
 (Select Unidades.Descripcion
	From Unidades
	Where Unidades.IdUnidad=DetPed.IdUnidad) as  [Unidad en],
 Substring(ControlesCalidad.Descripcion,1,10) as [Control de Calidad],
 DetPed.IdArticulo,
 Articulos.Codigo as [Codigo],
 Articulos.Descripcion as [Articulo],
 DetPed.FechaEntrega as [F.entrega],
 DetPed.FechaNecesidad as [F.necesidad],
 DetPed.Precio,
 (DetPed.Cantidad*DetPed.Precio) as [Subtotal],
 DetPed.PorcentajeBonificacion as [% Bon],
 DetPed.ImporteBonificacion as [Bonif.],
 Case 	When DetPed.ImporteBonificacion is null 
	 Then (DetPed.Cantidad*DetPed.Precio) 
	Else (DetPed.Cantidad*DetPed.Precio)-DetPed.ImporteBonificacion
 End as [Subtotal grav.],
 DetPed.PorcentajeIVA as [% IVA],
 DetPed.ImporteIVA as [IVA],
 DetPed.ImporteTotalItem as [Importe],
 DetPed.IdControlCalidad,
 DetPed.Cumplido as [Cum],
 Case 	When Acopios.IdObra IS NOT NULL Then  Acopios.IdObra
	When Requerimientos.IdObra IS NOT NULL Then Requerimientos.IdObra
	Else null
 End as [IdObra],
 DetPed.Adjunto,
 DetPed.ArchivoAdjunto,
 DetPed.Observaciones,
 Acopios.NumeroAcopio as [Nro.Acopio],
 DetalleAcopios.NumeroItem as [It.LA],
 Requerimientos.NumeroRequerimiento as [Nro.RM],
 DetalleRequerimientos.NumeroItem as [It.RM],
 DetPed.IdCuenta,
 DetPed.OrigenDescripcion,
 DetPed.ArchivoAdjunto1,
 DetPed.ArchivoAdjunto2,
 DetPed.ArchivoAdjunto3,
 DetPed.ArchivoAdjunto4,
 DetPed.ArchivoAdjunto5,
 DetPed.ArchivoAdjunto6,
 DetPed.ArchivoAdjunto7,
 DetPed.ArchivoAdjunto8,
 DetPed.ArchivoAdjunto9,
 DetPed.ArchivoAdjunto10,
 Case 	When Acopios.IdObra IS NOT NULL 
	 Then (Select top 1 Obras.NumeroObra From Obras
		Where Obras.IdObra=Acopios.IdObra)
	When Requerimientos.IdObra IS NOT NULL 
	 Then (Select top 1 Obras.NumeroObra From Obras
		Where Obras.IdObra=Requerimientos.IdObra)
	Else null
 End as [Obra],
 Case 	When DetalleAcopios.IdEquipo IS NOT NULL 
	 Then (Select top 1 Equipos.Descripcion From Equipos
		Where Equipos.IdEquipo=DetalleAcopios.IdEquipo)
	When DetalleRequerimientos.IdEquipo IS NOT NULL 
	 Then (Select top 1 Equipos.Descripcion From Equipos
		Where Equipos.IdEquipo=DetalleRequerimientos.IdEquipo)
	Else null
 End as [Equipo],
 Case 	When Acopios.IdObra IS NOT NULL 
	 Then (Select top 1 Clientes.RazonSocial From Clientes
		Where Clientes.IdCliente=
			(Select Top 1 Obras.IdCliente From Obras
			 Where Obras.IdObra=Acopios.IdObra))
	When Requerimientos.IdObra IS NOT NULL 
	 Then (Select top 1 Clientes.RazonSocial From Clientes
		Where Clientes.IdCliente=
			(Select Top 1 Obras.IdCliente From Obras
			 Where Obras.IdObra=Requerimientos.IdObra))
	Else null
 End as [Cliente],
 DetPed.Costo,
 DetPed.IdDetallePedido as [IdAux],
 DetPed.CostoAsignado as [Costo Asig.],
 (Select Top 1 Empleados.Nombre 
	From Empleados
	Where Empleados.IdEmpleado=DetPed.IdUsuarioAsignoCosto) as [Costo asignado por],
 DetPed.FechaAsignacionCosto as [Fecha asig.costo],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetallePedidos DetPed
LEFT OUTER JOIN Articulos ON DetPed.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN ControlesCalidad ON DetPed.IdControlCalidad = ControlesCalidad.IdControlCalidad
LEFT OUTER JOIN DetalleAcopios ON DetPed.IdDetalleAcopios = DetalleAcopios.IdDetalleAcopios
LEFT OUTER JOIN Acopios ON DetalleAcopios.IdAcopio = Acopios.IdAcopio
LEFT OUTER JOIN DetalleRequerimientos ON DetPed.IdDetalleRequerimiento = DetalleRequerimientos.IdDetalleRequerimiento
LEFT OUTER JOIN Requerimientos ON DetalleRequerimientos.IdRequerimiento = Requerimientos.IdRequerimiento
WHERE (DetPed.IdPedido = @IdPedido)
ORDER by DetPed.NumeroItem



GO

/****** Object:  StoredProcedure [dbo].[DetPedidos_TXPrimero]    Script Date: 03/15/2011 11:48:42 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE [dbo].[DetPedidos_TXPrimero]

AS

declare @vector_X varchar(70),@vector_T varchar(70)
set @vector_X='00100111011011111111111101000111110000000000001111161133'
set @vector_T='00000011000020444333333400000531310000000000003992930600'

SELECT Top 1
 DetPed.IdDetallePedido,
 DetPed.IdPedido,
 DetPed.NumeroItem as [Item],
 DetPed.IdDetalleAcopios,
 DetPed.IdDetalleRequerimiento,
 DetPed.Cantidad as [Cant.],
 DetPed.Cantidad1 as [Med.1],
 DetPed.Cantidad2 as [Med.2],
 DetPed.IdUnidad,
 ( SELECT Unidades.Descripcion
	FROM Unidades
	WHERE Unidades.IdUnidad=DetPed.IdUnidad) as  [Unidad en],
 Substring(ControlesCalidad.Descripcion,1,10) as [Control de Calidad],
 DetPed.IdArticulo,
 Articulos.Codigo as [Codigo],
 Articulos.Descripcion as [Articulo],
 DetPed.FechaEntrega as [F.entrega],
 DetPed.FechaNecesidad as [F.necesidad],
 DetPed.Precio,
 (DetPed.Cantidad*DetPed.Precio) as [Subtotal],
 DetPed.PorcentajeBonificacion as [% Bon],
 DetPed.ImporteBonificacion as [Bonif.],
 Case 	When DetPed.ImporteBonificacion is null 
	 Then (DetPed.Cantidad*DetPed.Precio) 
	Else (DetPed.Cantidad*DetPed.Precio)-DetPed.ImporteBonificacion
 End as [Subtotal grav.],
 DetPed.PorcentajeIVA as [% IVA],
 DetPed.ImporteIVA as [IVA],
 DetPed.ImporteTotalItem as [Importe],
 DetPed.IdControlCalidad,
 DetPed.Cumplido as [Cum],
 Case 	When Acopios.IdObra IS NOT NULL Then  Acopios.IdObra
	When Requerimientos.IdObra IS NOT NULL Then Requerimientos.IdObra
	Else null
 End as [IdObra],
 DetPed.Adjunto,
 DetPed.ArchivoAdjunto,
 DetPed.Observaciones,
 Acopios.NumeroAcopio as [Nro.Acopio],
 DetalleAcopios.NumeroItem as [It.LA],
 Requerimientos.NumeroRequerimiento as [Nro.RM],
 DetalleRequerimientos.NumeroItem as [It.RM],
 DetPed.IdCuenta,
 DetPed.OrigenDescripcion,
 DetPed.ArchivoAdjunto1,
 DetPed.ArchivoAdjunto2,
 DetPed.ArchivoAdjunto3,
 DetPed.ArchivoAdjunto4,
 DetPed.ArchivoAdjunto5,
 DetPed.ArchivoAdjunto6,
 DetPed.ArchivoAdjunto7,
 DetPed.ArchivoAdjunto8,
 DetPed.ArchivoAdjunto9,
 DetPed.ArchivoAdjunto10,
 Case 	When Acopios.IdObra IS NOT NULL Then  Acopios.IdObra
	When Requerimientos.IdObra IS NOT NULL Then Requerimientos.IdObra
	Else null
 End as [Obra],
 Case 	When DetalleAcopios.IdEquipo IS NOT NULL 
	 Then (Select top 1 Equipos.Descripcion From Equipos
		Where Equipos.IdEquipo=DetalleAcopios.IdEquipo)
	When DetalleRequerimientos.IdEquipo IS NOT NULL 
	 Then (Select top 1 Equipos.Descripcion From Equipos
		Where Equipos.IdEquipo=DetalleRequerimientos.IdEquipo)
	Else null
 End as [Equipo],
 Null as [Cliente],
 DetPed.Costo,
 DetPed.IdDetallePedido as [IdAux],
 DetPed.CostoAsignado as [Costo Asig.],
 (Select Top 1 Empleados.Nombre 
	From Empleados
	Where Empleados.IdEmpleado=DetPed.IdUsuarioAsignoCosto) as [Costo asignado por],
 DetPed.FechaAsignacionCosto as [Fecha asig.costo],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetallePedidos DetPed
LEFT OUTER JOIN Articulos ON DetPed.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN ControlesCalidad ON DetPed.IdControlCalidad = ControlesCalidad.IdControlCalidad
LEFT OUTER JOIN DetalleAcopios ON DetPed.IdDetalleAcopios = DetalleAcopios.IdDetalleAcopios
LEFT OUTER JOIN Acopios ON DetalleAcopios.IdAcopio = Acopios.IdAcopio
LEFT OUTER JOIN DetalleRequerimientos ON DetPed.IdDetalleRequerimiento = DetalleRequerimientos.IdDetalleRequerimiento
LEFT OUTER JOIN Requerimientos ON DetalleRequerimientos.IdRequerimiento = Requerimientos.IdRequerimiento



GO

/****** Object:  StoredProcedure [dbo].[DetPedidosPRONTO_M]    Script Date: 03/15/2011 11:48:42 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE  Procedure [dbo].[DetPedidosPRONTO_M]
	@IdDetallePedido int,
	@IdPedido int,
	@NumeroItem int,
	@Cantidad numeric(12,2),
	@IdUnidad int,
	@IdArticulo int,
	@FechaEntrega datetime,
	@IdControlCalidad int,
	@Precio numeric(12,4),
	@Observaciones ntext,
	@Cantidad1 numeric(12,2),
	@Cantidad2 numeric(12,2),
	@IdDetalleAcopios int,
	@IdDetalleRequerimiento int,
	@Cumplido varchar(2),
	@CantidadAdicional numeric(16,2),
	@CantidadRecibida numeric(12,2),
	@CantidadAdicionalRecibida numeric(16,2),
	@Adjunto varchar(2),
	@ArchivoAdjunto varchar(50),
	@FechaNecesidad datetime,
	@IdDetalleLMateriales int,
	@IdCuenta int,
	@OrigenDescripcion int,
	@ArchivoAdjunto1 varchar(100),
	@ArchivoAdjunto2 varchar(100),
	@ArchivoAdjunto3 varchar(100),
	@ArchivoAdjunto4 varchar(100),
	@ArchivoAdjunto5 varchar(100),
	@ArchivoAdjunto6 varchar(100),
	@ArchivoAdjunto7 varchar(100),
	@ArchivoAdjunto8 varchar(100),
	@ArchivoAdjunto9 varchar(100),
	@ArchivoAdjunto10 varchar(100),
	@IdAutorizoCumplido int,
	@IdDioPorCumplido int,
	@FechaDadoPorCumplido datetime,
	@ObservacionesCumplido ntext,
	@IdCentroCosto int,
	@PorcentajeBonificacion numeric(6,2),
	@ImporteBonificacion numeric(18,4),
	@PorcentajeIVA numeric(6,2),
	@ImporteIVA numeric(18,4),
	@ImporteTotalItem numeric(18,4),
	@Costo numeric(18,2),
	@PRESTOPedido varchar(13),
	@PRESTOFechaProceso datetime,
	@IdAsignacionCosto int,
	@CostoAsignado numeric(18,4),
	@IdUsuarioAsignoCosto int,
	@FechaAsignacionCosto datetime,
	@EnviarEmail tinyint,
	@IdDetallePedidoOriginal int,
	@IdPedidoOriginal int,
	@IdOrigenTransmision int,
	@PlazoEntrega varchar(50),
	@CostoAsignadoDolar numeric(18,4)
AS
IF Exists(Select dpe.IdDetallePedido From DetallePedidosPRONTO dpe Where dpe.IdDetallePedido=@IdDetallePedido)
	BEGIN
		UPDATE DetallePedidosPRONTO
		SET
		 IdPedido=@IdPedido,
		 NumeroItem=@NumeroItem,
		 Cantidad=@Cantidad,
		 IdUnidad=@IdUnidad,
		 IdArticulo=@IdArticulo,
		 FechaEntrega=@FechaEntrega,
		 IdControlCalidad=@IdControlCalidad,
		 Precio=@Precio,
		 Observaciones=@Observaciones,
		 Cantidad1=@Cantidad1,
		 Cantidad2=@Cantidad2,
		 IdDetalleAcopios=@IdDetalleAcopios,
		 IdDetalleRequerimiento=@IdDetalleRequerimiento,
		 Cumplido=@Cumplido,
		 CantidadAdicional=@CantidadAdicional,
		 CantidadRecibida=@CantidadRecibida,
		 CantidadAdicionalRecibida=@CantidadAdicionalRecibida,
		 Adjunto=@Adjunto,
		 ArchivoAdjunto=@ArchivoAdjunto,
		 FechaNecesidad=@FechaNecesidad,
		 IdDetalleLMateriales=@IdDetalleLMateriales,
		 IdCuenta=@IdCuenta,
		 OrigenDescripcion=@OrigenDescripcion,
		 ArchivoAdjunto1=@ArchivoAdjunto1,
		 ArchivoAdjunto2=@ArchivoAdjunto2,
		 ArchivoAdjunto3=@ArchivoAdjunto3,
		 ArchivoAdjunto4=@ArchivoAdjunto4,
		 ArchivoAdjunto5=@ArchivoAdjunto5,
		 ArchivoAdjunto6=@ArchivoAdjunto6,
		 ArchivoAdjunto7=@ArchivoAdjunto7,
		 ArchivoAdjunto8=@ArchivoAdjunto8,
		 ArchivoAdjunto9=@ArchivoAdjunto9,
		 ArchivoAdjunto10=@ArchivoAdjunto10,
		 IdAutorizoCumplido=@IdAutorizoCumplido,
		 IdDioPorCumplido=@IdDioPorCumplido,
		 FechaDadoPorCumplido=@FechaDadoPorCumplido,
		 ObservacionesCumplido=@ObservacionesCumplido,
		 IdCentroCosto=@IdCentroCosto,
		 PorcentajeBonificacion=@PorcentajeBonificacion,
		 ImporteBonificacion=@ImporteBonificacion,
		 PorcentajeIVA=@PorcentajeIVA,
		 ImporteIVA=@ImporteIVA,
		 ImporteTotalItem=@ImporteTotalItem,
		 Costo=@Costo,
		 PRESTOPedido=@PRESTOPedido,
		 PRESTOFechaProceso=@PRESTOFechaProceso,
		 IdAsignacionCosto=@IdAsignacionCosto,
		 CostoAsignado=@CostoAsignado,
		 IdUsuarioAsignoCosto=@IdUsuarioAsignoCosto,
		 FechaAsignacionCosto=@FechaAsignacionCosto,
		 EnviarEmail=@EnviarEmail,
		 IdDetallePedidoOriginal=@IdDetallePedidoOriginal,
		 IdPedidoOriginal=@IdPedidoOriginal,
		 IdOrigenTransmision=@IdOrigenTransmision,
		 PlazoEntrega=@PlazoEntrega,
		 CostoAsignadoDolar=@CostoAsignadoDolar
		WHERE IdDetallePedido=@IdDetallePedido
	END
ELSE
	BEGIN
		INSERT INTO [DetallePedidosPRONTO]
		(
		 IdDetallePedido,
		 IdPedido,
		 NumeroItem,
		 Cantidad,
		 IdUnidad,
		 IdArticulo,
		 FechaEntrega,
		 IdControlCalidad,
		 Precio,
		 Observaciones,
		 Cantidad1,
		 Cantidad2,
		 IdDetalleAcopios,
		 IdDetalleRequerimiento,
		 Cumplido,
		 CantidadAdicional,
		 CantidadRecibida,
		 CantidadAdicionalRecibida,
		 Adjunto,
		 ArchivoAdjunto,
		 FechaNecesidad,
		 IdDetalleLMateriales,
		 IdCuenta,
		 OrigenDescripcion,
		 ArchivoAdjunto1,
		 ArchivoAdjunto2,
		 ArchivoAdjunto3,
		 ArchivoAdjunto4,
		 ArchivoAdjunto5,
		 ArchivoAdjunto6,
		 ArchivoAdjunto7,
		 ArchivoAdjunto8,
		 ArchivoAdjunto9,
		 ArchivoAdjunto10,
		 IdAutorizoCumplido,
		 IdDioPorCumplido,
		 FechaDadoPorCumplido,
		 ObservacionesCumplido,
		 IdCentroCosto,
		 PorcentajeBonificacion,
		 ImporteBonificacion,
		 PorcentajeIVA,
		 ImporteIVA,
		 ImporteTotalItem,
		 Costo,
		 PRESTOPedido,
		 PRESTOFechaProceso,
		 IdAsignacionCosto,
		 CostoAsignado,
		 IdUsuarioAsignoCosto,
		 FechaAsignacionCosto,
		 EnviarEmail,
		 IdDetallePedidoOriginal,
		 IdPedidoOriginal,
		 IdOrigenTransmision,
		 PlazoEntrega,
		 CostoAsignadoDolar
		)
		VALUES
		(
		 @IdDetallePedido,
		 @IdPedido,
		 @NumeroItem,
		 @Cantidad,
		 @IdUnidad,
		 @IdArticulo,
		 @FechaEntrega,
		 @IdControlCalidad,
		 @Precio,
		 @Observaciones,
		 @Cantidad1,
		 @Cantidad2,
		 @IdDetalleAcopios,
		 @IdDetalleRequerimiento,
		 @Cumplido,
		 @CantidadAdicional,
		 @CantidadRecibida,
		 @CantidadAdicionalRecibida,
		 @Adjunto,
		 @ArchivoAdjunto,
		 @FechaNecesidad,
		 @IdDetalleLMateriales,
		 @IdCuenta,
		 @OrigenDescripcion,
		 @ArchivoAdjunto1,
		 @ArchivoAdjunto2,
		 @ArchivoAdjunto3,
		 @ArchivoAdjunto4,
		 @ArchivoAdjunto5,
		 @ArchivoAdjunto6,
		 @ArchivoAdjunto7,
		 @ArchivoAdjunto8,
		 @ArchivoAdjunto9,
		 @ArchivoAdjunto10,
		 @IdAutorizoCumplido,
		 @IdDioPorCumplido,
		 @FechaDadoPorCumplido,
		 @ObservacionesCumplido,
		 @IdCentroCosto,
		 @PorcentajeBonificacion,
		 @ImporteBonificacion,
		 @PorcentajeIVA,
		 @ImporteIVA,
		 @ImporteTotalItem,
		 @Costo,
		 @PRESTOPedido,
		 @PRESTOFechaProceso,
		 @IdAsignacionCosto,
		 @CostoAsignado,
		 @IdUsuarioAsignoCosto,
		 @FechaAsignacionCosto,
		 @EnviarEmail,
		 @IdDetallePedidoOriginal,
		 @IdPedidoOriginal,
		 @IdOrigenTransmision,
		 @PlazoEntrega,
		 @CostoAsignadoDolar
		)
	END
RETURN(@IdDetallePedido)



GO

/****** Object:  StoredProcedure [dbo].[DetPedidosPRONTO_T]    Script Date: 03/15/2011 11:48:42 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE Procedure [dbo].[DetPedidosPRONTO_T]
@IdDetallePedido int
AS 
SELECT *
FROM [DetallePedidosPRONTO]
WHERE (IdDetallePedido=@IdDetallePedido)



GO

/****** Object:  StoredProcedure [dbo].[DetPedidosPRONTO_TXPed]    Script Date: 03/15/2011 11:48:42 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE PROCEDURE [dbo].[DetPedidosPRONTO_TXPed]

@IdPedido int

AS

declare @vector_X varchar(70),@vector_T varchar(70)
set @vector_X='00100111011011111111111101000111110000000000001111161133'
set @vector_T='00000011000020444333333400000531310000000000003992930600'

SELECT
 DetPed.IdDetallePedido,
 DetPed.IdPedido,
 DetPed.NumeroItem as [Item],
 DetPed.IdDetalleAcopios,
 DetPed.IdDetalleRequerimiento,
 DetPed.Cantidad as [Cant.],
 DetPed.Cantidad1 as [Med.1],
 DetPed.Cantidad2 as [Med.2],
 DetPed.IdUnidad,
 (Select Unidades.Descripcion
	From Unidades
	Where Unidades.IdUnidad=DetPed.IdUnidad) as  [Unidad en],
 Substring(ControlesCalidad.Descripcion,1,10) as [Control de Calidad],
 DetPed.IdArticulo,
 Articulos.Codigo as [Codigo],
 Articulos.Descripcion as [Articulo],
 DetPed.FechaEntrega as [F.entrega],
 DetPed.FechaNecesidad as [F.necesidad],
 DetPed.Precio,
 (DetPed.Cantidad*DetPed.Precio) as [Subtotal],
 DetPed.PorcentajeBonificacion as [% Bon],
 DetPed.ImporteBonificacion as [Bonif.],
 Case 	When DetPed.ImporteBonificacion is null 
	 Then (DetPed.Cantidad*DetPed.Precio) 
	Else (DetPed.Cantidad*DetPed.Precio)-DetPed.ImporteBonificacion
 End as [Subtotal grav.],
 DetPed.PorcentajeIVA as [% IVA],
 DetPed.ImporteIVA as [IVA],
 DetPed.ImporteTotalItem as [Importe],
 DetPed.IdControlCalidad,
 DetPed.Cumplido as [Cum],
 Case 	When Acopios.IdObra IS NOT NULL Then  Acopios.IdObra
	When Requerimientos.IdObra IS NOT NULL Then Requerimientos.IdObra
	Else null
 End as [IdObra],
 DetPed.Adjunto,
 DetPed.ArchivoAdjunto,
 DetPed.Observaciones,
 Acopios.NumeroAcopio as [Nro.Acopio],
 DetalleAcopios.NumeroItem as [It.LA],
 Requerimientos.NumeroRequerimiento as [Nro.RM],
 DetalleRequerimientos.NumeroItem as [It.RM],
 DetPed.IdCuenta,
 DetPed.OrigenDescripcion,
 DetPed.ArchivoAdjunto1,
 DetPed.ArchivoAdjunto2,
 DetPed.ArchivoAdjunto3,
 DetPed.ArchivoAdjunto4,
 DetPed.ArchivoAdjunto5,
 DetPed.ArchivoAdjunto6,
 DetPed.ArchivoAdjunto7,
 DetPed.ArchivoAdjunto8,
 DetPed.ArchivoAdjunto9,
 DetPed.ArchivoAdjunto10,
 Case 	When Acopios.IdObra IS NOT NULL 
	 Then (Select top 1 Obras.NumeroObra From Obras
		Where Obras.IdObra=Acopios.IdObra)
	When Requerimientos.IdObra IS NOT NULL 
	 Then (Select top 1 Obras.NumeroObra From Obras
		Where Obras.IdObra=Requerimientos.IdObra)
	Else null
 End as [Obra],
 Case 	When DetalleAcopios.IdEquipo IS NOT NULL 
	 Then (Select top 1 Equipos.Descripcion From Equipos
		Where Equipos.IdEquipo=DetalleAcopios.IdEquipo)
	When DetalleRequerimientos.IdEquipo IS NOT NULL 
	 Then (Select top 1 Equipos.Descripcion From Equipos
		Where Equipos.IdEquipo=DetalleRequerimientos.IdEquipo)
	Else null
 End as [Equipo],
 Case 	When Acopios.IdObra IS NOT NULL 
	 Then (Select top 1 Clientes.RazonSocial From Clientes
		Where Clientes.IdCliente=
			(Select Top 1 Obras.IdCliente From Obras
			 Where Obras.IdObra=Acopios.IdObra))
	When Requerimientos.IdObra IS NOT NULL 
	 Then (Select top 1 Clientes.RazonSocial From Clientes
		Where Clientes.IdCliente=
			(Select Top 1 Obras.IdCliente From Obras
			 Where Obras.IdObra=Requerimientos.IdObra))
	Else null
 End as [Cliente],
 DetPed.Costo,
 DetPed.IdDetallePedido as [IdAux],
 DetPed.CostoAsignado as [Costo Asig.],
 (Select Top 1 Empleados.Nombre 
	From Empleados
	Where Empleados.IdEmpleado=DetPed.IdUsuarioAsignoCosto) as [Costo asignado por],
 DetPed.FechaAsignacionCosto as [Fecha asig.costo],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetallePedidosPRONTO DetPed
LEFT OUTER JOIN Articulos ON DetPed.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN ControlesCalidad ON DetPed.IdControlCalidad = ControlesCalidad.IdControlCalidad
LEFT OUTER JOIN DetalleAcopios ON DetPed.IdDetalleAcopios = DetalleAcopios.IdDetalleAcopios
LEFT OUTER JOIN Acopios ON DetalleAcopios.IdAcopio = Acopios.IdAcopio
LEFT OUTER JOIN DetalleRequerimientos ON DetPed.IdDetalleRequerimiento = DetalleRequerimientos.IdDetalleRequerimiento
LEFT OUTER JOIN Requerimientos ON DetalleRequerimientos.IdRequerimiento = Requerimientos.IdRequerimiento
WHERE (DetPed.IdPedido = @IdPedido)
ORDER by DetPed.NumeroItem



GO

/****** Object:  StoredProcedure [dbo].[DetPedidosPRONTO_TXPrimero]    Script Date: 03/15/2011 11:48:42 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE PROCEDURE [dbo].[DetPedidosPRONTO_TXPrimero]

AS

declare @vector_X varchar(70),@vector_T varchar(70)
set @vector_X='00100111011011111111111101000111110000000000001111161133'
set @vector_T='00000011000020444333333400000531310000000000003992930600'

SELECT Top 1
 DetPed.IdDetallePedido,
 DetPed.IdPedido,
 DetPed.NumeroItem as [Item],
 DetPed.IdDetalleAcopios,
 DetPed.IdDetalleRequerimiento,
 DetPed.Cantidad as [Cant.],
 DetPed.Cantidad1 as [Med.1],
 DetPed.Cantidad2 as [Med.2],
 DetPed.IdUnidad,
 ( SELECT Unidades.Descripcion
	FROM Unidades
	WHERE Unidades.IdUnidad=DetPed.IdUnidad) as  [Unidad en],
 Substring(ControlesCalidad.Descripcion,1,10) as [Control de Calidad],
 DetPed.IdArticulo,
 Articulos.Codigo as [Codigo],
 Articulos.Descripcion as [Articulo],
 DetPed.FechaEntrega as [F.entrega],
 DetPed.FechaNecesidad as [F.necesidad],
 DetPed.Precio,
 (DetPed.Cantidad*DetPed.Precio) as [Subtotal],
 DetPed.PorcentajeBonificacion as [% Bon],
 DetPed.ImporteBonificacion as [Bonif.],
 Case 	When DetPed.ImporteBonificacion is null 
	 Then (DetPed.Cantidad*DetPed.Precio) 
	Else (DetPed.Cantidad*DetPed.Precio)-DetPed.ImporteBonificacion
 End as [Subtotal grav.],
 DetPed.PorcentajeIVA as [% IVA],
 DetPed.ImporteIVA as [IVA],
 DetPed.ImporteTotalItem as [Importe],
 DetPed.IdControlCalidad,
 DetPed.Cumplido as [Cum],
 Case 	When Acopios.IdObra IS NOT NULL Then  Acopios.IdObra
	When Requerimientos.IdObra IS NOT NULL Then Requerimientos.IdObra
	Else null
 End as [IdObra],
 DetPed.Adjunto,
 DetPed.ArchivoAdjunto,
 DetPed.Observaciones,
 Acopios.NumeroAcopio as [Nro.Acopio],
 DetalleAcopios.NumeroItem as [It.LA],
 Requerimientos.NumeroRequerimiento as [Nro.RM],
 DetalleRequerimientos.NumeroItem as [It.RM],
 DetPed.IdCuenta,
 DetPed.OrigenDescripcion,
 DetPed.ArchivoAdjunto1,
 DetPed.ArchivoAdjunto2,
 DetPed.ArchivoAdjunto3,
 DetPed.ArchivoAdjunto4,
 DetPed.ArchivoAdjunto5,
 DetPed.ArchivoAdjunto6,
 DetPed.ArchivoAdjunto7,
 DetPed.ArchivoAdjunto8,
 DetPed.ArchivoAdjunto9,
 DetPed.ArchivoAdjunto10,
 Case 	When Acopios.IdObra IS NOT NULL Then  Acopios.IdObra
	When Requerimientos.IdObra IS NOT NULL Then Requerimientos.IdObra
	Else null
 End as [Obra],
 Case 	When DetalleAcopios.IdEquipo IS NOT NULL 
	 Then (Select top 1 Equipos.Descripcion From Equipos
		Where Equipos.IdEquipo=DetalleAcopios.IdEquipo)
	When DetalleRequerimientos.IdEquipo IS NOT NULL 
	 Then (Select top 1 Equipos.Descripcion From Equipos
		Where Equipos.IdEquipo=DetalleRequerimientos.IdEquipo)
	Else null
 End as [Equipo],
 Null as [Cliente],
 DetPed.Costo,
 DetPed.IdDetallePedido as [IdAux],
 DetPed.CostoAsignado as [Costo Asig.],
 (Select Top 1 Empleados.Nombre 
	From Empleados
	Where Empleados.IdEmpleado=DetPed.IdUsuarioAsignoCosto) as [Costo asignado por],
 DetPed.FechaAsignacionCosto as [Fecha asig.costo],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetallePedidosPRONTO DetPed
LEFT OUTER JOIN Articulos ON DetPed.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN ControlesCalidad ON DetPed.IdControlCalidad = ControlesCalidad.IdControlCalidad
LEFT OUTER JOIN DetalleAcopios ON DetPed.IdDetalleAcopios = DetalleAcopios.IdDetalleAcopios
LEFT OUTER JOIN Acopios ON DetalleAcopios.IdAcopio = Acopios.IdAcopio
LEFT OUTER JOIN DetalleRequerimientos ON DetPed.IdDetalleRequerimiento = DetalleRequerimientos.IdDetalleRequerimiento
LEFT OUTER JOIN Requerimientos ON DetalleRequerimientos.IdRequerimiento = Requerimientos.IdRequerimiento



GO

/****** Object:  StoredProcedure [dbo].[DetRecepciones_A]    Script Date: 03/15/2011 11:48:42 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE Procedure [dbo].[DetRecepciones_A]

@IdDetalleRecepcion int  output,
@IdRecepcion int,
@Cantidad numeric(18,2),
@IdUnidad int,
@IdArticulo int,
@IdControlCalidad int,
@Observaciones ntext,
@Cantidad1 numeric(18,2),
@Cantidad2 numeric(18,2),
@IdDetallePedido int,
@Controlado varchar(2),
@CantidadAdicional numeric(18,2),
@Partida int,
@CantidadCC numeric(18,2),
@Cantidad1CC numeric(18,2),
@Cantidad2CC numeric(18,2),
@CantidadAdicionalCC numeric(18,2),
@ObservacionesCC ntext,
@CantidadRechazadaCC numeric(18,2),
@IdMotivoRechazo int,
@IdRealizo int,
@IdDetalleRequerimiento int,
@Trasabilidad varchar(10),
@IdDetalleAcopios int,
@IdUbicacion int,
@IdObra int,
@CostoUnitario numeric(18,3),
@IdMoneda int,
@CotizacionDolar numeric(18,3),
@CotizacionMoneda numeric(18,3),
@EnviarEmail tinyint,
@IdDetalleRecepcionOriginal int,
@IdRecepcionOriginal int,
@IdOrigenTransmision int,
@IdDetalleSalidaMaterialesPRONTO int

AS 

BEGIN TRAN

SET @Partida=IsNull(@Partida,0)

DECLARE @Anulada varchar(2), @IdStock int
SET @Anulada=IsNull((Select Top 1 Recepciones.Anulada
			From Recepciones 
			Where Recepciones.IdRecepcion=@IdRecepcion),'NO')
IF @Anulada<>'SI' 
   BEGIN
	IF IsNull((Select Top 1 P.ActivarSolicitudMateriales	From Parametros P Where P.IdParametro=1),'NO')='SI'  and 
		IsNull(@IdDetalleRequerimiento,0)>0
		UPDATE DetalleRequerimientos
		SET TipoDesignacion='REC'
		WHERE IdDetalleRequerimiento=@IdDetalleRequerimiento and 
			(TipoDesignacion='CMP' or TipoDesignacion='FF')
   END
IF @Partida is null
	SET @Partida=0

INSERT INTO [DetalleRecepciones]
(
 IdRecepcion,
 Cantidad,
 IdUnidad,
 IdArticulo,
 IdControlCalidad,
 Observaciones,
 Cantidad1,
 Cantidad2,
 IdDetallePedido,
 Controlado,
 CantidadAdicional,
 Partida,
 CantidadCC,
 Cantidad1CC,
 Cantidad2CC,
 CantidadAdicionalCC,
 ObservacionesCC,
 CantidadRechazadaCC,
 IdMotivoRechazo,
 IdRealizo,
 IdDetalleRequerimiento,
 Trasabilidad,
 IdDetalleAcopios,
 IdUbicacion,
 IdObra,
 CostoUnitario,
 IdMoneda,
 CotizacionDolar,
 CotizacionMoneda,
 EnviarEmail,
 IdDetalleRecepcionOriginal,
 IdRecepcionOriginal,
 IdOrigenTransmision,
 IdDetalleSalidaMaterialesPRONTO
)
VALUES
(
 @IdRecepcion,
 @Cantidad,
 @IdUnidad,
 @IdArticulo,
 @IdControlCalidad,
 @Observaciones,
 @Cantidad1,
 @Cantidad2,
 @IdDetallePedido,
 @Controlado,
 @CantidadAdicional,
 @Partida,
 @CantidadCC,
 @Cantidad1CC,
 @Cantidad2CC,
 @CantidadAdicionalCC,
 @ObservacionesCC,
 @CantidadRechazadaCC,
 @IdMotivoRechazo,
 @IdRealizo,
 @IdDetalleRequerimiento,
 @Trasabilidad,
 @IdDetalleAcopios,
 @IdUbicacion,
 @IdObra,
 @CostoUnitario,
 @IdMoneda,
 @CotizacionDolar,
 @CotizacionMoneda,
 @EnviarEmail,
 @IdDetalleRecepcionOriginal,
 @IdRecepcionOriginal,
 @IdOrigenTransmision,
 @IdDetalleSalidaMaterialesPRONTO
)
SELECT @IdDetalleRecepcion=@@identity

IF @@ERROR <> 0 GOTO AbortTransaction

COMMIT TRAN
GOTO EndTransaction

AbortTransaction:
ROLLBACK TRAN

EndTransaction:
RETURN(@IdDetalleRecepcion)


GO

/****** Object:  StoredProcedure [dbo].[DetRecepciones_E]    Script Date: 03/15/2011 11:48:43 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO

































CREATE Procedure [dbo].[DetRecepciones_E]
@IdDetalleRecepcion int  AS 
Delete [DetalleRecepciones]
where (IdDetalleRecepcion=@IdDetalleRecepcion)

































GO

/****** Object:  StoredProcedure [dbo].[DetRecepciones_M]    Script Date: 03/15/2011 11:48:43 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE Procedure [dbo].[DetRecepciones_M]

@IdDetalleRecepcion int,
@IdRecepcion int,
@Cantidad numeric(18,2),
@IdUnidad int,
@IdArticulo int,
@IdControlCalidad int,
@Observaciones ntext,
@Cantidad1 numeric(18,2),
@Cantidad2 numeric(18,2),
@IdDetallePedido int,
@Controlado int,
@CantidadAdicional numeric(18,2),
@Partida int,
@CantidadCC numeric(18,2),
@Cantidad1CC numeric(18,2),
@Cantidad2CC numeric(18,2),
@CantidadAdicionalCC numeric(18,2),
@ObservacionesCC ntext,
@CantidadRechazadaCC numeric(18,2),
@IdMotivoRechazo int,
@IdRealizo int,
@IdDetalleRequerimiento int,
@Trasabilidad varchar(10),
@IdDetalleAcopios int,
@IdUbicacion int,
@IdObra int,
@CostoUnitario numeric(18,3),
@IdMoneda int,
@CotizacionDolar numeric(18,3),
@CotizacionMoneda numeric(18,3),
@EnviarEmail tinyint,
@IdDetalleRecepcionOriginal int,
@IdRecepcionOriginal int,
@IdOrigenTransmision int,
@IdDetalleSalidaMaterialesPRONTO int

AS

SET @Partida=IsNull(@Partida,0)

UPDATE [DetalleRecepciones]
SET 
 IdRecepcion=@IdRecepcion,
 Cantidad=@Cantidad,
 IdUnidad=@IdUnidad,
 IdArticulo=@IdArticulo,
 IdControlCalidad=@IdControlCalidad,
 Observaciones=@Observaciones,
 Cantidad1=@Cantidad1,
 Cantidad2=@Cantidad2,
 IdDetallePedido=@IdDetallePedido,
 Controlado=@Controlado,
 CantidadAdicional=@CantidadAdicional,
 Partida=@Partida,
 CantidadCC=@CantidadCC,
 Cantidad1CC=@Cantidad1CC,
 Cantidad2CC=@Cantidad2CC,
 CantidadAdicionalCC=@CantidadAdicionalCC,
 ObservacionesCC=@ObservacionesCC,
 CantidadRechazadaCC=@CantidadRechazadaCC,
 IdMotivoRechazo=@IdMotivoRechazo,
 IdRealizo=@IdRealizo,
 IdDetalleRequerimiento=@IdDetalleRequerimiento,
 Trasabilidad=@Trasabilidad,
 IdDetalleAcopios=@IdDetalleAcopios,
 IdUbicacion=@IdUbicacion,
 IdObra=@IdObra,
 CostoUnitario=@CostoUnitario,
 IdMoneda=@IdMoneda,
 CotizacionDolar=@CotizacionDolar,
 CotizacionMoneda=@CotizacionMoneda,
 EnviarEmail=@EnviarEmail,
 IdDetalleRecepcionOriginal=@IdDetalleRecepcionOriginal,
 IdRecepcionOriginal=@IdRecepcionOriginal,
 IdOrigenTransmision=@IdOrigenTransmision,
 IdDetalleSalidaMaterialesPRONTO=@IdDetalleSalidaMaterialesPRONTO
WHERE (IdDetalleRecepcion=@IdDetalleRecepcion)
RETURN(@IdDetalleRecepcion)


GO

/****** Object:  StoredProcedure [dbo].[DetRecepciones_T]    Script Date: 03/15/2011 11:48:43 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO

































CREATE Procedure [dbo].[DetRecepciones_T]
@IdDetalleRecepcion int
AS 
SELECT *
FROM [DetalleRecepciones]
where (IdDetalleRecepcion=@IdDetalleRecepcion)

































GO

/****** Object:  StoredProcedure [dbo].[DetRecepciones_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:43 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE Procedure [dbo].[DetRecepciones_TX_ParaTransmitir]
AS 
SELECT Det.*
FROM DetalleRecepciones Det
WHERE Det.EnviarEmail=1





GO

/****** Object:  StoredProcedure [dbo].[DetRecepciones_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:43 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE Procedure [dbo].[DetRecepciones_TX_SetearComoTransmitido]
AS 
UPDATE DetalleRecepciones
SET DetalleRecepciones.EnviarEmail=0
WHERE DetalleRecepciones.EnviarEmail<>0





GO

/****** Object:  StoredProcedure [dbo].[DetRecepciones_TXPrimero]    Script Date: 03/15/2011 11:48:43 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO







CREATE PROCEDURE [dbo].[DetRecepciones_TXPrimero]

AS

declare @vector_X varchar(50),@vector_T varchar(50)
set @vector_X='00001111111111111111111111133'
set @vector_T='00002020995011142220055994400'

SELECT Top 1 
 DetRec.IdDetalleRecepcion,
 DetRec.IdRecepcion,
 DetRec.IdDetallePedido,
 DetRec.IdDetalleRequerimiento,
 Pedidos.NumeroPedido as [Pedido],
 DetallePedidos.NumeroItem as [It.Ped],
 Requerimientos.NumeroRequerimiento as [RM],
 DetalleRequerimientos.NumeroItem as [It.RM],
 Acopios.NumeroAcopio as [LA],
 DetalleAcopios.NumeroItem as [It.LA],
 Obras.NumeroObra as [Obra],
 DetRec.Cantidad as [Cant.],
 DetRec.Cantidad1 as [Med.1],
 DetRec.Cantidad2 as [Med.2],
 (Select Unidades.Abreviatura
	From Unidades
	Where Unidades.IdUnidad=DetRec.IdUnidad) as  [En],
 (Select Sum(Stock.CantidadUnidades) 
	From Stock 
	Where Stock.IdArticulo=DetRec.IdArticulo)  as [Stock tot.actual],
 Null as [Cant.Orig.],
 Null as [Recibido],
 Articulos.Codigo as [Codigo],
 Articulos.Descripcion as Articulo,
 Substring(ControlesCalidad.Descripcion,1,40) as [Control de Calidad],
 DetRec.Partida,
 DetRec.Trasabilidad,
 DetRec.IdArticulo,
 DetRec.IdUnidad,
 DetRec.Observaciones,
 Depositos.Abreviatura+' - E:'+Ubicaciones.Estanteria+
	' M:'+Ubicaciones.Modulo+' G:'+Ubicaciones.Gabeta as [Ubicacion],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleRecepciones DetRec
LEFT OUTER JOIN Articulos ON DetRec.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN ControlesCalidad ON DetRec.IdControlCalidad = ControlesCalidad.IdControlCalidad
LEFT OUTER JOIN DetallePedidos ON DetRec.IdDetallePedido = DetallePedidos.IdDetallePedido
LEFT OUTER JOIN Pedidos ON DetallePedidos.IdPedido = Pedidos.IdPedido
LEFT OUTER JOIN DetalleRequerimientos ON DetRec.IdDetalleRequerimiento = DetalleRequerimientos.IdDetalleRequerimiento
LEFT OUTER JOIN Requerimientos ON DetalleRequerimientos.IdRequerimiento = Requerimientos.IdRequerimiento
LEFT OUTER JOIN DetalleAcopios ON DetRec.IdDetalleAcopios = DetalleAcopios.IdDetalleAcopios
LEFT OUTER JOIN Acopios ON DetalleAcopios.IdAcopio = Acopios.IdAcopio
LEFT OUTER JOIN Ubicaciones ON DetRec.IdUbicacion = Ubicaciones.IdUbicacion
LEFT OUTER JOIN Depositos ON Ubicaciones.IdDeposito = Depositos.IdDeposito
LEFT OUTER JOIN Obras ON DetRec.IdObra = Obras.IdObra






GO

/****** Object:  StoredProcedure [dbo].[DetRecepciones_TXRec]    Script Date: 03/15/2011 11:48:43 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO







CREATE PROCEDURE [dbo].[DetRecepciones_TXRec]

@IdRecepcion int

AS

declare @vector_X varchar(50),@vector_T varchar(50)
set @vector_X='00001111111111111111111111133'
set @vector_T='00002020995011142220055994400'

SELECT
 DetRec.IdDetalleRecepcion,
 DetRec.IdRecepcion,
 DetRec.IdDetallePedido,
 DetRec.IdDetalleRequerimiento,
 Pedidos.NumeroPedido as [Pedido],
 DetallePedidos.NumeroItem as [It.Ped],
 Requerimientos.NumeroRequerimiento as [RM],
 DetalleRequerimientos.NumeroItem as [It.RM],
 Acopios.NumeroAcopio as [LA],
 DetalleAcopios.NumeroItem as [It.LA],
 Obras.NumeroObra as [Obra],
 DetRec.Cantidad as [Cant.],
 DetRec.Cantidad1 as [Med.1],
 DetRec.Cantidad2 as [Med.2],
 (Select Unidades.Abreviatura
	From Unidades
	Where Unidades.IdUnidad=DetRec.IdUnidad) as  [En],
 (Select Sum(Stock.CantidadUnidades) 
	From Stock 
	Where Stock.IdArticulo=DetRec.IdArticulo)  as [Stock tot.actual],
 Case 	When DetRec.IdDetallePedido is not null
	 Then DetallePedidos.Cantidad
 	When DetRec.IdDetalleRequerimiento is not null
	 Then DetalleRequerimientos.Cantidad
 	When DetRec.IdDetalleAcopios is not null
	 Then DetalleAcopios.Cantidad
	Else Null
 End as [Cant.Orig.],
 Case 	When DetRec.IdDetallePedido is not null
	 Then (Select Sum(DetalleRecepciones.Cantidad) 
		From DetalleRecepciones 
		Where DetalleRecepciones.IdDetallePedido=DetRec.IdDetallePedido)
 	When DetRec.IdDetalleRequerimiento is not null
	 Then (Select Sum(DetalleRecepciones.Cantidad) 
		From DetalleRecepciones 
		Where DetalleRecepciones.IdDetalleRequerimiento=DetRec.IdDetalleRequerimiento)
 	When DetRec.IdDetalleAcopios is not null
	 Then (Select Sum(DetalleRecepciones.Cantidad) 
		From DetalleRecepciones 
		Where DetalleRecepciones.IdDetalleAcopios=DetRec.IdDetalleAcopios)
 End as [Recibido],
 Articulos.Codigo as [Codigo],
 Articulos.Descripcion as [Articulo],
 Substring(ControlesCalidad.Descripcion,1,40) as [Control de Calidad],
 DetRec.Partida,
 DetRec.Trasabilidad,
 DetRec.IdArticulo,
 DetRec.IdUnidad,
 DetRec.Observaciones,
 Depositos.Abreviatura+' - E:'+Ubicaciones.Estanteria+
	' M:'+Ubicaciones.Modulo+' G:'+Ubicaciones.Gabeta as [Ubicacion],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleRecepciones DetRec
LEFT OUTER JOIN Articulos ON DetRec.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN ControlesCalidad ON DetRec.IdControlCalidad = ControlesCalidad.IdControlCalidad
LEFT OUTER JOIN DetallePedidos ON DetRec.IdDetallePedido = DetallePedidos.IdDetallePedido
LEFT OUTER JOIN Pedidos ON DetallePedidos.IdPedido = Pedidos.IdPedido
LEFT OUTER JOIN DetalleRequerimientos ON DetRec.IdDetalleRequerimiento = DetalleRequerimientos.IdDetalleRequerimiento
LEFT OUTER JOIN Requerimientos ON DetalleRequerimientos.IdRequerimiento = Requerimientos.IdRequerimiento
LEFT OUTER JOIN DetalleAcopios ON DetRec.IdDetalleAcopios = DetalleAcopios.IdDetalleAcopios
LEFT OUTER JOIN Acopios ON DetalleAcopios.IdAcopio = Acopios.IdAcopio
LEFT OUTER JOIN Ubicaciones ON DetRec.IdUbicacion = Ubicaciones.IdUbicacion
LEFT OUTER JOIN Depositos ON Ubicaciones.IdDeposito = Depositos.IdDeposito
LEFT OUTER JOIN Obras ON DetRec.IdObra = Obras.IdObra
WHERE (DetRec.IdRecepcion = @IdRecepcion)
ORDER by Pedidos.NumeroPedido,DetallePedidos.NumeroItem






GO

/****** Object:  StoredProcedure [dbo].[DetRequerimientos_A]    Script Date: 03/15/2011 11:48:43 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE Procedure [dbo].[DetRequerimientos_A]
@IdDetalleRequerimiento int  output,
@IdRequerimiento int,
@NumeroItem int,
@Cantidad numeric(12,2),
@IdUnidad int,
@IdArticulo int,
@FechaEntrega datetime,
@Observaciones ntext,
@Cantidad1 numeric(12,2),
@Cantidad2 numeric(12,2),
@IdDetalleLMateriales int,
@IdControlCalidad int,
@Adjunto varchar(2),
@ArchivoAdjunto varchar(50),
@IdCentroCosto int,
@IdComprador int,
@NumeroFacturaCompra1 int,
@FechaFacturaCompra datetime,
@ImporteFacturaCompra numeric(12,2),
@IdProveedor int,
@NumeroFacturaCompra2 int,
@EsBienDeUso varchar(2),
@IdCuenta int,
@Cumplido varchar(2),
@Usuario1 varchar(6),
@FechaIngreso1 datetime,
@ArchivoAdjunto1 varchar(100),
@ArchivoAdjunto2 varchar(100),
@ArchivoAdjunto3 varchar(100),
@ArchivoAdjunto4 varchar(100),
@ArchivoAdjunto5 varchar(100),
@ArchivoAdjunto6 varchar(100),
@ArchivoAdjunto7 varchar(100),
@ArchivoAdjunto8 varchar(100),
@ArchivoAdjunto9 varchar(100),
@ArchivoAdjunto10 varchar(100),
@DescripcionManual varchar(250),
@EnviarEmail tinyint,
@IdRequerimientoOriginal int,
@IdDetalleRequerimientoOriginal int,
@IdOrigenTransmision int,
@IdLlamadoAProveedor int,
@FechaLlamadoAProveedor datetime,
@IdLlamadoRegistradoPor int,
@FechaRegistracionLlamada datetime,
@ObservacionesLlamada ntext,
@IdAutorizoCumplido int,
@IdDioPorCumplido int,
@FechaDadoPorCumplido datetime,
@ObservacionesCumplido ntext,
@IdAproboAlmacen int,
@IdEquipo int,
@FechaEntrega_Tel datetime,
@PRESTOConcepto varchar(13),
@OrigenDescripcion int,
@Pagina int,
@Item int,
@Figura int,
@CodigoDistribucion varchar(3),
@IdEquipoDestino int,
@TipoDesignacion varchar(3),
@IdLiberoParaCompras int,
@FechaLiberacionParaCompras datetime,
@Recepcionado varchar(2)

AS 

IF IsNull((Select Top 1 P.ActivarSolicitudMateriales	From Parametros P Where P.IdParametro=1),'NO')='SI' 
	Set @TipoDesignacion='S/D'

INSERT INTO [DetalleRequerimientos]
(
 IdRequerimiento,
 NumeroItem,
 Cantidad,
 IdUnidad,
 IdArticulo,
 FechaEntrega,
 Observaciones,
 Cantidad1,
 Cantidad2,
 IdDetalleLMateriales,
 IdControlCalidad,
 Adjunto,
 ArchivoAdjunto,
 IdCentroCosto,
 IdComprador,
 NumeroFacturaCompra1,
 FechaFacturaCompra,
 ImporteFacturaCompra,
 IdProveedor,
 NumeroFacturaCompra2,
 EsBienDeUso,
 IdCuenta,
 Cumplido,
 Usuario1,
 FechaIngreso1,
 ArchivoAdjunto1,
 ArchivoAdjunto2,
 ArchivoAdjunto3,
 ArchivoAdjunto4,
 ArchivoAdjunto5,
 ArchivoAdjunto6,
 ArchivoAdjunto7,
 ArchivoAdjunto8,
 ArchivoAdjunto9,
 ArchivoAdjunto10,
 DescripcionManual,
 EnviarEmail,
 IdRequerimientoOriginal,
 IdDetalleRequerimientoOriginal,
 IdOrigenTransmision,
 IdLlamadoAProveedor,
 FechaLlamadoAProveedor,
 IdLlamadoRegistradoPor,
 FechaRegistracionLlamada,
 ObservacionesLlamada,
 IdAutorizoCumplido,
 IdDioPorCumplido,
 FechaDadoPorCumplido,
 ObservacionesCumplido,
 IdAproboAlmacen,
 IdEquipo,
 FechaEntrega_Tel,
 PRESTOConcepto,
 OrigenDescripcion,
 Pagina,
 Item,
 Figura,
 CodigoDistribucion,
 IdEquipoDestino,
 TipoDesignacion,
 IdLiberoParaCompras,
 FechaLiberacionParaCompras,
 Recepcionado
)
VALUES 
(
 @IdRequerimiento,
 @NumeroItem,
 @Cantidad,
 @IdUnidad,
 @IdArticulo,
 @FechaEntrega,
 @Observaciones,
 @Cantidad1,
 @Cantidad2,
 @IdDetalleLMateriales,
 @IdControlCalidad,
 @Adjunto,
 @ArchivoAdjunto,
 @IdCentroCosto,
 @IdComprador,
 @NumeroFacturaCompra1,
 @FechaFacturaCompra,
 @ImporteFacturaCompra,
 @IdProveedor,
 @NumeroFacturaCompra2,
 @EsBienDeUso,
 @IdCuenta,
 @Cumplido,
 @Usuario1,
 @FechaIngreso1,
 @ArchivoAdjunto1,
 @ArchivoAdjunto2,
 @ArchivoAdjunto3,
 @ArchivoAdjunto4,
 @ArchivoAdjunto5,
 @ArchivoAdjunto6,
 @ArchivoAdjunto7,
 @ArchivoAdjunto8,
 @ArchivoAdjunto9,
 @ArchivoAdjunto10,
 @DescripcionManual,
 1,
 @IdRequerimientoOriginal,
 @IdDetalleRequerimientoOriginal,
 @IdOrigenTransmision,
 @IdLlamadoAProveedor,
 @FechaLlamadoAProveedor,
 @IdLlamadoRegistradoPor,
 @FechaRegistracionLlamada,
 @ObservacionesLlamada,
 @IdAutorizoCumplido,
 @IdDioPorCumplido,
 @FechaDadoPorCumplido,
 @ObservacionesCumplido,
 @IdAproboAlmacen,
 @IdEquipo,
 @FechaEntrega_Tel,
 @PRESTOConcepto,
 @OrigenDescripcion,
 @Pagina,
 @Item,
 @Figura,
 @CodigoDistribucion,
 @IdEquipoDestino,
 @TipoDesignacion,
 @IdLiberoParaCompras,
 @FechaLiberacionParaCompras,
 @Recepcionado
)
SELECT @IdDetalleRequerimiento=@@identity
RETURN(@IdDetalleRequerimiento)



GO

/****** Object:  StoredProcedure [dbo].[DetRequerimientos_ActualizarDesdePronto]    Script Date: 03/15/2011 11:48:44 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE Procedure [dbo].[DetRequerimientos_ActualizarDesdePronto]

@IdDetalleRequerimiento int,
@IdArticulo int,
@Cumplido varchar(2)

AS 

UPDATE DetalleRequerimientos
SET Cumplido=@Cumplido
WHERE IdDetalleRequerimiento=@IdDetalleRequerimiento and IdArticulo=@IdArticulo

DECLARE @IdRequerimiento int
SET @IdRequerimiento=IsNull((Select Top 1 IdRequerimiento From DetalleRequerimientos 
				Where IdDetalleRequerimiento=@IdDetalleRequerimiento),0)

IF NOT EXISTS(Select Top 1 IdDetalleRequerimiento From DetalleRequerimientos
		Where IdRequerimiento=@IdRequerimiento and IsNull(Cumplido,'NO')<>'AN')
	UPDATE Requerimientos 
	SET Cumplido='AN'
	WHERE IdRequerimiento=@IdRequerimiento



GO

/****** Object:  StoredProcedure [dbo].[DetRequerimientos_E]    Script Date: 03/15/2011 11:48:44 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[DetRequerimientos_E]
@IdDetalleRequerimiento int  AS 
Delete [DetalleRequerimientos]
where (IdDetalleRequerimiento=@IdDetalleRequerimiento)































GO

/****** Object:  StoredProcedure [dbo].[DetRequerimientos_M]    Script Date: 03/15/2011 11:48:44 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE Procedure [dbo].[DetRequerimientos_M]
@IdDetalleRequerimiento int,
@IdRequerimiento int,
@NumeroItem int,
@Cantidad numeric(12,2),
@IdUnidad int,
@IdArticulo int,
@FechaEntrega datetime,
@Observaciones ntext,
@Cantidad1 numeric(12,2),
@Cantidad2 numeric(12,2),
@IdDetalleLMateriales int,
@IdControlCalidad int,
@Adjunto varchar(2),
@ArchivoAdjunto varchar(50),
@IdCentroCosto int,
@IdComprador int,
@NumeroFacturaCompra1 int,
@FechaFacturaCompra datetime,
@ImporteFacturaCompra numeric(12,2),
@IdProveedor int,
@NumeroFacturaCompra2 int,
@EsBienDeUso varchar(2),
@IdCuenta int,
@Cumplido varchar(2),
@Usuario1 varchar(6),
@FechaIngreso1 datetime,
@ArchivoAdjunto1 varchar(100),
@ArchivoAdjunto2 varchar(100),
@ArchivoAdjunto3 varchar(100),
@ArchivoAdjunto4 varchar(100),
@ArchivoAdjunto5 varchar(100),
@ArchivoAdjunto6 varchar(100),
@ArchivoAdjunto7 varchar(100),
@ArchivoAdjunto8 varchar(100),
@ArchivoAdjunto9 varchar(100),
@ArchivoAdjunto10 varchar(100),
@DescripcionManual varchar(250),
@EnviarEmail tinyint,
@IdRequerimientoOriginal int,
@IdDetalleRequerimientoOriginal int,
@IdOrigenTransmision int,
@IdLlamadoAProveedor int,
@FechaLlamadoAProveedor datetime,
@IdLlamadoRegistradoPor int,
@FechaRegistracionLlamada datetime,
@ObservacionesLlamada ntext,
@IdAutorizoCumplido int,
@IdDioPorCumplido int,
@FechaDadoPorCumplido datetime,
@ObservacionesCumplido ntext,
@IdAproboAlmacen int,
@IdEquipo int,
@FechaEntrega_Tel datetime,
@PRESTOConcepto varchar(13),
@OrigenDescripcion int,
@Pagina int,
@Item int,
@Figura int,
@CodigoDistribucion varchar(3),
@IdEquipoDestino int,
@TipoDesignacion varchar(3),
@IdLiberoParaCompras int,
@FechaLiberacionParaCompras datetime,
@Recepcionado varchar(2)

AS

UPDATE [DetalleRequerimientos]
SET 
 IdRequerimiento=@IdRequerimiento,
 NumeroItem=@NumeroItem,
 Cantidad=@Cantidad,
 IdUnidad=@IdUnidad,
 IdArticulo=@IdArticulo,
 FechaEntrega=@FechaEntrega,
 Observaciones=@Observaciones,
 Cantidad1=@Cantidad1,
 Cantidad2=@Cantidad2,
 IdDetalleLMateriales=@IdDetalleLMateriales,
 IdControlCalidad=@IdControlCalidad,
 Adjunto=@Adjunto,
 ArchivoAdjunto=@ArchivoAdjunto,
 IdCentroCosto=@IdCentroCosto,
 IdComprador=@IdComprador,
 NumeroFacturaCompra1=@NumeroFacturaCompra1,
 FechaFacturaCompra=@FechaFacturaCompra,
 ImporteFacturaCompra=@ImporteFacturaCompra,
 IdProveedor=@IdProveedor,
 NumeroFacturaCompra2=@NumeroFacturaCompra2,
 EsBienDeUso=@EsBienDeUso,
 IdCuenta=@IdCuenta,
 Cumplido=@Cumplido,
 Usuario1=@Usuario1,
 FechaIngreso1=@FechaIngreso1,
 ArchivoAdjunto1=@ArchivoAdjunto1,
 ArchivoAdjunto2=@ArchivoAdjunto2,
 ArchivoAdjunto3=@ArchivoAdjunto3,
 ArchivoAdjunto4=@ArchivoAdjunto4,
 ArchivoAdjunto5=@ArchivoAdjunto5,
 ArchivoAdjunto6=@ArchivoAdjunto6,
 ArchivoAdjunto7=@ArchivoAdjunto7,
 ArchivoAdjunto8=@ArchivoAdjunto8,
 ArchivoAdjunto9=@ArchivoAdjunto9,
 ArchivoAdjunto10=@ArchivoAdjunto10,
 DescripcionManual=@DescripcionManual,
 EnviarEmail=@EnviarEmail,
 IdRequerimientoOriginal=@IdRequerimientoOriginal,
 IdDetalleRequerimientoOriginal=@IdDetalleRequerimientoOriginal,
 IdOrigenTransmision=@IdOrigenTransmision,
 IdLlamadoAProveedor=@IdLlamadoAProveedor,
 FechaLlamadoAProveedor=@FechaLlamadoAProveedor,
 IdLlamadoRegistradoPor=@IdLlamadoRegistradoPor,
 FechaRegistracionLlamada=@FechaRegistracionLlamada,
 ObservacionesLlamada=@ObservacionesLlamada,
 IdAutorizoCumplido=@IdAutorizoCumplido,
 IdDioPorCumplido=@IdDioPorCumplido,
 FechaDadoPorCumplido=@FechaDadoPorCumplido,
 ObservacionesCumplido=@ObservacionesCumplido,
 IdAproboAlmacen=@IdAproboAlmacen,
 IdEquipo=@IdEquipo,
 FechaEntrega_Tel=@FechaEntrega_Tel,
 PRESTOConcepto=@PRESTOConcepto,
 OrigenDescripcion=@OrigenDescripcion,
 Pagina=@Pagina,
 Item=@Item,
 Figura=@Figura,
 CodigoDistribucion=@CodigoDistribucion,
 IdEquipoDestino=@IdEquipoDestino,
 TipoDesignacion=@TipoDesignacion,
 IdLiberoParaCompras=@IdLiberoParaCompras,
 FechaLiberacionParaCompras=@FechaLiberacionParaCompras,
 Recepcionado=@Recepcionado
WHERE (IdDetalleRequerimiento=@IdDetalleRequerimiento)
RETURN(@IdDetalleRequerimiento)



GO

/****** Object:  StoredProcedure [dbo].[DetRequerimientos_T]    Script Date: 03/15/2011 11:48:45 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[DetRequerimientos_T]
@IdDetalleRequerimiento int
AS 
SELECT *
FROM [DetalleRequerimientos]
where (IdDetalleRequerimiento=@IdDetalleRequerimiento)































GO

/****** Object:  StoredProcedure [dbo].[DetRequerimientos_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:45 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE Procedure [dbo].[DetRequerimientos_TX_ParaTransmitir]

@IdRequerimiento int = Null

AS 

SELECT DetReq.*
FROM DetalleRequerimientos DetReq
LEFT OUTER JOIN Requerimientos ON DetReq.IdRequerimiento = Requerimientos.IdRequerimiento
WHERE DetReq.EnviarEmail=1 and Requerimientos.Aprobo is not null and 
	IsNull(Requerimientos.TipoRM,'NN')='NN' and 
	(IsNull(@IdRequerimiento,-1)=-1 or IsNull(@IdRequerimiento,-1)=DetReq.IdRequerimiento)



GO

/****** Object:  StoredProcedure [dbo].[DetRequerimientos_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:45 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE Procedure [dbo].[DetRequerimientos_TX_SetearComoTransmitido]

@IdRequerimiento int = Null

AS 

UPDATE DetalleRequerimientos
SET DetalleRequerimientos.EnviarEmail=0
WHERE DetalleRequerimientos.EnviarEmail<>0 and 
	(Select Top 1 Requerimientos.Aprobo From Requerimientos 
	 Where DetalleRequerimientos.IdRequerimiento = Requerimientos.IdRequerimiento) is not null and 
	(IsNull(@IdRequerimiento,-1)=-1 or IsNull(@IdRequerimiento,-1)=DetalleRequerimientos.IdRequerimiento)



GO

/****** Object:  StoredProcedure [dbo].[DetRequerimientos_TX_Todos]    Script Date: 03/15/2011 11:48:45 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[DetRequerimientos_TX_Todos]
@IdRequerimiento int
AS 
SELECT *
FROM [DetalleRequerimientos]
where (IdRequerimiento=@IdRequerimiento)
order by DetalleRequerimientos.NumeroItem































GO

/****** Object:  StoredProcedure [dbo].[DetRequerimientos_TX_TodosConDatos]    Script Date: 03/15/2011 11:48:45 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE Procedure [dbo].[DetRequerimientos_TX_TodosConDatos]

@IdRequerimiento int

AS 

SELECT
 DetReq.*,
 Requerimientos.NumeroRequerimiento,
 Requerimientos.FechaRequerimiento,
 Requerimientos.Aprobo,
 Requerimientos.IdObra as [IdObra],
 Articulos.Descripcion as [DescripcionArt],
 Articulos.Codigo,
 Unidades.Descripcion as [Unidad en],
 IsNull(Unidades.Abreviatura,Unidades.Descripcion) as [Unidad],
 (Select Sum(DetRec.Cantidad)
  From DetalleRecepciones DetRec
  Left Outer Join Recepciones On DetRec.IdRecepcion = Recepciones.IdRecepcion
  Where DetReq.IdDetalleRequerimiento=DetRec.IdDetalleRequerimiento and 
	(Recepciones.Anulada is null or Recepciones.Anulada<>'SI')) as [Entregado],
 DetReq.Cantidad - Isnull((Select Sum(DetRec.Cantidad)
 				From DetalleRecepciones DetRec 
				Left Outer Join Recepciones On Recepciones.IdRecepcion=DetRec.IdRecepcion
				Where DetRec.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento and 
					(Recepciones.Anulada is null or Recepciones.Anulada<>'SI')),0)
 as [Pendiente],
 IsNull((Select Sum(DetallePedidos.Cantidad) 
	From DetallePedidos 
	Where DetallePedidos.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento and 
		(DetallePedidos.Cumplido is null or DetallePedidos.Cumplido<>'AN')),0)  as [Pedido],
 IsNull((Select Sum(DetalleValesSalida.Cantidad) 
	From DetalleValesSalida 
	Where DetalleValesSalida.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento and 
		(DetalleValesSalida.Estado is null or DetalleValesSalida.Estado<>'AN')),0)  as [SalidaPorVales],
 0 as [Reservado],
 Obras.NumeroObra as [Obra],
 Obras.NumeroObra+' '+Obras.Descripcion as [Obra1],
 Clientes.RazonSocial as [Cliente],
 Equipos.Descripcion as [Equipo],
 Rubros.Descripcion as [Rubro],
 IsNull(ControlesCalidad.Abreviatura,ControlesCalidad.Descripcion) as [CC],
 (Select Top 1 Empleados.Nombre from Empleados Where Requerimientos.Aprobo=Empleados.IdEmpleado) as [Liberada por],
 (Select Top 1 Empleados.Nombre from Empleados Where Requerimientos.IdSolicito=Empleados.IdEmpleado) as [Solicitada por]
FROM DetalleRequerimientos DetReq
LEFT OUTER JOIN Requerimientos ON Requerimientos.IdRequerimiento=DetReq.IdRequerimiento
LEFT OUTER JOIN Articulos ON DetReq.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Unidades ON DetReq.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN Obras ON Requerimientos.IdObra = Obras.IdObra
LEFT OUTER JOIN Clientes ON Obras.IdCliente = Clientes.IdCliente
LEFT OUTER JOIN Equipos ON DetReq.IdEquipo = Equipos.IdEquipo
LEFT OUTER JOIN Rubros ON Articulos.IdRubro = Rubros.IdRubro
LEFT OUTER JOIN ControlesCalidad ON DetReq.IdControlCalidad = ControlesCalidad.IdControlCalidad
WHERE DetReq.IdRequerimiento=@IdRequerimiento



GO

/****** Object:  StoredProcedure [dbo].[DetRequerimientos_TX_UnItem]    Script Date: 03/15/2011 11:48:45 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO























CREATE Procedure [dbo].[DetRequerimientos_TX_UnItem]
@IdDetalleRequerimiento int
AS 
SELECT *
FROM [DetalleRequerimientos]
WHERE (IdDetalleRequerimiento=@IdDetalleRequerimiento)






















GO

/****** Object:  StoredProcedure [dbo].[DetRequerimientos_TX_UnItemConFormato]    Script Date: 03/15/2011 11:48:45 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO























CREATE PROCEDURE [dbo].[DetRequerimientos_TX_UnItemConFormato]

@IdDetalleRequerimiento int

AS

declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='001011111101110111111133'
set @vector_T='000011000002040092345300'

SELECT
 DetReq.IdDetalleRequerimiento,
 DetReq.IdRequerimiento,
 DetReq.NumeroItem,
 DetReq.IdDetalleLMateriales,
 LMateriales.NumeroLMateriales,
 DetalleLMateriales.NumeroItem as [NumeroItemLMateriales],
 DetReq.Cantidad,
 ( SELECT Unidades.Descripcion
	FROM Unidades
	WHERE Unidades.IdUnidad=DetReq.IdUnidad) as  [Unidad en],
 DetReq.Cantidad1,
 DetReq.Cantidad2,
 DetReq.IdArticulo,
 Articulos.Codigo as [Codigo],
 CASE 
	WHEN DetReq.IdArticulo IS NULL THEN DetReq.DescripcionManual
	WHEN DetReq.IdArticulo IS NOT NULL THEN Articulos.Descripcion
	ELSE NULL
 END as [Articulo],
 DetReq.FechaEntrega,
 DetReq.IdControlCalidad,
 ControlesCalidad.Abreviatura as [ControlCalidad],
 ( SELECT SUM(DetallePedidos.CantidadRecibida)
	FROM DetallePedidos
	WHERE DetReq.IdDetalleRequerimiento=DetallePedidos.IdDetalleRequerimiento) as [CantidadRecibida],
 CASE 
	WHEN DetReq.Cumplido is null THEN 'NO'
	ELSE DetReq.Cumplido 
 END as [Cump],
 Proveedores.RazonSocial as [Proveedor asignado],
 ( SELECT Empleados.Iniciales
	FROM Empleados
	WHERE Empleados.IdEmpleado=DetReq.IdLlamadoAProveedor) as  [Llamado por],
 DetReq.FechaLlamadoAProveedor,
 ( SELECT SUM(DetalleReservas.CantidadUnidades) 
	FROM DetalleReservas 
	WHERE DetalleReservas.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento) 
	as [Reservado],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleRequerimientos DetReq
LEFT OUTER JOIN Articulos ON DetReq.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN DetalleLMateriales ON DetReq.IdDetalleLMateriales = DetalleLMateriales.IdDetalleLMateriales
LEFT OUTER JOIN LMateriales ON DetalleLMateriales.IdLMateriales=LMateriales.IdLMateriales
LEFT OUTER JOIN ControlesCalidad ON DetReq.IdControlCalidad = ControlesCalidad.IdControlCalidad
LEFT OUTER JOIN Proveedores ON DetReq.IdProveedor = Proveedores.IdProveedor
WHERE (DetReq.IdDetalleRequerimiento = @IdDetalleRequerimiento)






















GO

/****** Object:  StoredProcedure [dbo].[DetRequerimientos_TXPrimero]    Script Date: 03/15/2011 11:48:45 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE [dbo].[DetRequerimientos_TXPrimero]

AS

DECLARE @vector_X varchar(30),@vector_T varchar(30)
SET @vector_X='001011111101110111111133'
SET @vector_T='000099009902040092345300'

SELECT TOP 1
 DetReq.IdDetalleRequerimiento,
 DetReq.IdRequerimiento,
 DetReq.NumeroItem as [Item],
 DetReq.IdDetalleLMateriales,
 LMateriales.NumeroLMateriales as [L.Mat.],
 DetalleLMateriales.NumeroItem as [Itm.LM],
 DetReq.Cantidad as [Cant.],
 ( SELECT Unidades.Descripcion
	FROM Unidades
	WHERE Unidades.IdUnidad=DetReq.IdUnidad) as  [Unidad en],
 DetReq.Cantidad1 as [Med.1],
 DetReq.Cantidad2 as [Med.2],
 DetReq.IdArticulo,
 Articulos.Codigo as [Codigo],
 CASE 
	WHEN DetReq.IdArticulo IS NULL THEN DetReq.DescripcionManual
	WHEN DetReq.IdArticulo IS NOT NULL THEN Articulos.Descripcion
	ELSE NULL
 END as [Articulo],
 DetReq.FechaEntrega as [F.entrega],
 DetReq.IdControlCalidad,
 ControlesCalidad.Abreviatura as [CC],
 Null as [CantidadRecibida],
 CASE 
	WHEN DetReq.Cumplido is null THEN 'NO'
	ELSE DetReq.Cumplido 
 END as [Cump],
 Proveedores.RazonSocial as [Proveedor asignado],
 ( SELECT Empleados.Iniciales
	FROM Empleados
	WHERE Empleados.IdEmpleado=DetReq.IdLlamadoAProveedor) as  [Llamado por],
 DetReq.FechaLlamadoAProveedor as [Fecha llamada],
 (SELECT SUM(DetalleReservas.CantidadUnidades) 
	FROM DetalleReservas 
	WHERE DetalleReservas.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento) 
	as [Reservado],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleRequerimientos DetReq
LEFT OUTER JOIN Articulos ON DetReq.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN DetalleLMateriales ON DetReq.IdDetalleLMateriales = DetalleLMateriales.IdDetalleLMateriales
LEFT OUTER JOIN LMateriales ON DetalleLMateriales.IdLMateriales=LMateriales.IdLMateriales
LEFT OUTER JOIN ControlesCalidad ON DetReq.IdControlCalidad = ControlesCalidad.IdControlCalidad
LEFT OUTER JOIN Proveedores ON DetReq.IdProveedor = Proveedores.IdProveedor



GO

/****** Object:  StoredProcedure [dbo].[DetRequerimientos_TXReq]    Script Date: 03/15/2011 11:48:45 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE PROCEDURE [dbo].[DetRequerimientos_TXReq]

@IdRequerimiento int

AS

DECLARE @vector_X varchar(50),@vector_T varchar(50)
SET @vector_X='001011111101110111111133'
SET @vector_T='000099009902040092345300'

SELECT
 DetReq.IdDetalleRequerimiento,
 DetReq.IdRequerimiento,
 DetReq.NumeroItem as [Item],
 DetReq.IdDetalleLMateriales,
 LMateriales.NumeroLMateriales as [L.Mat.],
 DetalleLMateriales.NumeroItem as [Itm.LM],
 DetReq.Cantidad as [Cant.],
 ( SELECT Unidades.Descripcion
	FROM Unidades
	WHERE Unidades.IdUnidad=DetReq.IdUnidad) as  [Unidad en],
 DetReq.Cantidad1 as [Med.1],
 DetReq.Cantidad2 as [Med.2],
 DetReq.IdArticulo,
 Articulos.Codigo as [Codigo],
 CASE 
	WHEN DetReq.IdArticulo IS NULL THEN DetReq.DescripcionManual
	WHEN DetReq.IdArticulo IS NOT NULL THEN Articulos.Descripcion
	ELSE NULL
 END as [Articulo],
 DetReq.FechaEntrega as [F.entrega],
 DetReq.IdControlCalidad,
 ControlesCalidad.Abreviatura as [CC],
 ( SELECT SUM(DetallePedidos.CantidadRecibida)
	FROM DetallePedidos
	WHERE DetReq.IdDetalleRequerimiento=DetallePedidos.IdDetalleRequerimiento) as [CantidadRecibida],
 CASE 
	WHEN DetReq.Cumplido is null THEN 'NO'
	ELSE DetReq.Cumplido 
 END as [Cump],
 Proveedores.RazonSocial as [Proveedor asignado],
 ( SELECT Empleados.Iniciales
	FROM Empleados
	WHERE Empleados.IdEmpleado=DetReq.IdLlamadoAProveedor) as  [Llamado por],
 DetReq.FechaLlamadoAProveedor as [Fecha llamada],
 (SELECT SUM(DetalleReservas.CantidadUnidades) 
	FROM DetalleReservas 
	WHERE DetalleReservas.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento) 
	as [Reservado],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleRequerimientos DetReq
LEFT OUTER JOIN Articulos ON DetReq.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN DetalleLMateriales ON DetReq.IdDetalleLMateriales = DetalleLMateriales.IdDetalleLMateriales
LEFT OUTER JOIN LMateriales ON DetalleLMateriales.IdLMateriales=LMateriales.IdLMateriales
LEFT OUTER JOIN ControlesCalidad ON DetReq.IdControlCalidad = ControlesCalidad.IdControlCalidad
LEFT OUTER JOIN Proveedores ON DetReq.IdProveedor = Proveedores.IdProveedor
WHERE (DetReq.IdRequerimiento = @IdRequerimiento)
ORDER by DetReq.NumeroItem



GO

/****** Object:  StoredProcedure [dbo].[DetReservas_A]    Script Date: 03/15/2011 11:48:45 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO







CREATE Procedure [dbo].[DetReservas_A]
@IdDetalleReserva int  output,
@IdReserva int,
@IdArticulo int,
@IdStock int,
@Partida int,
@CantidadUnidades numeric(12,2),
@CantidadAdicional numeric(12,2),
@IdUnidad int,
@Cantidad1 numeric(12,2),
@Cantidad2 numeric(12,2),
@Retirada varchar(2),
@Estado varchar(2),
@IdDetalleLMateriales int,
@IdDetalleRequerimiento int,
@IdDetalleAcopios int,
@IdCentroCosto int,
@IdObra int,
@EnviarEmail tinyint,
@IdDetalleReservaOriginal int
As 
Insert into [DetalleReservas]
(
 IdReserva,
 IdArticulo,
 IdStock,
 Partida,
 CantidadUnidades,
 CantidadAdicional,
 IdUnidad,
 Cantidad1,
 Cantidad2,
 Retirada,
 Estado,
 IdDetalleLMateriales,
 IdDetalleRequerimiento,
 IdDetalleAcopios,
 IdCentroCosto,
 IdObra,
 EnviarEmail,
 IdDetalleReservaOriginal
)
Values
(
 @IdReserva,
 @IdArticulo,
 @IdStock,
 @Partida,
 @CantidadUnidades,
 @CantidadAdicional,
 @IdUnidad,
 @Cantidad1,
 @Cantidad2,
 @Retirada,
 @Estado,
 @IdDetalleLMateriales,
 @IdDetalleRequerimiento,
 @IdDetalleAcopios,
 @IdCentroCosto,
 @IdObra,
 @EnviarEmail,
 @IdDetalleReservaOriginal
)
Select @IdDetalleReserva=@@identity
Return(@IdDetalleReserva)






GO

/****** Object:  StoredProcedure [dbo].[DetReservas_E]    Script Date: 03/15/2011 11:48:45 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[DetReservas_E]
@IdDetalleReserva int  AS 
Delete [DetalleReservas]
where (IdDetalleReserva=@IdDetalleReserva)
































GO

/****** Object:  StoredProcedure [dbo].[DetReservas_M]    Script Date: 03/15/2011 11:48:45 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO







CREATE Procedure [dbo].[DetReservas_M]
@IdDetalleReserva int,
@IdReserva int,
@IdArticulo int,
@IdStock int,
@Partida int,
@CantidadUnidades numeric(12,2),
@CantidadAdicional numeric(12,2),
@IdUnidad int,
@Cantidad1 numeric(12,2),
@Cantidad2 numeric(12,2),
@Retirada varchar(2),
@Estado varchar(2),
@IdDetalleLMateriales int,
@IdDetalleRequerimiento int,
@IdDetalleAcopios int,
@IdCentroCosto int,
@IdObra int,
@EnviarEmail tinyint,
@IdDetalleReservaOriginal int
As
Update [DetalleReservas]
Set 
 IdReserva=@IdReserva,
 IdArticulo=@IdArticulo,
 IdStock=@IdStock,
 Partida=@Partida,
 CantidadUnidades=@CantidadUnidades,
 CantidadAdicional=@CantidadAdicional,
 IdUnidad=@IdUnidad,
 Cantidad1=@Cantidad1,
 Cantidad2=@Cantidad2,
 Retirada=@Retirada,
 Estado=@Estado,
 IdDetalleLMateriales=@IdDetalleLMateriales,
 IdDetalleRequerimiento=@IdDetalleRequerimiento,
 IdDetalleAcopios=@IdDetalleAcopios,
 IdCentroCosto=@IdCentroCosto,
 IdObra=@IdObra,
 EnviarEmail=@EnviarEmail,
 IdDetalleReservaOriginal=@IdDetalleReservaOriginal
Where (IdDetalleReserva=@IdDetalleReserva)
Return(@IdDetalleReserva)






GO

/****** Object:  StoredProcedure [dbo].[DetReservas_T]    Script Date: 03/15/2011 11:48:45 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[DetReservas_T]
@IdDetalleReserva int
AS 
SELECT *
FROM [DetalleReservas]
where (IdDetalleReserva=@IdDetalleReserva)
































GO

/****** Object:  StoredProcedure [dbo].[DetReservas_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:45 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE Procedure [dbo].[DetReservas_TX_ParaTransmitir]
AS 
SELECT Det.*
FROM DetalleReservas Det
WHERE Det.EnviarEmail=1





GO

/****** Object:  StoredProcedure [dbo].[DetReservas_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:45 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE Procedure [dbo].[DetReservas_TX_SetearComoTransmitido]
AS 
UPDATE DetalleReservas
SET DetalleReservas.EnviarEmail=0
WHERE DetalleReservas.EnviarEmail<>0





GO

/****** Object:  StoredProcedure [dbo].[DetReservas_TXPrimero]    Script Date: 03/15/2011 11:48:45 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE PROCEDURE [dbo].[DetReservas_TXPrimero]
as
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='0001111111133'
set @vector_T='0001102210000'
SELECT TOP 1
DetAju.IdDetalleReserva,
DetAju.IdReserva,
DetAju.IdArticulo,
Articulos.Descripcion as Articulo,
DetAju.Partida,
DetAju.CantidadUnidades as [Cant.],
DetAju.Cantidad1 as [Med.1],
DetAju.Cantidad2 as [Med.2],
Unidades.Descripcion as [En :],
DetAju.Retirada as [Ret?],
DetAju.Estado as [Est],
@Vector_T as Vector_T,
@Vector_X as Vector_X
FROM DetalleReservas DetAju
LEFT OUTER JOIN Articulos ON DetAju.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Unidades ON DetAju.IdUnidad = Unidades.IdUnidad
































GO

/****** Object:  StoredProcedure [dbo].[DetReservas_TXRes]    Script Date: 03/15/2011 11:48:45 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE PROCEDURE [dbo].[DetReservas_TXRes]
@IdReserva int
as
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='0001111111133'
set @vector_T='0001102210000'
SELECT
DetAju.IdDetalleReserva,
DetAju.IdReserva,
DetAju.IdArticulo,
Articulos.Descripcion as Articulo,
DetAju.Partida,
DetAju.CantidadUnidades as [Cant.],
DetAju.Cantidad1 as [Med.1],
DetAju.Cantidad2 as [Med.2],
Unidades.Descripcion as [En :],
DetAju.Retirada as [Ret?],
DetAju.Estado as [Est],
@Vector_T as Vector_T,
@Vector_X as Vector_X
FROM DetalleReservas DetAju
LEFT OUTER JOIN Articulos ON DetAju.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Unidades ON DetAju.IdUnidad = Unidades.IdUnidad
WHERE (DetAju.IdReserva = @IdReserva)
































GO

/****** Object:  StoredProcedure [dbo].[DetSalidasMateriales_A]    Script Date: 03/15/2011 11:48:45 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE Procedure [dbo].[DetSalidasMateriales_A]

@IdDetalleSalidaMateriales int  output,
@IdSalidaMateriales int,
@IdArticulo int,
@IdStock int,
@Partida int,
@Cantidad numeric(12,2),
@CantidadAdicional numeric(12,2),
@IdUnidad int,
@Cantidad1 numeric(12,2),
@Cantidad2 numeric(12,2),
@IdDetalleValeSalida int,
@Adjunto varchar(2),
@ArchivoAdjunto1 varchar(100),
@ArchivoAdjunto2 varchar(100),
@ArchivoAdjunto3 varchar(100),
@ArchivoAdjunto4 varchar(100),
@ArchivoAdjunto5 varchar(100),
@ArchivoAdjunto6 varchar(100),
@ArchivoAdjunto7 varchar(100),
@ArchivoAdjunto8 varchar(100),
@ArchivoAdjunto9 varchar(100),
@ArchivoAdjunto10 varchar(100),
@Observaciones ntext,
@IdUbicacion int,
@IdObra int,
@CostoUnitario numeric(18,4),
@IdMoneda int,
@CotizacionDolar numeric(18,4),
@CotizacionMoneda numeric(18,4),
@IdEquipoDestino int,
@EnviarEmail tinyint,
@IdDetalleSalidaMaterialesOriginal int,
@IdSalidaMaterialesOriginal int,
@IdOrigenTransmision int,
@DescargaPorKit varchar(2)

AS 

BEGIN TRAN

--SET @Partida=IsNull(@Partida,0)

DECLARE @Anulada varchar(2), @IdStock1 int
SET @Anulada=IsNull((Select Top 1 Anulada From SalidasMateriales 
			Where IdSalidaMateriales=@IdSalidaMateriales),'NO')
IF @Anulada<>'SI'
    BEGIN
	SET @IdStock1=IsNull((Select Top 1 Stock.IdStock
				From Stock 
				Where IdArticulo=@IdArticulo and IsNull(Partida,0)=IsNull(@Partida,0) and 
					IdUbicacion=@IdUbicacion and IdObra=@IdObra and 
					IdUnidad=@IdUnidad),0)
	IF @IdStock1>0 
		UPDATE Stock
		SET CantidadUnidades=IsNull(CantidadUnidades,0)-@Cantidad
		WHERE IdStock=@IdStock1
	ELSE
		INSERT INTO Stock (IdArticulo, Partida, CantidadUnidades, CantidadAdicional,
					IdUnidad, IdUbicacion, IdObra)
		VALUES (@IdArticulo, @Partida, @Cantidad*-1, Null, @IdUnidad, @IdUbicacion, @IdObra)
    END

INSERT INTO [DetalleSalidasMateriales]
(
 IdSalidaMateriales,
 IdArticulo,
 IdStock,
 Partida,
 Cantidad,
 CantidadAdicional,
 IdUnidad,
 Cantidad1,
 Cantidad2,
 IdDetalleValeSalida,
 Adjunto,
 ArchivoAdjunto1,
 ArchivoAdjunto2,
 ArchivoAdjunto3,
 ArchivoAdjunto4,
 ArchivoAdjunto5,
 ArchivoAdjunto6,
 ArchivoAdjunto7,
 ArchivoAdjunto8,
 ArchivoAdjunto9,
 ArchivoAdjunto10,
 Observaciones,
 IdUbicacion,
 IdObra,
 CostoUnitario,
 IdMoneda,
 CotizacionDolar,
 CotizacionMoneda,
 IdEquipoDestino,
 EnviarEmail,
 IdDetalleSalidaMaterialesOriginal,
 IdSalidaMaterialesOriginal,
 IdOrigenTransmision,
 DescargaPorKit
)
VALUES 
(
 @IdSalidaMateriales,
 @IdArticulo,
 @IdStock,
 @Partida,
 @Cantidad,
 @CantidadAdicional,
 @IdUnidad,
 @Cantidad1,
 @Cantidad2,
 @IdDetalleValeSalida,
 @Adjunto,
 @ArchivoAdjunto1,
 @ArchivoAdjunto2,
 @ArchivoAdjunto3,
 @ArchivoAdjunto4,
 @ArchivoAdjunto5,
 @ArchivoAdjunto6,
 @ArchivoAdjunto7,
 @ArchivoAdjunto8,
 @ArchivoAdjunto9,
 @ArchivoAdjunto10,
 @Observaciones,
 @IdUbicacion,
 @IdObra,
 @CostoUnitario,
 @IdMoneda,
 @CotizacionDolar,
 @CotizacionMoneda,
 @IdEquipoDestino,
 @EnviarEmail,
 @IdDetalleSalidaMaterialesOriginal,
 @IdSalidaMaterialesOriginal,
 @IdOrigenTransmision,
 @DescargaPorKit
)
SELECT @IdDetalleSalidaMateriales=@@identity

IF @@ERROR <> 0 GOTO AbortTransaction

COMMIT TRAN
GOTO EndTransaction

AbortTransaction:
ROLLBACK TRAN

EndTransaction:
RETURN(@IdDetalleSalidaMateriales)

GO

/****** Object:  StoredProcedure [dbo].[DetSalidasMateriales_E]    Script Date: 03/15/2011 11:48:46 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[DetSalidasMateriales_E]
@IdDetalleSalidaMateriales int  AS 
Delete [DetalleSalidasMateriales]
where (IdDetalleSalidaMateriales=@IdDetalleSalidaMateriales)
































GO

/****** Object:  StoredProcedure [dbo].[DetSalidasMateriales_M]    Script Date: 03/15/2011 11:48:46 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE Procedure [dbo].[DetSalidasMateriales_M]

@IdDetalleSalidaMateriales int,
@IdSalidaMateriales int,
@IdArticulo int,
@IdStock int,
@Partida int,
@Cantidad numeric(12,2),
@CantidadAdicional numeric(12,2),
@IdUnidad int,
@Cantidad1 numeric(12,2),
@Cantidad2 numeric(12,2),
@IdDetalleValeSalida int,
@Adjunto varchar(2),
@ArchivoAdjunto1 varchar(100),
@ArchivoAdjunto2 varchar(100),
@ArchivoAdjunto3 varchar(100),
@ArchivoAdjunto4 varchar(100),
@ArchivoAdjunto5 varchar(100),
@ArchivoAdjunto6 varchar(100),
@ArchivoAdjunto7 varchar(100),
@ArchivoAdjunto8 varchar(100),
@ArchivoAdjunto9 varchar(100),
@ArchivoAdjunto10 varchar(100),
@Observaciones ntext,
@IdUbicacion int,
@IdObra int,
@CostoUnitario numeric(18,4),
@IdMoneda int,
@CotizacionDolar numeric(18,4),
@CotizacionMoneda numeric(18,4),
@IdEquipoDestino int,
@EnviarEmail tinyint,
@IdDetalleSalidaMaterialesOriginal int,
@IdSalidaMaterialesOriginal int,
@IdOrigenTransmision int,
@DescargaPorKit varchar(2)

AS

BEGIN TRAN

--SET @Partida=IsNull(@Partida,0)

DECLARE @IdStockAnt int, @IdArticuloAnt int, @PartidaAnt int, @CantidadUnidadesAnt numeric(18,2),
	@IdUnidadAnt int, @IdUbicacionAnt int, @IdObraAnt int, @IdStock1 int, @Anulada varchar(2)

SET @Anulada=IsNull((Select Top 1 Anulada From SalidasMateriales 
			Where IdSalidaMateriales=@IdSalidaMateriales),'NO')
IF @Anulada<>'SI'
    BEGIN
	SET @IdArticuloAnt=IsNull((Select Top 1 IdArticulo From DetalleSalidasMateriales 
				   Where IdDetalleSalidaMateriales=@IdDetalleSalidaMateriales),0)
	SET @PartidaAnt=IsNull((Select Top 1 Partida From DetalleSalidasMateriales 
				Where IdDetalleSalidaMateriales=@IdDetalleSalidaMateriales),0)
	SET @CantidadUnidadesAnt=IsNull((Select Top 1 Cantidad From DetalleSalidasMateriales 
					 Where IdDetalleSalidaMateriales=@IdDetalleSalidaMateriales),0)
	SET @IdUnidadAnt=IsNull((Select Top 1 IdUnidad From DetalleSalidasMateriales 
				 Where IdDetalleSalidaMateriales=@IdDetalleSalidaMateriales),0)
	SET @IdUbicacionAnt=IsNull((Select Top 1 IdUbicacion From DetalleSalidasMateriales 
				    Where IdDetalleSalidaMateriales=@IdDetalleSalidaMateriales),0)
	SET @IdObraAnt=IsNull((Select Top 1 IdObra From DetalleSalidasMateriales 
				Where IdDetalleSalidaMateriales=@IdDetalleSalidaMateriales),0)
	SET @IdStockAnt=IsNull((Select Top 1 Stock.IdStock
				From Stock 
				Where IdArticulo=@IdArticuloAnt and IsNull(Partida,0)=@PartidaAnt and 
					IdUbicacion=@IdUbicacionAnt and IdObra=@IdObraAnt and 
					IdUnidad=@IdUnidadAnt),0)
	IF @IdStockAnt>0 
		UPDATE Stock
		SET CantidadUnidades=IsNull(CantidadUnidades,0)+@CantidadUnidadesAnt
		WHERE IdStock=@IdStockAnt
	ELSE
		INSERT INTO Stock (IdArticulo, Partida, CantidadUnidades, CantidadAdicional,
					IdUnidad, IdUbicacion, IdObra)
		VALUES (@IdArticuloAnt, @PartidaAnt, @CantidadUnidadesAnt, Null, @IdUnidadAnt, 
			@IdUbicacionAnt, @IdObraAnt)
	
	SET @IdStock1=IsNull((Select Top 1 Stock.IdStock
				From Stock 
				Where IdArticulo=@IdArticulo and IsNull(Partida,0)=IsNull(@Partida,0) and 
					IdUbicacion=@IdUbicacion and IdObra=@IdObra and 
					IdUnidad=@IdUnidad),0)
	IF @IdStock1>0 
		UPDATE Stock
		SET CantidadUnidades=IsNull(CantidadUnidades,0)-@Cantidad
		WHERE IdStock=@IdStock1
	ELSE
		INSERT INTO Stock (IdArticulo, Partida, CantidadUnidades, CantidadAdicional,
					IdUnidad, IdUbicacion, IdObra)
		VALUES (@IdArticulo, @Partida, @Cantidad*-1, Null, @IdUnidad, @IdUbicacion, @IdObra)
    END

UPDATE [DetalleSalidasMateriales]
SET 
 IdSalidaMateriales=@IdSalidaMateriales,
 IdArticulo=@IdArticulo,
 IdStock=@IdStock,
 Partida=@Partida,
 Cantidad=@Cantidad,
 CantidadAdicional=@CantidadAdicional,
 IdUnidad=@IdUnidad,
 Cantidad1=@Cantidad1,
 Cantidad2=@Cantidad2,
 IdDetalleValeSalida=@IdDetalleValeSalida,
 Adjunto=@Adjunto,
 ArchivoAdjunto1=@ArchivoAdjunto1,
 ArchivoAdjunto2=@ArchivoAdjunto2,
 ArchivoAdjunto3=@ArchivoAdjunto3,
 ArchivoAdjunto4=@ArchivoAdjunto4,
 ArchivoAdjunto5=@ArchivoAdjunto5,
 ArchivoAdjunto6=@ArchivoAdjunto6,
 ArchivoAdjunto7=@ArchivoAdjunto7,
 ArchivoAdjunto8=@ArchivoAdjunto8,
 ArchivoAdjunto9=@ArchivoAdjunto9,
 ArchivoAdjunto10=@ArchivoAdjunto10,
 Observaciones=@Observaciones,
 IdUbicacion=@IdUbicacion,
 IdObra=@IdObra,
 CostoUnitario=@CostoUnitario,
 IdMoneda=@IdMoneda,
 CotizacionDolar=@CotizacionDolar,
 CotizacionMoneda=@CotizacionMoneda,
 IdEquipoDestino=@IdEquipoDestino,
 EnviarEmail=@EnviarEmail,
 IdDetalleSalidaMaterialesOriginal=@IdDetalleSalidaMaterialesOriginal,
 IdSalidaMaterialesOriginal=@IdSalidaMaterialesOriginal,
 IdOrigenTransmision=@IdOrigenTransmision,
 DescargaPorKit=@DescargaPorKit
WHERE (IdDetalleSalidaMateriales=@IdDetalleSalidaMateriales)

IF @@ERROR <> 0 GOTO AbortTransaction

COMMIT TRAN
GOTO EndTransaction

AbortTransaction:
ROLLBACK TRAN

EndTransaction:
RETURN(@IdDetalleSalidaMateriales)

GO

/****** Object:  StoredProcedure [dbo].[DetSalidasMateriales_T]    Script Date: 03/15/2011 11:48:46 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[DetSalidasMateriales_T]
@IdDetalleSalidaMateriales int
AS 
SELECT *
FROM [DetalleSalidasMateriales]
WHERE (IdDetalleSalidaMateriales=@IdDetalleSalidaMateriales)
































GO

/****** Object:  StoredProcedure [dbo].[DetSalidasMateriales_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:46 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE Procedure [dbo].[DetSalidasMateriales_TX_ParaTransmitir]
AS 
SELECT Det.*
FROM DetalleSalidasMateriales Det
WHERE Det.EnviarEmail=1





GO

/****** Object:  StoredProcedure [dbo].[DetSalidasMateriales_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:46 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE Procedure [dbo].[DetSalidasMateriales_TX_SetearComoTransmitido]
AS 
UPDATE DetalleSalidasMateriales
SET DetalleSalidasMateriales.EnviarEmail=0
WHERE DetalleSalidasMateriales.EnviarEmail<>0





GO

/****** Object:  StoredProcedure [dbo].[DetSalidasMateriales_TX_Todos]    Script Date: 03/15/2011 11:48:46 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE Procedure [dbo].[DetSalidasMateriales_TX_Todos]

@IdSalidaMateriales int

AS 

SELECT 
 DetSal.*,
 Articulos.Codigo as [Codigo],
 Articulos.Descripcion as [Articulo],
 IsNull(Unidades.Abreviatura,Unidades.Descripcion) as [Unidad],
 Obras.NumeroObra as [Obra],
 Requerimientos.NumeroRequerimiento as [RM],
 Requerimientos.TipoRequerimiento,
 DetReq.NumeroItem as [ItemRM],
 Case When DetSal.IdEquipoDestino is not null or DetReq.IdEquipoDestino is not null
	Then IsNull((Select Top 1 A.NumeroInventario From Articulos A 
			Where IsNull(DetSal.IdEquipoDestino,DetReq.IdEquipoDestino)=A.IdArticulo),'')
	Else ''
 End as [EquipoDestino],
 (Select Top 1 Prov.RazonSocial
	From DetallePedidos DetPed
	Left Outer Join Pedidos On DetPed.IdPedido = Pedidos.IdPedido
	Left Outer Join Proveedores Prov On Pedidos.IdProveedor = Prov.IdProveedor
	Where DetPed.IdDetalleRequerimiento = DetalleValesSalida.IdDetalleRequerimiento)
	as [Proveedor],
 (Select Top 1 Case When Pedidos.SubNumero is not null 
			Then convert(varchar,Pedidos.NumeroPedido)+' / '+convert(varchar,Pedidos.SubNumero)
			Else convert(varchar,Pedidos.NumeroPedido)
		End
	From DetallePedidos DetPed
	Left Outer Join Pedidos On DetPed.IdPedido = Pedidos.IdPedido
	Where DetPed.IdDetalleRequerimiento = DetalleValesSalida.IdDetalleRequerimiento)
	as [Pedido]
FROM DetalleSalidasMateriales DetSal 
LEFT OUTER JOIN Articulos ON DetSal.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Unidades ON DetSal.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN Obras ON DetSal.IdObra = Obras.IdObra
LEFT OUTER JOIN DetalleValesSalida ON DetalleValesSalida.IdDetalleValeSalida=DetSal.IdDetalleValeSalida
LEFT OUTER JOIN DetalleRequerimientos DetReq ON DetReq.IdDetalleRequerimiento = DetalleValesSalida.IdDetalleRequerimiento
LEFT OUTER JOIN Requerimientos ON Requerimientos.IdRequerimiento = DetReq.IdRequerimiento
WHERE IdSalidaMateriales=@IdSalidaMateriales



GO

/****** Object:  StoredProcedure [dbo].[DetSalidasMateriales_TXPrimero]    Script Date: 03/15/2011 11:48:46 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO







CREATE PROCEDURE [dbo].[DetSalidasMateriales_TXPrimero]

AS 

declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='00001111111111133'
set @vector_T='00001211053322400'

SELECT TOP 1
 DetSal.IdDetalleSalidaMateriales,
 DetSal.IdSalidaMateriales,
 DetSal.IdArticulo,
 DetSal.IdUnidad,
 ValesSalida.NumeroValeSalida as [Vale],
 Articulos.Codigo as [Codigo],
 Articulos.Descripcion as Articulo,
 DetSal.Partida,
 DetSal.Cantidad as [Cant.],
 (Select Sum(Stock.CantidadUnidades) 
  From Stock Where Stock.IdArticulo=DetSal.IdArticulo)  as [Stock tot.actual],
 DetSal.Cantidad1 as [Med.1],
 DetSal.Cantidad2 as [Med.2],
 Unidades.Descripcion as [En :],
 Depositos.Descripcion+' - E:'+Ubicaciones.Estanteria+
	' M:'+Ubicaciones.Modulo+' G:'+Ubicaciones.Gabeta as [Ubicacion],
 Obras.NumeroObra as [Obra],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleSalidasMateriales DetSal
LEFT OUTER JOIN Articulos ON DetSal.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Unidades ON DetSal.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN DetalleValesSalida ON DetSal.IdDetalleValeSalida = DetalleValesSalida.IdDetalleValeSalida
LEFT OUTER JOIN ValesSalida ON DetalleValesSalida.IdValeSalida = ValesSalida.IdValeSalida
LEFT OUTER JOIN Ubicaciones ON DetSal.IdUbicacion = Ubicaciones.IdUbicacion
LEFT OUTER JOIN Depositos ON Ubicaciones.IdDeposito = Depositos.IdDeposito
LEFT OUTER JOIN Obras ON DetSal.IdObra = Obras.IdObra






GO

/****** Object:  StoredProcedure [dbo].[DetSalidasMateriales_TXSal]    Script Date: 03/15/2011 11:48:46 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO







CREATE PROCEDURE [dbo].[DetSalidasMateriales_TXSal]

@IdSalidaMateriales int

AS 

declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='00001111111111133'
set @vector_T='00001211053322400'

SELECT
 DetSal.IdDetalleSalidaMateriales,
 DetSal.IdSalidaMateriales,
 DetSal.IdArticulo,
 DetSal.IdUnidad,
 ValesSalida.NumeroValeSalida as [Vale],
 Articulos.Codigo as [Codigo],
 Articulos.Descripcion as [Articulo],
 DetSal.Partida,
 DetSal.Cantidad as [Cant.],
 (Select Sum(Stock.CantidadUnidades) 
  From Stock Where Stock.IdArticulo=DetSal.IdArticulo)  as [Stock tot.actual],
 DetSal.Cantidad1 as [Med.1],
 DetSal.Cantidad2 as [Med.2],
 Unidades.Descripcion as [En :],
 Depositos.Descripcion+' - E:'+Ubicaciones.Estanteria+
	' M:'+Ubicaciones.Modulo+' G:'+Ubicaciones.Gabeta as [Ubicacion],
 Obras.NumeroObra as [Obra],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleSalidasMateriales DetSal
LEFT OUTER JOIN Articulos ON DetSal.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Unidades ON DetSal.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN DetalleValesSalida ON DetSal.IdDetalleValeSalida = DetalleValesSalida.IdDetalleValeSalida
LEFT OUTER JOIN ValesSalida ON DetalleValesSalida.IdValeSalida = ValesSalida.IdValeSalida
LEFT OUTER JOIN Ubicaciones ON DetSal.IdUbicacion = Ubicaciones.IdUbicacion
LEFT OUTER JOIN Depositos ON Ubicaciones.IdDeposito = Depositos.IdDeposito
LEFT OUTER JOIN Obras ON DetSal.IdObra = Obras.IdObra
WHERE (DetSal.IdSalidaMateriales = @IdSalidaMateriales)






GO

/****** Object:  StoredProcedure [dbo].[DetValesSalida_A]    Script Date: 03/15/2011 11:48:46 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE Procedure [dbo].[DetValesSalida_A]
@IdDetalleValeSalida int  output,
@IdValeSalida int,
@IdArticulo int,
@IdStock int,
@Partida int,
@Cantidad numeric(12,2),
@CantidadAdicional numeric(12,2),
@IdUnidad int,
@Cantidad1 numeric(12,2),
@Cantidad2 numeric(12,2),
@IdDetalleReserva int,
@IdDetalleLMateriales int,
@Estado varchar(2),
@IdCentroCosto int,
@Cumplido varchar(2),
@EnviarEmail tinyint,
@IdDetalleValeSalidaOriginal int,
@IdValeSalidaOriginal int, 
@IdOrigenTransmision int, 
@IdDetalleRequerimiento int
AS 
INSERT INTO [DetalleValesSalida]
(
 IdValeSalida,
 IdArticulo,
 IdStock,
 Partida,
 Cantidad,
 CantidadAdicional,
 IdUnidad,
 Cantidad1,
 Cantidad2,
 IdDetalleReserva,
 IdDetalleLMateriales,
 Estado,
 IdCentroCosto,
 Cumplido,
 EnviarEmail,
 IdDetalleValeSalidaOriginal,
 IdValeSalidaOriginal,
 IdOrigenTransmision,
 IdDetalleRequerimiento
)
VALUES
(
 @IdValeSalida,
 @IdArticulo,
 @IdStock,
 @Partida,
 @Cantidad,
 @CantidadAdicional,
 @IdUnidad,
 @Cantidad1,
 @Cantidad2,
 @IdDetalleReserva,
 @IdDetalleLMateriales,
 @Estado,
 @IdCentroCosto,
 @Cumplido,
 @EnviarEmail,
 @IdDetalleValeSalidaOriginal,
 @IdValeSalidaOriginal,
 @IdOrigenTransmision,
 @IdDetalleRequerimiento
)
SELECT @IdDetalleValeSalida=@@identity
RETURN(@IdDetalleValeSalida)



GO

/****** Object:  StoredProcedure [dbo].[DetValesSalida_E]    Script Date: 03/15/2011 11:48:47 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[DetValesSalida_E]
@IdDetalleValeSalida int  AS 
Delete [DetalleValesSalida]
where (IdDetalleValeSalida=@IdDetalleValeSalida)
































GO

/****** Object:  StoredProcedure [dbo].[DetValesSalida_M]    Script Date: 03/15/2011 11:48:47 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE Procedure [dbo].[DetValesSalida_M]
@IdDetalleValeSalida int,
@IdValeSalida int,
@IdArticulo int,
@IdStock int,
@Partida int,
@Cantidad numeric(12,2),
@CantidadAdicional numeric(12,2),
@IdUnidad int,
@Cantidad1 numeric(12,2),
@Cantidad2 numeric(12,2),
@IdDetalleReserva int,
@IdDetalleLMateriales int,
@Estado varchar(2),
@IdCentroCosto int,
@Cumplido varchar(2),
@EnviarEmail tinyint,
@IdDetalleValeSalidaOriginal int,
@IdValeSalidaOriginal int, 
@IdOrigenTransmision int, 
@IdDetalleRequerimiento int
AS 
UPDATE [DetalleValesSalida]
SET 
 IdValeSalida=@IdValeSalida,
 IdStock=@IdStock,
 Partida=@Partida,
 IdArticulo=@IdArticulo,
 Cantidad=@Cantidad,
 CantidadAdicional=@CantidadAdicional,
 IdUnidad=@IdUnidad,
 Cantidad1=@Cantidad1,
 Cantidad2=@Cantidad2,
 IdDetalleReserva=@IdDetalleReserva,
 IdDetalleLMateriales=@IdDetalleLMateriales,
 Estado=@Estado,
 IdCentroCosto=@IdCentroCosto,
 Cumplido=@Cumplido,
 EnviarEmail=@EnviarEmail,
 IdDetalleValeSalidaOriginal=@IdDetalleValeSalidaOriginal,
 IdValeSalidaOriginal=@IdValeSalidaOriginal,
 IdOrigenTransmision=@IdOrigenTransmision,
 IdDetalleRequerimiento=@IdDetalleRequerimiento
WHERE (IdDetalleValeSalida=@IdDetalleValeSalida)
RETURN(@IdDetalleValeSalida)



GO

/****** Object:  StoredProcedure [dbo].[DetValesSalida_T]    Script Date: 03/15/2011 11:48:47 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[DetValesSalida_T]
@IdDetalleValeSalida int
AS 
SELECT *
FROM [DetalleValesSalida]
where (IdDetalleValeSalida=@IdDetalleValeSalida)
































GO

/****** Object:  StoredProcedure [dbo].[DetValesSalida_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:47 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE Procedure [dbo].[DetValesSalida_TX_ParaTransmitir]
AS 
SELECT Det.*
FROM DetalleValesSalida Det
WHERE Det.EnviarEmail=1



GO

/****** Object:  StoredProcedure [dbo].[DetValesSalida_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:47 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE Procedure [dbo].[DetValesSalida_TX_SetearComoTransmitido]
AS 
UPDATE DetalleValesSalida
SET DetalleValesSalida.EnviarEmail=0
WHERE DetalleValesSalida.EnviarEmail<>0



GO

/****** Object:  StoredProcedure [dbo].[DetValesSalida_TX_TodoMasPendientePorIdDetalle]    Script Date: 03/15/2011 11:48:47 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE PROCEDURE [dbo].[DetValesSalida_TX_TodoMasPendientePorIdDetalle]

@IdDetalleValeSalida int

AS

SET NOCOUNT ON

CREATE TABLE #Auxiliar1
			(
			 IdDetalleValeSalida INTEGER,
			 Entregado NUMERIC(18, 2)
			)
INSERT INTO #Auxiliar1 
 SELECT 
  DetSal.IdDetalleValeSalida,
  SUM(DetSal.Cantidad) 
 FROM DetalleSalidasMateriales DetSal
 LEFT OUTER JOIN SalidasMateriales ON DetSal.IdSalidaMateriales=SalidasMateriales.IdSalidaMateriales
 WHERE IsNull(SalidasMateriales.Anulada,'NO')<>'SI' and DetSal.IdDetalleValeSalida is not null
 GROUP BY DetSal.IdDetalleValeSalida

SET NOCOUNT OFF

SELECT
 DetVal.*,
 #Auxiliar1.Entregado as [Entregado],
 CASE WHEN #Auxiliar1.Entregado is not null 
	THEN DetVal.Cantidad-#Auxiliar1.Entregado
	ELSE DetVal.Cantidad
 END as [Pendiente],
 Articulos.IdUbicacionStandar,
 DetReq.IdEquipoDestino,
 (Select Top 1 DetRec.CostoUnitario 
  From DetalleRecepciones DetRec
  Left Outer Join Recepciones On DetRec.IdRecepcion = Recepciones.IdRecepcion
  Where DetRec.IdDetalleRequerimiento = DetReq.IdDetalleRequerimiento and 
	IsNull(Recepciones.Anulada,'NO')<>'SI' 
  Order By Recepciones.FechaRecepcion Desc) as [CostoRecepcion],
 DetReq.Observaciones as [ObservacionesRequerimiento]
FROM DetalleValesSalida DetVal
LEFT OUTER JOIN #Auxiliar1 ON DetVal.IdDetalleValeSalida= #Auxiliar1.IdDetalleValeSalida
LEFT OUTER JOIN Articulos ON DetVal.IdArticulo= Articulos.IdArticulo
LEFT OUTER JOIN DetalleRequerimientos DetReq ON DetReq.IdDetalleRequerimiento = DetVal.IdDetalleRequerimiento
LEFT OUTER JOIN Requerimientos ON Requerimientos.IdRequerimiento = DetReq.IdRequerimiento
WHERE DetVal.IdDetalleValeSalida=@IdDetalleValeSalida

DROP TABLE #Auxiliar1



GO

/****** Object:  StoredProcedure [dbo].[DetValesSalida_TX_TodosLosItemsConFormato]    Script Date: 03/15/2011 11:48:47 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO







CREATE PROCEDURE [dbo].[DetValesSalida_TX_TodosLosItemsConFormato]

@IdValeSalida int

AS

SELECT
 DetVal.IdDetalleValeSalida,
 DetVal.IdValeSalida,
 DetVal.IdDetalleLMateriales,
 DetVal.IdArticulo,
 LMateriales.NumeroLMateriales,
 DetalleLMateriales.NumeroItem as [NumeroItemLMateriales],
 Reservas.NumeroReserva,
 Articulos.Codigo,
 Articulos.Descripcion as [Articulo],
 DetVal.Cantidad,
 DetVal.Cantidad1,
 DetVal.Cantidad2,
 DetVal.IdUnidad,
 Substring(Unidades.Descripcion,1,20) as [En :],
 DetVal.Cumplido,
 DetVal.Estado
FROM DetalleValesSalida DetVal
LEFT OUTER JOIN Articulos ON DetVal.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Unidades ON DetVal.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN DetalleLMateriales ON DetVal.IdDetalleLMateriales = DetalleLMateriales.IdDetalleLMateriales
LEFT OUTER JOIN LMateriales ON DetalleLMateriales.IdLMateriales = LMateriales.IdLMateriales 
LEFT OUTER JOIN DetalleReservas ON DetVal.IdDetalleReserva = DetalleReservas.IdDetalleReserva
LEFT OUTER JOIN Reservas ON DetalleReservas.IdReserva= Reservas.IdReserva
WHERE (DetVal.IdValeSalida = @IdValeSalida)






GO

/****** Object:  StoredProcedure [dbo].[DetValesSalida_TX_UnItem]    Script Date: 03/15/2011 11:48:47 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO







CREATE Procedure [dbo].[DetValesSalida_TX_UnItem]
@IdDetalleValeSalida int
AS 
SELECT *
FROM [DetalleValesSalida]
WHERE (IdDetalleValeSalida=@IdDetalleValeSalida)







GO

/****** Object:  StoredProcedure [dbo].[DetValesSalida_TX_UnItemConFormato]    Script Date: 03/15/2011 11:48:47 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO







CREATE PROCEDURE [dbo].[DetValesSalida_TX_UnItemConFormato]

@IdDetalleValeSalida int

AS

SELECT
 DetVal.IdDetalleValeSalida,
 DetVal.IdValeSalida,
 DetVal.IdArticulo,
 LMateriales.NumeroLMateriales,
 DetalleLMateriales.NumeroItem as [NumeroItemLMateriales],
 Reservas.NumeroReserva,
 Articulos.Codigo,
 Articulos.Descripcion as [Articulo],
 DetVal.Cantidad,
 DetVal.Cantidad1,
 DetVal.Cantidad2,
 Substring(Unidades.Descripcion,1,20) as [En :],
 DetVal.Cumplido,
 DetVal.Estado
FROM DetalleValesSalida DetVal
LEFT OUTER JOIN Articulos ON DetVal.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Unidades ON DetVal.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN DetalleLMateriales ON DetVal.IdDetalleLMateriales = DetalleLMateriales.IdDetalleLMateriales
LEFT OUTER JOIN LMateriales ON DetalleLMateriales.IdLMateriales = LMateriales.IdLMateriales 
LEFT OUTER JOIN DetalleReservas ON DetVal.IdDetalleReserva = DetalleReservas.IdDetalleReserva
LEFT OUTER JOIN Reservas ON DetalleReservas.IdReserva= Reservas.IdReserva
WHERE (DetVal.IdDetalleValeSalida = @IdDetalleValeSalida)






GO

/****** Object:  StoredProcedure [dbo].[DetValesSalida_TXPrimero]    Script Date: 03/15/2011 11:48:47 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE PROCEDURE [dbo].[DetValesSalida_TXPrimero]

AS

Declare @vector_X varchar(50),@vector_T varchar(50)
Set @vector_X='000111111111111111133'
Set @vector_T='00019013E033121333300'

SELECT TOP 1
 DetVal.IdDetalleValeSalida,
 DetVal.IdValeSalida,
 DetVal.IdArticulo,
 LMateriales.NumeroLMateriales as [L.M.],
 DetVal.IdDetalleValeSalida as [IdAux],
 DetalleLMateriales.NumeroItem as [Item],
 Reservas.NumeroReserva as [R.S.],
 Articulos.Codigo as [Codigo],
 Articulos.Descripcion as [Articulo],
 DetVal.Cantidad as [Cant.],
 DetVal.Cantidad1 as [Med.1],
 DetVal.Cantidad2 as [Med.2],
 Substring(Unidades.Descripcion,1,20) as [En :],
 DetVal.Cumplido as [Cumplido],
 DetVal.Estado as [Estado],
 Requerimientos.NumeroRequerimiento as [Nro.Req.],
 DetReq.NumeroItem as [Item RM],
 DetReq.CodigoDistribucion as [Cod.Dist.],
 Requerimientos.TipoRequerimiento as [Tipo RM],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleValesSalida DetVal
LEFT OUTER JOIN Articulos ON DetVal.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Unidades ON DetVal.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN DetalleLMateriales ON DetVal.IdDetalleLMateriales = DetalleLMateriales.IdDetalleLMateriales
LEFT OUTER JOIN LMateriales ON DetalleLMateriales.IdLMateriales = LMateriales.IdLMateriales 
LEFT OUTER JOIN DetalleReservas ON DetVal.IdDetalleReserva = DetalleReservas.IdDetalleReserva
LEFT OUTER JOIN Reservas ON DetalleReservas.IdReserva= Reservas.IdReserva
LEFT OUTER JOIN DetalleRequerimientos DetReq ON DetReq.IdDetalleRequerimiento = DetVal.IdDetalleRequerimiento
LEFT OUTER JOIN Requerimientos ON Requerimientos.IdRequerimiento = DetReq.IdRequerimiento



GO

/****** Object:  StoredProcedure [dbo].[DetValesSalida_TXRes]    Script Date: 03/15/2011 11:48:47 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE PROCEDURE [dbo].[DetValesSalida_TXRes]

@IdValeSalida int

AS

declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='000111111111111111133'
set @vector_T='00019013E033121333300'

SELECT
 DetVal.IdDetalleValeSalida,
 DetVal.IdValeSalida,
 DetVal.IdArticulo,
 LMateriales.NumeroLMateriales as [L.M.],
 DetVal.IdDetalleValeSalida as [IdAux],
 DetalleLMateriales.NumeroItem as [Item],
 Reservas.NumeroReserva as [R.S.],
 Articulos.Codigo as [Codigo],
 Articulos.Descripcion as [Articulo],
 DetVal.Cantidad as [Cant.],
 DetVal.Cantidad1 as [Med.1],
 DetVal.Cantidad2 as [Med.2],
 Substring(Unidades.Descripcion,1,20) as [En :],
 DetVal.Cumplido as [Cumplido],
 DetVal.Estado as [Estado],
 Requerimientos.NumeroRequerimiento as [Nro.Req.],
 DetReq.NumeroItem as [Item RM],
 DetReq.CodigoDistribucion as [Cod.Dist.],
 Requerimientos.TipoRequerimiento as [Tipo RM],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleValesSalida DetVal
LEFT OUTER JOIN Articulos ON DetVal.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Unidades ON DetVal.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN DetalleLMateriales ON DetVal.IdDetalleLMateriales = DetalleLMateriales.IdDetalleLMateriales
LEFT OUTER JOIN LMateriales ON DetalleLMateriales.IdLMateriales = LMateriales.IdLMateriales 
LEFT OUTER JOIN DetalleReservas ON DetVal.IdDetalleReserva = DetalleReservas.IdDetalleReserva
LEFT OUTER JOIN Reservas ON DetalleReservas.IdReserva= Reservas.IdReserva
LEFT OUTER JOIN DetalleRequerimientos DetReq ON DetReq.IdDetalleRequerimiento = DetVal.IdDetalleRequerimiento
LEFT OUTER JOIN Requerimientos ON Requerimientos.IdRequerimiento = DetReq.IdRequerimiento
WHERE (DetVal.IdValeSalida = @IdValeSalida)



GO

/****** Object:  StoredProcedure [dbo].[dropFK]    Script Date: 03/15/2011 11:48:47 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




Create Proc [dbo].[dropFK](@TableName sysname,@TablaReferenciada sysname,@CampoHijo sysname)
as
Begin

Declare @FK sysname
Declare @SQL nvarchar(4000)
Declare crsFK cursor for

select tu.Constraint_Name
--,SO.id,FK.*,REFSO.name 
from information_schema.constraint_table_usage TU
LEFT JOIN SYSOBJECTS SO ON TU.Constraint_NAME = SO.NAME
left join sysforeignkeys FK ON SO.id = constid   
LEFT JOIN SYSOBJECTS REFSO ON FK.rkeyid = REFSO.id
LEFT JOIN syscolumns col on col.id=FK.fkeyid and col.colid=fk.fkey

where so.xtype = 'F'
	and Table_Name = @TableName
	and refso.name = @TablaReferenciada
	and col.name=@Campohijo
order by TABLE_NAME


open crsFK
fetch next from crsFK into @FK
While (@@Fetch_Status = 0)
Begin
    Set @SQL = 'Alter table ' + @TableName + ' Drop Constraint ' + @FK
    Print 'Dropping ' + @FK
    exec sp_executesql  @SQL
    fetch next from crsFK into @FK
End
Close crsFK
Deallocate crsFK
End



GO

/****** Object:  StoredProcedure [dbo].[Empleados_A]    Script Date: 03/15/2011 11:48:47 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO





CREATE Procedure [dbo].[Empleados_A]
@IdEmpleado int  output,
@Legajo int,
@Nombre varchar(50),
@UsuarioNT varchar(50),
@IdSector int,
@IdCargo int,
@Email varchar(50),
@Interno varchar(20),
@Administrador varchar(2),
@Iniciales varchar(6),
@Password varchar(50),
@SisMan varchar(2),
@HorasJornada numeric(12,2),
@IdSector1 int,
@IdCargo1 int,
@IdSector2 int,
@IdCargo2 int,
@IdSector3 int,
@IdCargo3 int,
@IdSector4 int,
@IdCargo4 int,
@Dominio varchar(50),
@SisMat varchar(2),
@FechaNacimiento datetime,
@TipoUsuario int,
@GrupoDeCarga int,
@CuentaBancaria varchar(20)
AS 
Insert into [Empleados]
(
 Legajo,
 Nombre,
 UsuarioNT,
 IdSector,
 IdCargo,
 Email,
 Interno,
 Administrador,
 Iniciales,
 Password,
 SisMan,
 HorasJornada,
 IdSector1,
 IdCargo1,
 IdSector2,
 IdCargo2,
 IdSector3,
 IdCargo3,
 IdSector4,
 IdCargo4,
 Dominio,
 SisMat,
 FechaNacimiento,
 TipoUsuario,
 GrupoDeCarga,
 CuentaBancaria
)
Values
(
 @Legajo,
 @Nombre,
 @UsuarioNT,
 @IdSector,
 @IdCargo,
 @Email,
 @Interno,
 @Administrador,
 @Iniciales,
 @Password,
 @SisMan,
 @HorasJornada,
 @IdSector1,
 @IdCargo1,
 @IdSector2,
 @IdCargo2,
 @IdSector3,
 @IdCargo3,
 @IdSector4,
 @IdCargo4,
 @Dominio,
 @SisMat,
 @FechaNacimiento,
 @TipoUsuario,
 @GrupoDeCarga,
 @CuentaBancaria
)
Select @IdEmpleado=@@identity
Return(@IdEmpleado)




GO

/****** Object:  StoredProcedure [dbo].[Empleados_E]    Script Date: 03/15/2011 11:48:47 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

































CREATE Procedure [dbo].[Empleados_E]
@IdEmpleado int  AS 
Delete Empleados
where (IdEmpleado=@IdEmpleado)

































GO

/****** Object:  StoredProcedure [dbo].[Empleados_M]    Script Date: 03/15/2011 11:48:47 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO





CREATE  Procedure [dbo].[Empleados_M]
@IdEmpleado int ,
@Legajo int,
@Nombre varchar(50),
@UsuarioNT varchar(50),
@IdSector int,
@IdCargo int,
@Email varchar(50),
@Interno varchar(20),
@Administrador varchar(2),
@Iniciales varchar(6),
@Password varchar(50),
@SisMan varchar(2),
@HorasJornada numeric(12,2),
@IdSector1 int,
@IdCargo1 int,
@IdSector2 int,
@IdCargo2 int,
@IdSector3 int,
@IdCargo3 int,
@IdSector4 int,
@IdCargo4 int,
@Dominio varchar(50),
@SisMat varchar(2),
@FechaNacimiento datetime,
@TipoUsuario int,
@GrupoDeCarga int,
@CuentaBancaria varchar(20)
AS 
IF Exists(Select Emp.IdEmpleado From Empleados Emp Where Emp.IdEmpleado=@IdEmpleado)
   BEGIN
	UPDATE Empleados
	SET
	 Legajo=@Legajo,
	 Nombre=@Nombre,
	 UsuarioNT=@UsuarioNT,
	 IdSector=@IdSector,
	 IdCargo=@IdCargo,
	 Email=@Email,
	 Interno=@Interno,
	 Administrador=@Administrador,
	 Iniciales=@Iniciales,
	 Password=@Password,
	 SisMan=@SisMan,
	 HorasJornada=@HorasJornada,
	 IdSector1=@IdSector1,
	 IdCargo1=@IdCargo1,
	 IdSector2=@IdSector2,
	 IdCargo2=@IdCargo2,
	 IdSector3=@IdSector3,
	 IdCargo3=@IdCargo3,
	 IdSector4=@IdSector4,
	 IdCargo4=@IdCargo4,
	 Dominio=@Dominio,
	 SisMat=@SisMat,
	 FechaNacimiento=@FechaNacimiento,
	 TipoUsuario=@TipoUsuario,
	 GrupoDeCarga=@GrupoDeCarga,
	 CuentaBancaria=@CuentaBancaria
	WHERE (IdEmpleado=@IdEmpleado)	
   END
ELSE
   BEGIN
	INSERT INTO [Empleados]
	(IdEmpleado, Legajo, Nombre, UsuarioNT, IdSector, IdCargo, 
	 Email, Interno, Administrador, Iniciales, Password, SisMan,
	 HorasJornada, IdSector1, IdCargo1, IdSector2, IdCargo2,
	 IdSector3, IdCargo3, IdSector4, IdCargo4, Dominio, SisMat,
	 FechaNacimiento, TipoUsuario, GrupoDeCarga, CuentaBancaria)
	Values
	(@IdEmpleado, @Legajo, @Nombre, @UsuarioNT, @IdSector, @IdCargo, 
	 @Email, @Interno, @Administrador, @Iniciales, @Password, @SisMan,
	 @HorasJornada, @IdSector1, @IdCargo1, @IdSector2, @IdCargo2,
	 @IdSector3, @IdCargo3, @IdSector4, @IdCargo4, @Dominio, @SisMat,
	 @FechaNacimiento, @TipoUsuario, @GrupoDeCarga, @CuentaBancaria)
   END
RETURN(@IdEmpleado)




GO

/****** Object:  StoredProcedure [dbo].[Empleados_T]    Script Date: 03/15/2011 11:48:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO

































CREATE Procedure [dbo].[Empleados_T]
@IdEmpleado int
AS 
SELECT *
FROM Empleados
where (IdEmpleado=@IdEmpleado)

































GO

/****** Object:  StoredProcedure [dbo].[Empleados_TL]    Script Date: 03/15/2011 11:48:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO

































CREATE Procedure [dbo].[Empleados_TL]
AS 
Select IdEmpleado,Nombre as Titulo
FROM Empleados
Where SisMat is null or SisMat='SI'
Order by Nombre

































GO

/****** Object:  StoredProcedure [dbo].[Empleados_TT]    Script Date: 03/15/2011 11:48:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO






























CREATE Procedure [dbo].[Empleados_TT]
AS 
Select 
IdEmpleado,
Nombre as [Apellido y nombre],
Legajo,
Interno as [Numero de interno],
Sectores.Descripcion as [Sector],
UsuarioNT as [Nombre de usuario en NT],
Dominio as [Dominio NT],
Email,
Cargos.Descripcion as [Cargo],
Administrador,
Iniciales
FROM Empleados
LEFT OUTER JOIN Sectores ON Empleados.IdSector=Sectores.IdSector
LEFT OUTER JOIN Cargos ON Empleados.IdCargo=Cargos.IdCargo
order by Nombre,Legajo





























GO

/****** Object:  StoredProcedure [dbo].[Empleados_TX_Administradores]    Script Date: 03/15/2011 11:48:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO

































CREATE Procedure [dbo].[Empleados_TX_Administradores]
AS 
SELECT *
FROM Empleados
where Administrador='SI'
ORDER BY Nombre

































GO

/****** Object:  StoredProcedure [dbo].[Empleados_TX_ConEventosPendientes]    Script Date: 03/15/2011 11:48:48 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO


















CREATE PROCEDURE [dbo].[Empleados_TX_ConEventosPendientes]
@IdEmpleado int
as
SELECT NU.IdNovedadUsuarios
FROM NovedadesUsuarios NU
WHERE NU.IdEmpleado = @IdEmpleado and 
	 (NU.Confirmado is null or NU.Confirmado='NO')

















GO

/****** Object:  StoredProcedure [dbo].[Empleados_TX_ParaMensajes]    Script Date: 03/15/2011 11:48:48 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO

































CREATE Procedure [dbo].[Empleados_TX_ParaMensajes]
AS 
Select 
IdEmpleado,
Nombre as [Apellido y nombre],
Sectores.Descripcion as [Sector],
Cargos.Descripcion as [Cargo],
Email
FROM Empleados
LEFT OUTER JOIN Sectores ON Empleados.IdSector=Sectores.IdSector
LEFT OUTER JOIN Cargos ON Empleados.IdCargo=Cargos.IdCargo
ORDER by Nombre

































GO

/****** Object:  StoredProcedure [dbo].[Empleados_TX_PorEmpleado]    Script Date: 03/15/2011 11:48:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

































CREATE Procedure [dbo].[Empleados_TX_PorEmpleado]
@IdEmpleado int 
AS 
Select *
FROM EmpleadosAccesos
where (IdEmpleado=@IdEmpleado)

































GO

/****** Object:  StoredProcedure [dbo].[Empleados_TX_PorGruposDelSector]    Script Date: 03/15/2011 11:48:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

































CREATE Procedure [dbo].[Empleados_TX_PorGruposDelSector]
@IdSector int
AS 
Select Distinct
Empleados.GrupoDeCarga as [Grupo]
FROM Empleados
WHERE Empleados.IdSector=@IdSector
ORDER BY Empleados.GrupoDeCarga

































GO

/****** Object:  StoredProcedure [dbo].[Empleados_TX_PorId]    Script Date: 03/15/2011 11:48:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO

































CREATE Procedure [dbo].[Empleados_TX_PorId]
@IdEmpleado int 
AS 
Select *
FROM Empleados
where (IdEmpleado=@IdEmpleado)

































GO

/****** Object:  StoredProcedure [dbo].[Empleados_TX_PorIdSector]    Script Date: 03/15/2011 11:48:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO

































CREATE Procedure [dbo].[Empleados_TX_PorIdSector]
@IdSector int
AS 
Select 
Empleados.Nombre as [Empleado],
Sectores.Descripcion as [Sector],
ea.*
FROM EmpleadosAccesos ea
LEFT OUTER JOIN Empleados ON ea.IdEmpleado=Empleados.IdEmpleado
LEFT OUTER JOIN Sectores ON Empleados.IdSector=Sectores.IdSector
WHERE Empleados.IdSector=@IdSector
ORDER BY ea.IdEmpleado

































GO

/****** Object:  StoredProcedure [dbo].[Empleados_TX_PorLegajo]    Script Date: 03/15/2011 11:48:48 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO























CREATE Procedure [dbo].[Empleados_TX_PorLegajo]
@Legajo int 
AS 
Select *
FROM Empleados
where (Legajo=@Legajo)























GO

/****** Object:  StoredProcedure [dbo].[Empleados_TX_PorNombre]    Script Date: 03/15/2011 11:48:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO

































CREATE Procedure [dbo].[Empleados_TX_PorNombre]
@Nombre varchar(50)
AS 
SELECT *
FROM Empleados
where Nombre=@Nombre

































GO

/****** Object:  StoredProcedure [dbo].[Empleados_TX_PorSector]    Script Date: 03/15/2011 11:48:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO























CREATE Procedure [dbo].[Empleados_TX_PorSector]
@Sector varchar(50)
AS 
SELECT IdEmpleado,Nombre as Titulo
FROM Empleados
WHERE 	(Empleados.IdSector is not null and (Select Top 1 S.Descripcion From Sectores S 
						Where Empleados.IdSector=S.IdSector)=@Sector) or 
	(Empleados.IdSector1 is not null and (Select Top 1 S.Descripcion From Sectores S 
						Where Empleados.IdSector1=S.IdSector)=@Sector) or 
	(Empleados.IdSector2 is not null and (Select Top 1 S.Descripcion From Sectores S 
						Where Empleados.IdSector2=S.IdSector)=@Sector) or 
	(Empleados.IdSector3 is not null and (Select Top 1 S.Descripcion From Sectores S 
						Where Empleados.IdSector3=S.IdSector)=@Sector) or 
	(Empleados.IdSector4 is not null and (Select Top 1 S.Descripcion From Sectores S 
						Where Empleados.IdSector4=S.IdSector)=@Sector)
ORDER BY Nombre























GO

/****** Object:  StoredProcedure [dbo].[Empleados_TX_TodosLosAccesos]    Script Date: 03/15/2011 11:48:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

































CREATE Procedure [dbo].[Empleados_TX_TodosLosAccesos]
AS 
Select 
Empleados.Nombre as [Empleado],
Sectores.Descripcion as [Sector],
ea.*
FROM EmpleadosAccesos ea
LEFT OUTER JOIN Empleados ON ea.IdEmpleado=Empleados.IdEmpleado
LEFT OUTER JOIN Sectores ON Empleados.IdSector=Sectores.IdSector
ORDER BY ea.IdEmpleado

































GO

/****** Object:  StoredProcedure [dbo].[Empleados_TX_TT]    Script Date: 03/15/2011 11:48:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO






























CREATE Procedure [dbo].[Empleados_TX_TT]
@IdEmpleado int
AS 
Select 
IdEmpleado,
Nombre as [Apellido y nombre],
Legajo,
Interno as [Numero de interno],
Sectores.Descripcion as [Sector],
UsuarioNT as [Nombre de usuario en NT],
Dominio as [Dominio NT],
Email,
Cargos.Descripcion as [Cargo],
Administrador,
Iniciales
FROM Empleados
LEFT OUTER JOIN Sectores ON Empleados.IdSector=Sectores.IdSector
LEFT OUTER JOIN Cargos ON Empleados.IdCargo=Cargos.IdCargo
where (IdEmpleado=@IdEmpleado)





























GO

/****** Object:  StoredProcedure [dbo].[Empleados_TX_UnUsuario]    Script Date: 03/15/2011 11:48:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

































CREATE Procedure [dbo].[Empleados_TX_UnUsuario]
@IdEmpleado int
AS 
Select 
Empleados.Nombre as [Empleado],
Sectores.Descripcion as [Sector],
ea.*
FROM EmpleadosAccesos ea
LEFT OUTER JOIN Empleados ON ea.IdEmpleado=Empleados.IdEmpleado
LEFT OUTER JOIN Sectores ON Empleados.IdSector=Sectores.IdSector
WHERE ea.IdEmpleado=@IdEmpleado
ORDER BY ea.IdEmpleado

































GO

/****** Object:  StoredProcedure [dbo].[Empleados_TX_UsuarioNT]    Script Date: 03/15/2011 11:48:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

































CREATE Procedure [dbo].[Empleados_TX_UsuarioNT]
@UsuarioNT varchar(50)
AS 
SELECT *
FROM Empleados
where UsuarioNT=@UsuarioNT

































GO

/****** Object:  StoredProcedure [dbo].[EmpleadosAccesos_A]    Script Date: 03/15/2011 11:48:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO







CREATE Procedure [dbo].[EmpleadosAccesos_A]
@IdEmpleadoAcceso int  output,
@IdEmpleado int,
@Nodo varchar(50),
@Acceso bit,
@Nivel int,
@FechaDesdeParaModificacion datetime,
@FechaInicialHabilitacion datetime,
@FechaFinalHabilitacion datetime,
@CantidadAccesos int
As 
Insert into EmpleadosAccesos
(
 IdEmpleado,
 Nodo,
 Acceso,
 Nivel,
 FechaDesdeParaModificacion,
 FechaInicialHabilitacion,
 FechaFinalHabilitacion,
 CantidadAccesos
)
Values
(
 @IdEmpleado,
 @Nodo,
 @Acceso,
 @Nivel,
 @FechaDesdeParaModificacion,
 @FechaInicialHabilitacion,
 @FechaFinalHabilitacion,
 @CantidadAccesos
)
Select @IdEmpleado=@@identity
Return(@IdEmpleado)






GO

/****** Object:  StoredProcedure [dbo].[EmpleadosAccesos_E]    Script Date: 03/15/2011 11:48:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[EmpleadosAccesos_E]
@IdEmpleadoAcceso int  AS 
Delete EmpleadosAccesos
where (IdEmpleadoAcceso=@IdEmpleadoAcceso)































GO

/****** Object:  StoredProcedure [dbo].[EmpleadosAccesos_InhabilitarAccesosPorNodo]    Script Date: 03/15/2011 11:48:48 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO










CREATE Procedure [dbo].[EmpleadosAccesos_InhabilitarAccesosPorNodo]
@Nodo varchar(50) 
As 
Update EmpleadosAccesos
Set Acceso=0
Where (Nodo=@Nodo)









GO

/****** Object:  StoredProcedure [dbo].[EmpleadosAccesos_M]    Script Date: 03/15/2011 11:48:49 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO







CREATE  Procedure [dbo].[EmpleadosAccesos_M]
@IdEmpleadoAcceso int,
@IdEmpleado int,
@Nodo varchar(50),
@Acceso bit,
@Nivel int,
@FechaDesdeParaModificacion datetime,
@FechaInicialHabilitacion datetime,
@FechaFinalHabilitacion datetime,
@CantidadAccesos int
As 
Update EmpleadosAccesos
Set 
 IdEmpleado=@IdEmpleado,
 Nodo=@Nodo,
 Acceso=@Acceso,
 Nivel=@Nivel,
 FechaDesdeParaModificacion=@FechaDesdeParaModificacion,
 FechaInicialHabilitacion=@FechaInicialHabilitacion,
 FechaFinalHabilitacion=@FechaFinalHabilitacion,
 CantidadAccesos=@CantidadAccesos
Where (IdEmpleadoAcceso=@IdEmpleadoAcceso)
Return(@IdEmpleadoAcceso)






GO

/****** Object:  StoredProcedure [dbo].[Empresa_M]    Script Date: 03/15/2011 11:48:49 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE  Procedure [dbo].[Empresa_M]
@IdEmpresa int,
@Nombre varchar(100),
@DetalleNombre varchar(100),
@Direccion varchar(100),
@Localidad varchar(100),
@CodigoPostal varchar(10),
@Provincia varchar(100),
@Telefono1 varchar(100),
@Telefono2 varchar(100),
@Email varchar(50),
@Cuit varchar(13),
@CondicionIva varchar(50),
@DatosAdicionales1 varchar(100),
@DatosAdicionales2 varchar(100),
@DatosAdicionales3 varchar(100)
AS
Update Empresa
SET
Nombre=@Nombre,
DetalleNombre=@DetalleNombre,
Direccion=@Direccion,
Localidad=@Localidad,
CodigoPostal=@CodigoPostal,
Provincia=@Provincia,
Telefono1=@Telefono1,
Telefono2=@Telefono2,
Email=@Email,
Cuit=@Cuit,
CondicionIva=@CondicionIva,
DatosAdicionales1=@DatosAdicionales1,
DatosAdicionales2=@DatosAdicionales2,
DatosAdicionales3=@DatosAdicionales3
where (IdEmpresa=@IdEmpresa)
Return(@IdEmpresa)































GO

/****** Object:  StoredProcedure [dbo].[Empresa_T]    Script Date: 03/15/2011 11:48:49 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[Empresa_T]
@IdEmpresa smallint
AS 
SELECT*
FROM Empresa
where IdEmpresa=@IdEmpresa































GO

/****** Object:  StoredProcedure [dbo].[Empresa_TT]    Script Date: 03/15/2011 11:48:49 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Empresa_TT]
AS 
Select *
FROM Empresa































GO

/****** Object:  StoredProcedure [dbo].[Empresa_TX_Datos]    Script Date: 03/15/2011 11:48:49 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[Empresa_TX_Datos]
AS 
Select top 1 *
FROM Empresa































GO

/****** Object:  StoredProcedure [dbo].[Equipos_E]    Script Date: 03/15/2011 11:48:49 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Equipos_E]
@IdEquipo smallint  AS 
Delete Equipos
where (IdEquipo=@IdEquipo)
































GO

/****** Object:  StoredProcedure [dbo].[Equipos_M]    Script Date: 03/15/2011 11:48:49 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE Procedure [dbo].[Equipos_M]
@IdEquipo smallint ,
@Descripcion varchar(60),
@Tag varchar(40),
@IdObra int,
@HorasEstimadas int,
@FechaTerminacion datetime,
@IdGrupoTareaHH int,
@IdItemDocumentacion1 int,
@ItemDocumentacion1 datetime,
@IdItemDocumentacion2 int,
@ItemDocumentacion2 datetime,
@IdItemDocumentacion3 int,
@ItemDocumentacion3 datetime,
@IdItemDocumentacion4 int,
@ItemDocumentacion4 datetime,
@IdItemDocumentacion5 int,
@ItemDocumentacion5 datetime,
@IdItemDocumentacion6 int,
@ItemDocumentacion6 datetime,
@EnviarEmail tinyint,
@ActivoHH varchar(2)
AS
IF Exists(Select e.IdEquipo From Equipos e Where e.IdEquipo=@IdEquipo)
	BEGIN
		UPDATE Equipos
		SET
		 Descripcion=@Descripcion,
		 Tag=@Tag,
		 IdObra=@IdObra,
		 HorasEstimadas=@HorasEstimadas,
		 FechaTerminacion=@FechaTerminacion,
		 IdGrupoTareaHH=@IdGrupoTareaHH,
		 IdItemDocumentacion1=@IdItemDocumentacion1,
		 ItemDocumentacion1=@ItemDocumentacion1,
		 IdItemDocumentacion2=@IdItemDocumentacion2,
		 ItemDocumentacion2=@ItemDocumentacion2,
		 IdItemDocumentacion3=@IdItemDocumentacion3,
		 ItemDocumentacion3=@ItemDocumentacion3,
		 IdItemDocumentacion4=@IdItemDocumentacion4,
		 ItemDocumentacion4=@ItemDocumentacion4,
		 IdItemDocumentacion5=@IdItemDocumentacion5,
		 ItemDocumentacion5=@ItemDocumentacion5,
		 IdItemDocumentacion6=@IdItemDocumentacion6,
		 ItemDocumentacion6=@ItemDocumentacion6,
		 EnviarEmail=@EnviarEmail,
		 ActivoHH=@ActivoHH
		WHERE IdEquipo=@IdEquipo
	END
ELSE
	BEGIN
		INSERT INTO Equipos
		(
		 IdEquipo,
		 Descripcion,
		 Tag,
		 IdObra,
		 HorasEstimadas,
		 FechaTerminacion,
		 IdGrupoTareaHH,
		 IdItemDocumentacion1,
		 ItemDocumentacion1,
		 IdItemDocumentacion2,
		 ItemDocumentacion2,
		 IdItemDocumentacion3,
		 ItemDocumentacion3,
		 IdItemDocumentacion4,
		 ItemDocumentacion4,
		 IdItemDocumentacion5,
		 ItemDocumentacion5,
		 IdItemDocumentacion6,
		 ItemDocumentacion6,
		 EnviarEmail,
		 ActivoHH
		)
		VALUES
		(
		 @IdEquipo,
		 @Descripcion,
		 @Tag,
		 @IdObra,
		 @HorasEstimadas,
		 @FechaTerminacion,
		 @IdGrupoTareaHH,
		 @IdItemDocumentacion1,
		 @ItemDocumentacion1,
		 @IdItemDocumentacion2,
		 @ItemDocumentacion2,
		 @IdItemDocumentacion3,
		 @ItemDocumentacion3,
		 @IdItemDocumentacion4,
		 @ItemDocumentacion4,
		 @IdItemDocumentacion5,
		 @ItemDocumentacion5,
		 @IdItemDocumentacion6,
		 @ItemDocumentacion6,
		 @EnviarEmail,
		 @ActivoHH
		)
	END
RETURN(@IdEquipo)





GO

/****** Object:  StoredProcedure [dbo].[Equipos_T]    Script Date: 03/15/2011 11:48:49 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Equipos_T]
@IdEquipo smallint
AS 
SELECT*
FROM Equipos
where (IdEquipo=@IdEquipo)
































GO

/****** Object:  StoredProcedure [dbo].[Equipos_TL]    Script Date: 03/15/2011 11:48:49 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[Equipos_TL]
AS 
Select 
IdEquipo,
'[ '+Tag+' ]  '+Descripcion as [Titulo]
FROM Equipos 
ORDER By Tag
































GO

/****** Object:  StoredProcedure [dbo].[Equipos_TT]    Script Date: 03/15/2011 11:48:49 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[Equipos_TT]
AS 
Select 
Equipos.IdEquipo,
Equipos.Descripcion,
Equipos.Tag,
Obras.NumeroObra,
Equipos.HorasEstimadas as [Horas estimadas],
FechaTerminacion as [Fecha de terminacion],
GruposTareasHH.Descripcion as [Grupo],
(Select Count(*) From DetalleEquipos Where Equipos.IdEquipo=DetalleEquipos.IdEquipo) as [Cant.Planos]
FROM Equipos
LEFT OUTER JOIN Obras ON Equipos.IdObra = Obras.IdObra
LEFT OUTER JOIN GruposTareasHH ON Equipos.IdGrupoTareaHH=GruposTareasHH.IdGrupoTareaHH
order by Equipos.Descripcion
































GO

/****** Object:  StoredProcedure [dbo].[Equipos_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:49 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Equipos_TX_ParaTransmitir]
AS 
SELECT *
FROM Equipos
WHERE EnviarEmail=1
































GO

/****** Object:  StoredProcedure [dbo].[Equipos_TX_ParaTransmitir_Todos]    Script Date: 03/15/2011 11:48:49 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Equipos_TX_ParaTransmitir_Todos]
AS 
SELECT *
FROM Equipos
































GO

/****** Object:  StoredProcedure [dbo].[Equipos_TX_PorcentajesStandar]    Script Date: 03/15/2011 11:48:49 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE PROCEDURE [dbo].[Equipos_TX_PorcentajesStandar]
@IdSector int,
@IdEquipo int
as
SELECT
Equipos.IdEquipo,
Equipos.Descripcion as Titulo,
Equipos.Tag,
Equipos.HorasEstimadas,
GruposTareasHH.Preparacion,
GruposTareasHH.CaldereriaPlana,
GruposTareasHH.Mecanica,
GruposTareasHH.Caldereria,
GruposTareasHH.Soldadura,
GruposTareasHH.Almacenes
FROM Equipos
LEFT OUTER JOIN GruposTareasHH ON Equipos.IdGrupoTareaHH=GruposTareasHH.IdGrupoTareaHH
WHERE Equipos.IdEquipo = @IdEquipo
































GO

/****** Object:  StoredProcedure [dbo].[Equipos_TX_PorObra1]    Script Date: 03/15/2011 11:48:49 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[Equipos_TX_PorObra1]
@IdObra int
AS 
Select 
Equipos.IdEquipo,
Equipos.Descripcion,
Equipos.Tag,
Obras.NumeroObra,
Equipos.HorasEstimadas as [Horas estimadas],
FechaTerminacion as [Fecha de terminacion],
GruposTareasHH.Descripcion as [Grupo],
(Select Count(*) From DetalleEquipos Where Equipos.IdEquipo=DetalleEquipos.IdEquipo) as [Cant.Planos]
FROM Equipos
LEFT OUTER JOIN Obras ON Equipos.IdObra = Obras.IdObra
LEFT OUTER JOIN GruposTareasHH ON Equipos.IdGrupoTareaHH=GruposTareasHH.IdGrupoTareaHH
WHERE Equipos.IdObra = @IdObra
ORDER by Equipos.Descripcion
































GO

/****** Object:  StoredProcedure [dbo].[Equipos_TX_PorObraParaCombo]    Script Date: 03/15/2011 11:48:49 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE PROCEDURE [dbo].[Equipos_TX_PorObraParaCombo]
@IdObra int
as
SELECT
Equipos.IdEquipo,
Equipos.Tag+'  -  ['+Equipos.Descripcion+']' as [Titulo]
FROM Equipos
WHERE (Equipos.IdObra = @IdObra)
ORDER By [Titulo]
































GO

/****** Object:  StoredProcedure [dbo].[Equipos_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:49 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Equipos_TX_SetearComoTransmitido]
AS 
Update Equipos
SET EnviarEmail=0
WHERE EnviarEmail<>0
































GO

/****** Object:  StoredProcedure [dbo].[Equipos_TX_TT]    Script Date: 03/15/2011 11:48:49 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[Equipos_TX_TT]
@IdEquipo smallint
AS 
Select 
Equipos.IdEquipo,
Equipos.Descripcion,
Equipos.Tag,
Obras.NumeroObra,
Equipos.HorasEstimadas as [Horas estimadas],
FechaTerminacion as [Fecha de terminacion],
GruposTareasHH.Descripcion as [Grupo],
(Select Count(*) From DetalleEquipos Where Equipos.IdEquipo=DetalleEquipos.IdEquipo) as [Cant.Planos]
FROM Equipos
LEFT OUTER JOIN Obras ON Equipos.IdObra = Obras.IdObra
LEFT OUTER JOIN GruposTareasHH ON Equipos.IdGrupoTareaHH=GruposTareasHH.IdGrupoTareaHH
where (IdEquipo=@IdEquipo)
































GO

/****** Object:  StoredProcedure [dbo].[Equipos_TXPlanos]    Script Date: 03/15/2011 11:48:49 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE PROCEDURE [dbo].[Equipos_TXPlanos]
@IdEquipo int
as
SELECT
Planos.IdPlano,
Planos.NumeroPlano + " " + Planos.Descripcion as Titulo
FROM DetalleEquipos DetEqu
LEFT OUTER JOIN Planos ON DetEqu.IdPlano = Planos.IdPlano
WHERE (DetEqu.IdEquipo = @IdEquipo)
































GO

/****** Object:  StoredProcedure [dbo].[Equipos_TXPorObra]    Script Date: 03/15/2011 11:48:50 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE PROCEDURE [dbo].[Equipos_TXPorObra]
@IdObra int
as
SELECT
Equipos.IdEquipo,
Equipos.Descripcion,
Equipos.Tag,
Equipos.IdGrupoTareaHH
FROM Equipos
WHERE Equipos.IdObra = @IdObra and Equipos.ActivoHH='SI'
GROUP BY Equipos.IdEquipo,Equipos.Descripcion,Equipos.Tag,Equipos.IdGrupoTareaHH
ORDER BY Equipos.Tag
































GO

/****** Object:  StoredProcedure [dbo].[EventosDelSistema_A]    Script Date: 03/15/2011 11:48:50 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[EventosDelSistema_A]
@IdEventoDelSistema int  output,
@Descripcion varchar(50),
@Importancia smallint
AS 
Insert into [EventosDelSistema]
(
Descripcion,
Importancia
)
Values
(
@Descripcion,
@Importancia
)
Select @IdEventoDelSistema=@@identity
Return(@IdEventoDelSistema)































GO

/****** Object:  StoredProcedure [dbo].[EventosDelSistema_E]    Script Date: 03/15/2011 11:48:50 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[EventosDelSistema_E]
@IdEventoDelSistema int  AS 
Delete EventosDelSistema
where (IdEventoDelSistema=@IdEventoDelSistema)































GO

/****** Object:  StoredProcedure [dbo].[EventosDelSistema_M]    Script Date: 03/15/2011 11:48:50 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE  Procedure [dbo].[EventosDelSistema_M]
@IdEventoDelSistema int ,
@Descripcion varchar(50),
@Importancia int
AS
Update EventosDelSistema
SET
Descripcion=@Descripcion,
Importancia=@Importancia
where (IdEventoDelSistema=@IdEventoDelSistema)
Return(@IdEventoDelSistema)































GO

/****** Object:  StoredProcedure [dbo].[EventosDelSistema_T]    Script Date: 03/15/2011 11:48:50 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[EventosDelSistema_T]
@IdEventoDelSistema int
AS 
SELECT *
FROM EventosDelSistema
where (IdEventoDelSistema=@IdEventoDelSistema)































GO

/****** Object:  StoredProcedure [dbo].[EventosDelSistema_TL]    Script Date: 03/15/2011 11:48:50 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[EventosDelSistema_TL]
AS 
Select 
IdEventoDelSistema,
Descripcion as Titulo
FROM EventosDelSistema
Order by Descripcion































GO

/****** Object:  StoredProcedure [dbo].[EventosDelSistema_TT]    Script Date: 03/15/2011 11:48:50 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[EventosDelSistema_TT]
AS 
Select 
IdEventoDelSistema,
Descripcion as [Evento],
Case 	When Importancia=1 Then 'Alta' 
 	When Importancia=2 Then ' Regular' 
	Else 'Baja' 
End as [Importancia]
FROM EventosDelSistema
order by Descripcion































GO

/****** Object:  StoredProcedure [dbo].[EventosDelSistema_TX_IdEmpleadosPorIdEvento]    Script Date: 03/15/2011 11:48:50 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[EventosDelSistema_TX_IdEmpleadosPorIdEvento]
@IdEventoDelSistema int
AS 
Select 
DEV.IdDetalleEventoDelSistema,
DEV.IdEmpleado
FROM DetalleEventosDelSistema DEV
LEFT OUTER JOIN EventosDelSistema EV ON DEV.IdEventoDelSistema=EV.IdEventoDelSistema
where (EV.IdEventoDelSistema=@IdEventoDelSistema)































GO

/****** Object:  StoredProcedure [dbo].[EventosDelSistema_TX_TT]    Script Date: 03/15/2011 11:48:50 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[EventosDelSistema_TX_TT]
@IdEventoDelSistema int
AS 
Select 
Descripcion as [Evento],
Case 	When Importancia=1 Then 'Alta' 
 	When Importancia=2 Then ' Regular' 
	Else 'Baja' 
End as [Importancia]
FROM EventosDelSistema
where (IdEventoDelSistema=@IdEventoDelSistema)































GO

/****** Object:  StoredProcedure [dbo].[FacturasCompra_A]    Script Date: 03/15/2011 11:48:50 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[FacturasCompra_A]
@IdFacturaCompra int  output,
@TipoComprobante int,
@IdComprobante int,
@IdDetalleComprobante int,
@NumeroItem int,
@IdProveedor int,
@NumeroFactura1 int,
@NumeroFactura2 int,
@FechaFactura datetime,
@ImporteFactura numeric(12,2),
@Usuario varchar(6),
@FechaIngreso datetime,
@IdMoneda int
AS 
Insert into [FacturasCompra]
(
 TipoComprobante,
 IdComprobante,
 IdDetalleComprobante,
 NumeroItem,
 IdProveedor,
 NumeroFactura1,
 NumeroFactura2,
 FechaFactura,
 ImporteFactura,
 Usuario,
 FechaIngreso,
 IdMoneda
)
Values
(
 @TipoComprobante,
 @IdComprobante,
 @IdDetalleComprobante,
 @NumeroItem,
 @IdProveedor,
 @NumeroFactura1,
 @NumeroFactura2,
 @FechaFactura,
 @ImporteFactura,
 @Usuario,
 @FechaIngreso,
 @IdMoneda
)
Select @IdFacturaCompra=@@identity
Return(@IdFacturaCompra)
































GO

/****** Object:  StoredProcedure [dbo].[FacturasCompra_E]    Script Date: 03/15/2011 11:48:50 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[FacturasCompra_E]
@IdFacturaCompra int  AS 
Delete FacturasCompra
where (IdFacturaCompra=@IdFacturaCompra)
































GO

/****** Object:  StoredProcedure [dbo].[FacturasCompra_M]    Script Date: 03/15/2011 11:48:50 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE  Procedure [dbo].[FacturasCompra_M]
@IdFacturaCompra int ,
@TipoComprobante int,
@IdComprobante int,
@IdDetalleComprobante int,
@NumeroItem int,
@IdProveedor int,
@NumeroFactura1 int,
@NumeroFactura2 int,
@FechaFactura datetime,
@ImporteFactura numeric(12,2),
@Usuario varchar(6),
@FechaIngreso datetime,
@IdMoneda int
AS
Update FacturasCompra
SET
 TipoComprobante=@TipoComprobante,
 IdComprobante=@IdComprobante,
 IdDetalleComprobante=@IdDetalleComprobante,
 NumeroItem=@NumeroItem,
 IdProveedor=@IdProveedor,
 NumeroFactura1=@NumeroFactura1,
 NumeroFactura2=@NumeroFactura2,
 FechaFactura=@FechaFactura,
 ImporteFactura=@ImporteFactura,
 Usuario=@Usuario,
 FechaIngreso=@FechaIngreso,
 IdMoneda=@IdMoneda
Where (IdFacturaCompra=@IdFacturaCompra)
Return(@IdFacturaCompra)
































GO

/****** Object:  StoredProcedure [dbo].[FacturasCompra_T]    Script Date: 03/15/2011 11:48:50 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[FacturasCompra_T]
@IdFacturaCompra int
AS 
SELECT*
FROM FacturasCompra
where (IdFacturaCompra=@IdFacturaCompra)
































GO

/****** Object:  StoredProcedure [dbo].[FacturasCompra_TX_DetallePorComprobante]    Script Date: 03/15/2011 11:48:50 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[FacturasCompra_TX_DetallePorComprobante]
@TipoComprobante int,
@IdComprobante int
AS 
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='011111133'
set @vector_T='027555500'
Select 
IdFacturaCompra,
NumeroItem as [Item],
Proveedores.RazonSocial as [Proveedor],
str(NumeroFactura1,4)+'-'+str(NumeroFactura2,8) as [Nro.factura],
FechaFactura as [Fecha fac.],
ImporteFactura as [Importe],
Monedas.Nombre as [Moneda],
@Vector_T as Vector_T,
@Vector_X as Vector_X
FROM FacturasCompra
LEFT OUTER JOIN Proveedores ON FacturasCompra.IdProveedor = Proveedores.IdProveedor
LEFT OUTER JOIN Monedas ON FacturasCompra.IdMoneda = Monedas.IdMoneda
Where TipoComprobante=@TipoComprobante and IdComprobante=@IdComprobante
Order by NumeroItem
































GO

/****** Object:  StoredProcedure [dbo].[FacturasCompra_TX_DetallePorComprobanteSinFormato]    Script Date: 03/15/2011 11:48:50 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[FacturasCompra_TX_DetallePorComprobanteSinFormato]
@TipoComprobante int,
@IdComprobante int
AS 
Select *
FROM FacturasCompra
Where TipoComprobante=@TipoComprobante and IdComprobante=@IdComprobante
































GO

/****** Object:  StoredProcedure [dbo].[FacturasCompra_TX_DetallePorDetalleComprobante]    Script Date: 03/15/2011 11:48:50 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[FacturasCompra_TX_DetallePorDetalleComprobante]
@TipoComprobante int,
@IdDetalleComprobante int
AS 
Select 
IdFacturaCompra,
NumeroItem,
Proveedores.RazonSocial as [Proveedor],
NumeroFactura1,
NumeroFactura2,
FechaFactura,
ImporteFactura
FROM FacturasCompra
LEFT OUTER JOIN Proveedores ON FacturasCompra.IdProveedor = Proveedores.IdProveedor
Where TipoComprobante=@TipoComprobante and IdDetalleComprobante=@IdDetalleComprobante
Order By FechaFactura
































GO

/****** Object:  StoredProcedure [dbo].[FacturasCompra_TXPrimero]    Script Date: 03/15/2011 11:48:50 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[FacturasCompra_TXPrimero]
AS 
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='011111133'
set @vector_T='012344400'
Select Top 1
IdFacturaCompra,
NumeroItem as [Item],
Proveedores.RazonSocial as [Proveedor],
str(NumeroFactura1,4)+'-'+str(NumeroFactura2,8) as [Nro.factura],
FechaFactura as [Fecha fac.],
ImporteFactura as [Importe],
Monedas.Nombre as [Moneda],
@Vector_T as Vector_T,
@Vector_X as Vector_X
FROM FacturasCompra
LEFT OUTER JOIN Proveedores ON FacturasCompra.IdProveedor = Proveedores.IdProveedor
LEFT OUTER JOIN Monedas ON FacturasCompra.IdMoneda = Monedas.IdMoneda
































GO

/****** Object:  StoredProcedure [dbo].[Familias_E]    Script Date: 03/15/2011 11:48:50 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[Familias_E]
@IdFamilia smallint  AS 
Delete Familias
where (IdFamilia=@IdFamilia)































GO

/****** Object:  StoredProcedure [dbo].[Familias_M]    Script Date: 03/15/2011 11:48:50 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE  Procedure [dbo].[Familias_M]
@IdFamilia int ,
@Descripcion varchar(50),
@Abreviatura varchar(15),
@EnviarEmail tinyint
AS
IF Exists(Select fa.IdFamilia From Familias fa Where fa.IdFamilia=@IdFamilia)
	BEGIN
		UPDATE Familias
		SET
		 Descripcion=@Descripcion,
		 Abreviatura=@Abreviatura,
		 EnviarEmail=@EnviarEmail
		WHERE IdFamilia=@IdFamilia
	END
ELSE
	BEGIN
		INSERT INTO [Familias]
		(
		 IdFamilia,
		 Descripcion,
		 Abreviatura,
		 EnviarEmail
		)
		VALUES
		(
		 @IdFamilia,
		 @Descripcion,
		 @Abreviatura,
		 @EnviarEmail
		)
	END
RETURN(@IdFamilia)





GO

/****** Object:  StoredProcedure [dbo].[Familias_T]    Script Date: 03/15/2011 11:48:50 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Familias_T]
@IdFamilia smallint
AS 
SELECT*
FROM Familias
where (IdFamilia=@IdFamilia)































GO

/****** Object:  StoredProcedure [dbo].[Familias_TL]    Script Date: 03/15/2011 11:48:50 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[Familias_TL]
AS 
Select IdFamilia,Descripcion as Titulo
FROM Familias order by Descripcion































GO

/****** Object:  StoredProcedure [dbo].[Familias_TT]    Script Date: 03/15/2011 11:48:50 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Familias_TT]
AS 
Select 
IdFamilia,
Descripcion
FROM Familias
order by Descripcion































GO

/****** Object:  StoredProcedure [dbo].[Familias_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:50 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Familias_TX_ParaTransmitir]
AS 
SELECT *
FROM Familias
WHERE EnviarEmail=1































GO

/****** Object:  StoredProcedure [dbo].[Familias_TX_ParaTransmitir_Todos]    Script Date: 03/15/2011 11:48:51 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Familias_TX_ParaTransmitir_Todos]
AS 
SELECT *
FROM Familias































GO

/****** Object:  StoredProcedure [dbo].[Familias_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:51 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[Familias_TX_SetearComoTransmitido]
AS 
Update Familias
SET EnviarEmail=0
WHERE EnviarEmail<>0































GO

/****** Object:  StoredProcedure [dbo].[Familias_TX_TT]    Script Date: 03/15/2011 11:48:51 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Familias_TX_TT]
@IdFamilia smallint
AS 
Select 
IdFamilia,
Descripcion
FROM Familias
where (IdFamilia=@IdFamilia)
order by Descripcion































GO

/****** Object:  StoredProcedure [dbo].[Fletes_A]    Script Date: 03/15/2011 11:48:51 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE Procedure [dbo].[Fletes_A]

@IdFlete int  output,
@Descripcion varchar(50),
@Patente varchar(6),
@NumeroInterno int,
@IdTransportista int,
@IdChofer int,
@Capacidad numeric(18,2),
@Tara int,
@TouchCarga varchar(5),
@TouchDescarga varchar(5),
@IdMarca int, 
@IdModelo int, 
@Año int, 
@Ancho numeric(6,2),
@Largo numeric(6,2),
@Alto numeric(6,2),
@ModalidadFacturacion tinyint,
@IdTarifaFlete int,
@PathImagen1 varchar(200)

AS 

INSERT INTO [Fletes]
(
 Descripcion,
 Patente,
 NumeroInterno,
 IdTransportista,
 IdChofer,
 Capacidad,
 Tara,
 TouchCarga,
 TouchDescarga,
 IdMarca, 
 IdModelo,
 Año,
 Ancho,
 Largo,
 Alto,
 ModalidadFacturacion,
 IdTarifaFlete,
 PathImagen1
)
VALUES
(
 @Descripcion,
 @Patente,
 @NumeroInterno,
 @IdTransportista,
 @IdChofer,
 @Capacidad,
 @Tara,
 @TouchCarga,
 @TouchDescarga,
 @IdMarca, 
 @IdModelo,
 @Año,
 @Ancho,
 @Largo,
 @Alto,
 @ModalidadFacturacion,
 @IdTarifaFlete,
 @PathImagen1
)

SELECT @IdFlete=@@identity
RETURN(@IdFlete)

GO

/****** Object:  StoredProcedure [dbo].[Fletes_E]    Script Date: 03/15/2011 11:48:51 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO



CREATE Procedure [dbo].[Fletes_E]

@IdFlete int  

AS 

DELETE Fletes
WHERE (IdFlete=@IdFlete)


GO

/****** Object:  StoredProcedure [dbo].[Fletes_M]    Script Date: 03/15/2011 11:48:51 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE  Procedure [dbo].[Fletes_M]

@IdFlete int ,
@Descripcion varchar(50),
@Patente varchar(6),
@NumeroInterno int,
@IdTransportista int,
@IdChofer int,
@Capacidad numeric(18,2),
@Tara int,
@TouchCarga varchar(5),
@TouchDescarga varchar(5),
@IdMarca int, 
@IdModelo int, 
@Año int, 
@Ancho numeric(6,2),
@Largo numeric(6,2),
@Alto numeric(6,2),
@ModalidadFacturacion tinyint,
@IdTarifaFlete int,
@PathImagen1 varchar(200)

AS

IF EXISTS(Select Top 1 IdFlete From Fletes Where IdFlete=@IdFlete)
    BEGIN
	UPDATE Fletes
	SET
	 Descripcion=@Descripcion,
	 Patente=@Patente,
	 NumeroInterno=@NumeroInterno,
	 IdTransportista=@IdTransportista,
	 IdChofer=@IdChofer,
	 Capacidad=@Capacidad,
	 Tara=@Tara,
	 TouchCarga=@TouchCarga,
	 TouchDescarga=@TouchDescarga,
	 IdMarca=@IdMarca,
	 IdModelo=@IdModelo,
	 Año=@Año,
	 Ancho=@Ancho,
	 Largo=@Largo,
	 Alto=@Alto,
	 ModalidadFacturacion=@ModalidadFacturacion,
	 IdTarifaFlete=@IdTarifaFlete,
	 PathImagen1=@PathImagen1
	WHERE (IdFlete=@IdFlete)
    END
ELSE
    BEGIN
	INSERT INTO [Fletes]
	(
	 IdFlete,
	 Descripcion,
	 Patente,
	 NumeroInterno,
	 IdTransportista,
	 IdChofer,
	 Capacidad,
	 Tara,
	 TouchCarga,
	 TouchDescarga,
	 IdMarca, 
	 IdModelo,
	 Año,
	 Ancho,
	 Largo,
	 Alto,
	 ModalidadFacturacion,
	 IdTarifaFlete,
	 PathImagen1
	)
	VALUES
	(
	 @IdFlete,
	 @Descripcion,
	 @Patente,
	 @NumeroInterno,
	 @IdTransportista,
	 @IdChofer,
	 @Capacidad,
	 @Tara,
	 @TouchCarga,
	 @TouchDescarga,
	 @IdMarca, 
	 @IdModelo,
	 @Año,
	 @Ancho,
	 @Largo,
	 @Alto,
	 @ModalidadFacturacion,
	 @IdTarifaFlete,
	 @PathImagen1
	)
	SELECT @IdFlete=@@identity
    END

RETURN(@IdFlete)

GO

/****** Object:  StoredProcedure [dbo].[Fletes_T]    Script Date: 03/15/2011 11:48:51 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO



CREATE Procedure [dbo].[Fletes_T]

@IdFlete int

AS 

SELECT*
FROM Fletes
WHERE (IdFlete=@IdFlete)


GO

/****** Object:  StoredProcedure [dbo].[Fletes_TL]    Script Date: 03/15/2011 11:48:51 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO



CREATE Procedure [dbo].[Fletes_TL]

AS 

SELECT IdFlete, Descripcion as [Titulo]
FROM Fletes 
ORDER BY Descripcion


GO

/****** Object:  StoredProcedure [dbo].[Fletes_TT]    Script Date: 03/15/2011 11:48:51 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE Procedure [dbo].[Fletes_TT]

AS 

DECLARE @vector_X varchar(30),@vector_T varchar(30)
SET @vector_X='0111111111111111133'
SET @vector_T='0131111012222077700'

SELECT 
 Fletes.IdFlete,
 Fletes.Descripcion as [Descripcion],
 Fletes.Patente as [Patente],
 Fletes.NumeroInterno as [Nro.Int.],
 Transportistas.RazonSocial as [Propietario],
 Choferes.Nombre as [Chofer],
 Marcas.Descripcion as [Marca],
 Modelos.Descripcion as [Modelo],
 Fletes.Año as [Año],
 Fletes.Ancho as [Ancho],
 Fletes.Largo as [Largo],
 Fletes.Alto as [Alto],
 Fletes.Capacidad as [Capacidad],
 Fletes.Tara as [Tara],
 Fletes.TouchCarga as [Touch de carga],
 Fletes.TouchDescarga as [Touch de descarga],
 Case When IsNull(Fletes.ModalidadFacturacion,1)=1 Then 'Por M3-Km'
	When IsNull(Fletes.ModalidadFacturacion,1)=2 Then 'Por Viaje'
	When IsNull(Fletes.ModalidadFacturacion,1)=3 Then 'Por Horas'
	Else ''
 End as [Modalidad de facturacion],
-- TarifasFletes.Descripcion+' [ '+Convert(varchar,TarifasFletes.ValorUnitario)+' ]' as [Tarifa],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM Fletes
LEFT OUTER JOIN Transportistas ON Transportistas.IdTransportista=Fletes.IdTransportista
LEFT OUTER JOIN Choferes ON Choferes.IdChofer=Fletes.IdChofer
LEFT OUTER JOIN Marcas ON Marcas.IdMarca=Fletes.IdMarca
LEFT OUTER JOIN Modelos ON Modelos.IdModelo=Fletes.IdModelo
--LEFT OUTER JOIN TarifasFletes ON TarifasFletes.IdTarifaFlete=Fletes.IdTarifaFlete
ORDER BY Transportistas.RazonSocial, Fletes.Patente

GO

/****** Object:  StoredProcedure [dbo].[Fletes_TX_PorTouch]    Script Date: 03/15/2011 11:48:51 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE Procedure [dbo].[Fletes_TX_PorTouch]

@Touch varchar(5)

AS 

SELECT 
 Fletes.*,
 Transportistas.RazonSocial as [Propietario],
 Choferes.Nombre as [Chofer],
 'C' as [CodigoTouch]
FROM Fletes
LEFT OUTER JOIN Transportistas ON Transportistas.IdTransportista=Fletes.IdTransportista
LEFT OUTER JOIN Choferes ON Choferes.IdChofer=Fletes.IdChofer
WHERE IsNull(Fletes.TouchCarga,'')=@Touch

UNION ALL

SELECT 
 Fletes.*,
 Transportistas.RazonSocial as [Propietario],
 Choferes.Nombre as [Chofer],
 'D' as [CodigoTouch]
FROM Fletes
LEFT OUTER JOIN Transportistas ON Transportistas.IdTransportista=Fletes.IdTransportista
LEFT OUTER JOIN Choferes ON Choferes.IdChofer=Fletes.IdChofer
WHERE IsNull(Fletes.TouchDescarga,'')=@Touch



GO

/****** Object:  StoredProcedure [dbo].[Fletes_TX_TT]    Script Date: 03/15/2011 11:48:51 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE Procedure [dbo].[Fletes_TX_TT]

@IdFlete int

AS 

DECLARE @vector_X varchar(30),@vector_T varchar(30)
SET @vector_X='0111111111111111133'
SET @vector_T='0131111012222077700'

SELECT 
 Fletes.IdFlete,
 Fletes.Descripcion as [Descripcion],
 Fletes.Patente as [Patente],
 Fletes.NumeroInterno as [Nro.Int.],
 Transportistas.RazonSocial as [Propietario],
 Choferes.Nombre as [Chofer],
 Marcas.Descripcion as [Marca],
 Modelos.Descripcion as [Modelo],
 Fletes.Año as [Año],
 Fletes.Ancho as [Ancho],
 Fletes.Largo as [Largo],
 Fletes.Alto as [Alto],
 Fletes.Capacidad as [Capacidad],
 Fletes.Tara as [Tara],
 Fletes.TouchCarga as [Touch de carga],
 Fletes.TouchDescarga as [Touch de descarga],
 Case When IsNull(Fletes.ModalidadFacturacion,1)=1 Then 'Por M3-Km'
	When IsNull(Fletes.ModalidadFacturacion,1)=2 Then 'Por Viaje'
	When IsNull(Fletes.ModalidadFacturacion,1)=3 Then 'Por Horas'
	Else ''
 End as [Modalidad de facturacion],
-- TarifasFletes.Descripcion+' [ '+Convert(varchar,TarifasFletes.ValorUnitario)+' ]' as [Tarifa],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM Fletes
LEFT OUTER JOIN Transportistas ON Transportistas.IdTransportista=Fletes.IdTransportista
LEFT OUTER JOIN Choferes ON Choferes.IdChofer=Fletes.IdChofer
LEFT OUTER JOIN Marcas ON Marcas.IdMarca=Fletes.IdMarca
LEFT OUTER JOIN Modelos ON Modelos.IdModelo=Fletes.IdModelo
--LEFT OUTER JOIN TarifasFletes ON TarifasFletes.IdTarifaFlete=Fletes.IdTarifaFlete
WHERE (IdFlete=@IdFlete)

GO

/****** Object:  StoredProcedure [dbo].[Formularios_A]    Script Date: 03/15/2011 11:48:51 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Formularios_A]
@IdFormulario int  output,
@Descripcion varchar(50)
AS 
Insert into [Formularios]
(Descripcion)
Values(@Descripcion)
Select @IdFormulario=@@identity
Return(@IdFormulario)
































GO

/****** Object:  StoredProcedure [dbo].[Formularios_E]    Script Date: 03/15/2011 11:48:51 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Formularios_E]
@IdFormulario int  AS 
Delete Formularios
where (IdFormulario=@IdFormulario)
































GO

/****** Object:  StoredProcedure [dbo].[Formularios_M]    Script Date: 03/15/2011 11:48:51 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE  Procedure [dbo].[Formularios_M]
@IdFormulario int ,
@Descripcion varchar(50)
AS
Update Formularios
SET
Descripcion=@Descripcion
where (IdFormulario=@IdFormulario)
Return(@IdFormulario)
































GO

/****** Object:  StoredProcedure [dbo].[Formularios_T]    Script Date: 03/15/2011 11:48:51 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Formularios_T]
@IdFormulario int
AS 
SELECT IdFormulario, Descripcion
FROM Formularios
where (IdFormulario=@IdFormulario)
































GO

/****** Object:  StoredProcedure [dbo].[Formularios_TL]    Script Date: 03/15/2011 11:48:51 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Formularios_TL]
AS 
Select IdFormulario,Descripcion as Titulo
FROM Formularios
order by Descripcion
































GO

/****** Object:  StoredProcedure [dbo].[Formularios_TT]    Script Date: 03/15/2011 11:48:51 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Formularios_TT]
AS 
Select IdFormulario,Descripcion
FROM Formularios
order by Descripcion
































GO

/****** Object:  StoredProcedure [dbo].[Formularios_TX_TT]    Script Date: 03/15/2011 11:48:51 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Formularios_TX_TT]
@IdFormulario int
AS 
Select IdFormulario,Descripcion
FROM Formularios
where (IdFormulario=@IdFormulario)
































GO

/****** Object:  StoredProcedure [dbo].[ItemsPopUpMateriales_A]    Script Date: 03/15/2011 11:48:51 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[ItemsPopUpMateriales_A]
@IdItemPopUpMateriales int  output,
@IdRubro int,
@IdSubrubro int,
@IdFamilia int,
@Campo01_Nombre varchar(50),
@Campo01_Tabla varchar(50),
@Campo02_Nombre varchar(50),
@Campo02_Tabla varchar(50),
@Campo03_Nombre varchar(50),
@Campo03_Tabla varchar(50),
@Campo04_Nombre varchar(50),
@Campo04_Tabla varchar(50),
@Campo05_Nombre varchar(50),
@Campo05_Tabla varchar(50),
@Campo06_Nombre varchar(50),
@Campo06_Tabla varchar(50),
@Campo07_Nombre varchar(50),
@Campo07_Tabla varchar(50),
@Campo08_Nombre varchar(50),
@Campo08_Tabla varchar(50),
@Campo09_Nombre varchar(50),
@Campo09_Tabla varchar(50),
@Campo10_Nombre varchar(50),
@Campo10_Tabla varchar(50)
AS 
Insert into [ItemsPopUpMateriales]
(
 IdRubro,
 IdSubrubro,
 IdFamilia,
 Campo01_Nombre,
 Campo01_Tabla,
 Campo02_Nombre,
 Campo02_Tabla,
 Campo03_Nombre,
 Campo03_Tabla,
 Campo04_Nombre,
 Campo04_Tabla,
 Campo05_Nombre,
 Campo05_Tabla,
 Campo06_Nombre,
 Campo06_Tabla,
 Campo07_Nombre,
 Campo07_Tabla,
 Campo08_Nombre,
 Campo08_Tabla,
 Campo09_Nombre,
 Campo09_Tabla,
 Campo10_Nombre,
 Campo10_Tabla
)
Values
(
 @IdRubro,
 @IdSubrubro,
 @IdFamilia,
 @Campo01_Nombre,
 @Campo01_Tabla,
 @Campo02_Nombre,
 @Campo02_Tabla,
 @Campo03_Nombre,
 @Campo03_Tabla,
 @Campo04_Nombre,
 @Campo04_Tabla,
 @Campo05_Nombre,
 @Campo05_Tabla,
 @Campo06_Nombre,
 @Campo06_Tabla,
 @Campo07_Nombre,
 @Campo07_Tabla,
 @Campo08_Nombre,
 @Campo08_Tabla,
 @Campo09_Nombre,
 @Campo09_Tabla,
 @Campo10_Nombre,
 @Campo10_Tabla
)
Select @IdItemPopUpMateriales=@@identity
Return(@IdItemPopUpMateriales)






























GO

/****** Object:  StoredProcedure [dbo].[ItemsPopUpMateriales_E]    Script Date: 03/15/2011 11:48:52 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[ItemsPopUpMateriales_E]
@IdItemPopUpMateriales int  AS 
Delete ItemsPopUpMateriales
where (IdItemPopUpMateriales=@IdItemPopUpMateriales)
































GO

/****** Object:  StoredProcedure [dbo].[ItemsPopUpMateriales_M]    Script Date: 03/15/2011 11:48:52 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE  Procedure [dbo].[ItemsPopUpMateriales_M]
@IdItemPopUpMateriales int ,
@IdRubro int,
@IdSubrubro int,
@IdFamilia int,
@Campo01_Nombre varchar(50),
@Campo01_Tabla varchar(50),
@Campo02_Nombre varchar(50),
@Campo02_Tabla varchar(50),
@Campo03_Nombre varchar(50),
@Campo03_Tabla varchar(50),
@Campo04_Nombre varchar(50),
@Campo04_Tabla varchar(50),
@Campo05_Nombre varchar(50),
@Campo05_Tabla varchar(50),
@Campo06_Nombre varchar(50),
@Campo06_Tabla varchar(50),
@Campo07_Nombre varchar(50),
@Campo07_Tabla varchar(50),
@Campo08_Nombre varchar(50),
@Campo08_Tabla varchar(50),
@Campo09_Nombre varchar(50),
@Campo09_Tabla varchar(50),
@Campo10_Nombre varchar(50),
@Campo10_Tabla varchar(50)
AS
Update ItemsPopUpMateriales
SET
 IdRubro=@IdRubro,
 IdSubrubro=@IdSubrubro,
 IdFamilia=@IdFamilia,
 Campo01_Nombre=@Campo01_Nombre,
 Campo01_Tabla=@Campo01_Tabla,
 Campo02_Nombre=@Campo02_Nombre,
 Campo02_Tabla=@Campo02_Tabla,
 Campo03_Nombre=@Campo03_Nombre,
 Campo03_Tabla=@Campo03_Tabla,
 Campo04_Nombre=@Campo04_Nombre,
 Campo04_Tabla=@Campo04_Tabla,
 Campo05_Nombre=@Campo05_Nombre,
 Campo05_Tabla=@Campo05_Tabla,
 Campo06_Nombre=@Campo06_Nombre,
 Campo06_Tabla=@Campo06_Tabla,
 Campo07_Nombre=@Campo07_Nombre,
 Campo07_Tabla=@Campo07_Tabla,
 Campo08_Nombre=@Campo08_Nombre,
 Campo08_Tabla=@Campo08_Tabla,
 Campo09_Nombre=@Campo09_Nombre,
 Campo09_Tabla=@Campo09_Tabla,
 Campo10_Nombre=@Campo10_Nombre,
 Campo10_Tabla=@Campo10_Tabla
where (IdItemPopUpMateriales=@IdItemPopUpMateriales)
Return(@IdItemPopUpMateriales)
































GO

/****** Object:  StoredProcedure [dbo].[ItemsPopUpMateriales_T]    Script Date: 03/15/2011 11:48:52 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[ItemsPopUpMateriales_T]
@IdItemPopUpMateriales int
AS 
SELECT * 
FROM ItemsPopUpMateriales
WHERE (IdItemPopUpMateriales=@IdItemPopUpMateriales)
































GO

/****** Object:  StoredProcedure [dbo].[ItemsPopUpMateriales_TT]    Script Date: 03/15/2011 11:48:52 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[ItemsPopUpMateriales_TT]
AS 
Select 
IdItemPopUpMateriales,
Rubros.Descripcion as [Rubro],
SubRubros.Descripcion as [Subrubro],
Familias.Descripcion as [Familia],
Campo01_Nombre as [Campo 1],
Campo02_Nombre as [Campo 2],
Campo03_Nombre as [Campo 3],
Campo04_Nombre as [Campo 4],
Campo05_Nombre as [Campo 5],
Campo06_Nombre as [Campo 6],
Campo07_Nombre as [Campo 7],
Campo08_Nombre as [Campo 8],
Campo09_Nombre as [Campo 9],
Campo10_Nombre as [Campo 10]
FROM ItemsPopUpMateriales
Left Outer Join Rubros On Rubros.IdRubro=ItemsPopUpMateriales.IdRubro
Left Outer Join SubRubros On SubRubros.IdSubrubro=ItemsPopUpMateriales.IdSubrubro
Left Outer Join Familias On Familias.IdFamilia=ItemsPopUpMateriales.IdFamilia
ORDER by Rubros.Descripcion,SubRubros.Descripcion,Familias.Descripcion
































GO

/****** Object:  StoredProcedure [dbo].[ItemsPopUpMateriales_TX_CamposConTablas]    Script Date: 03/15/2011 11:48:52 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[ItemsPopUpMateriales_TX_CamposConTablas]
AS
SET NOCOUNT ON
CREATE TABLE #Tablas 	(
			 Campo VARCHAR(50),
			 Tabla VARCHAR(50)
			)
INSERT INTO #Tablas 
Select 
 It.Campo01_Nombre as [Campo],
 It.Campo01_Tabla as [Tabla]
From ItemsPopUpMateriales It
Union all
Select 
 It.Campo02_Nombre as [Campo],
 It.Campo02_Tabla as [Tabla]
From ItemsPopUpMateriales It
Union all
Select 
 It.Campo03_Nombre as [Campo],
 It.Campo03_Tabla as [Tabla]
From ItemsPopUpMateriales It
Union all
Select 
 It.Campo04_Nombre as [Campo],
 It.Campo04_Tabla as [Tabla]
From ItemsPopUpMateriales It
Union all
Select 
 It.Campo05_Nombre as [Campo],
 It.Campo05_Tabla as [Tabla]
From ItemsPopUpMateriales It
Union all
Select 
 It.Campo06_Nombre as [Campo],
 It.Campo06_Tabla as [Tabla]
From ItemsPopUpMateriales It
Union all
Select 
 It.Campo07_Nombre as [Campo],
 It.Campo07_Tabla as [Tabla]
From ItemsPopUpMateriales It
Union all
Select 
 It.Campo08_Nombre as [Campo],
 It.Campo08_Tabla as [Tabla]
From ItemsPopUpMateriales It
Union all
Select 
 It.Campo09_Nombre as [Campo],
 It.Campo09_Tabla as [Tabla]
From ItemsPopUpMateriales It
Union all
Select 
 It.Campo10_Nombre as [Campo],
 It.Campo10_Tabla as [Tabla]
From ItemsPopUpMateriales It
SET NOCOUNT OFF
SELECT *
FROM #Tablas
WHERE Tabla is not null and len(tabla)>0
GROUP By Campo,Tabla
DROP TABLE #Tablas
































GO

/****** Object:  StoredProcedure [dbo].[ItemsPopUpMateriales_TX_Existente]    Script Date: 03/15/2011 11:48:52 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[ItemsPopUpMateriales_TX_Existente]
@IdRubro int,
@IdSubrubro int,
@IdFamilia int
AS 
SELECT It.IdItemPopUpMateriales
FROM ItemsPopUpMateriales It
where (It.IdRubro=@IdRubro and It.IdSubrubro=@IdSubrubro and It.IdFamilia=@IdFamilia)
































GO

/****** Object:  StoredProcedure [dbo].[ItemsPopUpMateriales_TX_ParaMenu]    Script Date: 03/15/2011 11:48:52 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[ItemsPopUpMateriales_TX_ParaMenu]

@strsql ntext

AS

SET NOCOUNT ON

CREATE TABLE #PopUp (
			 IdArticulo INTEGER,
			 IdRubro INTEGER,
			 IdSubrubro INTEGER,
			 Campo01_Clave VARCHAR(50),
			 Campo01_Descripcion VARCHAR(50),
			 Campo02_Clave VARCHAR(50),
			 Campo02_Descripcion VARCHAR(50),
			 Campo03_Clave VARCHAR(50),
			 Campo03_Descripcion VARCHAR(50),
			 Campo04_Clave VARCHAR(50),
			 Campo04_Descripcion VARCHAR(50),
			 Campo05_Clave VARCHAR(50),
			 Campo05_Descripcion VARCHAR(50),
			 Campo06_Clave VARCHAR(50),
			 Campo06_Descripcion VARCHAR(50),
			 Campo07_Clave VARCHAR(50),
			 Campo07_Descripcion VARCHAR(50),
			 Campo08_Clave VARCHAR(50),
			 Campo08_Descripcion VARCHAR(50),
			 Campo09_Clave VARCHAR(50),
			 Campo09_Descripcion  VARCHAR(50),
			 Campo10_Clave VARCHAR(50),
			 Campo10_Descripcion VARCHAR(50),
			 Campo11_Clave VARCHAR(50),
			 Campo11_Descripcion VARCHAR(50),
			 Campo12_Clave VARCHAR(50),
			 Campo12_Descripcion VARCHAR(50)
			)
INSERT INTO #PopUp 
 Select Articulos.IdArticulo,Articulos.IdRubro,Articulos.IdSubrubro,
	'Rubros',Rubros.Descripcion,
	'Subrubros',SubRubros.Descripcion,
	Null,Null,
	Null,Null,
	Null,Null,
	Null,Null,
	Null,Null,
	Null,Null,
	Null,Null,
	Null,Null,
	Null,Null,
	Null,Null
 From Articulos
 Left Outer Join Rubros On Rubros.IdRubro=Articulos.IdRubro
 Left Outer Join SubRubros On SubRubros.IdSubrubro=Articulos.IdSubrubro
 Left Outer Join ItemsPopUpMateriales It On It.IdRubro=Articulos.IdRubro And It.IdSubrubro=Articulos.IdSubrubro And It.IdFamilia=Articulos.IdFamilia
 Where It.IdItemPopUpMateriales is Null

Exec(@strsql)

SET NOCOUNT OFF

SELECT 
 Articulos.Descripcion as [Articulo],
 #PopUp.* 
FROM #PopUp
LEFT OUTER JOIN Articulos On Articulos.IdArticulo=#PopUp.IdArticulo
ORDER By 	Campo01_Clave,Campo01_Descripcion,
		Campo02_Clave,Campo02_Descripcion,
		Campo03_Clave,Campo03_Descripcion,
		Campo04_Clave,Campo04_Descripcion,
		Campo05_Clave,Campo05_Descripcion,
		Campo06_Clave,Campo06_Descripcion,
		Campo07_Clave,Campo07_Descripcion,
		Campo08_Clave,Campo08_Descripcion,
		Campo09_Clave,Campo09_Descripcion,
		Campo10_Clave,Campo10_Descripcion,
		Campo11_Clave,Campo11_Descripcion,
		Campo12_Clave,Campo12_Descripcion,
		Articulos.Descripcion
DROP TABLE #PopUp






























GO

/****** Object:  StoredProcedure [dbo].[ItemsPopUpMateriales_TX_Todos]    Script Date: 03/15/2011 11:48:52 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[ItemsPopUpMateriales_TX_Todos]
AS 
SELECT * 
FROM ItemsPopUpMateriales
































GO

/****** Object:  StoredProcedure [dbo].[ItemsPopUpMateriales_TX_TT]    Script Date: 03/15/2011 11:48:52 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[ItemsPopUpMateriales_TX_TT]
@IdItemPopUpMateriales int
AS 
Select 
IdItemPopUpMateriales,
Rubros.Descripcion as [Rubro],
SubRubros.Descripcion as [Subrubro],
Familias.Descripcion as [Familia],
Campo01_Nombre as [Campo 1],
Campo02_Nombre as [Campo 2],
Campo03_Nombre as [Campo 3],
Campo04_Nombre as [Campo 4],
Campo05_Nombre as [Campo 5],
Campo06_Nombre as [Campo 6],
Campo07_Nombre as [Campo 7],
Campo08_Nombre as [Campo 8],
Campo09_Nombre as [Campo 9],
Campo10_Nombre as [Campo 10]
FROM ItemsPopUpMateriales
Left Outer Join Rubros On Rubros.IdRubro=ItemsPopUpMateriales.IdRubro
Left Outer Join SubRubros On SubRubros.IdSubrubro=ItemsPopUpMateriales.IdSubrubro
Left Outer Join Familias On Familias.IdFamilia=ItemsPopUpMateriales.IdFamilia
WHERE (IdItemPopUpMateriales=@IdItemPopUpMateriales)
































GO

/****** Object:  StoredProcedure [dbo].[Localidades_A]    Script Date: 03/15/2011 11:48:52 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Localidades_A]
@IdLocalidad int  output,
@Nombre varchar(50),
@CodigoPostal varchar(20),
@IdProvincia int
AS 
Insert into [Localidades]
(
 Nombre,
 CodigoPostal,
 IdProvincia
)
Values
(
 @Nombre,
 @CodigoPostal,
 @IdProvincia
)
Select @IdLocalidad=@@identity
Return(@IdLocalidad)






























GO

/****** Object:  StoredProcedure [dbo].[Localidades_E]    Script Date: 03/15/2011 11:48:52 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Localidades_E]
@IdLocalidad int  AS 
Delete Localidades
where (IdLocalidad=@IdLocalidad)
































GO

/****** Object:  StoredProcedure [dbo].[Localidades_M]    Script Date: 03/15/2011 11:48:52 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE  Procedure [dbo].[Localidades_M]
@IdLocalidad int,
@Nombre varchar(50),
@CodigoPostal varchar(20),
@IdProvincia int
AS
IF Exists(Select Lo.IdLocalidad From Localidades Lo Where Lo.IdLocalidad=@IdLocalidad)
	BEGIN
		UPDATE Localidades
		SET
		 Nombre=@Nombre,
		 CodigoPostal=@CodigoPostal,
		 IdProvincia=@IdProvincia
		WHERE IdLocalidad=@IdLocalidad
	END
ELSE
	BEGIN
		INSERT INTO [Localidades]
		(
		 IdLocalidad,
		 Nombre,
		 CodigoPostal,
		 IdProvincia
		)
		VALUES
		(
		 @IdLocalidad,
		 @Nombre,
		 @CodigoPostal,
		 @IdProvincia
		)
	END
RETURN(@IdLocalidad)





GO

/****** Object:  StoredProcedure [dbo].[Localidades_T]    Script Date: 03/15/2011 11:48:52 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Localidades_T]
@IdLocalidad smallint
AS 
SELECT *
FROM Localidades
where (IdLocalidad=@IdLocalidad)
































GO

/****** Object:  StoredProcedure [dbo].[Localidades_TL]    Script Date: 03/15/2011 11:48:52 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Localidades_TL]
AS 
Select IdLocalidad,Nombre as Titulo
FROM Localidades order by Nombre
































GO

/****** Object:  StoredProcedure [dbo].[Localidades_TT]    Script Date: 03/15/2011 11:48:52 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[Localidades_TT]
AS 
SELECT 
 IdLocalidad,
 Localidades.Nombre as [Localidad],
 Localidades.CodigoPostal as [Codigo postal],
 Provincias.Nombre as [Provincia],
 Paises.Descripcion as [Pais]
FROM Localidades
LEFT OUTER JOIN Provincias ON Provincias.IdProvincia=Localidades.IdProvincia
LEFT OUTER JOIN Paises ON Paises.IdPais=Provincias.IdPais
ORDER by Localidades.Nombre































GO

/****** Object:  StoredProcedure [dbo].[Localidades_TX_PorId]    Script Date: 03/15/2011 11:48:52 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Localidades_TX_PorId]
@IdLocalidad smallint
AS 
Select 
 Localidades.*,
 Provincias.IdPais
FROM Localidades
LEFT OUTER JOIN Provincias ON Provincias.IdProvincia=Localidades.IdProvincia
WHERE (IdLocalidad=@IdLocalidad)






























GO

/****** Object:  StoredProcedure [dbo].[Localidades_TX_PorNombre]    Script Date: 03/15/2011 11:48:52 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[Localidades_TX_PorNombre]
@Nombre varchar(50),
@IdProvincia int,
@IdLocalidad int
AS 
SELECT *
FROM Localidades
WHERE (@IdLocalidad<=0 or IdLocalidad<>@IdLocalidad) And Nombre=@Nombre And 
	IdProvincia=@IdProvincia






























GO

/****** Object:  StoredProcedure [dbo].[Localidades_TX_TT]    Script Date: 03/15/2011 11:48:52 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Localidades_TX_TT]
@IdLocalidad smallint
AS 
Select 
 IdLocalidad,
 Localidades.Nombre as [Localidad],
 Localidades.CodigoPostal as [Codigo postal],
 Provincias.Nombre as [Provincia],
 Paises.Descripcion as [Pais]
FROM Localidades
LEFT OUTER JOIN Provincias ON Provincias.IdProvincia=Localidades.IdProvincia
LEFT OUTER JOIN Paises ON Paises.IdPais=Provincias.IdPais
WHERE (IdLocalidad=@IdLocalidad)






























GO

/****** Object:  StoredProcedure [dbo].[Marcas_TL]    Script Date: 03/15/2011 11:48:52 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[Marcas_TL]
AS 
Select IdMarca,Descripcion as Titulo
FROM Marcas
order by Descripcion
































GO

/****** Object:  StoredProcedure [dbo].[Modelos_TL]    Script Date: 03/15/2011 11:48:52 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[Modelos_TL]
AS 
Select IdModelo,Descripcion as Titulo
FROM Modelos
order by Descripcion
































GO

/****** Object:  StoredProcedure [dbo].[Monedas_A]    Script Date: 03/15/2011 11:48:52 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO











CREATE Procedure [dbo].[Monedas_A]
@IdMoneda int  output,
@Nombre varchar(50),
@Abreviatura varchar(15),
@EquivalenciaUS numeric(14,4),
@CodigoAFIP varchar(3),
@GeneraImpuestos varchar(2)
AS 
Insert into [Monedas]
(
 Nombre,
 Abreviatura,
 EquivalenciaUS,
 CodigoAFIP,
 GeneraImpuestos
)
Values
(
 @Nombre,
 @Abreviatura,
 @EquivalenciaUS,
 @CodigoAFIP,
 @GeneraImpuestos
)
Select @IdMoneda=@@identity
Return(@IdMoneda)










GO

/****** Object:  StoredProcedure [dbo].[Monedas_E]    Script Date: 03/15/2011 11:48:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Monedas_E]
@IdMoneda int  AS 
Delete Monedas
where (IdMoneda=@IdMoneda)































GO

/****** Object:  StoredProcedure [dbo].[Monedas_M]    Script Date: 03/15/2011 11:48:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE  Procedure [dbo].[Monedas_M]
@IdMoneda int,
@Nombre varchar(50),
@Abreviatura varchar(15),
@EquivalenciaUS numeric(14,4),
@CodigoAFIP varchar(3),
@GeneraImpuestos varchar(2)
AS
IF Exists(Select Aux.IdMoneda From Monedas Aux Where Aux.IdMoneda=@IdMoneda)
	BEGIN
		UPDATE Monedas
		SET
		 Nombre=@Nombre,
		 Abreviatura=@Abreviatura,
		 EquivalenciaUS=@EquivalenciaUS,
		 CodigoAFIP=@CodigoAFIP,
		 GeneraImpuestos=@GeneraImpuestos
		WHERE IdMoneda=@IdMoneda
	END
ELSE
	BEGIN
		INSERT INTO [Monedas]
		(
		 IdMoneda,
		 Nombre,
		 Abreviatura,
		 EquivalenciaUS,
		 CodigoAFIP,
		 GeneraImpuestos
		)
		VALUES
		(
		 @IdMoneda,
		 @Nombre,
		 @Abreviatura,
		 @EquivalenciaUS,
		 @CodigoAFIP,
		 @GeneraImpuestos
		)
	END
RETURN(@IdMoneda)





GO

/****** Object:  StoredProcedure [dbo].[Monedas_T]    Script Date: 03/15/2011 11:48:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Monedas_T]
@IdMoneda int
AS 
SELECT*
FROM Monedas
where (IdMoneda=@IdMoneda)































GO

/****** Object:  StoredProcedure [dbo].[Monedas_TL]    Script Date: 03/15/2011 11:48:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Monedas_TL]
AS 
Select IdMoneda,Nombre as Titulo
FROM Monedas order by Nombre































GO

/****** Object:  StoredProcedure [dbo].[Monedas_TT]    Script Date: 03/15/2011 11:48:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO












CREATE Procedure [dbo].[Monedas_TT]
AS 
Select 
 IdMoneda,
 Nombre as [Denominacion],
 Abreviatura as [Abreviatura],
 CodigoAFIP as [Codigo AFIP],
 GeneraImpuestos as [Genera ret.?]
FROM Monedas
ORDER by Nombre











GO

/****** Object:  StoredProcedure [dbo].[Monedas_TX_MonedasStandarParaCombo]    Script Date: 03/15/2011 11:48:53 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






















CREATE Procedure [dbo].[Monedas_TX_MonedasStandarParaCombo]

AS 

SET NOCOUNT ON
DECLARE @IdMonedaPesos int,@IdMonedaDolar int
SET @IdMonedaPesos=(Select Parametros.IdMoneda From Parametros Where Parametros.IdParametro=1)
SET @IdMonedaDolar=(Select Parametros.IdMonedaDolar From Parametros Where Parametros.IdParametro=1)
SET NOCOUNT OFF

SELECT 
 IdMoneda,
 Nombre as [Titulo]
FROM Monedas 
WHERE IdMoneda=@IdMonedaPesos or IdMoneda=@IdMonedaDolar
ORDER by Nombre





















GO

/****** Object:  StoredProcedure [dbo].[Monedas_TX_PorId]    Script Date: 03/15/2011 11:48:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO












CREATE Procedure [dbo].[Monedas_TX_PorId]
@IdMoneda int
AS 
SELECT*
FROM Monedas
WHERE (IdMoneda=@IdMoneda)












GO

/****** Object:  StoredProcedure [dbo].[Monedas_TX_Resto]    Script Date: 03/15/2011 11:48:53 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO












CREATE Procedure [dbo].[Monedas_TX_Resto]

AS 

SET NOCOUNT ON
DECLARE @IdMonedaPesos int,@IdMonedaDolar int
SET @IdMonedaPesos=(Select Parametros.IdMoneda From Parametros Where Parametros.IdParametro=1)
SET @IdMonedaDolar=(Select Parametros.IdMonedaDolar From Parametros Where Parametros.IdParametro=1)
SET NOCOUNT OFF

SELECT 
 IdMoneda,
 Nombre as [Titulo]
FROM Monedas 
WHERE IdMoneda<>@IdMonedaPesos and IdMoneda<>@IdMonedaDolar
ORDER by Nombre











GO

/****** Object:  StoredProcedure [dbo].[Monedas_TX_TT]    Script Date: 03/15/2011 11:48:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO












CREATE Procedure [dbo].[Monedas_TX_TT]
@IdMoneda int
AS 
SELECT 
 IdMoneda,
 Nombre as [Denominacion],
 Abreviatura as [Abreviatura],
 CodigoAFIP as [Codigo AFIP],
 GeneraImpuestos as [Genera ret.?]
FROM Monedas
WHERE (IdMoneda=@IdMoneda)












GO

/****** Object:  StoredProcedure [dbo].[MotivosRechazo_A]    Script Date: 03/15/2011 11:48:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[MotivosRechazo_A]
@IdMotivoRechazo int  output,
@Descripcion varchar(50)
AS 
Insert into [MotivosRechazo]
(Descripcion)
Values(@Descripcion)
Select @IdMotivoRechazo=@@identity
Return(@IdMotivoRechazo)
































GO

/****** Object:  StoredProcedure [dbo].[MotivosRechazo_E]    Script Date: 03/15/2011 11:48:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[MotivosRechazo_E]
@IdMotivoRechazo int  AS 
Delete MotivosRechazo
where (IdMotivoRechazo=@IdMotivoRechazo)
































GO

/****** Object:  StoredProcedure [dbo].[MotivosRechazo_M]    Script Date: 03/15/2011 11:48:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE  Procedure [dbo].[MotivosRechazo_M]
@IdMotivoRechazo int ,
@Descripcion varchar(50)
AS
Update MotivosRechazo
SET
Descripcion=@Descripcion
where (IdMotivoRechazo=@IdMotivoRechazo)
Return(@IdMotivoRechazo)
































GO

/****** Object:  StoredProcedure [dbo].[MotivosRechazo_T]    Script Date: 03/15/2011 11:48:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[MotivosRechazo_T]
@IdMotivoRechazo int
AS 
SELECT IdMotivoRechazo, Descripcion
FROM MotivosRechazo
where (IdMotivoRechazo=@IdMotivoRechazo)
































GO

/****** Object:  StoredProcedure [dbo].[MotivosRechazo_TL]    Script Date: 03/15/2011 11:48:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[MotivosRechazo_TL]
AS 
Select IdMotivoRechazo,Descripcion as Titulo
FROM MotivosRechazo
order by Descripcion
































GO

/****** Object:  StoredProcedure [dbo].[MotivosRechazo_TT]    Script Date: 03/15/2011 11:48:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[MotivosRechazo_TT]
AS 
Select IdMotivoRechazo,Descripcion
FROM MotivosRechazo
order by Descripcion
































GO

/****** Object:  StoredProcedure [dbo].[MotivosRechazo_TX_TT]    Script Date: 03/15/2011 11:48:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[MotivosRechazo_TX_TT]
@IdMotivoRechazo int
AS 
Select IdMotivoRechazo,Descripcion
FROM MotivosRechazo
where (IdMotivoRechazo=@IdMotivoRechazo)
































GO

/****** Object:  StoredProcedure [dbo].[NovedadesUsuarios_A]    Script Date: 03/15/2011 11:48:53 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[NovedadesUsuarios_A]
@IdNovedadUsuarios int output,
@IdEmpleado int,
@IdEventoDelSistema int,
@FechaEvento datetime,
@Confirmado varchar(2),
@FechaConfirmacion datetime,
@Detalle varchar(100)
AS 
Insert into NovedadesUsuarios
(
 IdEmpleado,
 IdEventoDelSistema,
 FechaEvento,
 Confirmado,
 FechaConfirmacion,
 Detalle
)
Values
(
 @IdEmpleado,
 @IdEventoDelSistema,
 @FechaEvento,
 @Confirmado,
 @FechaConfirmacion,
 @Detalle
)
Select @IdNovedadUsuarios=@@identity
Return(@IdNovedadUsuarios)































GO

/****** Object:  StoredProcedure [dbo].[NovedadesUsuarios_E]    Script Date: 03/15/2011 11:48:53 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[NovedadesUsuarios_E]
@IdNovedadUsuarios int  
AS 
Delete NovedadesUsuarios
where (IdNovedadUsuarios=@IdNovedadUsuarios)































GO

/****** Object:  StoredProcedure [dbo].[NovedadesUsuarios_M]    Script Date: 03/15/2011 11:48:53 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[NovedadesUsuarios_M]
@IdNovedadUsuarios int,
@IdEmpleado int,
@IdEventoDelSistema int,
@FechaEvento datetime,
@Confirmado varchar(2),
@FechaConfirmacion datetime,
@Detalle varchar(100)
as
Update NovedadesUsuarios
SET 
 IdEmpleado=@IdEmpleado,
 IdEventoDelSistema=@IdEventoDelSistema,
 FechaEvento=@FechaEvento,
 Confirmado=@Confirmado,
 FechaConfirmacion=@FechaConfirmacion,
 Detalle=@Detalle
where (IdNovedadUsuarios=@IdNovedadUsuarios)
Return(@IdNovedadUsuarios)































GO

/****** Object:  StoredProcedure [dbo].[NovedadesUsuarios_T]    Script Date: 03/15/2011 11:48:53 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[NovedadesUsuarios_T]
@IdNovedadUsuarios int
AS 
SELECT *
FROM NovedadesUsuarios
where (IdNovedadUsuarios=@IdNovedadUsuarios)































GO

/****** Object:  StoredProcedure [dbo].[NovedadesUsuarios_TX_Estructura]    Script Date: 03/15/2011 11:48:53 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[NovedadesUsuarios_TX_Estructura]
AS 
SELECT TOP 1 *
FROM NovedadesUsuarios































GO

/****** Object:  StoredProcedure [dbo].[NovedadesUsuarios_TX_PorIdEmpleadoConEventosPendientes]    Script Date: 03/15/2011 11:48:53 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE PROCEDURE [dbo].[NovedadesUsuarios_TX_PorIdEmpleadoConEventosPendientes]
@IdEmpleado int
as
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='011133'
set @vector_T='051600'
SELECT 
NU.IdNovedadUsuarios,
Ev.Descripcion as [Evento],
NU.Detalle,
NU.FechaEvento as [Fecha del evento],
@Vector_T as Vector_T,
@Vector_X as Vector_X
FROM NovedadesUsuarios NU
LEFT OUTER JOIN EventosDelSistema Ev ON NU.IdEventoDelSistema=Ev.IdEventoDelSistema
WHERE NU.IdEmpleado = @IdEmpleado and 
	 (NU.Confirmado is null or NU.Confirmado='NO')































GO

/****** Object:  StoredProcedure [dbo].[Obras_E]    Script Date: 03/15/2011 11:48:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

































CREATE Procedure [dbo].[Obras_E]
@IdObra int  AS 
Delete Obras
where (IdObra=@IdObra)

































GO

/****** Object:  StoredProcedure [dbo].[Obras_GenerarActivacionCompraMateriales]    Script Date: 03/15/2011 11:48:53 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO

































CREATE Procedure [dbo].[Obras_GenerarActivacionCompraMateriales]
@IdObra int,
@IdEquipo int
AS
TRUNCATE TABLE _TempActivacionCompraMateriales
INSERT INTO _TempActivacionCompraMateriales
SELECT 
	DetReq.IdEquipo,
	Requerimientos.IdObra,
	'RM',
	10,
	DetReq.IdDetalleRequerimiento,
	Null,
	DetReq.IdDetalleLMateriales,
	Requerimientos.NumeroRequerimiento,
	DetReq.NumeroItem,
	DetReq.FechaEntrega,
	DetReq.IdArticulo,
	DetReq.Observaciones,
	Case 	When DetReq.Cantidad is not null
		 Then DetReq.Cantidad
		Else 0
	End,
	DetReq.Cantidad1,
	DetReq.Cantidad2,
	DetReq.IdUnidad,
	Null,
	Case 	When DetReq.IdProveedor is not null
		 Then 'Telefonico'
		Else Null
	End,
	Null,
	Null,
	Null,
	DetReq.FechaEntrega_Tel,
	Null,
	Case 	When (Select Sum(DetalleReservas.CantidadUnidades) 
			From DetalleReservas 
			Where DetalleReservas.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento)  is not null
		 Then (Select Sum(DetalleReservas.CantidadUnidades) 
			From DetalleReservas 
			Where DetalleReservas.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento)
		Else 0
	End,
	Case 	When (Select Sum(DetalleRecepciones.Cantidad) 
			From DetalleRecepciones
			Where DetalleRecepciones.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento) is not null 
		 Then (Select Sum(DetalleRecepciones.Cantidad) 
			From DetalleRecepciones
			Where DetalleRecepciones.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento)
		Else 0
	End,
	Null
FROM DetalleRequerimientos DetReq
LEFT OUTER JOIN Requerimientos ON DetReq.IdRequerimiento = Requerimientos.IdRequerimiento
WHERE 	Requerimientos.IdObra is not null And 
	(@IdObra=-1 or Requerimientos.IdObra=@IdObra) And 
	(@IdEquipo=-1 or DetReq.IdEquipo=@IdEquipo) 
UNION ALL 
SELECT 
	DetalleRequerimientos.IdEquipo,
	Requerimientos.IdObra,
	Null,
	20,
	DetalleRequerimientos.IdDetalleRequerimiento,
	Null,
	Null,
	Null,
	Null,
	Null,
	Null,
	Null,
	Null,
	Null,
	Null,
	Null,
	DetPed.IdDetallePedido,
	'Nota de pedido',
	Convert(Varchar,Pedidos.NumeroPedido)+' / '+Convert(Varchar,Pedidos.SubNumero),
	DetPed.Cantidad,
	DetPed.FechaNecesidad,
	DetPed.FechaEntrega,
	Empleados.Nombre,
	Null,
	Null,
	Null
FROM DetallePedidos DetPed
LEFT OUTER JOIN DetalleRequerimientos ON DetalleRequerimientos.IdDetalleRequerimiento = DetPed.IdDetalleRequerimiento
LEFT OUTER JOIN Requerimientos ON DetalleRequerimientos.IdRequerimiento = Requerimientos.IdRequerimiento
LEFT OUTER JOIN Pedidos ON DetPed.IdPedido = Pedidos.IdPedido
LEFT OUTER JOIN Empleados ON Pedidos.IdComprador = Empleados.IdEmpleado
WHERE 	DetPed.IdDetalleRequerimiento is not null And Requerimientos.IdObra is not null And 
	(@IdObra=-1 or Requerimientos.IdObra=@IdObra) And 
	(@IdEquipo=-1 or DetalleRequerimientos.IdEquipo=@IdEquipo) 
UNION ALL 
SELECT 
	DetAco.IdEquipo,
	Acopios.IdObra,
	'LA',
	30,
	Null,
	DetAco.IdDetalleAcopios,
	Null,
	Acopios.NumeroAcopio,
	DetAco.NumeroItem,
	DetAco.FechaNecesidad,
	DetAco.IdArticulo,
	DetAco.Observaciones,
	Case 	When DetAco.Cantidad is not null
		 Then DetAco.Cantidad
		Else 0
	End,
	DetAco.Cantidad1,
	DetAco.Cantidad2,
	DetAco.IdUnidad,
	Null,
	Null,
	Null,
	Null,
	Null,
	Null,
	Null,
	Case 	When (Select Sum(DetalleReservas.CantidadUnidades) 
			From DetalleReservas 
			Where DetalleReservas.IdDetalleAcopios=DetAco.IdDetalleAcopios)  is not null
		 Then (Select Sum(DetalleReservas.CantidadUnidades) 
			From DetalleReservas 
			Where DetalleReservas.IdDetalleAcopios=DetAco.IdDetalleAcopios)
		Else 0
	End,
	Case 	When (Select Sum(DetalleRecepciones.Cantidad) 
			From DetalleRecepciones
			Where DetalleRecepciones.IdDetalleAcopios=DetAco.IdDetalleAcopios) is not null 
		 Then (Select Sum(DetalleRecepciones.Cantidad) 
			From DetalleRecepciones
			Where DetalleRecepciones.IdDetalleAcopios=DetAco.IdDetalleAcopios)
		Else 0
	End,
	Null
FROM DetalleAcopios DetAco
LEFT OUTER JOIN Acopios ON DetAco.IdAcopio = Acopios.IdAcopio
WHERE Acopios.IdObra is not null And 
	(@IdObra=-1 or Acopios.IdObra=@IdObra) And 
	(@IdEquipo=-1 or DetAco.IdEquipo=@IdEquipo) 
UNION ALL 
SELECT 
	DetalleAcopios.IdEquipo,
	Acopios.IdObra,
	Null,
	40,
	Null,
	DetalleAcopios.IdDetalleAcopios,
	Null,
	Null,
	Null,
	Null,
	Null,
	Null,
	Null,
	Null,
	Null,
	Null,
	DetPed.IdDetallePedido,
	'Nota de pedido',
	Convert(Varchar,Pedidos.NumeroPedido)+' / '+Convert(Varchar,Pedidos.SubNumero),
	DetPed.Cantidad,
	DetPed.FechaNecesidad,
	DetPed.FechaEntrega,
	Empleados.Nombre,
	Null,
	Null,
	Null
FROM DetallePedidos DetPed
LEFT OUTER JOIN DetalleAcopios ON DetalleAcopios.IdDetalleAcopios = DetPed.IdDetalleAcopios
LEFT OUTER JOIN Acopios ON DetalleAcopios.IdAcopio = Acopios.IdAcopio
LEFT OUTER JOIN Pedidos ON DetPed.IdPedido = Pedidos.IdPedido
LEFT OUTER JOIN Empleados ON Pedidos.IdComprador = Empleados.IdEmpleado
WHERE DetPed.IdDetalleAcopios is not null And Acopios.IdObra is not null And 
	(@IdObra=-1 or Acopios.IdObra=@IdObra) And 
	(@IdEquipo=-1 or DetalleAcopios.IdEquipo=@IdEquipo)

































GO

/****** Object:  StoredProcedure [dbo].[Obras_GenerarEstado]    Script Date: 03/15/2011 11:48:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


















CREATE Procedure [dbo].[Obras_GenerarEstado]

AS

TRUNCATE TABLE _TempEstadoDeObras

INSERT INTO _TempEstadoDeObras
SELECT
 DetLA.IdDetalleAcopios,
 Obras.NumeroObra,
 Case 	When DetLA.IdEquipo is not Null 
	 Then (Select Top 1 Equipos.Tag From Equipos 
		Where Equipos.IdEquipo=DetLA.IdEquipo)
	Else (Select Top 1 Equipos.Tag From Equipos 
		Where Equipos.IdEquipo=(Select Top 1 LMateriales.IdEquipo 
					From LMateriales
					Where LMateriales.IdLMateriales=(Select Top 1 DetalleLMateriales.IdLMateriales 
									  From DetalleLMateriales
									  Where DetalleLMateriales.IdDetalleAcopios=DetLA.IdDetalleAcopios)))
 End,
 Null,
 'L.Acopio',
 Acopios.NumeroAcopio,
 DetLA.NumeroItem,
 Empleados.Nombre,
 Sectores.Descripcion,
 DetLA.FechaNecesidad,
 (SELECT count(*) 
	FROM DetalleAcopios da
	WHERE da.IdAcopio=DetLA.IdAcopio),
 DetLA.Cumplido,
 (SELECT TOP 1 AutorizacionesPorComprobante.FechaAutorizacion
	FROM AutorizacionesPorComprobante
	WHERE AutorizacionesPorComprobante.IdFormulario=1 and AutorizacionesPorComprobante.IdComprobante=DetLA.IdAcopio),
 Articulos.Descripcion as [Articulo],
 DetLA.Cantidad,
 (SELECT TOP 1 Unidades.Descripcion
	FROM Unidades
	WHERE Unidades.IdUnidad=DetLA.IdUnidad ),
 (SELECT Sum(dp.Cantidad) 
	FROM DetallePedidos dp
	WHERE dp.IdDetalleAcopios=DetLA.IdDetalleAcopios),
 (SELECT Sum(dr.Cantidad) 
	FROM DetalleRecepciones dr
	WHERE dr.IdDetalleAcopios=DetLA.IdDetalleAcopios),
 (SELECT Count(*) 
	FROM FacturasCompra fc
	WHERE fc.TipoComprobante=1 and fc.IdDetalleComprobante=DetLA.IdDetalleAcopios),
 Cuentas.Descripcion,
 DetLA.Observaciones,
 Acopios.IdObra,
 Proveedores.RazonSocial as [Proveedor asignado],
 (SELECT Empleados.Nombre
	FROM Empleados
	WHERE Empleados.IdEmpleado=Acopios.IdComprador),
 DetLA.FechaLlamadoAProveedor,
 Acopios.Nombre,
 Acopios.Fecha,
 DetLA.Cantidad1,
 DetLA.Cantidad2
FROM DetalleAcopios DetLA
LEFT OUTER JOIN Acopios ON DetLA.IdAcopio = Acopios.IdAcopio
LEFT OUTER JOIN Obras ON Acopios.IdObra = Obras.IdObra
LEFT OUTER JOIN Empleados ON Acopios.Realizo=Empleados.IdEmpleado
LEFT OUTER JOIN Sectores ON Empleados.IdSector=Sectores.IdSector
LEFT OUTER JOIN Articulos ON DetLA.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Cuentas ON DetLA.IdCuenta = Cuentas.IdCuenta
LEFT OUTER JOIN Proveedores ON DetLA.IdProveedor = Proveedores.IdProveedor

UNION ALL

SELECT
 DetRM.IdDetalleRequerimiento,
 Obras.NumeroObra,
 Case 	When DetRM.IdEquipo is not Null 
	 Then (Select Top 1 Equipos.Tag From Equipos 
		Where Equipos.IdEquipo=DetRM.IdEquipo)
	Else (Select Top 1 Equipos.Tag From Equipos 
		 Where Equipos.IdEquipo=(Select Top 1 LMateriales.IdEquipo 
					 From LMateriales
					 Where LMateriales.IdLMateriales=(Select Top 1 DetalleLMateriales.IdLMateriales 
									  From DetalleLMateriales
									  Where DetalleLMateriales.IdDetalleLMateriales=DetRM.IdDetalleLMateriales)))
 End,
 CentrosCosto.Descripcion,
 'R.M.',
 Requerimientos.NumeroRequerimiento,
 DetRM.NumeroItem,
 Empleados.Nombre,
 Sectores.Descripcion,
 DetRM.FechaEntrega,
 (SELECT count(*) 
	FROM DetalleRequerimientos dr
	WHERE dr.IdRequerimiento=DetRM.IdRequerimiento),
 DetRM.Cumplido,
 (SELECT TOP 1 AutorizacionesPorComprobante.FechaAutorizacion
	FROM AutorizacionesPorComprobante
	WHERE AutorizacionesPorComprobante.IdFormulario=3 and AutorizacionesPorComprobante.IdComprobante=DetRM.IdRequerimiento),
 Articulos.Descripcion,
 DetRM.Cantidad,
 (SELECT TOP 1 Unidades.Descripcion
	FROM Unidades
	WHERE Unidades.IdUnidad=DetRM.IdUnidad ),
 (SELECT Sum(dp.Cantidad) 
	FROM DetallePedidos dp
	WHERE dp.IdDetalleRequerimiento=DetRM.IdDetalleRequerimiento),
 (SELECT Sum(dr.Cantidad) 
	FROM DetalleRecepciones dr
	WHERE dr.IdDetalleRequerimiento=DetRM.IdDetalleRequerimiento),
 (SELECT Sum(dr.Cantidad) 
	FROM DetalleComprobantesProveedores dcp
	LEFT OUTER JOIN DetalleRecepciones dr ON dr.IdDetalleRecepcion=dcp.IdDetalleRecepcion
	WHERE dr.IdDetalleRequerimiento=DetRM.IdDetalleRequerimiento),
 Cuentas.Descripcion,
 DetRM.Observaciones,
 Requerimientos.IdObra,
 Proveedores.RazonSocial,
 (SELECT Empleados.Iniciales
	FROM Empleados
	WHERE Empleados.IdEmpleado=Requerimientos.IdComprador),
 DetRM.FechaLlamadoAProveedor,
 Null,
 Requerimientos.FechaRequerimiento,
 DetRM.Cantidad1,
 DetRM.Cantidad2
FROM DetalleRequerimientos DetRM
LEFT OUTER JOIN Requerimientos ON DetRM.IdRequerimiento = Requerimientos.IdRequerimiento
LEFT OUTER JOIN Obras ON Requerimientos.IdObra = Obras.IdObra
LEFT OUTER JOIN Empleados ON Requerimientos.IdSolicito=Empleados.IdEmpleado
LEFT OUTER JOIN Sectores ON Empleados.IdSector=Sectores.IdSector
LEFT OUTER JOIN Articulos ON DetRM.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Cuentas ON DetRM.IdCuenta = Cuentas.IdCuenta
LEFT OUTER JOIN CentrosCosto ON DetRM.IdCentroCosto = CentrosCosto.IdCentroCosto
LEFT OUTER JOIN Proveedores ON DetRM.IdProveedor = Proveedores.IdProveedor

















GO

/****** Object:  StoredProcedure [dbo].[Obras_M]    Script Date: 03/15/2011 11:48:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE Procedure [dbo].[Obras_M]
@IdObra int ,
@NumeroObra varchar(13),
@IdCliente int,
@FechaInicio datetime,
@FechaFinalizacion datetime,
@Observaciones ntext,
@FechaEntrega datetime,
@Descripcion varchar(50),
@IdJefe int,
@TipoObra int,
@HorasEstimadas int,
@Consorcial varchar(2),
@EnviarEmail tinyint,
@Activa varchar(2),
@ParaInformes varchar(2),
@IdUnidadOperativa int,
@Jerarquia varchar(20),
@ArchivoAdjunto1 varchar(100),
@ArchivoAdjunto2 varchar(100),
@ArchivoAdjunto3 varchar(100),
@ArchivoAdjunto4 varchar(100),
@ArchivoAdjunto5 varchar(100),
@ArchivoAdjunto6 varchar(100),
@ArchivoAdjunto7 varchar(100),
@ArchivoAdjunto8 varchar(100),
@ArchivoAdjunto9 varchar(100),
@ArchivoAdjunto10 varchar(100),
@GeneraReservaStock varchar(2),
@IdGrupoObra int
AS
IF Exists(Select o.IdObra From Obras o Where o.IdObra=@IdObra)
	BEGIN
		UPDATE Obras
		SET
		 NumeroObra=@NumeroObra,
		 IdCliente=@IdCliente,
		 FechaInicio=@FechaInicio,
		 FechaFinalizacion=@FechaFinalizacion,
		 Observaciones=@Observaciones,
		 FechaEntrega=@FechaEntrega,
		 Descripcion=@Descripcion,
		 IdJefe=@IdJefe,
		 TipoObra=@TipoObra,
		 HorasEstimadas=@HorasEstimadas,
		 Consorcial=@Consorcial,
		 EnviarEmail=@EnviarEmail,
		 Activa=@Activa,
		 ParaInformes=@ParaInformes,
		 IdUnidadOperativa=@IdUnidadOperativa,
		 Jerarquia=@Jerarquia,
		 ArchivoAdjunto1=@ArchivoAdjunto1,
		 ArchivoAdjunto2=@ArchivoAdjunto2,
		 ArchivoAdjunto3=@ArchivoAdjunto3,
		 ArchivoAdjunto4=@ArchivoAdjunto4,
		 ArchivoAdjunto5=@ArchivoAdjunto5,
		 ArchivoAdjunto6=@ArchivoAdjunto6,
		 ArchivoAdjunto7=@ArchivoAdjunto7,
		 ArchivoAdjunto8=@ArchivoAdjunto8,
		 ArchivoAdjunto9=@ArchivoAdjunto9,
		 ArchivoAdjunto10=@ArchivoAdjunto10,
		 GeneraReservaStock=@GeneraReservaStock,
		 IdGrupoObra=@IdGrupoObra
		WHERE IdObra=@IdObra
	END
ELSE
	BEGIN
		INSERT INTO Obras
		(
		 IdObra,
		 NumeroObra,
		 IdCliente,
		 FechaInicio,
		 FechaFinalizacion,
		 Observaciones,
		 FechaEntrega,
		 Descripcion,
		 IdJefe,
		 TipoObra,
		 HorasEstimadas,
		 Consorcial,
		 EnviarEmail,
		 Activa,
		 ParaInformes,
		 IdUnidadOperativa,
		 Jerarquia,
		 ArchivoAdjunto1,
		 ArchivoAdjunto2,
		 ArchivoAdjunto3,
		 ArchivoAdjunto4,
		 ArchivoAdjunto5,
		 ArchivoAdjunto6,
		 ArchivoAdjunto7,
		 ArchivoAdjunto8,
		 ArchivoAdjunto9,
		 ArchivoAdjunto10,
		 GeneraReservaStock,
		 IdGrupoObra
		)
		VALUES
		(
		 @IdObra,
		 @NumeroObra,
		 @IdCliente,
		 @FechaInicio,
		 @FechaFinalizacion,
		 @Observaciones,
		 @FechaEntrega,
		 @Descripcion,
		 @IdJefe,
		 @TipoObra,
		 @HorasEstimadas,
		 @Consorcial,
		 @EnviarEmail,
		 @Activa,
		 @ParaInformes,
		 @IdUnidadOperativa,
		 @Jerarquia,
		 @ArchivoAdjunto1,
		 @ArchivoAdjunto2,
		 @ArchivoAdjunto3,
		 @ArchivoAdjunto4,
		 @ArchivoAdjunto5,
		 @ArchivoAdjunto6,
		 @ArchivoAdjunto7,
		 @ArchivoAdjunto8,
		 @ArchivoAdjunto9,
		 @ArchivoAdjunto10,
		 @GeneraReservaStock,
		 @IdGrupoObra
		)
	END
RETURN(@IdObra)





GO

/****** Object:  StoredProcedure [dbo].[Obras_T]    Script Date: 03/15/2011 11:48:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

































CREATE Procedure [dbo].[Obras_T]
@IdObra int
AS 
SELECT *
FROM Obras
where (IdObra=@IdObra)

































GO

/****** Object:  StoredProcedure [dbo].[Obras_TL]    Script Date: 03/15/2011 11:48:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE Procedure [dbo].[Obras_TL]
AS 
SELECT 
IdObra,
NumeroObra as Titulo
FROM Obras
ORDER BY NumeroObra





GO

/****** Object:  StoredProcedure [dbo].[Obras_TT]    Script Date: 03/15/2011 11:48:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO















CREATE Procedure [dbo].[Obras_TT]

AS 

declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='011111111111133'
set @vector_T='063337775555500'

SELECT 
 Obras.IdObra,
 Obras.NumeroObra as [Obra],
 CASE 	
	WHEN TipoObra=1 THEN 'Taller'
	WHEN TipoObra=2 THEN 'Montaje'
	WHEN TipoObra=3 THEN 'Servicio'
	ELSE Null
 END as [Tipo obra],
 Obras.Descripcion as [Descripcion obra],
 Clientes.RazonSocial as [Cliente],
 Obras.FechaInicio as [Fecha inicio],
 Obras.FechaEntrega as [Fecha entrega],
 CASE 	WHEN CONVERT(varchar(8),Obras.FechaFinalizacion,3)<>'01/01/00' THEN Obras.FechaFinalizacion 
	ELSE Null 
 END as [Fecha finalizacion],
 UnidadesOperativas.Descripcion as [Unidad operativa],
 Empleados.Nombre as [Jefe de obra],
 Obras.Activa as [Activa?],
 Obras.Jerarquia as [Jerarquia contable],
 Obras.ParaInformes as [Para informes],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM Obras
LEFT OUTER JOIN Clientes ON Obras.IdCliente = Clientes.IdCliente
LEFT OUTER JOIN Empleados ON Obras.IdJefe = Empleados.IdEmpleado
LEFT OUTER JOIN UnidadesOperativas ON Obras.IdUnidadOperativa = UnidadesOperativas.IdUnidadOperativa
ORDER BY Obras.NumeroObra














GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_Activas]    Script Date: 03/15/2011 11:48:54 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO















CREATE Procedure [dbo].[Obras_TX_Activas]

AS 

declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='011111111111133'
set @vector_T='073834572125400'

SELECT 
 Obras.IdObra,
 Obras.NumeroObra as [Obra],
 CASE 	
	WHEN TipoObra=1 THEN 'Taller'
	WHEN TipoObra=2 THEN 'Montaje'
	WHEN TipoObra=3 THEN 'Servicio'
	ELSE Null
 END as [Tipo obra],
 Obras.Descripcion as [Descripcion obra],
 Clientes.RazonSocial as [Cliente],
 Obras.FechaInicio as [Fecha inicio],
 Obras.FechaEntrega as [Fecha entrega],
 CASE 	WHEN CONVERT(varchar(8),Obras.FechaFinalizacion,3)<>'01/01/00' THEN Obras.FechaFinalizacion 
	ELSE Null 
 END as [Fecha finalizacion],
 UnidadesOperativas.Descripcion as [Unidad operativa],
 Empleados.Nombre as [Jefe de obra],
 Obras.Activa as [Activa?],
 Obras.Jerarquia as [Jerarquia contable],
 Obras.ParaInformes as [Para informes],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM Obras
LEFT OUTER JOIN Clientes ON Obras.IdCliente = Clientes.IdCliente
LEFT OUTER JOIN Empleados ON Obras.IdJefe = Empleados.IdEmpleado
LEFT OUTER JOIN UnidadesOperativas ON Obras.IdUnidadOperativa = UnidadesOperativas.IdUnidadOperativa
WHERE Obras.Activa='SI'
ORDER BY Obras.NumeroObra














GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_ConDetallePolizas]    Script Date: 03/15/2011 11:48:54 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[Obras_TX_ConDetallePolizas]

AS 

Declare @vector_X varchar(50),@vector_T varchar(50)
Set @vector_X='00011111111111133'
Set @vector_T='00053244510344300'

SELECT 
 0 as [IdAux],
 Obras.NumeroObra as [K_Obra],
 1 as [K_Orden],
 Obras.NumeroObra as [Obra],
 CASE 	
	WHEN TipoObra=1 THEN 'Taller'
	WHEN TipoObra=2 THEN 'Montaje'
	WHEN TipoObra=3 THEN 'Servicio'
	ELSE Null
 END as [Tipo obra],
 Clientes.RazonSocial as [Cliente],
 Obras.FechaInicio as [Fecha inicio],
 Obras.FechaEntrega as [Fecha entrega],
 CASE 	WHEN CONVERT(varchar(8),Obras.FechaFinalizacion,3)<>'01/01/00' THEN Obras.FechaFinalizacion 
	ELSE Null 
 END as [Fecha finalizacion],
 Null as [Aseguradora],
 Null as [Tipo poliza],
 Null as [Nro. poliza],
 Null as [Fecha vig.],
 Null as [Fecha vto.cuota],
 Null as [Importe],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM Obras 
LEFT OUTER JOIN Clientes ON Obras.IdCliente = Clientes.IdCliente

UNION ALL

SELECT 
 DetPol.IdDetalleObraPoliza as [IdAux],
 Obras.NumeroObra as [K_Obra],
 2 as [K_Orden],
 Null as [Obra],
 Null as [Tipo obra],
 Null as [Cliente],
 Null as [Fecha inicio],
 Null as [Fecha entrega],
 Null as [Fecha finalizacion],
 Proveedores.RazonSocial as [Aseguradora],
 TiposPoliza.Descripcion as [Tipo poliza],
 DetPol.NumeroPoliza as [Nro. poliza],
 DetPol.FechaVigencia as [Fecha vig.],
 DetPol.FechaVencimientoCuota as [Fecha vto.cuota],
 DetPol.Importe as [Importe],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleObrasPolizas DetPol
LEFT OUTER JOIN Obras ON DetPol.IdObra = Obras.IdObra
LEFT OUTER JOIN Proveedores ON DetPol.IdProveedor = Proveedores.IdProveedor
LEFT OUTER JOIN TiposPoliza ON DetPol.IdTipoPoliza = TiposPoliza.IdTipoPoliza

UNION ALL

SELECT 
 0 as [IdAux],
 Obras.NumeroObra as [K_Obra],
 3 as [K_Orden],
 Null as [Obra],
 Null as [Tipo obra],
 Null as [Cliente],
 Null as [Fecha inicio],
 Null as [Fecha entrega],
 Null as [Fecha finalizacion],
 Null as [Aseguradora],
 Null as [Tipo poliza],
 Null as [Nro. poliza],
 Null as [Fecha vig.],
 Null as [Fecha vto.cuota],
 Null as [Importe],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM Obras 

ORDER by [K_Obra],[K_Orden]






























GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_DatosDeLaObra]    Script Date: 03/15/2011 11:48:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

































CREATE Procedure [dbo].[Obras_TX_DatosDeLaObra]
@IdObra int
AS 
Select 
Obras.IdObra,
Obras.NumeroObra as [Obra],
Clientes.RazonSocial as [Cliente],
Obras.FechaInicio as [Fecha inicio],
Obras.FechaEntrega as [Fecha entrega],
CASE 	WHEN CONVERT(varchar(8),Obras.FechaFinalizacion,3)<>'01/01/00' THEN Obras.FechaFinalizacion 
	ELSE Null 
END as [Fecha finalizacion],
Obras.HorasEstimadas,
Obras.Consorcial
FROM Obras
LEFT OUTER JOIN Clientes ON Obras.IdCliente = Clientes.IdCliente
WHERE IdObra=@IdObra

































GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_Habilitadas]    Script Date: 03/15/2011 11:48:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO















CREATE Procedure [dbo].[Obras_TX_Habilitadas]

AS 

declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='0111111111133'
set @vector_T='0438355555500'

SELECT 
 Obras.IdObra,
 Obras.NumeroObra as [Obra],
 CASE 	
	WHEN TipoObra=1 THEN 'Taller'
	WHEN TipoObra=2 THEN 'Montaje'
	WHEN TipoObra=3 THEN 'Servicio'
	ELSE Null
 END as [Tipo obra],
 Obras.Descripcion as [Descripcion obra],
 Clientes.RazonSocial as [Cliente],
 Obras.FechaInicio as [Fecha inicio],
 Obras.FechaEntrega as [Fecha entrega],
 CASE 	WHEN CONVERT(varchar(8),Obras.FechaFinalizacion,3)<>'01/01/00' THEN Obras.FechaFinalizacion 
	ELSE Null 
 END as [Fecha finalizacion],
 Empleados.Nombre as [Jefe de obra],
 Obras.Activa as [Activa?],
 Obras.ParaInformes as [Para informes],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM Obras
LEFT OUTER JOIN Clientes ON Obras.IdCliente = Clientes.IdCliente
LEFT OUTER JOIN Empleados ON Obras.IdJefe = Empleados.IdEmpleado
WHERE Obras.FechaFinalizacion is null
ORDER BY Obras.NumeroObra














GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_HabilitadasExcel]    Script Date: 03/15/2011 11:48:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO

































CREATE Procedure [dbo].[Obras_TX_HabilitadasExcel]
@TipoObra varchar(1),
@IdObra as int,
@EsObra as varchar(2)
AS 
Select 
Obras.IdObra as [Id],
'O' as [Tipo],
Obras.NumeroObra as [Obra],
Clientes.RazonSocial as [Cliente],
Obras.FechaInicio as [Fecha inicio],
Obras.FechaEntrega as [Fecha entrega],
CASE 	WHEN CONVERT(varchar(8),Obras.FechaFinalizacion,3)<>'01/01/00' THEN Obras.FechaFinalizacion 
	ELSE Null 
END as [Fecha finalizacion]
FROM Obras
LEFT OUTER JOIN Clientes ON Obras.IdCliente = Clientes.IdCliente
WHERE Obras.FechaFinalizacion is null and
	(@TipoObra='*' or
	 (@TipoObra='1' and Obras.IdObra=@IdObra and @EsObra='SI') or 
	 (@TipoObra='T' and Obras.TipoObra=1) or 
	 (@TipoObra='M' and Obras.TipoObra=2) or 
	 (@TipoObra='S' and Obras.TipoObra=3) )
Union
Select 
IdOrdenTrabajo+100000 as [Id],
'T' as [Tipo],
NumeroOrdenTrabajo as [Obra],
Descripcion as [Cliente],
FechaInicio as [Fecha inicio],
FechaEntrega as [Fecha entrega],
CASE 	WHEN CONVERT(varchar(8),FechaFinalizacion,3)<>'01/01/00' THEN FechaFinalizacion 
	ELSE Null 
END as [Fecha finalizacion]
FROM OrdenesTrabajo
WHERE   OrdenesTrabajo.FechaFinalizacion is null and 
	(@TipoObra='*' or (@TipoObra='1' and OrdenesTrabajo.IdOrdenTrabajo=@IdObra and @EsObra='NO'))
ORDER BY [Obra]

































GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_Inactivas]    Script Date: 03/15/2011 11:48:54 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO

































CREATE Procedure [dbo].[Obras_TX_Inactivas]
AS 
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='011111111133'
set @vector_T='043355555500'
Select 
Obras.IdObra,
Obras.NumeroObra as [Obra],
CASE 	
	WHEN TipoObra=1 THEN 'Taller'
	WHEN TipoObra=2 THEN 'Montaje'
	WHEN TipoObra=3 THEN 'Servicio'
	ELSE Null
END as [Tipo obra],
Clientes.RazonSocial as [Cliente],
Obras.FechaInicio as [Fecha inicio],
Obras.FechaEntrega as [Fecha entrega],
CASE 	WHEN CONVERT(varchar(8),Obras.FechaFinalizacion,3)<>'01/01/00' THEN Obras.FechaFinalizacion 
	ELSE Null 
END as [Fecha finalizacion],
Empleados.Nombre as [Jefe de obra],
Obras.Activa as [Activa?],
Obras.ParaInformes as [Para informes],
@Vector_T as Vector_T,
@Vector_X as Vector_X
FROM Obras
LEFT OUTER JOIN Clientes ON Obras.IdCliente = Clientes.IdCliente
LEFT OUTER JOIN Empleados ON Obras.IdJefe = Empleados.IdEmpleado
WHERE Obras.Activa='NO'
ORDER BY Obras.NumeroObra

































GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_ItemsDocumentacion]    Script Date: 03/15/2011 11:48:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

































CREATE Procedure [dbo].[Obras_TX_ItemsDocumentacion]
@IdObra as int
AS 
Select 
dd.IdItemDocumentacion,
ItemsDocumentacion.Descripcion
from DetalleAcoHHItemsDocumentacion dd
Left Outer Join ItemsDocumentacion ON dd.IdItemDocumentacion=ItemsDocumentacion.IdItemDocumentacion
Left Outer Join AcoHHItemsDocumentacion ad ON dd.IdAcoHHItemDocumentacion=ad.IdAcoHHItemDocumentacion
Left Outer Join Equipos ON ad.IdGrupoTareaHH=Equipos.IdGrupoTareaHH
Left Outer Join Obras ON Equipos.IdObra=Obras.IdObra
Where Equipos.IdObra=@IdObra
Group By dd.IdItemDocumentacion,ItemsDocumentacion.Descripcion

































GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_ObrasMasOT]    Script Date: 03/15/2011 11:48:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

































CREATE Procedure [dbo].[Obras_TX_ObrasMasOT]
AS 
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='0111111111133'
set @vector_T='0493377755500'
Select 
Obras.IdObra,
Obras.NumeroObra as [Obra],
'O' as [Tipo],
CASE 	
	WHEN TipoObra=1 THEN 'Taller'
	WHEN TipoObra=2 THEN 'Montaje'
	WHEN TipoObra=3 THEN 'Servicio'
	ELSE Null
END as [Tipo obra],
Clientes.RazonSocial as [Cliente],
Obras.FechaInicio as [Fecha inicio],
Obras.FechaEntrega as [Fecha entrega],
CASE 	WHEN CONVERT(varchar(8),Obras.FechaFinalizacion,3)<>'01/01/00' THEN Obras.FechaFinalizacion 
	ELSE Null 
END as [Fecha finalizacion],
Empleados.Nombre as [Jefe de obra],
Obras.Activa as [Activa?],
Obras.ParaInformes as [Para informes],
@Vector_T as Vector_T,
@Vector_X as Vector_X
FROM Obras
LEFT OUTER JOIN Clientes ON Obras.IdCliente = Clientes.IdCliente
LEFT OUTER JOIN Empleados ON Obras.IdJefe = Empleados.IdEmpleado
Union
Select
OrdenesTrabajo.IdOrdenTrabajo+100000,
OrdenesTrabajo.NumeroOrdenTrabajo as [Obra],
'T' as [Tipo],
'O.Trabajo' as [Tipo obra],
OrdenesTrabajo.Descripcion as [Cliente],
OrdenesTrabajo.FechaInicio as [Fecha inicio],
OrdenesTrabajo.FechaEntrega as [Fecha entrega],
CASE 	WHEN CONVERT(varchar(8),OrdenesTrabajo.FechaFinalizacion,3)<>'01/01/00' THEN OrdenesTrabajo.FechaFinalizacion 
	ELSE Null 
END as [Fecha finalizacion],
Null as [Jefe de obra],
Null as [Activa?],
Null as [Para informes],
@Vector_T as Vector_T,
@Vector_X as Vector_X
FROM OrdenesTrabajo
ORDER BY [Obra]

































GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_ObrasMasOTParaCombo]    Script Date: 03/15/2011 11:48:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

































CREATE Procedure [dbo].[Obras_TX_ObrasMasOTParaCombo]
AS 
Select 
IdObra as [Id],
NumeroObra as [Titulo]
FROM Obras
WHERE Obras.FechaFinalizacion is null
Union
Select 
IdOrdenTrabajo+100000 as [Id],
NumeroOrdenTrabajo as [Titulo]
FROM OrdenesTrabajo
WHERE OrdenesTrabajo.FechaFinalizacion is null
ORDER BY [Titulo]

































GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_ParaInformes]    Script Date: 03/15/2011 11:48:54 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO

































CREATE Procedure [dbo].[Obras_TX_ParaInformes]
AS 
Select 
Obras.IdObra as [Id],
'O' as [Tipo],
Obras.NumeroObra as [Obra],
Clientes.RazonSocial as [Cliente],
Obras.FechaInicio as [Fecha inicio],
Obras.FechaEntrega as [Fecha entrega],
CASE 	WHEN CONVERT(varchar(8),Obras.FechaFinalizacion,3)<>'01/01/00' THEN Obras.FechaFinalizacion 
	ELSE Null 
END as [Fecha finalizacion]
FROM Obras
LEFT OUTER JOIN Clientes ON Obras.IdCliente = Clientes.IdCliente
WHERE Obras.ParaInformes='SI'
ORDER BY [Obra]

































GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_ParaPopUp]    Script Date: 03/15/2011 11:48:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

































CREATE Procedure [dbo].[Obras_TX_ParaPopUp]
AS 
Select 
IdObra as [Id],
NumeroObra as [Clave],
'O' as [Nivel],
CASE 	WHEN TipoObra is null THEN 1
	ELSE TipoObra
END as [Tipo]
FROM Obras
WHERE Obras.FechaFinalizacion is null 
union all
Select 
IdItemProduccion as [Id],
Descripcion as [Clave],
'C' as [Nivel],
Null as [Tipo]
FROM ItemsProduccion 
union all
Select 
IdTareaMantenimiento as [Id],
Descripcion as [Clave],
'M' as [Nivel],
Null as [Tipo]
FROM TareasMantenimiento
union all
Select 
IdOrdenTrabajo as [Id],
NumeroOrdenTrabajo+' '+Descripcion as [Clave],
'T' as [Nivel],
Null as [Tipo]
FROM OrdenesTrabajo
WHERE OrdenesTrabajo.FechaFinalizacion is null
ORDER by Nivel,Tipo,Clave

































GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

































CREATE Procedure [dbo].[Obras_TX_ParaTransmitir]
AS 
SELECT *
FROM Obras
WHERE EnviarEmail=1

































GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_ParaTransmitir_Todos]    Script Date: 03/15/2011 11:48:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

































CREATE Procedure [dbo].[Obras_TX_ParaTransmitir_Todos]
AS 
SELECT *
FROM Obras

































GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_PorId]    Script Date: 03/15/2011 11:48:54 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO























CREATE Procedure [dbo].[Obras_TX_PorId]
@IdObra int
AS 
SELECT *
FROM Obras
WHERE (IdObra=@IdObra)























GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_PorNumero]    Script Date: 03/15/2011 11:48:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
























CREATE Procedure [dbo].[Obras_TX_PorNumero]
@NumeroObra varchar(13)
AS 
Select  * 
From Obras
Where NumeroObra=@NumeroObra























GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

































CREATE Procedure [dbo].[Obras_TX_SetearComoTransmitido]
AS 
Update Obras
SET EnviarEmail=0
WHERE EnviarEmail<>0

































GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_TodasActivasParaCombo]    Script Date: 03/15/2011 11:48:54 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE Procedure [dbo].[Obras_TX_TodasActivasParaCombo]
AS 
SELECT 
IdObra,
NumeroObra as Titulo
FROM Obras
WHERE Obras.FechaFinalizacion is null
ORDER BY NumeroObra





GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_TodasParaCombo]    Script Date: 03/15/2011 11:48:54 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[Obras_TX_TodasParaCombo]
AS 
Select 
 IdObra,
 NumeroObra as Titulo
FROM Obras
ORDER BY NumeroObra






























GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_TodosLosItems]    Script Date: 03/15/2011 11:48:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO

































CREATE PROCEDURE [dbo].[Obras_TX_TodosLosItems]
as
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='01111111111111111111111111133'
set @vector_T='04241111444444444444444444400'
SELECT
DetLA.IdDetalleAcopios as [Id],
Obras.NumeroObra as [Obra],
Equipos.Tag as [Equipo],
'L.Acopio' as [Comprobante],
Acopios.NumeroAcopio as [Numero],
DetLA.NumeroItem as [Item],
Empleados.Nombre as [Emisor],
Sectores.Descripcion as [Sector],
DetLA.FechaNecesidad as [Fecha nec.],
Null as [Total items],
Null as [Cumplido],
Null as [Fecha ult.firma],
Articulos.Descripcion as [Articulo],
DetLA.Cantidad as [Cant.],
( SELECT substring(Unidades.Descripcion,1,20)
	FROM Unidades
	WHERE Unidades.IdUnidad=DetLA.IdUnidad ) as [Unidad en],
Pedidos.NumeroPedido as [Pedido],
Pedidos.FechaPedido as [Fecha],
Proveedores.RazonSocial as [Proveedor],
( SELECT Empleados.Nombre
	FROM Empleados
	WHERE Empleados.IdEmpleado=Pedidos.IdComprador ) as [Comprador],
DetallePedidos.FechaEntrega as [F.entrega],
( Pedidos.TotalPedido-Pedidos.TotalIva1 ) as [Importe s/iva],
Case
	When Recepciones.NumeroRecepcion1 is not null Then str(Recepciones.NumeroRecepcion1,4)+'-'+str(Recepciones.NumeroRecepcion2,8)
	Else Null
End as [Numero recepcion],
Recepciones.FechaRecepcion as [Fecha recepcion],
DetalleRecepciones.Cantidad as [Cant.recibida],
Null as [Factura],
Null as [Fecha factura],
Null as [Importe factura]
FROM DetalleAcopios DetLA
LEFT OUTER JOIN Acopios ON DetLA.IdAcopio = Acopios.IdAcopio
LEFT OUTER JOIN Obras ON Acopios.IdObra = Obras.IdObra
LEFT OUTER JOIN DetalleLMateriales ON DetLA.IdDetalleAcopios = DetalleLMateriales.IdDetalleAcopios
LEFT OUTER JOIN LMateriales ON DetalleLMateriales.IdLMateriales=LMateriales.IdLMateriales
LEFT OUTER JOIN Equipos ON LMateriales.IdEquipo=Equipos.IdEquipo
LEFT OUTER JOIN Empleados ON Acopios.Realizo=Empleados.IdEmpleado
LEFT OUTER JOIN Sectores ON Empleados.IdSector=Sectores.IdSector
LEFT OUTER JOIN Articulos ON DetLA.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN DetallePedidos ON DetLA.IdDetalleAcopios = DetallePedidos.IdDetalleAcopios
LEFT OUTER JOIN Pedidos ON DetallePedidos.IdPedido = Pedidos.IdPedido
LEFT OUTER JOIN Proveedores ON Pedidos.IdProveedor = Proveedores.IdProveedor
LEFT OUTER JOIN DetalleRecepciones ON DetallePedidos.IdDetallePedido=DetalleRecepciones.IdDetallePedido
LEFT OUTER JOIN Recepciones ON DetalleRecepciones.IdRecepcion = Recepciones.IdRecepcion
UNION
SELECT
DetRM.IdDetalleRequerimiento as [Id],
Obras.NumeroObra as [Obra],
Equipos.Tag as [Equipo],
'R.M.' as [Comprobante],
Requerimientos.NumeroRequerimiento as [Numero],
DetRM.NumeroItem as [Item],
Empleados.Nombre as [Emisor],
Sectores.Descripcion as [Sector],
DetRM.FechaEntrega as [Fecha nec.],
( SELECT count(*) 
	FROM DetalleRequerimientos dr
	WHERE dr.IdRequerimiento=DetRM.IdRequerimiento) as [Total items],
DetRM.Cumplido as [Cumplido],
( SELECT TOP 1 AutorizacionesPorComprobante.FechaAutorizacion
	FROM AutorizacionesPorComprobante
	WHERE AutorizacionesPorComprobante.IdFormulario=3 and AutorizacionesPorComprobante.IdComprobante=DetRM.IdRequerimiento) as [Fecha ult.firma],
Articulos.Descripcion as [Articulo],
DetRM.Cantidad as [Cant.],
( SELECT TOP 1 substring(Unidades.Descripcion,1,20)
	FROM Unidades
	WHERE Unidades.IdUnidad=DetRM.IdUnidad ) as [Unidad en],
Pedidos.NumeroPedido as [Pedido],
Pedidos.FechaPedido as [Fecha],
Case
	When Not DetRM.IdProveedor is null Then 
		(Select Proveedores.RazonSocial From Proveedores Where DetRM.IdProveedor = Proveedores.IdProveedor)
	Else 
		(Select Proveedores.RazonSocial From Proveedores Where Pedidos.IdProveedor = Proveedores.IdProveedor)
End as [Proveedor],
( SELECT TOP 1 Empleados.Nombre
	FROM Empleados
	WHERE Empleados.IdEmpleado=Pedidos.IdComprador ) as [Comprador],
DetallePedidos.FechaEntrega as [F.entrega],
( Pedidos.TotalPedido-Pedidos.TotalIva1 ) as [Importe s/iva],
Case
	When EXISTS(	Select Top 1 DetalleRecepciones.IdRecepcion 
			From DetalleRecepciones 
			Where DetRM.IdDetalleRequerimiento=DetalleRecepciones.IdDetalleRequerimiento )
		Then (	Select Top 1 str(Recepciones.NumeroRecepcion1,4)+'-'+str(Recepciones.NumeroRecepcion2,8) 
			From Recepciones 
			Where Recepciones.IdRecepcion=( Select Top 1 DetalleRecepciones.IdRecepcion 
							From DetalleRecepciones 
							Where DetRM.IdDetalleRequerimiento=DetalleRecepciones.IdDetalleRequerimiento ) )
	When EXISTS(	Select Top 1 DetalleRecepciones.IdRecepcion 
			From DetalleRecepciones 
			Where DetallePedidos.IdDetallePedido=DetalleRecepciones.IdDetallePedido )
		Then (	Select Top 1 str(Recepciones.NumeroRecepcion1,4)+'-'+str(Recepciones.NumeroRecepcion2,8) 
			From Recepciones 
			Where Recepciones.IdRecepcion=( Select Top 1 DetalleRecepciones.IdRecepcion 
							From DetalleRecepciones 
							Where DetallePedidos.IdDetallePedido=DetalleRecepciones.IdDetallePedido ) )
	Else Null
End as [Numero recepcion],
Case
	When EXISTS(	Select Top 1 DetalleRecepciones.IdRecepcion 
			From DetalleRecepciones 
			Where DetRM.IdDetalleRequerimiento=DetalleRecepciones.IdDetalleRequerimiento )
		Then (	Select Top 1 Recepciones.FechaRecepcion 
			From Recepciones 
			Where Recepciones.IdRecepcion=( Select Top 1 DetalleRecepciones.IdRecepcion 
							From DetalleRecepciones 
							Where DetRM.IdDetalleRequerimiento=DetalleRecepciones.IdDetalleRequerimiento ) )
	When EXISTS(	Select Top 1 DetalleRecepciones.IdRecepcion 
			From DetalleRecepciones 
			Where DetallePedidos.IdDetallePedido=DetalleRecepciones.IdDetallePedido )
		Then (	Select Top 1 Recepciones.FechaRecepcion 
			From Recepciones 
			Where Recepciones.IdRecepcion=( Select Top 1 DetalleRecepciones.IdRecepcion 
							From DetalleRecepciones 
							Where DetallePedidos.IdDetallePedido=DetalleRecepciones.IdDetallePedido ) )
	Else Null
End as [Fecha recepcion],
Case
	When EXISTS(	Select Top 1 DetalleRecepciones.IdRecepcion 
			From DetalleRecepciones 
			Where DetRM.IdDetalleRequerimiento=DetalleRecepciones.IdDetalleRequerimiento )
		Then (	Select Top 1 DetalleRecepciones.Cantidad 
			From DetalleRecepciones 
			Where DetRM.IdDetalleRequerimiento=DetalleRecepciones.IdDetalleRequerimiento )
	When EXISTS(	Select Top 1 DetalleRecepciones.IdRecepcion 
			From DetalleRecepciones 
			Where DetallePedidos.IdDetallePedido=DetalleRecepciones.IdDetallePedido )
		Then (	Select Top 1 DetalleRecepciones.Cantidad 
			From DetalleRecepciones 
			Where DetallePedidos.IdDetallePedido=DetalleRecepciones.IdDetallePedido )
	Else Null
End as [Cant.recibida],
str(DetRM.NumeroFacturaCompra1,4)+' - '+str(DetRM.NumeroFacturaCompra2,8) as [Factura],
DetRM.FechaFacturaCompra as [Fecha factura],
DetRM.ImporteFacturaCompra as [Importe factura]
FROM DetalleRequerimientos DetRM
LEFT OUTER JOIN Requerimientos ON DetRM.IdRequerimiento = Requerimientos.IdRequerimiento
LEFT OUTER JOIN Obras ON Requerimientos.IdObra = Obras.IdObra
LEFT OUTER JOIN DetalleLMateriales ON DetRM.IdDetalleLMateriales = DetalleLMateriales.IdDetalleLMateriales
LEFT OUTER JOIN LMateriales ON DetalleLMateriales.IdLMateriales=LMateriales.IdLMateriales
LEFT OUTER JOIN Equipos ON LMateriales.IdEquipo=Equipos.IdEquipo
LEFT OUTER JOIN Empleados ON Requerimientos.IdSolicito=Empleados.IdEmpleado
LEFT OUTER JOIN Sectores ON Empleados.IdSector=Sectores.IdSector
LEFT OUTER JOIN Articulos ON DetRM.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN DetallePedidos ON DetallePedidos.IdDetalleRequerimiento=DetRM.IdDetalleRequerimiento
LEFT OUTER JOIN Pedidos ON DetallePedidos.IdPedido = Pedidos.IdPedido
Order By Obras.NumeroObra,Equipos.Tag,Articulos.Descripcion

































GO

/****** Object:  StoredProcedure [dbo].[Obras_TX_TT]    Script Date: 03/15/2011 11:48:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO















CREATE Procedure [dbo].[Obras_TX_TT]

@IdObra int

AS 

declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='0111111111133'
set @vector_T='0438377755500'

SELECT 
 Obras.IdObra,
 Obras.NumeroObra as [Obra],
 CASE 	
	WHEN TipoObra=1 THEN 'Taller'
	WHEN TipoObra=2 THEN 'Montaje'
	WHEN TipoObra=3 THEN 'Servicio'
	ELSE Null
 END as [Tipo obra],
 Obras.Descripcion as [Descripcion obra],
 Clientes.RazonSocial as [Cliente],
 Obras.FechaInicio as [Fecha inicio],
 Obras.FechaEntrega as [Fecha entrega],
 Obras.FechaFinalizacion as [Fecha finalizacion],
 Empleados.Nombre as [Jefe de obra],
 Obras.Activa as [Activa?],
 Obras.ParaInformes as [Para informes],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM Obras
LEFT OUTER JOIN Clientes ON Obras.IdCliente = Clientes.IdCliente
LEFT OUTER JOIN Empleados ON Obras.IdJefe = Empleados.IdEmpleado
WHERE (IdObra=@IdObra)














GO

/****** Object:  StoredProcedure [dbo].[OtrosIngresosAlmacen_A]    Script Date: 03/15/2011 11:48:54 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE Procedure [dbo].[OtrosIngresosAlmacen_A]
@IdOtroIngresoAlmacen int  output,
@NumeroOtroIngresoAlmacen int,
@FechaOtroIngresoAlmacen datetime,
@IdObra int,
@Observaciones ntext,
@Aprobo int,
@TipoIngreso int,
@Emitio int,
@FechaRegistracion datetime,
@EnviarEmail tinyint,
@IdOtroIngresoAlmacenOriginal int,
@IdOrigenTransmision int,
@FechaImportacionTransmision datetime,
@Anulado varchar(2),
@IdAutorizaAnulacion int,
@FechaAnulacion datetime
AS 
INSERT INTO OtrosIngresosAlmacen
(
 NumeroOtroIngresoAlmacen,
 FechaOtroIngresoAlmacen,
 IdObra,
 Observaciones,
 Aprobo,
 TipoIngreso,
 Emitio,
 FechaRegistracion,
 EnviarEmail,
 IdOtroIngresoAlmacenOriginal,
 IdOrigenTransmision,
 FechaImportacionTransmision,
 Anulado,
 IdAutorizaAnulacion,
 FechaAnulacion
)
VALUES 
(
 @NumeroOtroIngresoAlmacen,
 @FechaOtroIngresoAlmacen,
 @IdObra,
 @Observaciones,
 @Aprobo,
 @TipoIngreso,
 @Emitio,
 GetDate(),
 @EnviarEmail,
 @IdOtroIngresoAlmacenOriginal,
 @IdOrigenTransmision,
 @FechaImportacionTransmision,
 @Anulado,
 @IdAutorizaAnulacion,
 @FechaAnulacion
)
SELECT @IdOtroIngresoAlmacen=@@identity
RETURN(@IdOtroIngresoAlmacen)



GO

/****** Object:  StoredProcedure [dbo].[OtrosIngresosAlmacen_AjustarStockPorAnulacion]    Script Date: 03/15/2011 11:48:55 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE PROCEDURE [dbo].[OtrosIngresosAlmacen_AjustarStockPorAnulacion]

@IdOtroIngresoAlmacen int

AS

CREATE TABLE #Auxiliar1	
			(
			 IdDetalleOtroIngresoAlmacen INTEGER,
			 IdArticulo INTEGER,
			 Cantidad NUMERIC(18,2),
			 IdUnidad INTEGER,
			 Partida VARCHAR(20),
			 IdUbicacion INTEGER,
			 IdObra INTEGER
			)
INSERT INTO #Auxiliar1 
 SELECT Det.IdDetalleOtroIngresoAlmacen, Det.IdArticulo, Det.Cantidad, 
	Det.IdUnidad, Det.Partida, Det.IdUbicacion, Det.IdObra
 FROM DetalleOtrosIngresosAlmacen Det
 WHERE Det.IdOtroIngresoAlmacen = @IdOtroIngresoAlmacen

CREATE NONCLUSTERED INDEX IX__Auxiliar1 ON #Auxiliar1 (IdDetalleOtroIngresoAlmacen) ON [PRIMARY]

/*  CURSOR  */
DECLARE @IdStock int, @IdDetalleOtroIngresoAlmacen int, @IdArticulo int, 
	@Cantidad numeric(18,2), @IdUnidad int, @Partida varchar(20), @IdUbicacion int, 
	@IdObra int

DECLARE Cur CURSOR LOCAL FORWARD_ONLY 
	FOR
		SELECT IdDetalleOtroIngresoAlmacen, IdArticulo, Cantidad, IdUnidad, 
			Partida, IdUbicacion, IdObra
		FROM #Auxiliar1
		ORDER BY IdDetalleOtroIngresoAlmacen
OPEN Cur
FETCH NEXT FROM Cur INTO @IdDetalleOtroIngresoAlmacen, @IdArticulo, @Cantidad, 
			 @IdUnidad, @Partida, @IdUbicacion, @IdObra
WHILE @@FETCH_STATUS = 0
   BEGIN
	SET @IdStock=IsNull((Select Top 1 Stock.IdStock
				From Stock 
				Where IdArticulo=@IdArticulo and Partida=@Partida and 
					IdUbicacion=@IdUbicacion and IdObra=@IdObra and 
					IdUnidad=@IdUnidad),0)
	IF @IdStock>0 
		UPDATE Stock
		SET CantidadUnidades=IsNull(CantidadUnidades,0)-@Cantidad
		WHERE IdArticulo=@IdArticulo and Partida=@Partida and 
			IdUbicacion=@IdUbicacion and IdObra=@IdObra and IdUnidad=@IdUnidad
	ELSE
		INSERT INTO Stock (IdArticulo, Partida, CantidadUnidades, CantidadAdicional,
					IdUnidad, IdUbicacion, IdObra)
		VALUES (@IdArticulo, @Partida, @Cantidad*-1, Null, @IdUnidad, @IdUbicacion, @IdObra)
	FETCH NEXT FROM Cur INTO @IdDetalleOtroIngresoAlmacen, @IdArticulo, @Cantidad, 
				 @IdUnidad, @Partida, @IdUbicacion, @IdObra
END
CLOSE Cur
DEALLOCATE Cur

DROP TABLE #Auxiliar1



GO

/****** Object:  StoredProcedure [dbo].[OtrosIngresosAlmacen_E]    Script Date: 03/15/2011 11:48:55 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO


























CREATE Procedure [dbo].[OtrosIngresosAlmacen_E]
@IdOtroIngresoAlmacen int  AS 
Delete OtrosIngresosAlmacen
Where (IdOtroIngresoAlmacen=@IdOtroIngresoAlmacen)


























GO

/****** Object:  StoredProcedure [dbo].[OtrosIngresosAlmacen_M]    Script Date: 03/15/2011 11:48:55 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE Procedure [dbo].[OtrosIngresosAlmacen_M]
@IdOtroIngresoAlmacen int,
@NumeroOtroIngresoAlmacen int,
@FechaOtroIngresoAlmacen datetime,
@IdObra int,
@Observaciones ntext,
@Aprobo int,
@TipoIngreso int,
@Emitio int,
@FechaRegistracion datetime,
@EnviarEmail tinyint,
@IdOtroIngresoAlmacenOriginal int,
@IdOrigenTransmision int,
@FechaImportacionTransmision datetime,
@Anulado varchar(2),
@IdAutorizaAnulacion int,
@FechaAnulacion datetime
AS
UPDATE OtrosIngresosAlmacen
SET 
 NumeroOtroIngresoAlmacen=@NumeroOtroIngresoAlmacen,
 FechaOtroIngresoAlmacen=@FechaOtroIngresoAlmacen,
 IdObra=@IdObra,
 Observaciones=@Observaciones,
 Aprobo=@Aprobo,
 TipoIngreso=@TipoIngreso,
 Emitio=@Emitio,
 FechaRegistracion=@FechaRegistracion,
 EnviarEmail=@EnviarEmail,
 IdOtroIngresoAlmacenOriginal=@IdOtroIngresoAlmacenOriginal,
 IdOrigenTransmision=@IdOrigenTransmision,
 FechaImportacionTransmision=@FechaImportacionTransmision,
 Anulado=@Anulado,
 IdAutorizaAnulacion=@IdAutorizaAnulacion,
 FechaAnulacion=@FechaAnulacion
WHERE (IdOtroIngresoAlmacen=@IdOtroIngresoAlmacen)
RETURN(@IdOtroIngresoAlmacen)



GO

/****** Object:  StoredProcedure [dbo].[OtrosIngresosAlmacen_T]    Script Date: 03/15/2011 11:48:55 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO


























CREATE Procedure [dbo].[OtrosIngresosAlmacen_T]
@IdOtroIngresoAlmacen int
AS 
SELECT * 
FROM OtrosIngresosAlmacen
WHERE (IdOtroIngresoAlmacen=@IdOtroIngresoAlmacen)


























GO

/****** Object:  StoredProcedure [dbo].[OtrosIngresosAlmacen_TT]    Script Date: 03/15/2011 11:48:55 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO







CREATE  Procedure [dbo].[OtrosIngresosAlmacen_TT]

AS 

declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='01111133'
set @vector_T='07554500'

SELECT 
 OtrosIngresosAlmacen.IdOtroIngresoAlmacen,
 CASE	WHEN OtrosIngresosAlmacen.TipoIngreso=0 THEN 'Devolucion de fabrica'
	WHEN OtrosIngresosAlmacen.TipoIngreso=1 THEN 'Devolucion prestamo'
	WHEN OtrosIngresosAlmacen.TipoIngreso=2 THEN 'Devolucion muestra'
	WHEN OtrosIngresosAlmacen.TipoIngreso=3 THEN 'Rechazo cliente'
	WHEN OtrosIngresosAlmacen.TipoIngreso=4 THEN 'Otros ingresos'
	ELSE Null
 END as [Tipo de ingreso],
 OtrosIngresosAlmacen.NumeroOtroIngresoAlmacen as [Nro. de ingreso],
 OtrosIngresosAlmacen.FechaOtroIngresoAlmacen as [Fecha],
 Obras.NumeroObra as [Obra],
 Empleados.Nombre as [Aprobo],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM OtrosIngresosAlmacen
LEFT OUTER JOIN Obras ON OtrosIngresosAlmacen.IdObra = Obras.IdObra
LEFT OUTER JOIN Empleados ON OtrosIngresosAlmacen.Aprobo = Empleados.IdEmpleado
ORDER BY OtrosIngresosAlmacen.FechaOtroIngresoAlmacen






GO

/****** Object:  StoredProcedure [dbo].[OtrosIngresosAlmacen_TX_ParaTransmitir]    Script Date: 03/15/2011 11:48:55 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE Procedure [dbo].[OtrosIngresosAlmacen_TX_ParaTransmitir]
AS 
SELECT *
FROM OtrosIngresosAlmacen
WHERE EnviarEmail=1





GO

/****** Object:  StoredProcedure [dbo].[OtrosIngresosAlmacen_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:48:55 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE Procedure [dbo].[OtrosIngresosAlmacen_TX_SetearComoTransmitido]
AS 
UPDATE OtrosIngresosAlmacen
SET EnviarEmail=0
WHERE EnviarEmail<>0





GO

/****** Object:  StoredProcedure [dbo].[OtrosIngresosAlmacen_TX_TT]    Script Date: 03/15/2011 11:48:55 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO







CREATE  Procedure [dbo].[OtrosIngresosAlmacen_TX_TT]

@IdOtroIngresoAlmacen int

AS 

declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='01111133'
set @vector_T='07554500'

SELECT 
 OtrosIngresosAlmacen.IdOtroIngresoAlmacen,
 CASE	WHEN OtrosIngresosAlmacen.TipoIngreso=0 THEN 'Devolucion de fabrica'
	WHEN OtrosIngresosAlmacen.TipoIngreso=1 THEN 'Devolucion prestamo'
	WHEN OtrosIngresosAlmacen.TipoIngreso=2 THEN 'Devolucion muestra'
	WHEN OtrosIngresosAlmacen.TipoIngreso=3 THEN 'Rechazo cliente'
	WHEN OtrosIngresosAlmacen.TipoIngreso=4 THEN 'Otros ingresos'
	ELSE Null
 END as [Tipo de ingreso],
 OtrosIngresosAlmacen.NumeroOtroIngresoAlmacen as [Nro. de ingreso],
 OtrosIngresosAlmacen.FechaOtroIngresoAlmacen as [Fecha],
 Obras.NumeroObra as [Obra],
 Empleados.Nombre as [Aprobo],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM OtrosIngresosAlmacen
LEFT OUTER JOIN Obras ON OtrosIngresosAlmacen.IdObra = Obras.IdObra
LEFT OUTER JOIN Empleados ON OtrosIngresosAlmacen.Aprobo = Empleados.IdEmpleado
WHERE (IdOtroIngresoAlmacen=@IdOtroIngresoAlmacen)






GO

/****** Object:  StoredProcedure [dbo].[Paises_A]    Script Date: 03/15/2011 11:48:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Paises_A]
@IdPais int  output,
@Descripcion varchar(50),
@Codigo varchar(3)
AS 
Insert into Paises
(
Descripcion,
Codigo
)
Values
(
@Descripcion,
@Codigo
)
Select @IdPais=@@identity
Return(@IdPais)































GO

/****** Object:  StoredProcedure [dbo].[Paises_E]    Script Date: 03/15/2011 11:48:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Paises_E]
@IdPais int  AS 
Delete Paises
where (IdPais=@IdPais)
































GO

/****** Object:  StoredProcedure [dbo].[Paises_M]    Script Date: 03/15/2011 11:48:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE  Procedure [dbo].[Paises_M]
@IdPais int,
@Descripcion varchar(50),
@Codigo varchar(3)
AS
IF Exists(Select Aux.IdPais From Paises Aux Where Aux.IdPais=@IdPais)
	BEGIN
		UPDATE Paises
		SET
		 Descripcion=@Descripcion,
		 Codigo=@Codigo
		WHERE IdPais=@IdPais
	END
ELSE
	BEGIN
		INSERT INTO [Paises]
		(
		 IdPais,
		 Descripcion,
		 Codigo
		)
		VALUES
		(
		 @IdPais,
		 @Descripcion,
		 @Codigo
		)
	END
RETURN(@IdPais)





GO

/****** Object:  StoredProcedure [dbo].[Paises_T]    Script Date: 03/15/2011 11:48:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Paises_T]
@IdPais int
AS 
SELECT*
FROM Paises
where (IdPais=@IdPais)
































GO

/****** Object:  StoredProcedure [dbo].[Paises_TL]    Script Date: 03/15/2011 11:48:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Paises_TL]
AS 
Select 
IdPais,
Descripcion as Titulo
FROM Paises
order by Descripcion
































GO

/****** Object:  StoredProcedure [dbo].[Paises_TT]    Script Date: 03/15/2011 11:48:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Paises_TT]
AS 
Select *
FROM Paises
order by Descripcion
































GO

/****** Object:  StoredProcedure [dbo].[Paises_TX_PorCodigo]    Script Date: 03/15/2011 11:48:55 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[Paises_TX_PorCodigo]
@Codigo varchar(3)
AS 
SELECT *
FROM Paises
WHERE (Codigo=@Codigo)






























GO

/****** Object:  StoredProcedure [dbo].[Paises_TX_PorNombre]    Script Date: 03/15/2011 11:48:55 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[Paises_TX_PorNombre]
@Descripcion varchar(50)
AS 
SELECT *
FROM Paises
WHERE (Descripcion=@Descripcion)






























GO

/****** Object:  StoredProcedure [dbo].[Paises_TX_TT]    Script Date: 03/15/2011 11:48:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Paises_TX_TT]
@IdPais int
AS 
Select 
IdPais,
Descripcion,
Codigo
FROM Paises
where (IdPais=@IdPais)
order by Descripcion
































GO

/****** Object:  StoredProcedure [dbo].[Parametros_M]    Script Date: 03/15/2011 11:48:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE  Procedure [dbo].[Parametros_M]
	@IdParametro					int,
	@ProximoPresupuesto				int,
	@Iva1						numeric(6,2),
	@Iva2						numeric(6,2),
	@ProximaListaAcopio				int,
	@ProximaListaMateriales				int,
	@ProximoNumeroRequerimiento			int,
	@IdUnidadPorUnidad				int,
	@ProximoNumeroAjusteStock			int,
	@ProximoNumeroReservaStock			int,
	@ProximoNumeroPedido				int,
	@ControlCalidadDefault				int,
	@ProximoNumeroValeSalida			int,
	@ProximoNumeroSalidaMateriales		int,
	@ProximaComparativa				int,
	@PathAdjuntos					varchar(50),
	@IdUnidadPorKilo				int,
	@PedidosGarantia				ntext,
	@PedidosDocumentacion			ntext,
	@PedidosPlazoEntrega				ntext,
	@PedidosLugarEntrega				ntext,
	@PedidosFormaPago				ntext,
	@ProximoNumeroSalidaMaterialesAObra		int,
	@ProximoNumeroSalidaMaterialesParaFacturar	int,
	@ProximoNumeroSalidaMateriales2		int,
	@ProximoNumeroSalidaMaterialesAObra2		int,
	@ProximoNumeroSalidaMaterialesParaFacturar2	int,
	@PedidosInspecciones				ntext,
	@IdSectorPreparacion				int,
	@IdSectorMecanica				int,
	@IdSectorCaldereria				int,
	@IdSectorSoldadura				int,
	@IdSectorAlmacen				int,
	@IdSectorMantenimiento			int,
	@IdSectorCaldereriaPlana			int,
	@IdFeriado					int,
	@PedidosImportante				ntext,
	@PathEnvioEmails				varchar(100),
	@PathRecepcionEmails				varchar(100),
	@ProximoNumeroSalidaMaterialesAProveedor	int,
	@ProximoNumeroSalidaMaterialesAProveedor2	int,
	@ProximoNumeroDevolucionDeFabrica		int,
	@ProximoNumeroDevolucionDeFabrica2		int,
	@PathArchivoExcelFacturasSAP			varchar(100),
	@ArchivoAyuda					varchar(100),
	@IdJefeIngenieriaObra				int,
	@IdJefeIngenieriaDetalle				int,
	@IdJefeObrasServicio				int,
	@PathArchivoExcelDATANET			varchar(100),
	@IdJefeCompras				int,
	@PathArchivoExcelProveedores			varchar(100),
	@Porc_IBrutos_Cap				numeric(9,2),
	@Tope_IBrutos_Cap				numeric(9,2),
	@Porc_IBrutos_BsAs				numeric(9,2),
	@Tope_IBrutos_BsAs				numeric(9,2),
	@Porc_IBrutos_BsAsM				numeric(9,2),
	@Tope_IBrutos_BsAsM				numeric(9,2),
	@Decimales					smallint,
	@ProximaFacturaA				int,
	@ProximaFacturaB				int,
	@ProximaFacturaE				int,
	@ProximaDevolucionA				int,
	@ProximaDevolucionB				int,
	@ProximaDevolucionE				int,
	@AclaracionAlPieDeFactura			varchar(250),
	@CotizacionDolar				numeric(12,2),
	@ProximaNotaCreditoA				int,
	@ProximaNotaCreditoB				int,
	@ProximaNotaCreditoE				int,
	@ProximaNotaDebitoA				int,
	@ProximaNotaDebitoB				int,
	@ProximaNotaDebitoE				int,
	@ProximoAsiento				int,
	@ProximoNumeroInterno				int,
	@NumeracionUnica				varchar(2),
	@EjercicioActual				int,
	@IdCuentaVentas				int,
	@IdCuentaBonificaciones			int,
	@IdCuentaIvaInscripto				int,
	@IdCuentaIvaNoInscripto			int,
	@IdCuentaIvaSinDiscriminar			int,
	@IdCuentaRetencionIBrutosBsAs		int,
	@IdCuentaRetencionIBrutosCap			int,
	@IdCuentaReventas				int,
	@IdCuentaND					int,
	@IdCuentaNC					int,
	@IdCuentaCaja					int,
	@IdCuentaValores				int,
	@IdCuentaRetencionIva				int,
	@IdCuentaRetencionGanancias			int,
	@IdCuentaRetencionIBrutos			int,
	@IdCuentaDescuentos				int,
	@IdCuentaDescuentosyRetenciones		int,
	@IdUnidad					int,
	@IdMoneda					int,
	@IdCuentaCompras				int,
	@ProximoComprobanteProveedorReferencia	int,
	@ProximoNumeroInternoChequeEmitido		int,
	@ProximaNumeroOrdenPago			int,
	@IdCuentaIvaCompras				int,
	@CAI						varchar(50),
	@FechaCAI					varchar(20),
	@ClausulaDolar					varchar(1000),
	@IdMonedaDolar				int,
	@NumeroCAI_R_A				varchar(50),
	@FechaCAI_R_A				datetime,
	@NumeroCAI_F_A				varchar(50),
	@FechaCAI_F_A				datetime,
	@NumeroCAI_D_A				varchar(50),
	@FechaCAI_D_A				datetime,
	@NumeroCAI_C_A				varchar(50),
	@FechaCAI_C_A				datetime,
	@NumeroCAI_R_B				varchar(50),
	@FechaCAI_R_B				datetime,
	@NumeroCAI_F_B				varchar(50),
	@FechaCAI_F_B				datetime,
	@NumeroCAI_D_B				varchar(50),
	@FechaCAI_D_B				datetime,
	@NumeroCAI_C_B				varchar(50),
	@FechaCAI_C_B				datetime,
	@NumeroCAI_R_E				varchar(50),
	@FechaCAI_R_E				datetime,
	@NumeroCAI_F_E				varchar(50),
	@FechaCAI_F_E				datetime,
	@NumeroCAI_D_E				varchar(50),
	@FechaCAI_D_E				datetime,
	@NumeroCAI_C_E				varchar(50),
	@FechaCAI_C_E				datetime,
	@NumeracionCorrelativa				varchar(2),
	@ProximoNumeroRefProveedores		int,
	@ProximoNumeroCuentaContable		int,
	@IdCuentaAcreedoresVarios			int,
	@IdCuentaDeudoresVarios			int,
	@ProximaOrdenPago				int,
	@IdCuentaIvaCompras1				int,
	@IVAComprasPorcentaje1			numeric(6,2),
	@IdCuentaIvaCompras2				int,
	@IVAComprasPorcentaje2			numeric(6,2),
	@IdCuentaIvaCompras3				int,
	@IVAComprasPorcentaje3			numeric(6,2),
	@IdCuentaIvaCompras4				int,
	@IVAComprasPorcentaje4			numeric(6,2),
	@IdCuentaIvaCompras5				int,
	@IVAComprasPorcentaje5			numeric(6,2),
	@ProximaOrdenPagoExterior			int,
	@MinimoNoImponible				numeric(18,2),
	@DeduccionEspecial				numeric(18,2),
	@ProximoNumeroCertificadoRetencionGanancias	int,
	@IdCuentaVentasTitulo				int,
	@IdCuentaNDTitulo				int,
	@IdCuentaNCTitulo				int,
	@IdCuentaCajaTitulo				int,
	@IdCuentaValoresTitulo				int,
	@IdCuentaDescuentosyRetencionesTitulo	int,
	@IdCuentaComprasTitulo			int,
	@IdCuentaIvaCompras6				int,
	@IVAComprasPorcentaje6			numeric(6,2),
	@IdCuentaIvaCompras7				int,
	@IVAComprasPorcentaje7			numeric(6,2),
	@IdCuentaIvaCompras8				int,
	@IVAComprasPorcentaje8			numeric(6,2),
	@IdCuentaIvaCompras9				int,
	@IVAComprasPorcentaje9			numeric(6,2),
	@IdCuentaIvaCompras10			int,
	@IVAComprasPorcentaje10			numeric(6,2),
	@ProximoNumeroOrdenCompra			int,
	@ProximoNumeroRemito				int,
	@IdCuentaRetencionGananciasCobros		int,
	@IdTipoCuentaGrupoIVA			int,
	@IGCondicionExcepcion				int,
	@IdCuentaIvaVentas1				int,
	@IVAVentasPorcentaje1				numeric(6,2),
	@IdCuentaIvaVentas2				int,
	@IVAVentasPorcentaje2				numeric(6,2),
	@IdCuentaIvaVentas3				int,
	@IVAVentasPorcentaje3				numeric(6,2),
	@IdCuentaIvaVentas4				int,
	@IVAVentasPorcentaje4				numeric(6,2),
	@ProximaOrdenPagoOtros			int,
	@IdTipoComprobanteEfectivo			int,
	@IdTipoComprobanteDeposito			int,
	@ProximaNotaDebitoInterna			int,
	@ProximaNotaCreditoInterna			int,
	@IdTipoComprobanteCajaIngresos		int,
	@IdTipoComprobanteCajaEgresos		int,
	@DirectorioDTS					varchar(100),
	@PathObra					varchar(100),
	@FechaUltimoCierre				datetime,
	@IdConceptoDiferenciaCambio			int,
	@IdTipoCuentaGrupoFF				int,
	@ProximoNumeroOtroIngresoAlmacen		int,
	@AgenteRetencionIVA				varchar(2),
	@ImporteTotalMinimoAplicacionRetencionIVA	numeric(18,2),
	@PorcentajeBaseRetencionIVABienes		numeric(6,2),
	@PorcentajeBaseRetencionIVAServicios		numeric(6,2),
	@ImporteMinimoRetencionIVA			numeric(18,2),
	@ProximoNumeroCertificadoRetencionIVA	int,
	@ProximoNumeroCertificadoRetencionIIBB	int,
	@IdTipoComprobanteFacturaCompra 		int,
	@IdTipoComprobanteFacturaVenta		int,
	@IdTipoComprobanteDevoluciones		int,
	@IdTipoComprobanteNotaDebito			int,
	@IdTipoComprobanteNotaCredito		int,
	@IdTipoComprobanteRecibo			int,
	@IdControlCalidadStandar			int,
	@IdTipoCuentaGrupoAnticiposAlPersonal		int,
	@IdTipoComprobanteNDInternaAcreedores	int,
	@IdTipoComprobanteNCInternaAcreedores	int,
	@PercepcionIIBB				varchar(2),
	@OtrasPercepciones1				varchar(2),
	@OtrasPercepciones1Desc			varchar(15),
	@OtrasPercepciones2				varchar(2),
	@OtrasPercepciones2Desc			varchar(15),
	@IdCuentaDiferenciaCambio			int,
	@ProximoNumeroReciboPago			int,
	@NumeroReciboPagoAutomatico		varchar(2),
	@IdCuentaPercepcionIIBB			int,
	@IdCuentaOtrasPercepciones1			int,
	@IdCuentaOtrasPercepciones2			int,
	@ConfirmarClausulaDolar			varchar(2),
	@ProximoNumeroPedidoExterior			int,
	@ExigirTrasabilidad_RMLA_PE			varchar(2),
	@AgenteRetencionSUSS			varchar(2),
	@PorcentajeRetencionSUSS			numeric(6,2),
	@ProximoNumeroCertificadoRetencionSUSS	int,
	@IdCuentaRetencionSUSS			int,
	@IdCuentaPercepcionIVACompras		int,
	@IdPuntoVentaNumeracionUnica		int,
	@AgenteRetencionIIBB				varchar(2),
	@PathArchivosExportados			varchar(100),
	@IdObraStockDisponible			int,
	@IdTipoComprobanteOrdenPago			int,
	@ProximoNumeroInternoRecepcion		int,
	@IdCuentaRetencionSUSS_Recibida		int,
	@Plantilla_Factura_A				varchar(50),
	@Plantilla_Factura_B				varchar(50),
	@Plantilla_Factura_E				varchar(50),
	@Plantilla_Devoluciones_A			varchar(50),
	@Plantilla_Devoluciones_B			varchar(50),
	@Plantilla_Devoluciones_E			varchar(50),
	@Plantilla_NotasDebito_A			varchar(50),
	@Plantilla_NotasDebito_B			varchar(50),
	@Plantilla_NotasDebito_E			varchar(50),
	@Plantilla_NotasCredito_A			varchar(50),
	@Plantilla_NotasCredito_B			varchar(50),
	@Plantilla_NotasCredito_E			varchar(50),
	@FechaArranqueCajaYBancos			datetime,
	@IdRubroVentasEnCuotas			int,
	@IdConceptoVentasEnCuotas			int,
	@IdCuentaPlazosFijos				int,
	@IdCuentaInteresesPlazosFijos			int,
	@NumeroGeneracionVentaEnCuotas		int,
	@IdBancoGestionCobroCuotas			int,
	@PathArchivoCobranzaCuotas			varchar(100),
	@TipoAmortizacionContable			varchar(1),
	@FrecuenciaAmortizacionContable		varchar(1),
	@TipoAmortizacionImpositiva			varchar(1),
	@FrecuenciaAmortizacionImpositiva		varchar(1),
	@IdCuentaResultadosEjercicio			int,
	@IdCuentaResultadosAcumulados		int,
	@CuentasResultadoDesde			int,
	@CuentasResultadoHasta			int,
	@CuentasPatrimonialesDesde			int,
	@CuentasPatrimonialesHasta			int,
	@IdArticuloVariosParaPRESTO			int,
	@ControlarRubrosContablesEnOP		varchar(2),
	@IdObraActiva					int,
	@IdArchivoATransmitirDestinoActivo		int,
	@IdArchivoATransmitirDestinoPRONTO		int,
	@EmailPRONTO				varchar(100),
	@ActivarSolicitudMateriales			varchar(2)

AS UPDATE Parametros
SET
	ProximoPresupuesto				=@ProximoPresupuesto,
	Iva1						=@Iva1,
	Iva2						=@Iva2,
	ProximaListaAcopio				=@ProximaListaAcopio,
	ProximaListaMateriales				=@ProximaListaMateriales,
	ProximoNumeroRequerimiento			=@ProximoNumeroRequerimiento,
	IdUnidadPorUnidad				=@IdUnidadPorUnidad,
	ProximoNumeroAjusteStock			=@ProximoNumeroAjusteStock,
	ProximoNumeroReservaStock			=@ProximoNumeroReservaStock,
	ProximoNumeroPedido				=@ProximoNumeroPedido,
	ControlCalidadDefault				=@ControlCalidadDefault,
	ProximoNumeroValeSalida			=@ProximoNumeroValeSalida,
	ProximoNumeroSalidaMateriales 			=@ProximoNumeroSalidaMateriales,
	ProximaComparativa				=@ProximaComparativa,
	PathAdjuntos					=@PathAdjuntos,
	IdUnidadPorKilo					=@IdUnidadPorKilo,
	PedidosGarantia					=@PedidosGarantia,
	PedidosDocumentacion				=@PedidosDocumentacion,
	PedidosPlazoEntrega				=@PedidosPlazoEntrega,
	PedidosLugarEntrega				=@PedidosLugarEntrega,
	PedidosFormaPago				=@PedidosFormaPago,
	ProximoNumeroSalidaMaterialesAObra		=@ProximoNumeroSalidaMaterialesAObra,
	ProximoNumeroSalidaMaterialesParaFacturar	=@ProximoNumeroSalidaMaterialesParaFacturar,
	ProximoNumeroSalidaMateriales2			=@ProximoNumeroSalidaMateriales2,
	ProximoNumeroSalidaMaterialesAObra2		=@ProximoNumeroSalidaMaterialesAObra2,
	ProximoNumeroSalidaMaterialesParaFacturar2	=@ProximoNumeroSalidaMaterialesParaFacturar2,
	PedidosInspecciones				=@PedidosInspecciones,
	IdSectorPreparacion				=@IdSectorPreparacion,
	IdSectorMecanica				=@IdSectorMecanica,
	IdSectorCaldereria				=@IdSectorCaldereria,
	IdSectorSoldadura				=@IdSectorSoldadura,
	IdSectorAlmacen				=@IdSectorAlmacen,
	IdSectorMantenimiento				=@IdSectorMantenimiento,
	IdSectorCaldereriaPlana				=@IdSectorCaldereriaPlana,
	IdFeriado					=@IdFeriado,
	PedidosImportante				=@PedidosImportante,
	PathEnvioEmails					=@PathEnvioEmails,
	PathRecepcionEmails				=@PathRecepcionEmails,
	ProximoNumeroSalidaMaterialesAProveedor	=@ProximoNumeroSalidaMaterialesAProveedor,
	ProximoNumeroSalidaMaterialesAProveedor2	=@ProximoNumeroSalidaMaterialesAProveedor2,
	ProximoNumeroDevolucionDeFabrica		=@ProximoNumeroDevolucionDeFabrica,
	ProximoNumeroDevolucionDeFabrica2		=@ProximoNumeroDevolucionDeFabrica2,
	PathArchivoExcelFacturasSAP			=@PathArchivoExcelFacturasSAP,
	ArchivoAyuda					=@ArchivoAyuda,
	IdJefeIngenieriaObra				=@IdJefeIngenieriaObra,
	IdJefeIngenieriaDetalle				=@IdJefeIngenieriaDetalle,
	IdJefeObrasServicio				=@IdJefeObrasServicio,
	PathArchivoExcelDATANET			=@PathArchivoExcelDATANET,	IdJefeCompras					=@IdJefeCompras,
	PathArchivoExcelProveedores			=@PathArchivoExcelProveedores,
	Porc_IBrutos_Cap				=@Porc_IBrutos_Cap,
	Tope_IBrutos_Cap				=@Tope_IBrutos_Cap,
	Porc_IBrutos_BsAs				=@Porc_IBrutos_BsAs,
	Tope_IBrutos_BsAs				=@Tope_IBrutos_BsAs,
	Porc_IBrutos_BsAsM				=@Porc_IBrutos_BsAsM,
	Tope_IBrutos_BsAsM				=@Tope_IBrutos_BsAsM,
	Decimales					=@Decimales,
	ProximaFacturaA				=@ProximaFacturaA,
	ProximaFacturaB				=@ProximaFacturaB,
	ProximaFacturaE				=@ProximaFacturaE,
	ProximaDevolucionA				=@ProximaDevolucionA,
	ProximaDevolucionB				=@ProximaDevolucionB,
	ProximaDevolucionE				=@ProximaDevolucionE,	AclaracionAlPieDeFactura			=@AclaracionAlPieDeFactura,
	CotizacionDolar					=@CotizacionDolar,
	ProximaNotaCreditoA				=@ProximaNotaCreditoA,
	ProximaNotaCreditoB				=@ProximaNotaCreditoB,
	ProximaNotaCreditoE				=@ProximaNotaCreditoE,
	ProximaNotaDebitoA				=@ProximaNotaDebitoA,
	ProximaNotaDebitoB				=@ProximaNotaDebitoB,
	ProximaNotaDebitoE				=@ProximaNotaDebitoE,
	ProximoAsiento					=@ProximoAsiento,
	ProximoNumeroInterno				=@ProximoNumeroInterno,
	NumeracionUnica				=@NumeracionUnica,
	EjercicioActual					=@EjercicioActual,
	IdCuentaVentas					=@IdCuentaVentas,
	IdCuentaBonificaciones				=@IdCuentaBonificaciones,
	IdCuentaIvaInscripto				=@IdCuentaIvaInscripto,
	IdCuentaIvaNoInscripto				=@IdCuentaIvaNoInscripto,
	IdCuentaIvaSinDiscriminar			=@IdCuentaIvaSinDiscriminar,
	IdCuentaRetencionIBrutosBsAs			=@IdCuentaRetencionIBrutosBsAs,
	IdCuentaRetencionIBrutosCap			=@IdCuentaRetencionIBrutosCap,
	IdCuentaReventas				=@IdCuentaReventas,
	IdCuentaND					=@IdCuentaND,
	IdCuentaNC					=@IdCuentaNC,
	IdCuentaCaja					=@IdCuentaCaja,
	IdCuentaValores					=@IdCuentaValores,
	IdCuentaRetencionIva				=@IdCuentaRetencionIva,
	IdCuentaRetencionGanancias			=@IdCuentaRetencionGanancias,
	IdCuentaRetencionIBrutos			=@IdCuentaRetencionIBrutos,
	IdCuentaDescuentos				=@IdCuentaDescuentos,
	IdCuentaDescuentosyRetenciones		=@IdCuentaDescuentosyRetenciones,
	IdUnidad					=@IdUnidad,
	IdMoneda					=@IdMoneda,
	IdCuentaCompras				=@IdCuentaCompras,
	ProximoComprobanteProveedorReferencia	=@ProximoComprobanteProveedorReferencia,
	ProximoNumeroInternoChequeEmitido		=@ProximoNumeroInternoChequeEmitido,
	ProximaNumeroOrdenPago			=@ProximaNumeroOrdenPago,
	IdCuentaIvaCompras				=@IdCuentaIvaCompras,
	CAI						=@CAI,
	FechaCAI					=@FechaCAI,
	ClausulaDolar					=@ClausulaDolar,
	IdMonedaDolar					=@IdMonedaDolar,
	NumeroCAI_R_A				=@NumeroCAI_R_A,
	FechaCAI_R_A					=@FechaCAI_R_A,
	NumeroCAI_F_A					=@NumeroCAI_F_A,
	FechaCAI_F_A					=@FechaCAI_F_A,
	NumeroCAI_D_A				=@NumeroCAI_D_A,
	FechaCAI_D_A					=@FechaCAI_D_A,
	NumeroCAI_C_A				=@NumeroCAI_C_A,
	FechaCAI_C_A					=@FechaCAI_C_A,
	NumeroCAI_R_B				=@NumeroCAI_R_B,
	FechaCAI_R_B					=@FechaCAI_R_B,
	NumeroCAI_F_B					=@NumeroCAI_F_B,
	FechaCAI_F_B					=@FechaCAI_F_B,
	NumeroCAI_D_B				=@NumeroCAI_D_B,
	FechaCAI_D_B					=@FechaCAI_D_B,
	NumeroCAI_C_B				=@NumeroCAI_C_B,
	FechaCAI_C_B					=@FechaCAI_C_B,
	NumeroCAI_R_E				=@NumeroCAI_R_E,
	FechaCAI_R_E					=@FechaCAI_R_E,
	NumeroCAI_F_E					=@NumeroCAI_F_E,
	FechaCAI_F_E					=@FechaCAI_F_E,
	NumeroCAI_D_E				=@NumeroCAI_D_E,
	FechaCAI_D_E					=@FechaCAI_D_E,
	NumeroCAI_C_E				=@NumeroCAI_C_E,
	FechaCAI_C_E					=@FechaCAI_C_E,
	NumeracionCorrelativa				=@NumeracionCorrelativa,
	ProximoNumeroRefProveedores			=@ProximoNumeroRefProveedores,
	ProximoNumeroCuentaContable			=@ProximoNumeroCuentaContable,
	IdCuentaAcreedoresVarios			=@IdCuentaAcreedoresVarios,
	IdCuentaDeudoresVarios				=@IdCuentaDeudoresVarios,
	ProximaOrdenPago				=@ProximaOrdenPago,	IdCuentaIvaCompras1				=@IdCuentaIvaCompras1,
	IVAComprasPorcentaje1				=@IVAComprasPorcentaje1,
	IdCuentaIvaCompras2				=@IdCuentaIvaCompras2,
	IVAComprasPorcentaje2				=@IVAComprasPorcentaje2,
	IdCuentaIvaCompras3				=@IdCuentaIvaCompras3,
	IVAComprasPorcentaje3				=@IVAComprasPorcentaje3,	IdCuentaIvaCompras4				=@IdCuentaIvaCompras4,
	IVAComprasPorcentaje4				=@IVAComprasPorcentaje4,
	IdCuentaIvaCompras5				=@IdCuentaIvaCompras5,
	IVAComprasPorcentaje5				=@IVAComprasPorcentaje5,	ProximaOrdenPagoExterior			=@ProximaOrdenPagoExterior,
	MinimoNoImponible				=@MinimoNoImponible,
	DeduccionEspecial				=@DeduccionEspecial,
	ProximoNumeroCertificadoRetencionGanancias	=@ProximoNumeroCertificadoRetencionGanancias,
	IdCuentaVentasTitulo				=@IdCuentaVentasTitulo,
	IdCuentaNDTitulo				=@IdCuentaNDTitulo,
	IdCuentaNCTitulo				=@IdCuentaNCTitulo,
	IdCuentaCajaTitulo				=@IdCuentaCajaTitulo,
	IdCuentaValoresTitulo				=@IdCuentaValoresTitulo,
	IdCuentaDescuentosyRetencionesTitulo		=@IdCuentaDescuentosyRetencionesTitulo,
	IdCuentaComprasTitulo				=@IdCuentaComprasTitulo,
	IdCuentaIvaCompras6				=@IdCuentaIvaCompras6,
	IVAComprasPorcentaje6				=@IVAComprasPorcentaje6,
	IdCuentaIvaCompras7				=@IdCuentaIvaCompras7,
	IVAComprasPorcentaje7				=@IVAComprasPorcentaje7,
	IdCuentaIvaCompras8				=@IdCuentaIvaCompras8,
	IVAComprasPorcentaje8				=@IVAComprasPorcentaje8,
	IdCuentaIvaCompras9				=@IdCuentaIvaCompras9,
	IVAComprasPorcentaje9				=@IVAComprasPorcentaje9,
	IdCuentaIvaCompras10				=@IdCuentaIvaCompras10,
	IVAComprasPorcentaje10			=@IVAComprasPorcentaje10,
	ProximoNumeroOrdenCompra			=@ProximoNumeroOrdenCompra,
	ProximoNumeroRemito				=@ProximoNumeroRemito,
	IdCuentaRetencionGananciasCobros		=@IdCuentaRetencionGananciasCobros,
	IdTipoCuentaGrupoIVA				=@IdTipoCuentaGrupoIVA,
	IGCondicionExcepcion				=@IGCondicionExcepcion,
	IdCuentaIvaVentas1				=@IdCuentaIvaVentas1,
	IVAVentasPorcentaje1				=@IVAVentasPorcentaje1,
	IdCuentaIvaVentas2				=@IdCuentaIvaVentas2,
	IVAVentasPorcentaje2				=@IVAVentasPorcentaje2,
	IdCuentaIvaVentas3				=@IdCuentaIvaVentas3,
	IVAVentasPorcentaje3				=@IVAVentasPorcentaje3,
	IdCuentaIvaVentas4				=@IdCuentaIvaVentas4,
	IVAVentasPorcentaje4				=@IVAVentasPorcentaje4,
	ProximaOrdenPagoOtros				=@ProximaOrdenPagoOtros,
	IdTipoComprobanteEfectivo			=@IdTipoComprobanteEfectivo,
	IdTipoComprobanteDeposito			=@IdTipoComprobanteDeposito,
	ProximaNotaDebitoInterna			=@ProximaNotaDebitoInterna,
	ProximaNotaCreditoInterna			=@ProximaNotaCreditoInterna,
	IdTipoComprobanteCajaIngresos			=@IdTipoComprobanteCajaIngresos,
	IdTipoComprobanteCajaEgresos			=@IdTipoComprobanteCajaEgresos,
	DirectorioDTS					=@DirectorioDTS,
	PathObra					=@PathObra,
	FechaUltimoCierre				=@FechaUltimoCierre,
	IdConceptoDiferenciaCambio			=@IdConceptoDiferenciaCambio,
	IdTipoCuentaGrupoFF				=@IdTipoCuentaGrupoFF,
	ProximoNumeroOtroIngresoAlmacen		=@ProximoNumeroOtroIngresoAlmacen,
	AgenteRetencionIVA				=@AgenteRetencionIVA,
	ImporteTotalMinimoAplicacionRetencionIVA	=@ImporteTotalMinimoAplicacionRetencionIVA,
	PorcentajeBaseRetencionIVABienes		=@PorcentajeBaseRetencionIVABienes,
	PorcentajeBaseRetencionIVAServicios		=@PorcentajeBaseRetencionIVAServicios,
	ImporteMinimoRetencionIVA			=@ImporteMinimoRetencionIVA,
	ProximoNumeroCertificadoRetencionIVA		=@ProximoNumeroCertificadoRetencionIVA,
	ProximoNumeroCertificadoRetencionIIBB		=@ProximoNumeroCertificadoRetencionIIBB,
	IdTipoComprobanteFacturaCompra		=@IdTipoComprobanteFacturaCompra,
	IdTipoComprobanteFacturaVenta			=@IdTipoComprobanteFacturaVenta,
	IdTipoComprobanteDevoluciones			=@IdTipoComprobanteDevoluciones,
	IdTipoComprobanteNotaDebito			=@IdTipoComprobanteNotaDebito,
	IdTipoComprobanteNotaCredito			=@IdTipoComprobanteNotaCredito,
	IdTipoComprobanteRecibo			=@IdTipoComprobanteRecibo,
	IdControlCalidadStandar				=@IdControlCalidadStandar,
	IdTipoCuentaGrupoAnticiposAlPersonal		=@IdTipoCuentaGrupoAnticiposAlPersonal,
	IdTipoComprobanteNDInternaAcreedores		=@IdTipoComprobanteNDInternaAcreedores,
	IdTipoComprobanteNCInternaAcreedores		=@IdTipoComprobanteNCInternaAcreedores,
	PercepcionIIBB					=@PercepcionIIBB,
	OtrasPercepciones1				=@OtrasPercepciones1,
	OtrasPercepciones1Desc			=@OtrasPercepciones1Desc,
	OtrasPercepciones2				=@OtrasPercepciones2,
	OtrasPercepciones2Desc			=@OtrasPercepciones2Desc,
	IdCuentaDiferenciaCambio			=@IdCuentaDiferenciaCambio,
	ProximoNumeroReciboPago			=@ProximoNumeroReciboPago,
	NumeroReciboPagoAutomatico			=@NumeroReciboPagoAutomatico,
	IdCuentaPercepcionIIBB				=@IdCuentaPercepcionIIBB,
	IdCuentaOtrasPercepciones1			=@IdCuentaOtrasPercepciones1,
	IdCuentaOtrasPercepciones2			=@IdCuentaOtrasPercepciones2,
	ConfirmarClausulaDolar				=@ConfirmarClausulaDolar,
	ProximoNumeroPedidoExterior			=@ProximoNumeroPedidoExterior,
	ExigirTrasabilidad_RMLA_PE			=@ExigirTrasabilidad_RMLA_PE,
	AgenteRetencionSUSS				=@AgenteRetencionSUSS,
	PorcentajeRetencionSUSS			=@PorcentajeRetencionSUSS,
	ProximoNumeroCertificadoRetencionSUSS	=@ProximoNumeroCertificadoRetencionSUSS,
	IdCuentaRetencionSUSS			=@IdCuentaRetencionSUSS,
	IdCuentaPercepcionIVACompras			=@IdCuentaPercepcionIVACompras,
	IdPuntoVentaNumeracionUnica			=@IdPuntoVentaNumeracionUnica,
	AgenteRetencionIIBB				=@AgenteRetencionIIBB,
	PathArchivosExportados				=@PathArchivosExportados,
	IdObraStockDisponible				=@IdObraStockDisponible,
	IdTipoComprobanteOrdenPago			=@IdTipoComprobanteOrdenPago,	ProximoNumeroInternoRecepcion			=@ProximoNumeroInternoRecepcion,
	IdCuentaRetencionSUSS_Recibida		=@IdCuentaRetencionSUSS_Recibida,
	Plantilla_Factura_A				=@Plantilla_Factura_A,
	Plantilla_Factura_B				=@Plantilla_Factura_B,
	Plantilla_Factura_E				=@Plantilla_Factura_E,
	Plantilla_Devoluciones_A			=@Plantilla_Devoluciones_A,
	Plantilla_Devoluciones_B			=@Plantilla_Devoluciones_B,
	Plantilla_Devoluciones_E			=@Plantilla_Devoluciones_E,
	Plantilla_NotasDebito_A				=@Plantilla_NotasDebito_A,
	Plantilla_NotasDebito_B				=@Plantilla_NotasDebito_B,
	Plantilla_NotasDebito_E				=@Plantilla_NotasDebito_E,
	Plantilla_NotasCredito_A				=@Plantilla_NotasCredito_A,
	Plantilla_NotasCredito_B				=@Plantilla_NotasCredito_B,
	Plantilla_NotasCredito_E				=@Plantilla_NotasCredito_E,
	FechaArranqueCajaYBancos			=@FechaArranqueCajaYBancos,
	IdRubroVentasEnCuotas				=@IdRubroVentasEnCuotas,
	IdConceptoVentasEnCuotas			=@IdConceptoVentasEnCuotas,
	IdCuentaPlazosFijos				=@IdCuentaPlazosFijos,
	IdCuentaInteresesPlazosFijos			=@IdCuentaInteresesPlazosFijos,
	NumeroGeneracionVentaEnCuotas		=@NumeroGeneracionVentaEnCuotas,
	IdBancoGestionCobroCuotas			=@IdBancoGestionCobroCuotas,
	PathArchivoCobranzaCuotas			=@PathArchivoCobranzaCuotas,
	TipoAmortizacionContable			=@TipoAmortizacionContable,
	FrecuenciaAmortizacionContable			=@FrecuenciaAmortizacionContable,
	TipoAmortizacionImpositiva			=@TipoAmortizacionImpositiva,
	FrecuenciaAmortizacionImpositiva		=@FrecuenciaAmortizacionImpositiva,
	IdCuentaResultadosEjercicio			=@IdCuentaResultadosEjercicio,
	IdCuentaResultadosAcumulados			=@IdCuentaResultadosAcumulados,
	CuentasResultadoDesde				=@CuentasResultadoDesde,
	CuentasResultadoHasta				=@CuentasResultadoHasta,
	CuentasPatrimonialesDesde			=@CuentasPatrimonialesDesde,
	CuentasPatrimonialesHasta			=@CuentasPatrimonialesHasta,
	IdArticuloVariosParaPRESTO			=@IdArticuloVariosParaPRESTO,
	ControlarRubrosContablesEnOP			=@ControlarRubrosContablesEnOP,
	IdObraActiva					=@IdObraActiva,
	IdArchivoATransmitirDestinoActivo		=@IdArchivoATransmitirDestinoActivo,
	IdArchivoATransmitirDestinoPRONTO		=@IdArchivoATransmitirDestinoPRONTO,
	EmailPRONTO					=@EmailPRONTO,
	ActivarSolicitudMateriales			=@ActivarSolicitudMateriales

WHERE ([IdParametro] = @IdParametro)
RETURN(@IdParametro)



GO

/****** Object:  StoredProcedure [dbo].[Parametros_RegistrarParametros2]    Script Date: 03/15/2011 11:48:58 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE Procedure [dbo].[Parametros_RegistrarParametros2]

@Campo varchar(50),
@Valor varchar(50)

AS 

IF EXISTS(Select Top 1 P2.Valor From Parametros2 P2 Where P2.Campo=@Campo)
	UPDATE Parametros2 SET Valor=@Valor WHERE Campo=@Campo
ELSE
	INSERT INTO Parametros2	(Campo,Valor) VALUES (@Campo,@Valor)



GO

/****** Object:  StoredProcedure [dbo].[Parametros_T]    Script Date: 03/15/2011 11:48:58 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



































CREATE Procedure [dbo].[Parametros_T]
@IdParametro int
AS 
SELECT *
FROM Parametros
where (IdParametro=@IdParametro)



































GO

/****** Object:  StoredProcedure [dbo].[Parametros_TT]    Script Date: 03/15/2011 11:48:58 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO



































CREATE Procedure [dbo].[Parametros_TT]
AS 
SELECT *
FROM Parametros
WHERE IdParametro=1



































GO

/****** Object:  StoredProcedure [dbo].[Parametros_TX_Parametros2]    Script Date: 03/15/2011 11:48:58 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE Procedure [dbo].[Parametros_TX_Parametros2]
AS 
SELECT *
FROM Parametros2


GO

/****** Object:  StoredProcedure [dbo].[Parametros_TX_Parametros2BuscarClave]    Script Date: 03/15/2011 11:48:58 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE Procedure [dbo].[Parametros_TX_Parametros2BuscarClave]

@Campo varchar(50)

AS 

SELECT Valor
FROM Parametros2
WHERE Campo=@Campo



GO

/****** Object:  StoredProcedure [dbo].[Parametros_TX_PorId]    Script Date: 03/15/2011 11:48:58 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO

































CREATE Procedure [dbo].[Parametros_TX_PorId]
@IdParametro int
AS 
SELECT *
FROM Parametros
WHERE (IdParametro=@IdParametro)


































GO

/****** Object:  StoredProcedure [dbo].[Pedidos_A]    Script Date: 03/15/2011 11:48:58 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE  Procedure [dbo].[Pedidos_A]
@IdPedido int  output,
@NumeroPedido int,
@IdProveedor int,
@FechaPedido datetime,
@LugarEntrega ntext,
@FormaPago ntext,
@Observaciones ntext,
@Bonificacion numeric(12,2),
@TotalIva1 numeric(12,2),
@TotalIva2 numeric(12,2),
@TotalPedido numeric(12,2),
@PorcentajeIva1 numeric(6,2),
@PorcentajeIva2 numeric(6,2),
@IdComprador int,
@PorcentajeBonificacion numeric(6,2),
@NumeroComparativa int,
@Contacto varchar(50),
@PlazoEntrega ntext,
@Garantia ntext,
@Documentacion ntext,
@Aprobo int,
@IdMoneda int,
@FechaAprobacion datetime,
@Importante ntext,
@TipoCompra int,
@Consorcial varchar(2),
@Cumplido varchar(2),
@DetalleCondicionCompra varchar(200),
@IdAutorizoCumplido int,
@IdDioPorCumplido int,
@FechaDadoPorCumplido datetime,
@ObservacionesCumplido ntext,
@SubNumero int,
@UsuarioAnulacion varchar(6),
@FechaAnulacion datetime,
@MotivoAnulacion ntext,
@ArchivoAdjunto1 varchar(100),
@ArchivoAdjunto2 varchar(100),
@ArchivoAdjunto3 varchar(100),
@ArchivoAdjunto4 varchar(100),
@ArchivoAdjunto5 varchar(100),
@ArchivoAdjunto6 varchar(100),
@ArchivoAdjunto7 varchar(100),
@ArchivoAdjunto8 varchar(100),
@ArchivoAdjunto9 varchar(100),
@ArchivoAdjunto10 varchar(100),
@ImprimeImportante varchar(2),
@ImprimePlazoEntrega varchar(2),
@ImprimeLugarEntrega varchar(2),
@ImprimeFormaPago varchar(2),
@ImprimeImputaciones varchar(2),
@ImprimeInspecciones varchar(2),
@ImprimeGarantia varchar(2),
@ImprimeDocumentacion varchar(2),
@CotizacionDolar numeric(18,3),
@CotizacionMoneda numeric(18,3),
@PedidoExterior varchar(2),
@PRESTOPedido varchar(13),
@PRESTOFechaProceso datetime,
@IdCondicionCompra int,
@EnviarEmail tinyint,
@IdPedidoOriginal int,
@IdOrigenTransmision int,
@FechaImportacionTransmision datetime

AS

INSERT INTO [Pedidos]
(
 NumeroPedido,
 IdProveedor,
 FechaPedido,
 LugarEntrega,
 FormaPago,
 Observaciones,
 Bonificacion,
 TotalIva1,
 TotalIva2,
 TotalPedido,
 PorcentajeIva1,
 PorcentajeIva2,
 IdComprador,
 PorcentajeBonificacion,
 NumeroComparativa,
 Contacto,
 PlazoEntrega,
 Garantia,
 Documentacion,
 Aprobo,
 IdMoneda,
 FechaAprobacion,
 Importante,
 TipoCompra,
 Consorcial,
 Cumplido,
 DetalleCondicionCompra,
 IdAutorizoCumplido,
 IdDioPorCumplido,
 FechaDadoPorCumplido,
 ObservacionesCumplido,
 SubNumero,
 UsuarioAnulacion,
 FechaAnulacion,
 MotivoAnulacion,
 ArchivoAdjunto1,
 ArchivoAdjunto2,
 ArchivoAdjunto3,
 ArchivoAdjunto4,
 ArchivoAdjunto5,
 ArchivoAdjunto6,
 ArchivoAdjunto7,
 ArchivoAdjunto8,
 ArchivoAdjunto9,
 ArchivoAdjunto10,
 ImprimeImportante,
 ImprimePlazoEntrega,
 ImprimeLugarEntrega, 
 ImprimeFormaPago,
 ImprimeImputaciones,
 ImprimeInspecciones,
 ImprimeGarantia,
 ImprimeDocumentacion,
 CotizacionDolar,
 CotizacionMoneda,
 PedidoExterior,
 PRESTOPedido,
 PRESTOFechaProceso,
 IdCondicionCompra,
 EnviarEmail,
 IdPedidoOriginal,
 IdOrigenTransmision,
 FechaImportacionTransmision
)
VALUES
(
 @NumeroPedido,
 @IdProveedor,
 @FechaPedido,
 @LugarEntrega,
 @FormaPago,
 @Observaciones,
 @Bonificacion,
 @TotalIva1,
 @TotalIva2,
 @TotalPedido,
 @PorcentajeIva1,
 @PorcentajeIva2,
 @IdComprador,
 @PorcentajeBonificacion,
 @NumeroComparativa,
 @Contacto,
 @PlazoEntrega,
 @Garantia,
 @Documentacion,
 @Aprobo,
 @IdMoneda,
 @FechaAprobacion,
 @Importante,
 @TipoCompra,
 @Consorcial,
 @Cumplido,
 @DetalleCondicionCompra,
 @IdAutorizoCumplido,
 @IdDioPorCumplido,
 @FechaDadoPorCumplido,
 @ObservacionesCumplido,
 @SubNumero,
 @UsuarioAnulacion,
 @FechaAnulacion,
 @MotivoAnulacion,
 @ArchivoAdjunto1,
 @ArchivoAdjunto2,
 @ArchivoAdjunto3,
 @ArchivoAdjunto4,
 @ArchivoAdjunto5,
 @ArchivoAdjunto6,
 @ArchivoAdjunto7,
 @ArchivoAdjunto8,
 @ArchivoAdjunto9,
 @ArchivoAdjunto10,
 @ImprimeImportante,
 @ImprimePlazoEntrega,
 @ImprimeLugarEntrega, 
 @ImprimeFormaPago,
 @ImprimeImputaciones,
 @ImprimeInspecciones,
 @ImprimeGarantia,
 @ImprimeDocumentacion,
 @CotizacionDolar,
 @CotizacionMoneda,
 @PedidoExterior,
 @PRESTOPedido,
 @PRESTOFechaProceso,
 @IdCondicionCompra,
 @EnviarEmail,
 @IdPedidoOriginal,
 @IdOrigenTransmision,
 @FechaImportacionTransmision
)
SELECT @IdPedido=@@identity
RETURN(@IdPedido)




GO

/****** Object:  StoredProcedure [dbo].[Pedidos_ActualizarDetalles]    Script Date: 03/15/2011 11:48:58 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE Procedure [dbo].[Pedidos_ActualizarDetalles]
@IdPedidoOriginal int,
@IdOrigenTransmision int
As
Update DetallePedidos
Set 
 IdPedido=(Select Top 1 Ped.IdPedido 
		From Pedidos Ped 
		Where Ped.IdPedidoOriginal=@IdPedidoOriginal and 
			Ped.IdOrigenTransmision=@IdOrigenTransmision)
Where IdPedidoOriginal=@IdPedidoOriginal and IdOrigenTransmision=@IdOrigenTransmision





GO

/****** Object:  StoredProcedure [dbo].[Pedidos_ActualizarEstadoPorIdPedido]    Script Date: 03/15/2011 11:48:58 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE Procedure [dbo].[Pedidos_ActualizarEstadoPorIdPedido]

@IdPedido int

AS

CREATE TABLE #Auxiliar1	
			(
			 IdDetallePedido INTEGER,
			 IdDetalleAcopios INTEGER,
			 IdDetalleRequerimiento INTEGER
			)
INSERT INTO #Auxiliar1 
 SELECT 
  DetPed.IdDetallePedido,
  IsNull(DetPed.IdDetalleAcopios,0),
  IsNull(DetPed.IdDetalleRequerimiento,0)
 FROM DetallePedidos DetPed
 WHERE DetPed.IdPedido = @IdPedido

DECLARE @Cantidad numeric(18,2), @IdRequerimiento int 

CREATE NONCLUSTERED INDEX IX__Auxiliar1 ON #Auxiliar1 (IdDetallePedido) ON [PRIMARY]

/*  CURSOR  */
DECLARE @IdDetallePedido int, @IdDetalleAcopios int, @IdDetalleRequerimiento int
DECLARE DetPed CURSOR LOCAL FORWARD_ONLY 
	FOR
		SELECT IdDetallePedido,IdDetalleAcopios,IdDetalleRequerimiento
		FROM #Auxiliar1
OPEN DetPed
FETCH NEXT FROM DetPed
	INTO @IdDetallePedido,@IdDetalleAcopios,@IdDetalleRequerimiento
WHILE @@FETCH_STATUS = 0
BEGIN
	UPDATE DetallePedidos
	SET CantidadRecibida=IsNull((Select Sum(IsNull(DetRec.CantidadCC,0))
					From DetalleRecepciones DetRec
					Left Outer Join Recepciones On DetRec.IdRecepcion=Recepciones.IdRecepcion
					Where DetRec.IdDetallePedido=@IdDetallePedido and 
						IsNull(Recepciones.Anulada,'NO')<>'SI'),0)
	WHERE IdDetallePedido=@IdDetallePedido and IsNull(Cumplido,'NO')<>'AN'  


	IF @IdDetalleRequerimiento<>0
	   BEGIN
		SET @Cantidad=IsNull((Select Sum(IsNull(DetPed.Cantidad,0))
					From DetallePedidos DetPed
					Left Outer Join Pedidos On DetPed.IdPedido=Pedidos.IdPedido
					Where IsNull(DetPed.IdDetalleRequerimiento,0)=@IdDetalleRequerimiento and 
						IsNull(DetPed.Cumplido,'NO')<>'AN' and 
						IsNull(Pedidos.Cumplido,'NO')<>'AN'),0)

		SET @IdRequerimiento=IsNull((Select Top 1 DetReq.IdRequerimiento
						From DetalleRequerimientos DetReq
						Where DetReq.IdDetalleRequerimiento=@IdDetalleRequerimiento),0)
		
		UPDATE DetalleRequerimientos
		SET Cumplido=Null
		WHERE DetalleRequerimientos.IdDetalleRequerimiento=@IdDetalleRequerimiento and 
			IsNull(DetalleRequerimientos.Cumplido,'NO')<>'AN'

		UPDATE DetalleRequerimientos
		SET Cumplido='SI'
		WHERE DetalleRequerimientos.IdDetalleRequerimiento=@IdDetalleRequerimiento and 
			IsNull(DetalleRequerimientos.Cumplido,'NO')<>'AN' and Cantidad<=@Cantidad

		UPDATE DetalleRequerimientos
		SET Cumplido='PA'
		WHERE DetalleRequerimientos.IdDetalleRequerimiento=@IdDetalleRequerimiento and 
			IsNull(DetalleRequerimientos.Cumplido,'NO')<>'AN' and Cantidad>@Cantidad

		UPDATE Requerimientos
		SET Cumplido=Null
		WHERE Requerimientos.IdRequerimiento=@IdRequerimiento and 
			IsNull(Requerimientos.Cumplido,'NO')<>'AN'
		
		UPDATE Requerimientos
		SET Cumplido='SI'
		WHERE Requerimientos.IdRequerimiento=@IdRequerimiento and 
			IsNull(Requerimientos.Cumplido,'NO')<>'AN' and 
			not exists(Select Top 1 DetReq.IdRequerimiento
					From DetalleRequerimientos DetReq
					Where DetReq.IdRequerimiento=@IdRequerimiento and 
						(IsNull(DetReq.Cumplido,'NO')='NO' or IsNull(DetReq.Cumplido,'NO')='PA'))
	   END

	UPDATE DetallePedidos
	SET Cumplido = 'SI'
	WHERE IdDetallePedido=@IdDetallePedido and IsNull(Cumplido,'NO')<>'AN' and 
		(Cantidad<=CantidadRecibida or IdDioPorCumplido is not null)

	UPDATE DetallePedidos
	SET Cumplido = 'PA'
	WHERE IdDetallePedido=@IdDetallePedido and IsNull(Cumplido,'NO')<>'AN' and 
		Cantidad>CantidadRecibida and CantidadRecibida<>0 and IdDioPorCumplido is null

	UPDATE DetallePedidos
	SET Cumplido = Null
	WHERE IdDetallePedido=@IdDetallePedido and IsNull(Cumplido,'NO')<>'AN' and 
		Cantidad>CantidadRecibida and CantidadRecibida=0 and IdDioPorCumplido is null

	FETCH NEXT FROM DetPed
		INTO @IdDetallePedido,@IdDetalleAcopios,@IdDetalleRequerimiento
END
CLOSE DetPed
DEALLOCATE DetPed


UPDATE Pedidos
SET Cumplido='SI'
WHERE Pedidos.IdPedido=@IdPedido and IsNull(Cumplido,'NO')<>'AN' and 
	not exists(Select Top 1 DetPed.IdPedido
			From DetallePedidos DetPed
			Where DetPed.IdPedido=@IdPedido and 
				(IsNull(DetPed.Cumplido,'NO')='NO' or IsNull(DetPed.Cumplido,'NO')='PA'))

DROP TABLE #Auxiliar1



GO

/****** Object:  StoredProcedure [dbo].[Pedidos_M]    Script Date: 03/15/2011 11:48:59 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE  Procedure [dbo].[Pedidos_M]
@IdPedido int,
@NumeroPedido int,
@IdProveedor int,
@FechaPedido datetime,
@LugarEntrega ntext,
@FormaPago ntext,
@Observaciones ntext,
@Bonificacion numeric(12,2),
@TotalIva1 numeric(12,2),
@TotalIva2 numeric(12,2),
@TotalPedido numeric(12,2),
@PorcentajeIva1 numeric(6,2),
@PorcentajeIva2 numeric(6,2),
@IdComprador int,
@PorcentajeBonificacion numeric(6,2),
@NumeroComparativa int,
@Contacto varchar(50),
@PlazoEntrega ntext,
@Garantia ntext,
@Documentacion ntext,
@Aprobo int,
@IdMoneda int,
@FechaAprobacion datetime,
@Importante ntext,
@TipoCompra int,
@Consorcial varchar(2),
@Cumplido varchar(2),
@DetalleCondicionCompra varchar(200),
@IdAutorizoCumplido int,
@IdDioPorCumplido int,
@FechaDadoPorCumplido datetime,
@ObservacionesCumplido ntext,
@SubNumero int,
@UsuarioAnulacion varchar(6),
@FechaAnulacion datetime,
@MotivoAnulacion ntext,
@ArchivoAdjunto1 varchar(100),
@ArchivoAdjunto2 varchar(100),
@ArchivoAdjunto3 varchar(100),
@ArchivoAdjunto4 varchar(100),
@ArchivoAdjunto5 varchar(100),
@ArchivoAdjunto6 varchar(100),
@ArchivoAdjunto7 varchar(100),
@ArchivoAdjunto8 varchar(100),
@ArchivoAdjunto9 varchar(100),
@ArchivoAdjunto10 varchar(100),
@ImprimeImportante varchar(2),
@ImprimePlazoEntrega varchar(2),
@ImprimeLugarEntrega varchar(2),
@ImprimeFormaPago varchar(2),
@ImprimeImputaciones varchar(2),
@ImprimeInspecciones varchar(2),
@ImprimeGarantia varchar(2),
@ImprimeDocumentacion varchar(2),
@CotizacionDolar numeric(18,3),
@CotizacionMoneda numeric(18,3),
@PedidoExterior varchar(2),
@PRESTOPedido varchar(13),
@PRESTOFechaProceso datetime,
@IdCondicionCompra int,
@EnviarEmail tinyint,
@IdPedidoOriginal int,
@IdOrigenTransmision int,
@FechaImportacionTransmision datetime

AS

UPDATE Pedidos
SET
 NumeroPedido=@NumeroPedido,
 IdProveedor=@IdProveedor,
 FechaPedido=@FechaPedido,
 LugarEntrega=@LugarEntrega,
 FormaPago=@FormaPago,
 Observaciones=@Observaciones,
 Bonificacion=@Bonificacion,
 TotalIva1=@TotalIva1,
 TotalIva2=@TotalIva2,
 TotalPedido=@TotalPedido,
 PorcentajeIva1=@PorcentajeIva1,
 PorcentajeIva2=@PorcentajeIva2,
 IdComprador=@IdComprador,
 PorcentajeBonificacion=@PorcentajeBonificacion,
 NumeroComparativa=@NumeroComparativa,
 Contacto=@Contacto,
 PlazoEntrega=@PlazoEntrega,
 Garantia=@Garantia,
 Documentacion=@Documentacion,
 Aprobo=@Aprobo,
 IdMoneda=@IdMoneda,
 FechaAprobacion=@FechaAprobacion,
 Importante=@Importante,
 TipoCompra=@TipoCompra,
 Consorcial=@Consorcial,
 Cumplido=@Cumplido,
 DetalleCondicionCompra=@DetalleCondicionCompra,
 IdAutorizoCumplido=@IdAutorizoCumplido,
 IdDioPorCumplido=@IdDioPorCumplido,
 FechaDadoPorCumplido=@FechaDadoPorCumplido,
 ObservacionesCumplido=@ObservacionesCumplido,
 SubNumero=@SubNumero,
 UsuarioAnulacion=@UsuarioAnulacion,
 FechaAnulacion=@FechaAnulacion,
 MotivoAnulacion=@MotivoAnulacion,
 ArchivoAdjunto1=@ArchivoAdjunto1,
 ArchivoAdjunto2=@ArchivoAdjunto2,
 ArchivoAdjunto3=@ArchivoAdjunto3,
 ArchivoAdjunto4=@ArchivoAdjunto4,
 ArchivoAdjunto5=@ArchivoAdjunto5,
 ArchivoAdjunto6=@ArchivoAdjunto6,
 ArchivoAdjunto7=@ArchivoAdjunto7,
 ArchivoAdjunto8=@ArchivoAdjunto8,
 ArchivoAdjunto9=@ArchivoAdjunto9,
 ArchivoAdjunto10=@ArchivoAdjunto10,
 ImprimeImportante=@ImprimeImportante,
 ImprimePlazoEntrega=@ImprimePlazoEntrega,
 ImprimeLugarEntrega=@ImprimeLugarEntrega,
 ImprimeFormaPago=@ImprimeFormaPago,
 ImprimeImputaciones=@ImprimeImputaciones,
 ImprimeInspecciones=@ImprimeInspecciones,
 ImprimeGarantia=@ImprimeGarantia,
 ImprimeDocumentacion=@ImprimeDocumentacion,
 CotizacionDolar=@CotizacionDolar,
 CotizacionMoneda=@CotizacionMoneda,
 PedidoExterior=@PedidoExterior,
 PRESTOPedido=@PRESTOPedido,
 PRESTOFechaProceso=@PRESTOFechaProceso,
 IdCondicionCompra=@IdCondicionCompra,
 EnviarEmail=@EnviarEmail,
 IdPedidoOriginal=@IdPedidoOriginal,
 IdOrigenTransmision=@IdOrigenTransmision,
 FechaImportacionTransmision=@FechaImportacionTransmision
WHERE IdPedido=@IdPedido
RETURN(@IdPedido)




GO

/****** Object:  StoredProcedure [dbo].[Pedidos_T]    Script Date: 03/15/2011 11:48:59 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE Procedure [dbo].[Pedidos_T]
@IdPedido int
AS 
SELECT * 
FROM Pedidos
WHERE (IdPedido=@IdPedido)



GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TT]    Script Date: 03/15/2011 11:48:59 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE  Procedure [dbo].[Pedidos_TT]

AS 

declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='0111166666111111111133'
set @vector_T='0551555555055557591000'

SELECT 
 IdPedido,
 Case 	When Pedidos.SubNumero is not null 
	Then str(Pedidos.NumeroPedido,8)+' / '+str(Pedidos.SubNumero,4)
	Else str(Pedidos.NumeroPedido,8)
 End as [Pedido],
 FechaPedido [Fecha],
 Pedidos.Cumplido as [Cump.],
 Proveedores.RazonSocial as [Proveedor],
 Case 	When TotalIva2 is null
	 Then TotalPedido-TotalIva1+Bonificacion
	 Else TotalPedido-TotalIva1-TotalIva2+Bonificacion
 End as [Neto gravado],
 Case 	When Bonificacion=0
	 Then Null
	 Else Bonificacion
 End as [Bonificacion],
 Case 	When TotalIva1=0
	 Then Null
	 Else TotalIva1
 End as [Total Iva],
 Case 	When TotalIva2=0
	 Then Null
	 Else TotalIva2
 End as [Total Iva Ad.],
 TotalPedido as [Total pedido],
 Monedas.Nombre as [Moneda],
 (Select Top 1 Empleados.Nombre
  from Empleados
  Where Empleados.IdEmpleado=Pedidos.IdComprador) as [Comprador],
 (Select Top 1 Empleados.Nombre
  from Empleados
  Where Empleados.IdEmpleado=Pedidos.Aprobo) as [Liberado por],
 (Select Count(*) From DetallePedidos 
  Where DetallePedidos.IdPedido=Pedidos.IdPedido) as [Cant.Items],
 NumeroComparativa as [Comparativa],
 Case 	When Pedidos.TipoCompra=1 Then 'Gestion por compras'
	When Pedidos.TipoCompra=2 Then 'Gestion por terceros'
	Else Null
 End as [Tipo compra],
 Consorcial,
 IdPedido,
 Pedidos.Observaciones,
 DetalleCondicionCompra as [Aclaracion s/condicion de compra],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM Pedidos
LEFT OUTER JOIN Proveedores ON Pedidos.IdProveedor=Proveedores.IdProveedor
LEFT OUTER JOIN Monedas ON Pedidos.IdMoneda=Monedas.IdMoneda
ORDER BY NumeroPedido,SubNumero





GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_DatosPorIdDetalle]    Script Date: 03/15/2011 11:48:59 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


CREATE PROCEDURE [dbo].[Pedidos_TX_DatosPorIdDetalle]

@IdDetallePedido int

AS

SELECT
 DetPed.IdDetallePedido,
 Pedidos.NumeroPedido,
 Pedidos.FechaPedido,
 DetPed.NumeroItem as [IP],
 Acopios.NumeroAcopio,
 Acopios.Fecha as [FechaAcopio],
 DetalleAcopios.NumeroItem as [IA],
 Requerimientos.NumeroRequerimiento,
 Requerimientos.FechaRequerimiento,
 DetalleRequerimientos.NumeroItem as [IR],
 DetPed.Precio,
 DetPed.Cantidad,
 DetPed.Cantidad1,
 DetPed.Cantidad2,
 Unidades.Descripcion as  [Unidad en],
 substring(Articulos.Descripcion,1,50) as [Articulo],
 Articulos.Descripcion as [DescripcionArt],
 DetPed.FechaEntrega,
 Pedidos.SubNumero,
 Pedidos.Aprobo,
 Pedidos.IdProveedor,
 Pedidos.IdPedido,
 DetPed.IdUnidad,
 DetPed.IdArticulo,
 DetPed.IdDetalleRequerimiento,
 DetPed.IdControlCalidad,
 DetPed.Observaciones,
 DetPed.IdDetalleAcopios,
 DetPed.NumeroItem,
 (Select Sum(DetRec.Cantidad)
  From DetalleRecepciones DetRec
  Left Outer Join Recepciones On DetRec.IdRecepcion = Recepciones.IdRecepcion
  Where DetPed.IdDetallePedido=DetRec.IdDetallePedido and 
	(Recepciones.Anulada is null or Recepciones.Anulada<>'SI')) as [Entregado],
 DetPed.Cantidad - Isnull((Select Sum(DetRec.Cantidad)
 				From DetalleRecepciones DetRec 
				Left Outer Join Recepciones On Recepciones.IdRecepcion=DetRec.IdRecepcion
				Where DetRec.IdDetallePedido=DetPed.IdDetallePedido and 
					(Recepciones.Anulada is null or Recepciones.Anulada<>'SI')),0) as [Pendiente],
 IsNull((Select Sum(IsNull(Pes.NetoEquivalente,0)) From BZ_Pesadas Pes Where DetPed.IdDetallePedido=Pes.IdDetallePedido),0) as [Pesado],
 CASE 
	WHEN Acopios.IdObra IS NOT NULL THEN Acopios.IdObra
	WHEN Requerimientos.IdObra IS NOT NULL THEN Requerimientos.IdObra
	ELSE null
 END as [IdObra],
 CASE 
	WHEN Acopios.IdObra IS NOT NULL THEN (Select Obras.NumeroObra From Obras Where Acopios.IdObra=Obras.IdObra)
	WHEN Requerimientos.IdObra IS NOT NULL THEN (Select Obras.NumeroObra From Obras Where Requerimientos.IdObra=Obras.IdObra)
	ELSE null
 END as [Obra],
 Pedidos.IdMoneda,
 Pedidos.CotizacionDolar,
 Pedidos.CotizacionMoneda,
 Articulos.IdUbicacionStandar,
 Articulos.Codigo
FROM DetallePedidosPRONTO DetPed
LEFT OUTER JOIN PedidosPRONTO Pedidos ON DetPed.IdPedido = Pedidos.IdPedido
LEFT OUTER JOIN Articulos ON DetPed.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Unidades ON DetPed.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN DetalleAcopios ON DetPed.IdDetalleAcopios = DetalleAcopios.IdDetalleAcopios
LEFT OUTER JOIN Acopios ON DetalleAcopios.IdAcopio = Acopios.IdAcopio
LEFT OUTER JOIN DetalleRequerimientos ON DetPed.IdDetalleRequerimiento = DetalleRequerimientos.IdDetalleRequerimiento
LEFT OUTER JOIN Requerimientos ON DetalleRequerimientos.IdRequerimiento = Requerimientos.IdRequerimiento
WHERE DetPed.IdDetallePedido=@IdDetallePedido

GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_DetallesPorId]    Script Date: 03/15/2011 11:48:59 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE Procedure [dbo].[Pedidos_TX_DetallesPorId]
@IdPedido int
AS 
SELECT *
FROM [DetallePedidos]
WHERE (IdPedido=@IdPedido)



GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_DetallesPorIdPedido]    Script Date: 03/15/2011 11:48:59 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE Procedure [dbo].[Pedidos_TX_DetallesPorIdPedido]

@IdPedido int

AS 

SELECT 
 DetPed.FechaEntrega,
 DetPed.NumeroItem,
 DetPed.OrigenDescripcion,
 DetPed.IdArticulo,
 DetPed.Cantidad,
 DetPed.IdUnidad,
 DetPed.Precio,
 IsNull(Monedas.Abreviatura,Monedas.Nombre) as [Moneda],
 DetPed.Cantidad1,
 DetPed.Cantidad2,
 DetPed.PorcentajeIVA,
 DetPed.PorcentajeBonificacion,
 DetPed.ImporteBonificacion,
 DetPed.ImporteIva,
 DetPed.ImporteTotalItem,
 DetPed.FechaEntrega,
 DetPed.FechaNecesidad,
 DetPed.IdControlCalidad,
 Requerimientos.IdObra as [IdObra],
 Obras.Descripcion as [Obra],
 Obras.NumeroObra as [NumeroObra],
 Requerimientos.NumeroRequerimiento,
 Requerimientos.Observaciones as [ObservacionesRM],
 DetalleRequerimientos.NumeroItem as [NumeroItemRM],
 DetPed.Observaciones,
 DetPed.Adjunto
FROM DetallePedidos DetPed
LEFT OUTER JOIN Pedidos On DetPed.IdPedido = Pedidos.IdPedido
LEFT OUTER JOIN Monedas On Pedidos.IdMoneda = Monedas.IdMoneda
LEFT OUTER JOIN DetalleRequerimientos On DetPed.IdDetalleRequerimiento = DetalleRequerimientos.IdDetalleRequerimiento
LEFT OUTER JOIN Requerimientos On DetalleRequerimientos.IdRequerimiento = Requerimientos.IdRequerimiento
LEFT OUTER JOIN Obras On Requerimientos.IdObra = Obras.IdObra
WHERE DetPed.IdPedido=@IdPedido
ORDER BY DetPed.NumeroItem



GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_DetPendientes]    Script Date: 03/15/2011 11:49:00 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO







CREATE PROCEDURE [dbo].[Pedidos_TX_DetPendientes]
@IdPedido int

AS

declare @vector_X varchar(50),@vector_T varchar(50)
set @vector_X='0111011111111111111111111111133'
set @vector_T='0314009991420111111111115919200'

SELECT
 DetPed.IdDetallePedido,
 Case 	When Pedidos.SubNumero is not null 
	Then str(Pedidos.NumeroPedido,8)+' / '+str(Pedidos.SubNumero,4)
	Else str(Pedidos.NumeroPedido,8)
 End as [Pedido],
 DetPed.NumeroItem as [Item],
 Pedidos.FechaPedido as [Fecha],
 Pedidos.IdProveedor,
 Proveedores.RazonSocial as [Proveedor],
 Proveedores.Telefono1,
 Proveedores.Email,
 Proveedores.Contacto,
 Empleados.Nombre as [Comprador],
 DetPed.FechaEntrega as [F.entrega],
 Articulos.Codigo as [Codigo],
 Articulos.Descripcion as [Articulo],
 DetPed.Cantidad as [Cant.],
 ( Select substring(Unidades.Descripcion,1,20)
	From Unidades
	Where Unidades.IdUnidad=DetPed.IdUnidad) as  [Unidad en],
 (Select Sum(DetRec.Cantidad)
  From DetalleRecepciones DetRec
  Left Outer Join Recepciones On DetRec.IdRecepcion = Recepciones.IdRecepcion
  Where DetPed.IdDetallePedido=DetRec.IdDetallePedido and 
	(Recepciones.Anulada is null or Recepciones.Anulada<>'SI')) as [Entregado],
 DetPed.Cantidad - Isnull((Select Sum(DetRec.Cantidad)
 				From DetalleRecepciones DetRec 
				Left Outer Join Recepciones On Recepciones.IdRecepcion=DetRec.IdRecepcion
				Where DetRec.IdDetallePedido=DetPed.IdDetallePedido and 
					(Recepciones.Anulada is null or Recepciones.Anulada<>'SI')),0)
 as [Pendiente],
 DetPed.Cantidad1 as [Med.1],
 DetPed.Cantidad2 as [Med.2],
 DetPed.NumeroItem as [It.Ped],
 Requerimientos.NumeroRequerimiento as [Nro.RM],
 DetalleRequerimientos.NumeroItem as [It.RM],
 Acopios.NumeroAcopio as [Nro.LA],
 DetalleAcopios.NumeroItem as [It.LA],
 CASE
	WHEN Acopios.IdObra is not null THEN (Select Top 1 Obras.NumeroObra From Obras Where Acopios.IdObra=Obras.IdObra)
	WHEN Requerimientos.IdObra is not null THEN (Select Top 1 Obras.NumeroObra From Obras Where Requerimientos.IdObra=Obras.IdObra)
	ELSE Null
 END as [Obra],
 DetPed.IdPedido,
 Equipos.Tag as [Equipo],
 DetPed.IdDetallePedido,
 DetPed.Cumplido as [Cump.],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetallePedidos DetPed
LEFT OUTER JOIN Pedidos ON DetPed.IdPedido = Pedidos.IdPedido
LEFT OUTER JOIN Proveedores ON Pedidos.IdProveedor = Proveedores.IdProveedor
LEFT OUTER JOIN Articulos ON DetPed.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN DetalleAcopios ON DetPed.IdDetalleAcopios = DetalleAcopios.IdDetalleAcopios
LEFT OUTER JOIN Acopios ON DetalleAcopios.IdAcopio = Acopios.IdAcopio
LEFT OUTER JOIN DetalleRequerimientos ON DetPed.IdDetalleRequerimiento = DetalleRequerimientos.IdDetalleRequerimiento
LEFT OUTER JOIN Requerimientos ON DetalleRequerimientos.IdRequerimiento = Requerimientos.IdRequerimiento
LEFT OUTER JOIN Empleados ON Pedidos.IdComprador = Empleados.IdEmpleado
LEFT OUTER JOIN DetalleLMateriales ON DetalleRequerimientos.IdDetalleLMateriales = DetalleLMateriales.IdDetalleLMateriales
LEFT OUTER JOIN LMateriales ON DetalleLMateriales.IdLMateriales=LMateriales.IdLMateriales
LEFT OUTER JOIN Equipos ON LMateriales.IdEquipo=Equipos.IdEquipo
WHERE ((DetPed.Cumplido<>'SI'  and DetPed.Cumplido<>'AN') or DetPed.Cumplido is null) AND 
	(Pedidos.Cumplido is null or Pedidos.Cumplido='NO') AND 
	DetPed.IdPedido=@IdPedido
ORDER By Pedidos.NumeroPedido,Pedidos.SubNumero,DetPed.NumeroItem






GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_DetPendientesTodos]    Script Date: 03/15/2011 11:49:00 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO







CREATE PROCEDURE [dbo].[Pedidos_TX_DetPendientesTodos]

AS


declare @vector_X varchar(50),@vector_T varchar(50)
set @vector_X='0111011111111111111111111111133'
set @vector_T='0314009991420111111111115919200'

SELECT
 DetPed.IdDetallePedido,
 Case 	When Pedidos.SubNumero is not null 
	Then str(Pedidos.NumeroPedido,8)+' / '+str(Pedidos.SubNumero,4)
	Else str(Pedidos.NumeroPedido,8)
 End as [Pedido],
 DetPed.NumeroItem as [Item],
 Pedidos.FechaPedido as [Fecha],
 Pedidos.IdProveedor,
 Proveedores.RazonSocial as [Proveedor],
 Proveedores.Telefono1,
 Proveedores.Email,
 Proveedores.Contacto,
 Empleados.Nombre as [Comprador],
 DetPed.FechaEntrega as [F.entrega],
 Articulos.Codigo as [Codigo],
 Articulos.Descripcion as [Articulo],
 DetPed.Cantidad as [Cant.],
 ( Select substring(Unidades.Descripcion,1,20)
	From Unidades
	Where Unidades.IdUnidad=DetPed.IdUnidad) as  [Unidad en],
 (Select Sum(DetRec.Cantidad)
  From DetalleRecepciones DetRec
  Left Outer Join Recepciones On DetRec.IdRecepcion = Recepciones.IdRecepcion
  Where DetPed.IdDetallePedido=DetRec.IdDetallePedido and 
	(Recepciones.Anulada is null or Recepciones.Anulada<>'SI')) as [Entregado],
 DetPed.Cantidad - Isnull((Select Sum(DetRec.Cantidad)
 				From DetalleRecepciones DetRec 
				Left Outer Join Recepciones On Recepciones.IdRecepcion=DetRec.IdRecepcion
				Where DetRec.IdDetallePedido=DetPed.IdDetallePedido and 
					(Recepciones.Anulada is null or Recepciones.Anulada<>'SI')),0)
 as [Pendiente],
 DetPed.Cantidad1 as [Med.1],
 DetPed.Cantidad2 as [Med.2],
 DetPed.NumeroItem as [It.Ped],
 Requerimientos.NumeroRequerimiento as [Nro.RM],
 DetalleRequerimientos.NumeroItem as [It.RM],
 Acopios.NumeroAcopio as [Nro.LA],
 DetalleAcopios.NumeroItem as [It.LA],
 CASE
	WHEN Acopios.IdObra is not null THEN (Select Top 1 Obras.NumeroObra From Obras Where Acopios.IdObra=Obras.IdObra)
	WHEN Requerimientos.IdObra is not null THEN (Select Top 1 Obras.NumeroObra From Obras Where Requerimientos.IdObra=Obras.IdObra)
	ELSE Null
 END as [Obra],
 DetPed.IdPedido,
 Equipos.Tag as [Equipo],
 DetPed.IdDetallePedido,
 DetPed.Cumplido as [Cump.],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetallePedidos DetPed
LEFT OUTER JOIN Pedidos ON DetPed.IdPedido = Pedidos.IdPedido
LEFT OUTER JOIN Proveedores ON Pedidos.IdProveedor = Proveedores.IdProveedor
LEFT OUTER JOIN Articulos ON DetPed.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN DetalleAcopios ON DetPed.IdDetalleAcopios = DetalleAcopios.IdDetalleAcopios
LEFT OUTER JOIN Acopios ON DetalleAcopios.IdAcopio = Acopios.IdAcopio
LEFT OUTER JOIN DetalleRequerimientos ON DetPed.IdDetalleRequerimiento = DetalleRequerimientos.IdDetalleRequerimiento
LEFT OUTER JOIN Requerimientos ON DetalleRequerimientos.IdRequerimiento = Requerimientos.IdRequerimiento
LEFT OUTER JOIN Empleados ON Pedidos.IdComprador = Empleados.IdEmpleado
LEFT OUTER JOIN DetalleLMateriales ON DetalleRequerimientos.IdDetalleLMateriales = DetalleLMateriales.IdDetalleLMateriales
LEFT OUTER JOIN LMateriales ON DetalleLMateriales.IdLMateriales=LMateriales.IdLMateriales
LEFT OUTER JOIN Equipos ON LMateriales.IdEquipo=Equipos.IdEquipo
WHERE ((DetPed.Cumplido<>'SI'  and DetPed.Cumplido<>'AN') or DetPed.Cumplido is null) AND 
	(Pedidos.Cumplido is null or Pedidos.Cumplido='NO')
ORDER By Pedidos.NumeroPedido,Pedidos.SubNumero,DetPed.NumeroItem






GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_ParaTransmitir]    Script Date: 03/15/2011 11:49:00 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE Procedure [dbo].[Pedidos_TX_ParaTransmitir]
AS 
SELECT *
FROM Pedidos
WHERE EnviarEmail=1 and Aprobo is not null



GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_Pendientes]    Script Date: 03/15/2011 11:49:00 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO



CREATE PROCEDURE [dbo].[Pedidos_TX_Pendientes]

AS 

declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='01101133'
set @vector_T='05505900'

SELECT
 DetPed.IdPedido,
 Case 	When Pedidos.SubNumero is not null 
	Then str(Pedidos.NumeroPedido,8)+' / '+str(Pedidos.SubNumero,4)
	Else str(Pedidos.NumeroPedido,8)
 End as [Pedido],
 Pedidos.FechaPedido as [Fecha],
 Pedidos.IdProveedor,
 Proveedores.RazonSocial as [Proveedor],
 DetPed.IdPedido,
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetallePedidos DetPed
LEFT OUTER JOIN Pedidos ON DetPed.IdPedido = Pedidos.IdPedido
LEFT OUTER JOIN Proveedores ON Pedidos.IdProveedor = Proveedores.IdProveedor
WHERE ((DetPed.Cumplido<>'SI' and DetPed.Cumplido<>'AN') or DetPed.Cumplido is null) AND
	((Pedidos.Cumplido<>'SI' and Pedidos.Cumplido<>'AN') or Pedidos.Cumplido is null) 
GROUP BY DetPed.IdPedido,Pedidos.NumeroPedido,Pedidos.FechaPedido,Pedidos.IdProveedor,Proveedores.RazonSocial,Pedidos.SubNumero
ORDER BY Proveedores.RazonSocial


GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_PendientesParaLista]    Script Date: 03/15/2011 11:49:00 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE PROCEDURE [dbo].[Pedidos_TX_PendientesParaLista]
AS
SELECT
 DetPed.IdPedido,
 Case 	When Pedidos.SubNumero is not null 
	Then str(Pedidos.NumeroPedido,8)+' / '+str(Pedidos.SubNumero,4)
	Else str(Pedidos.NumeroPedido,8)
 End as [Titulo]
FROM DetallePedidos DetPed
LEFT OUTER JOIN Pedidos ON DetPed.IdPedido = Pedidos.IdPedido
WHERE((DetPed.Cumplido<>'SI' and DetPed.Cumplido<>'AN') or DetPed.Cumplido is null) AND
	((Pedidos.Cumplido<>'SI' and Pedidos.Cumplido<>'AN') or Pedidos.Cumplido is null) 
GROUP BY DetPed.IdPedido,Pedidos.NumeroPedido,Pedidos.SubNumero
ORDER BY Pedidos.NumeroPedido,Pedidos.SubNumero





GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_PorId]    Script Date: 03/15/2011 11:49:00 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO



















CREATE Procedure [dbo].[Pedidos_TX_PorId]
@IdPedido int
AS 
SELECT * 
FROM Pedidos
WHERE (IdPedido=@IdPedido)



















GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_PorIdOrigen]    Script Date: 03/15/2011 11:49:00 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE Procedure [dbo].[Pedidos_TX_PorIdOrigen]
@IdPedidoOriginal int,
@IdOrigenTransmision int
AS 
SELECT Top 1 IdPedido
FROM Pedidos
WHERE IdPedidoOriginal=@IdPedidoOriginal and IdOrigenTransmision=@IdOrigenTransmision





GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_PorIdOrigenDetalle]    Script Date: 03/15/2011 11:49:00 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE Procedure [dbo].[Pedidos_TX_PorIdOrigenDetalle]
@IdDetallePedidoOriginal int,
@IdOrigenTransmision int
AS 
SELECT Top 1 dpe.IdDetallePedido,Pedidos.IdPedido
FROM DetallePedidos dpe
LEFT OUTER JOIN Pedidos ON dpe.IdPedido=Pedidos.IdPedido
WHERE dpe.IdDetallePedidoOriginal=@IdDetallePedidoOriginal and 
	dpe.IdOrigenTransmision=@IdOrigenTransmision






GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_PorNumero]    Script Date: 03/15/2011 11:49:00 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE Procedure [dbo].[Pedidos_TX_PorNumero]
@NumeroPedido int,
@SubNumero int
AS 
SELECT * 
FROM Pedidos
WHERE NumeroPedido=@NumeroPedido and SubNumero=@SubNumero





GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:49:00 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE Procedure [dbo].[Pedidos_TX_SetearComoTransmitido]
AS 
UPDATE Pedidos
SET EnviarEmail=0
WHERE EnviarEmail<>0 and Aprobo is not null



GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_Todos]    Script Date: 03/15/2011 11:49:00 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE  Procedure [dbo].[Pedidos_TX_Todos]

@Origen varchar(1) = Null

AS 

DECLARE @vector_X varchar(30),@vector_T varchar(30)
SET @Origen=IsNull(@Origen,'S')

IF @Origen='S'
    BEGIN
	SET NOCOUNT ON
	
	CREATE TABLE #Auxiliar0 
				(
				 IdPedido INTEGER,
				 Requerimientos VARCHAR(100)
				)
	
	CREATE TABLE #Auxiliar1 
				(
				 IdPedido INTEGER,
				 NumeroRequerimiento INTEGER
				)
	INSERT INTO #Auxiliar1 
	 SELECT 
	  DetPed.IdPedido,
	  Case When Requerimientos.NumeroRequerimiento is not null
		Then Requerimientos.NumeroRequerimiento
		Else Acopios.NumeroAcopio
	  End
	 FROM DetallePedidos DetPed
	 LEFT OUTER JOIN DetalleAcopios ON DetPed.IdDetalleAcopios = DetalleAcopios.IdDetalleAcopios
	 LEFT OUTER JOIN Acopios ON DetalleAcopios.IdAcopio = Acopios.IdAcopio
	 LEFT OUTER JOIN DetalleRequerimientos ON DetPed.IdDetalleRequerimiento = DetalleRequerimientos.IdDetalleRequerimiento
	 LEFT OUTER JOIN Requerimientos ON DetalleRequerimientos.IdRequerimiento = Requerimientos.IdRequerimiento
	
	CREATE NONCLUSTERED INDEX IX__Auxiliar1 ON #Auxiliar1 (IdPedido,NumeroRequerimiento) ON [PRIMARY]
	
	INSERT INTO #Auxiliar0 
	 SELECT IdPedido, ''
	 FROM #Auxiliar1
	 GROUP BY IdPedido
	
	/*  CURSOR  */
	DECLARE @IdPedido int, @NumeroRequerimiento int, @RMs varchar(100), @Corte int
	SET @Corte=0
	SET @RMs=''
	DECLARE Cur CURSOR LOCAL FORWARD_ONLY 
		FOR	SELECT IdPedido, NumeroRequerimiento
			FROM #Auxiliar1
			ORDER BY IdPedido
	OPEN Cur
	FETCH NEXT FROM Cur INTO @IdPedido, @NumeroRequerimiento
	WHILE @@FETCH_STATUS = 0
	   BEGIN
		IF @Corte<>@IdPedido
		   BEGIN
			IF @Corte<>0
			   BEGIN
				UPDATE #Auxiliar0
				SET Requerimientos = SUBSTRING(@RMs,1,100)
				WHERE #Auxiliar0.IdPedido=@Corte
			   END
			SET @RMs=''
			SET @Corte=@IdPedido
		   END
		IF NOT @NumeroRequerimiento IS NULL
			IF PATINDEX('%'+CONVERT(VARCHAR,@NumeroRequerimiento)+' '+'%', @RMs)=0
				SET @RMs=@RMs+CONVERT(VARCHAR,@NumeroRequerimiento)+' '
		FETCH NEXT FROM Cur INTO @IdPedido, @NumeroRequerimiento
	   END
	 IF @Corte<>0
	    BEGIN
		UPDATE #Auxiliar0
		SET Requerimientos = SUBSTRING(@RMs,1,100)
		WHERE #Auxiliar0.IdPedido=@Corte
	    END
	CLOSE Cur
	DEALLOCATE Cur
	
	SET NOCOUNT OFF
	
	SET @vector_X='01111166666111111111133'
	SET @vector_T='0551F555555055557951000'
	
	SELECT 
	 Pedidos.IdPedido as [IdAux],
	 Case 	When Pedidos.SubNumero is not null 
		Then str(Pedidos.NumeroPedido,8)+' / '+str(Pedidos.SubNumero,4)
		Else str(Pedidos.NumeroPedido,8)
	 End as [Pedido],
	 Pedidos.FechaPedido [Fecha],
	 Pedidos.Cumplido as [Cump.],
	 #Auxiliar0.Requerimientos as [RM's],
	 Proveedores.RazonSocial as [Proveedor],
	 Case 	When TotalIva2 is null
		 Then TotalPedido-TotalIva1+Bonificacion
		 Else TotalPedido-TotalIva1-TotalIva2+Bonificacion
	 End as [Neto gravado],
	 Case 	When Bonificacion=0
		 Then Null
		 Else Bonificacion
	 End as [Bonificacion],
	 Case 	When TotalIva1=0
		 Then Null
		 Else TotalIva1
	 End as [Total Iva],
	 Case 	When TotalIva2=0
		 Then Null
		 Else TotalIva2
	 End as [Total Iva Ad.],
	 TotalPedido as [Total pedido],
	 Monedas.Nombre as [Moneda],
	 (Select Top 1 Empleados.Nombre
	  from Empleados
	  Where Empleados.IdEmpleado=Pedidos.IdComprador) as [Comprador],
	 (Select Top 1 Empleados.Nombre
	  from Empleados
	  Where Empleados.IdEmpleado=Pedidos.Aprobo) as [Liberado por],
	 (Select Count(*) From DetallePedidos 
	  Where DetallePedidos.IdPedido=Pedidos.IdPedido) as [Cant.Items],
	 NumeroComparativa as [Comparativa],
	 Case 	When Pedidos.TipoCompra=1 Then 'Gestion por compras'
		When Pedidos.TipoCompra=2 Then 'Gestion por terceros'
		Else Null
	 End as [Tipo compra],
	 Pedidos.IdPedido,
	 Consorcial,
	 Pedidos.Observaciones,
	 DetalleCondicionCompra as [Aclaracion s/condicion de compra],
	 @Vector_T as Vector_T,
	 @Vector_X as Vector_X
	FROM Pedidos
	LEFT OUTER JOIN Proveedores ON Pedidos.IdProveedor=Proveedores.IdProveedor
	LEFT OUTER JOIN Monedas ON Pedidos.IdMoneda=Monedas.IdMoneda
	LEFT OUTER JOIN #Auxiliar0 ON Pedidos.IdPedido=#Auxiliar0.IdPedido
	ORDER BY NumeroPedido,SubNumero

	DROP TABLE #Auxiliar0
	DROP TABLE #Auxiliar1
    END
ELSE
    BEGIN
	SET @vector_X='0111166666111111111133'
	SET @vector_T='0551555555055557591000'
	
	SELECT 
	 IdPedido,
	 Case 	When Pedidos.SubNumero is not null 
		Then str(Pedidos.NumeroPedido,8)+' / '+str(Pedidos.SubNumero,4)
		Else str(Pedidos.NumeroPedido,8)
	 End as [Pedido],
	 FechaPedido [Fecha],
	 Pedidos.Cumplido as [Cump.],
	 Proveedores.RazonSocial as [Proveedor],
	 Case 	When TotalIva2 is null
		 Then TotalPedido-TotalIva1+Bonificacion
		 Else TotalPedido-TotalIva1-TotalIva2+Bonificacion
	 End as [Neto gravado],
	 Case 	When Bonificacion=0
		 Then Null
		 Else Bonificacion
	 End as [Bonificacion],
	 Case 	When TotalIva1=0
		 Then Null
		 Else TotalIva1
	 End as [Total Iva],
	 Case 	When TotalIva2=0
		 Then Null
		 Else TotalIva2
	 End as [Total Iva Ad.],
	 TotalPedido as [Total pedido],
	 Monedas.Nombre as [Moneda],
	 (Select Top 1 Empleados.Nombre
	  from Empleados
	  Where Empleados.IdEmpleado=Pedidos.IdComprador) as [Comprador],
	 (Select Top 1 Empleados.Nombre
	  from Empleados
	  Where Empleados.IdEmpleado=Pedidos.Aprobo) as [Liberado por],
	 (Select Count(*) From DetallePedidos 
	  Where DetallePedidos.IdPedido=Pedidos.IdPedido) as [Cant.Items],
	 NumeroComparativa as [Comparativa],
	 Case 	When Pedidos.TipoCompra=1 Then 'Gestion por compras'
		When Pedidos.TipoCompra=2 Then 'Gestion por terceros'
		Else Null
	 End as [Tipo compra],
	 Consorcial,
	 IdPedido,
	 Pedidos.Observaciones,
	 DetalleCondicionCompra as [Aclaracion s/condicion de compra],
	 @Vector_T as Vector_T,
	 @Vector_X as Vector_X
	FROM PedidosPRONTO Pedidos
	LEFT OUTER JOIN Proveedores ON Pedidos.IdProveedor=Proveedores.IdProveedor
	LEFT OUTER JOIN Monedas ON Pedidos.IdMoneda=Monedas.IdMoneda
	ORDER BY NumeroPedido,SubNumero
    END



GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_TodosLosDetalles]    Script Date: 03/15/2011 11:49:00 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE Procedure [dbo].[Pedidos_TX_TodosLosDetalles]
@IdPedido int
As 
Select
 DetPed.*,
 Pedidos.NumeroPedido,
 DetalleRequerimientos.NumeroItem as [IR],
 Requerimientos.NumeroRequerimiento,
 DetPed.Cantidad,
 (Select Sum(DetRec.Cantidad)
  From DetalleRecepciones DetRec
  Where DetRec.IdDetallePedido=DetPed.IdDetallePedido) as [Entregado],
 CASE	
	WHEN	(Select Sum(DetRec.Cantidad)
		 From DetalleRecepciones DetRec
		 Where DetRec.IdDetallePedido=DetPed.IdDetallePedido) is not null
	THEN	(DetPed.Cantidad - (Select Sum(DetRec.Cantidad)
 				     From DetalleRecepciones DetRec
				     Where DetRec.IdDetallePedido=DetPed.IdDetallePedido))
	ELSE	DetPed.Cantidad
 END as [Pendiente],
 CASE 
	WHEN Acopios.IdObra IS NOT NULL THEN Acopios.IdObra
	WHEN Requerimientos.IdObra IS NOT NULL THEN Requerimientos.IdObra
	ELSE null
 END as [IdObra],
 CASE 
	WHEN Acopios.IdObra IS NOT NULL THEN (Select Obras.NumeroObra From Obras Where Acopios.IdObra=Obras.IdObra)
	WHEN Requerimientos.IdObra IS NOT NULL THEN (Select Obras.NumeroObra From Obras Where Requerimientos.IdObra=Obras.IdObra)
	ELSE null
 END as [Obra],
 Pedidos.IdMoneda,
 Pedidos.CotizacionDolar,
 Pedidos.CotizacionMoneda,
 Articulos.IdUbicacionStandar,
 Articulos.Descripcion as [DescripcionArt],
 Articulos.Codigo
From DetallePedidos DetPed
Left Outer Join Pedidos On Pedidos.IdPedido=DetPed.IdPedido
Left Outer Join Articulos ON DetPed.IdArticulo = Articulos.IdArticulo
Left Outer Join DetalleRequerimientos On DetalleRequerimientos.IdDetalleRequerimiento=DetPed.IdDetalleRequerimiento
Left Outer Join Requerimientos On Requerimientos.IdRequerimiento=DetalleRequerimientos.IdRequerimiento
Left Outer Join DetalleAcopios On DetPed.IdDetalleAcopios = DetalleAcopios.IdDetalleAcopios
Left Outer Join Acopios On DetalleAcopios.IdAcopio = Acopios.IdAcopio
Where DetPed.IdPedido=@IdPedido
Order By DetPed.NumeroItem





GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TX_TT]    Script Date: 03/15/2011 11:49:00 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE  Procedure [dbo].[Pedidos_TX_TT]

@IdPedido int

AS 

SET NOCOUNT ON

CREATE TABLE #Auxiliar0 
			(
			 IdPedido INTEGER,
			 Requerimientos VARCHAR(100)
			)

CREATE TABLE #Auxiliar1 
			(
			 IdPedido INTEGER,
			 NumeroRequerimiento INTEGER
			)
INSERT INTO #Auxiliar1 
 SELECT 
  DetPed.IdPedido,
  Case When Requerimientos.NumeroRequerimiento is not null
	Then Requerimientos.NumeroRequerimiento
	Else Acopios.NumeroAcopio
  End
 FROM DetallePedidos DetPed
 LEFT OUTER JOIN Pedidos ON DetPed.IdPedido = Pedidos.IdPedido
 LEFT OUTER JOIN DetalleAcopios ON DetPed.IdDetalleAcopios = DetalleAcopios.IdDetalleAcopios
 LEFT OUTER JOIN Acopios ON DetalleAcopios.IdAcopio = Acopios.IdAcopio
 LEFT OUTER JOIN DetalleRequerimientos ON DetPed.IdDetalleRequerimiento = DetalleRequerimientos.IdDetalleRequerimiento
 LEFT OUTER JOIN Requerimientos ON DetalleRequerimientos.IdRequerimiento = Requerimientos.IdRequerimiento
 WHERE (Pedidos.IdPedido=@IdPedido)

CREATE NONCLUSTERED INDEX IX__Auxiliar1 ON #Auxiliar1 (IdPedido,NumeroRequerimiento) ON [PRIMARY]

INSERT INTO #Auxiliar0 
 SELECT IdPedido, ''
 FROM #Auxiliar1
 GROUP BY IdPedido

/*  CURSOR  */
DECLARE @IdPedido1 int, @NumeroRequerimiento int, @RMs varchar(100), @Corte int
SET @Corte=0
SET @RMs=''
DECLARE Cur CURSOR LOCAL FORWARD_ONLY 
	FOR	SELECT IdPedido, NumeroRequerimiento
		FROM #Auxiliar1
		ORDER BY IdPedido
OPEN Cur
FETCH NEXT FROM Cur INTO @IdPedido1, @NumeroRequerimiento
WHILE @@FETCH_STATUS = 0
   BEGIN
	IF @Corte<>@IdPedido1
	   BEGIN
		IF @Corte<>0
		   BEGIN
			UPDATE #Auxiliar0
			SET Requerimientos = SUBSTRING(@RMs,1,100)
			WHERE #Auxiliar0.IdPedido=@Corte
		   END
		SET @RMs=''
		SET @Corte=@IdPedido1
	   END
	IF NOT @NumeroRequerimiento IS NULL
		IF PATINDEX('%'+CONVERT(VARCHAR,@NumeroRequerimiento)+' '+'%', @RMs)=0
			SET @RMs=@RMs+CONVERT(VARCHAR,@NumeroRequerimiento)+' '
	FETCH NEXT FROM Cur INTO @IdPedido1, @NumeroRequerimiento
   END
 IF @Corte<>0
    BEGIN
	UPDATE #Auxiliar0
	SET Requerimientos = SUBSTRING(@RMs,1,100)
	WHERE #Auxiliar0.IdPedido=@Corte
    END
CLOSE Cur
DEALLOCATE Cur

SET NOCOUNT OFF

DECLARE @vector_X varchar(30),@vector_T varchar(30)
SET @vector_X='01111166666111111111133'
SET @vector_T='0551F555555055557951000'

SELECT 
 Pedidos.IdPedido as [IdAux],
 Case 	When Pedidos.SubNumero is not null 
	Then str(Pedidos.NumeroPedido,8)+' / '+str(Pedidos.SubNumero,4)
	Else str(Pedidos.NumeroPedido,8)
 End as [Pedido],
 FechaPedido [Fecha],
 Pedidos.Cumplido as [Cump.],
 #Auxiliar0.Requerimientos as [RM's],
 Proveedores.RazonSocial as [Proveedor],
 Case 	When TotalIva2 is null
	 Then TotalPedido-TotalIva1+Bonificacion
	 Else TotalPedido-TotalIva1-TotalIva2+Bonificacion
 End as [Neto gravado],
 Case 	When Bonificacion=0
	 Then Null
	 Else Bonificacion
 End as [Bonificacion],
 Case 	When TotalIva1=0
	 Then Null
	 Else TotalIva1
 End as [Total Iva],
 Case 	When TotalIva2=0
	 Then Null
	 Else TotalIva2
 End as [Total Iva Ad.],
 TotalPedido as [Total pedido],
 Monedas.Nombre as [Moneda],
 (Select Top 1 Empleados.Nombre
  from Empleados
  Where Empleados.IdEmpleado=Pedidos.IdComprador) as [Comprador],
 (Select Top 1 Empleados.Nombre
  from Empleados
  Where Empleados.IdEmpleado=Pedidos.Aprobo) as [Liberado por],
 (Select Count(*) From DetallePedidos 
  Where DetallePedidos.IdPedido=Pedidos.IdPedido) as [Cant.Items],
 NumeroComparativa as [Comparativa],
 Case 	When Pedidos.TipoCompra=1 Then 'Gestion por compras'
	When Pedidos.TipoCompra=2 Then 'Gestion por terceros'
	Else Null
 End as [Tipo compra],
 Pedidos.IdPedido,
 Consorcial,
 Pedidos.Observaciones,
 DetalleCondicionCompra as [Aclaracion s/condicion de compra],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM Pedidos
LEFT OUTER JOIN Proveedores ON Pedidos.IdProveedor=Proveedores.IdProveedor
LEFT OUTER JOIN Monedas ON Pedidos.IdMoneda=Monedas.IdMoneda
LEFT OUTER JOIN #Auxiliar0 ON Pedidos.IdPedido=#Auxiliar0.IdPedido
WHERE (Pedidos.IdPedido=@IdPedido)

DROP TABLE #Auxiliar0
DROP TABLE #Auxiliar1



GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TXAnio]    Script Date: 03/15/2011 11:49:00 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE Procedure [dbo].[Pedidos_TXAnio]

AS

SELECT Min(CONVERT(varchar, YEAR(FechaPedido)))  as [Periodo], YEAR(FechaPedido)
FROM Pedidos
WHERE FechaPedido is not null
GROUP BY YEAR(FechaPedido) 
ORDER BY YEAR(FechaPedido)  desc



GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TXFecha]    Script Date: 03/15/2011 11:49:00 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE PROCEDURE [dbo].[Pedidos_TXFecha]

@Desde datetime,
@Hasta datetime

AS

SET NOCOUNT ON

CREATE TABLE #Auxiliar0 
			(
			 IdPedido INTEGER,
			 Requerimientos VARCHAR(100)
			)

CREATE TABLE #Auxiliar1 
			(
			 IdPedido INTEGER,
			 NumeroRequerimiento INTEGER
			)
INSERT INTO #Auxiliar1 
 SELECT 
  DetPed.IdPedido,
  Case When Requerimientos.NumeroRequerimiento is not null
	Then Requerimientos.NumeroRequerimiento
	Else Acopios.NumeroAcopio
  End
 FROM DetallePedidos DetPed
 LEFT OUTER JOIN Pedidos ON DetPed.IdPedido = Pedidos.IdPedido
 LEFT OUTER JOIN DetalleAcopios ON DetPed.IdDetalleAcopios = DetalleAcopios.IdDetalleAcopios
 LEFT OUTER JOIN Acopios ON DetalleAcopios.IdAcopio = Acopios.IdAcopio
 LEFT OUTER JOIN DetalleRequerimientos ON DetPed.IdDetalleRequerimiento = DetalleRequerimientos.IdDetalleRequerimiento
 LEFT OUTER JOIN Requerimientos ON DetalleRequerimientos.IdRequerimiento = Requerimientos.IdRequerimiento
 WHERE Pedidos.FechaPedido Between @Desde And @Hasta

CREATE NONCLUSTERED INDEX IX__Auxiliar1 ON #Auxiliar1 (IdPedido,NumeroRequerimiento) ON [PRIMARY]

INSERT INTO #Auxiliar0 
 SELECT IdPedido, ''
 FROM #Auxiliar1
 GROUP BY IdPedido

/*  CURSOR  */
DECLARE @IdPedido int, @NumeroRequerimiento int, @RMs varchar(100), @Corte int
SET @Corte=0
SET @RMs=''
DECLARE Cur CURSOR LOCAL FORWARD_ONLY 
	FOR	SELECT IdPedido, NumeroRequerimiento
		FROM #Auxiliar1
		ORDER BY IdPedido
OPEN Cur
FETCH NEXT FROM Cur INTO @IdPedido, @NumeroRequerimiento
WHILE @@FETCH_STATUS = 0
   BEGIN
	IF @Corte<>@IdPedido
	   BEGIN
		IF @Corte<>0
		   BEGIN
			UPDATE #Auxiliar0
			SET Requerimientos = SUBSTRING(@RMs,1,100)
			WHERE #Auxiliar0.IdPedido=@Corte
		   END
		SET @RMs=''
		SET @Corte=@IdPedido
	   END
	IF NOT @NumeroRequerimiento IS NULL
		IF PATINDEX('%'+CONVERT(VARCHAR,@NumeroRequerimiento)+' '+'%', @RMs)=0
			SET @RMs=@RMs+CONVERT(VARCHAR,@NumeroRequerimiento)+' '
	FETCH NEXT FROM Cur INTO @IdPedido, @NumeroRequerimiento
   END
 IF @Corte<>0
    BEGIN
	UPDATE #Auxiliar0
	SET Requerimientos = SUBSTRING(@RMs,1,100)
	WHERE #Auxiliar0.IdPedido=@Corte
    END
CLOSE Cur
DEALLOCATE Cur

SET NOCOUNT OFF

DECLARE @vector_X varchar(30),@vector_T varchar(30)
SET @vector_X='01111166666111111111133'
SET @vector_T='0551F555555055557951000'

SELECT 
 Pedidos.IdPedido as [IdAux],
 Case 	When Pedidos.SubNumero is not null 
	Then str(Pedidos.NumeroPedido,8)+' / '+str(Pedidos.SubNumero,4)
	Else str(Pedidos.NumeroPedido,8)
 End as [Pedido],
 FechaPedido [Fecha],
 Pedidos.Cumplido as [Cump.],
 #Auxiliar0.Requerimientos as [RM's],
 Proveedores.RazonSocial as [Proveedor],
 Case 	When TotalIva2 is null
	 Then TotalPedido-TotalIva1+Bonificacion
	 Else TotalPedido-TotalIva1-TotalIva2+Bonificacion
 End as [Neto gravado],
 Case 	When Bonificacion=0
	 Then Null
	 Else Bonificacion
 End as [Bonificacion], 
 Case 	When TotalIva1=0
	 Then Null
	 Else TotalIva1
 End as [Total Iva],
 Case 	When TotalIva2=0
	 Then Null
	 Else TotalIva2
 End as [Total Iva Ad.],
 TotalPedido as [Total pedido],
 Monedas.Nombre as [Moneda],
 (Select Top 1 Empleados.Nombre
  from Empleados
  Where Empleados.IdEmpleado=Pedidos.IdComprador) as [Comprador],
 (Select Top 1 Empleados.Nombre
  from Empleados
  Where Empleados.IdEmpleado=Pedidos.Aprobo) as [Liberado por],
 (Select Count(*) From DetallePedidos 
  Where DetallePedidos.IdPedido=Pedidos.IdPedido) as [Cant.Items],
 NumeroComparativa as [Comparativa],
 Case 	When Pedidos.TipoCompra=1 Then 'Gestion por compras'
	When Pedidos.TipoCompra=2 Then 'Gestion por terceros'
	Else Null
 End as [Tipo compra],
 Pedidos.IdPedido,
 Consorcial,
 Pedidos.Observaciones,
 DetalleCondicionCompra as [Aclaracion s/condicion de compra],
@Vector_T as Vector_T,
@Vector_X as Vector_X
FROM Pedidos
LEFT OUTER JOIN Proveedores ON Pedidos.IdProveedor=Proveedores.IdProveedor
LEFT OUTER JOIN Monedas ON Pedidos.IdMoneda=Monedas.IdMoneda
LEFT OUTER JOIN #Auxiliar0 ON Pedidos.IdPedido=#Auxiliar0.IdPedido
WHERE Pedidos.FechaPedido Between @Desde And @Hasta
ORDER BY NumeroPedido,SubNumero

DROP TABLE #Auxiliar0
DROP TABLE #Auxiliar1



GO

/****** Object:  StoredProcedure [dbo].[Pedidos_TXMes]    Script Date: 03/15/2011 11:49:00 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE Procedure [dbo].[Pedidos_TXMes]

@Anio int

AS

SELECT Min(CONVERT(varchar, MONTH(FechaPedido)) + '/' + CONVERT(varchar, YEAR(FechaPedido)) ) as [Periodo],
	YEAR(FechaPedido), MONTH(FechaPedido),
	CASE 
		WHEN MONTH(FechaPedido)=1 THEN 'Enero'
		WHEN MONTH(FechaPedido)=2 THEN 'Febrero'
		WHEN MONTH(FechaPedido)=3 THEN 'Marzo'
		WHEN MONTH(FechaPedido)=4 THEN 'Abril'
		WHEN MONTH(FechaPedido)=5 THEN 'Mayo'
		WHEN MONTH(FechaPedido)=6 THEN 'Junio'
		WHEN MONTH(FechaPedido)=7 THEN 'Julio'
		WHEN MONTH(FechaPedido)=8 THEN 'Agosto'
		WHEN MONTH(FechaPedido)=9 THEN 'Setiembre'
		WHEN MONTH(FechaPedido)=10 THEN 'Octubre'
		WHEN MONTH(FechaPedido)=11 THEN 'Noviembre'
		WHEN MONTH(FechaPedido)=12 THEN 'Diciembre'
		ELSE 'Error'
	END as [Mes]
FROM Pedidos
WHERE YEAR(FechaPedido)=@Anio
GROUP BY  YEAR(FechaPedido) , MONTH(FechaPedido)  
ORDER BY YEAR(FechaPedido) desc, MONTH(FechaPedido) desc



GO

/****** Object:  StoredProcedure [dbo].[PedidosPRONTO_M]    Script Date: 03/15/2011 11:49:00 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE  Procedure [dbo].[PedidosPRONTO_M]

	@IdPedido int,
	@NumeroPedido int,
	@IdProveedor int,
	@FechaPedido datetime,
	@LugarEntrega ntext,
	@FormaPago ntext,
	@Observaciones ntext,
	@Bonificacion numeric(12,2),
	@TotalIva1 numeric(12,2),
	@TotalIva2 numeric(12,2),
	@TotalPedido numeric(12,2),
	@PorcentajeIva1 numeric(6,2),
	@PorcentajeIva2 numeric(6,2),
	@IdComprador int,
	@PorcentajeBonificacion numeric(6,2),
	@NumeroComparativa int,
	@Contacto varchar(50),
	@PlazoEntrega ntext,
	@Garantia ntext,
	@Documentacion ntext,
	@Aprobo int,
	@IdMoneda int,
	@FechaAprobacion datetime,
	@Importante ntext,
	@TipoCompra int,
	@Consorcial varchar(2),
	@Cumplido varchar(2),
	@DetalleCondicionCompra varchar(200),
	@IdAutorizoCumplido int,
	@IdDioPorCumplido int,
	@FechaDadoPorCumplido datetime,
	@ObservacionesCumplido ntext,
	@SubNumero int,
	@UsuarioAnulacion varchar(6),
	@FechaAnulacion datetime,
	@MotivoAnulacion ntext,
	@ArchivoAdjunto1 varchar(100),
	@ArchivoAdjunto2 varchar(100),
	@ArchivoAdjunto3 varchar(100),
	@ArchivoAdjunto4 varchar(100),
	@ArchivoAdjunto5 varchar(100),
	@ArchivoAdjunto6 varchar(100),
	@ArchivoAdjunto7 varchar(100),
	@ArchivoAdjunto8 varchar(100),
	@ArchivoAdjunto9 varchar(100),
	@ArchivoAdjunto10 varchar(100),
	@ImprimeImportante varchar(2),
	@ImprimePlazoEntrega varchar(2),
	@ImprimeLugarEntrega varchar(2),
	@ImprimeFormaPago varchar(2),
	@ImprimeImputaciones varchar(2),
	@ImprimeInspecciones varchar(2),
	@ImprimeGarantia varchar(2),
	@ImprimeDocumentacion varchar(2),
	@CotizacionDolar numeric(18,3),
	@CotizacionMoneda numeric(18,3),
	@PedidoExterior varchar(2),
	@PRESTOPedido varchar(13),
	@PRESTOFechaProceso datetime,
	@IdCondicionCompra int,
	@EnviarEmail tinyint,
	@IdPedidoOriginal int,
	@IdOrigenTransmision int,
	@FechaImportacionTransmision datetime

AS

IF Exists(Select pe.IdPedido From PedidosPRONTO pe Where pe.IdPedido=@IdPedido)
	BEGIN
		UPDATE PedidosPRONTO
		SET
		 NumeroPedido=@NumeroPedido,
		 IdProveedor=@IdProveedor,
		 FechaPedido=@FechaPedido,
		 LugarEntrega=@LugarEntrega,
		 FormaPago=@FormaPago,
		 Observaciones=@Observaciones,
		 Bonificacion=@Bonificacion,
		 TotalIva1=@TotalIva1,
		 TotalIva2=@TotalIva2,
		 TotalPedido=@TotalPedido,
		 PorcentajeIva1=@PorcentajeIva1,
		 PorcentajeIva2=@PorcentajeIva2,
		 IdComprador=@IdComprador,
		 PorcentajeBonificacion=@PorcentajeBonificacion,
		 NumeroComparativa=@NumeroComparativa,
		 Contacto=@Contacto,
		 PlazoEntrega=@PlazoEntrega,
		 Garantia=@Garantia,
		 Documentacion=@Documentacion,
		 Aprobo=@Aprobo,
		 IdMoneda=@IdMoneda,
		 FechaAprobacion=@FechaAprobacion,
		 Importante=@Importante,
		 TipoCompra=@TipoCompra,
		 Consorcial=@Consorcial,
		 Cumplido=@Cumplido,
		 DetalleCondicionCompra=@DetalleCondicionCompra,
		 IdAutorizoCumplido=@IdAutorizoCumplido,
		 IdDioPorCumplido=@IdDioPorCumplido,
		 FechaDadoPorCumplido=@FechaDadoPorCumplido,
		 ObservacionesCumplido=@ObservacionesCumplido,
		 SubNumero=@SubNumero,
		 UsuarioAnulacion=@UsuarioAnulacion,
		 FechaAnulacion=@FechaAnulacion,
		 MotivoAnulacion=@MotivoAnulacion,
		 ArchivoAdjunto1=@ArchivoAdjunto1,
		 ArchivoAdjunto2=@ArchivoAdjunto2,
		 ArchivoAdjunto3=@ArchivoAdjunto3,
		 ArchivoAdjunto4=@ArchivoAdjunto4,
		 ArchivoAdjunto5=@ArchivoAdjunto5,
		 ArchivoAdjunto6=@ArchivoAdjunto6,
		 ArchivoAdjunto7=@ArchivoAdjunto7,
		 ArchivoAdjunto8=@ArchivoAdjunto8,
		 ArchivoAdjunto9=@ArchivoAdjunto9,
		 ArchivoAdjunto10=@ArchivoAdjunto10,
		 ImprimeImportante=@ImprimeImportante,
		 ImprimePlazoEntrega=@ImprimePlazoEntrega,
		 ImprimeLugarEntrega=@ImprimeLugarEntrega,
		 ImprimeFormaPago=@ImprimeFormaPago,
		 ImprimeImputaciones=@ImprimeImputaciones,
		 ImprimeInspecciones=@ImprimeInspecciones,
		 ImprimeGarantia=@ImprimeGarantia,
		 ImprimeDocumentacion=@ImprimeDocumentacion,
		 CotizacionDolar=@CotizacionDolar,
		 CotizacionMoneda=@CotizacionMoneda,
		 PedidoExterior=@PedidoExterior,
		 PRESTOPedido=@PRESTOPedido,
		 PRESTOFechaProceso=@PRESTOFechaProceso,
		 IdCondicionCompra=@IdCondicionCompra,
		 EnviarEmail=@EnviarEmail,
		 IdPedidoOriginal=@IdPedidoOriginal,
		 IdOrigenTransmision=@IdOrigenTransmision,
		 FechaImportacionTransmision=@FechaImportacionTransmision
		WHERE IdPedido=@IdPedido
	END
ELSE
	BEGIN
		INSERT INTO [PedidosPRONTO]
		(
		 IdPedido,
		 NumeroPedido,
		 IdProveedor,
		 FechaPedido,
		 LugarEntrega,
		 FormaPago,
		 Observaciones,
		 Bonificacion,
		 TotalIva1,
		 TotalIva2,
		 TotalPedido,
		 PorcentajeIva1,
		 PorcentajeIva2,
		 IdComprador,
		 PorcentajeBonificacion,
		 NumeroComparativa,
		 Contacto,
		 PlazoEntrega,
		 Garantia,
		 Documentacion,
		 Aprobo,
		 IdMoneda,
		 FechaAprobacion,
		 Importante,
		 TipoCompra,
		 Consorcial,
		 Cumplido,
		 DetalleCondicionCompra,
		 IdAutorizoCumplido,
		 IdDioPorCumplido,
		 FechaDadoPorCumplido,
		 ObservacionesCumplido,
		 SubNumero,
		 UsuarioAnulacion,
		 FechaAnulacion,
		 MotivoAnulacion,
		 ArchivoAdjunto1,
		 ArchivoAdjunto2,
		 ArchivoAdjunto3,
		 ArchivoAdjunto4,
		 ArchivoAdjunto5,
		 ArchivoAdjunto6,
		 ArchivoAdjunto7,
		 ArchivoAdjunto8,
		 ArchivoAdjunto9,
		 ArchivoAdjunto10,
		 ImprimeImportante,
		 ImprimePlazoEntrega,
		 ImprimeLugarEntrega, 
		 ImprimeFormaPago,
		 ImprimeImputaciones,
		 ImprimeInspecciones,
		 ImprimeGarantia,
		 ImprimeDocumentacion,
		 CotizacionDolar,
		 CotizacionMoneda,
		 PedidoExterior,
		 PRESTOPedido,
		 PRESTOFechaProceso,
		 IdCondicionCompra,
		 EnviarEmail,
		 IdPedidoOriginal,
		 IdOrigenTransmision,
		 FechaImportacionTransmision
		)
		VALUES
		(
		 @IdPedido,
		 @NumeroPedido,
		 @IdProveedor,
		 @FechaPedido,
		 @LugarEntrega,
		 @FormaPago,
		 @Observaciones,
		 @Bonificacion,
		 @TotalIva1,
		 @TotalIva2,
		 @TotalPedido,
		 @PorcentajeIva1,
		 @PorcentajeIva2,
		 @IdComprador,
		 @PorcentajeBonificacion,
		 @NumeroComparativa,
		 @Contacto,
		 @PlazoEntrega,
		 @Garantia,
		 @Documentacion,
		 @Aprobo,
		 @IdMoneda,
		 @FechaAprobacion,
		 @Importante,
		 @TipoCompra,
		 @Consorcial,
		 @Cumplido,
		 @DetalleCondicionCompra,
		 @IdAutorizoCumplido,
		 @IdDioPorCumplido,
		 @FechaDadoPorCumplido,
		 @ObservacionesCumplido,
		 @SubNumero,
		 @UsuarioAnulacion,
		 @FechaAnulacion,
		 @MotivoAnulacion,
		 @ArchivoAdjunto1,
		 @ArchivoAdjunto2,
		 @ArchivoAdjunto3,
		 @ArchivoAdjunto4,
		 @ArchivoAdjunto5,
		 @ArchivoAdjunto6,
		 @ArchivoAdjunto7,
		 @ArchivoAdjunto8,
		 @ArchivoAdjunto9,
		 @ArchivoAdjunto10,
		 @ImprimeImportante,
		 @ImprimePlazoEntrega,
		 @ImprimeLugarEntrega, 
		 @ImprimeFormaPago,
		 @ImprimeImputaciones,
		 @ImprimeInspecciones,
		 @ImprimeGarantia,
		 @ImprimeDocumentacion,
		 @CotizacionDolar,
		 @CotizacionMoneda,
		 @PedidoExterior,
		 @PRESTOPedido,
		 @PRESTOFechaProceso,
		 @IdCondicionCompra,
		 @EnviarEmail,
		 @IdPedidoOriginal,
		 @IdOrigenTransmision,
		 @FechaImportacionTransmision
		)
	END
RETURN(@IdPedido)

GO

/****** Object:  StoredProcedure [dbo].[PedidosPRONTO_T]    Script Date: 03/15/2011 11:49:01 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


CREATE Procedure [dbo].[PedidosPRONTO_T]

@IdPedido int

AS 

SELECT * 
FROM PedidosPRONTO
WHERE (IdPedido=@IdPedido)

GO

/****** Object:  StoredProcedure [dbo].[PedidosPRONTO_TX_DetallesPendientes]    Script Date: 03/15/2011 11:49:01 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


CREATE  Procedure [dbo].[PedidosPRONTO_TX_DetallesPendientes]

AS

DECLARE @vector_X varchar(50),@vector_T varchar(50)
SET @vector_X='0111111111111133'
SET @vector_T='03999003D2140400'

SELECT
 DetPed.IdDetallePedido,
 Case 	When PedidosPRONTO.SubNumero is not null 
	Then str(PedidosPRONTO.NumeroPedido,8)+' / '+str(PedidosPRONTO.SubNumero,4)
	Else str(PedidosPRONTO.NumeroPedido,8)
 End as [Pedido],
 DetPed.IdDetallePedido as [IdAux1],
 PedidosPRONTO.IdProveedor as [IdAux2],
 DetPed.IdArticulo as [IdAux3],
 DetPed.NumeroItem as [Item],
 Proveedores.RazonSocial as [Proveedor],
 Articulos.Codigo as [Codigo],
 Articulos.Descripcion as [Articulo],
 DetPed.Cantidad as [Cant.],
 Unidades.Abreviatura as [En],
 PedidosPRONTO.FechaPedido as [Fecha],
 Empleados.Nombre as [Comprador],
 DetPed.FechaEntrega as [F.entrega],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetallePedidosPRONTO DetPed
LEFT OUTER JOIN PedidosPRONTO ON DetPed.IdPedido = PedidosPRONTO.IdPedido
LEFT OUTER JOIN Proveedores ON PedidosPRONTO.IdProveedor = Proveedores.IdProveedor
LEFT OUTER JOIN Articulos ON DetPed.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Empleados ON PedidosPRONTO.IdComprador = Empleados.IdEmpleado
LEFT OUTER JOIN Unidades ON Unidades.IdUnidad = DetPed.IdUnidad
WHERE IsNull(DetPed.Cumplido,'')<>'SI' and IsNull(DetPed.Cumplido,'')<>'AN' and IsNull(PedidosPRONTO.Cumplido,'')<>'SI'
ORDER By PedidosPRONTO.NumeroPedido,PedidosPRONTO.SubNumero,DetPed.NumeroItem

GO

/****** Object:  StoredProcedure [dbo].[PedidosPRONTO_TX_DetallesPendientesParaCombo]    Script Date: 03/15/2011 11:49:01 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


CREATE  Procedure [dbo].[PedidosPRONTO_TX_DetallesPendientesParaCombo]

AS

SELECT
 DetPed.IdDetallePedido,
 str(PedidosPRONTO.NumeroPedido,8)+' / '+str(PedidosPRONTO.SubNumero,4)+' - Item '+Convert(varchar,DetPed.NumeroItem) as [Titulo]
FROM DetallePedidosPRONTO DetPed
LEFT OUTER JOIN PedidosPRONTO ON DetPed.IdPedido = PedidosPRONTO.IdPedido
WHERE IsNull(DetPed.Cumplido,'')<>'SI' and IsNull(DetPed.Cumplido,'')<>'AN' and IsNull(PedidosPRONTO.Cumplido,'')<>'SI'
ORDER By PedidosPRONTO.NumeroPedido,PedidosPRONTO.SubNumero,DetPed.NumeroItem

GO

/****** Object:  StoredProcedure [dbo].[Planos_E]    Script Date: 03/15/2011 11:49:01 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[Planos_E]
@IdPlano int  AS 
Delete Planos
where (IdPlano=@IdPlano)
































GO

/****** Object:  StoredProcedure [dbo].[Planos_M]    Script Date: 03/15/2011 11:49:01 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE Procedure [dbo].[Planos_M]
@IdPlano int ,
@NumeroPlano varchar(30),
@Descripcion varchar(50),
@Revision varchar(10),
@EnviarEmail tinyint
AS
IF Exists(Select p.IdPlano From Planos p Where p.IdPlano=@IdPlano)
	BEGIN
		UPDATE Planos
		SET
		 NumeroPlano=@NumeroPlano,
		 Descripcion=@Descripcion,
		 Revision=@Revision,
		 EnviarEmail=@EnviarEmail
		WHERE IdPlano=@IdPlano
	END
ELSE
	BEGIN
		INSERT INTO Planos
		(
		 IdPlano,
		 NumeroPlano,
		 Descripcion,
		 Revision,
		 EnviarEmail
		)
		VALUES
		(
		 @IdPlano,
		 @NumeroPlano,
		 @Descripcion,
		 @Revision,
		 @EnviarEmail
		)
	END
RETURN(@IdPlano)





GO

/****** Object:  StoredProcedure [dbo].[Planos_T]    Script Date: 03/15/2011 11:49:01 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[Planos_T]
@IdPlano int
AS 
SELECT *
FROM Planos
where (IdPlano=@IdPlano)
































GO

/****** Object:  StoredProcedure [dbo].[Planos_TL]    Script Date: 03/15/2011 11:49:01 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[Planos_TL]
AS 
Select IdPlano,NumeroPlano + " - " +Descripcion as Titulo
FROM Planos
order by NumeroPlano
































GO

/****** Object:  StoredProcedure [dbo].[Planos_TT]    Script Date: 03/15/2011 11:49:01 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[Planos_TT]
AS 
Select 
IdPlano,
NumeroPlano as [Numero de plano],
Descripcion,
Revision
FROM Planos
ORDER By Descripcion
































GO

/****** Object:  StoredProcedure [dbo].[Planos_TX_ParaTransmitir]    Script Date: 03/15/2011 11:49:01 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Planos_TX_ParaTransmitir]
AS 
SELECT *
FROM Planos
WHERE EnviarEmail=1
































GO

/****** Object:  StoredProcedure [dbo].[Planos_TX_ParaTransmitir_Todos]    Script Date: 03/15/2011 11:49:01 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Planos_TX_ParaTransmitir_Todos]
AS 
SELECT *
FROM Planos
































GO

/****** Object:  StoredProcedure [dbo].[Planos_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:49:01 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Planos_TX_SetearComoTransmitido]
AS 
Update Planos
SET EnviarEmail=0
WHERE EnviarEmail<>0
































GO

/****** Object:  StoredProcedure [dbo].[Planos_TX_TT]    Script Date: 03/15/2011 11:49:01 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[Planos_TX_TT]
@IdPlano int 
AS 
Select 
IdPlano,
NumeroPlano as [Numero de plano],
Descripcion,
Revision
FROM Planos
WHERE (IdPlano=@IdPlano)
































GO

/****** Object:  StoredProcedure [dbo].[Proveedores_M]    Script Date: 03/15/2011 11:49:01 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE  Procedure [dbo].[Proveedores_M]
	@IdProveedor			int,
	@RazonSocial		 	varchar(50),
	@Direccion 			varchar(50),
	@IdLocalidad	 		int,
	@CodigoPostal	 		varchar(30),
	@IdProvincia	 		tinyint,
	@IdPais	 		int,
	@Telefono1 			varchar(50),
	@Telefono2 			varchar(50),
	@Fax		 		varchar(50),
	@Email 				varchar(50),
	@Cuit	 			varchar(13),
	@IdCodigoIva	 		tinyint,
	@FechaAlta		 	datetime,
	@FechaUltimaCompra 		datetime,
	@Excencion			numeric,
	@IdCondicionCompra		int,
	@Contacto			varchar(50),
	@IdActividad			int,
	@Nif				varchar(30),
	@IdEstado			int,
	@EstadoFecha			datetime,
	@EstadoUsuario		varchar(20),
	@AltaUsuario			varchar(20),
	@CodigoEmpresa		varchar(20),
	@Nombre1			varchar(50),
	@Nombre2			varchar(50),
	@NombreFantasia		varchar(50),
	@IGCondicion			int,
	@IGCertificadoAutoretencion	varchar(2),
	@IGCertificadoNORetencion	varchar(2),
	@IGFechaCaducidadExencion	datetime,
	@IGPorcentajeNORetencion	Numeric(6,2),
	@IvaAgenteRetencion		varchar(2),
	@IvaExencionRetencion		varchar(2),
	@IvaFechaCaducidadExencion	datetime,
	@IvaPorcentajeExencion	Numeric(6,2),
	@IBNumeroInscripcion		varchar(20),
	@IBCondicion			int,
	@IBFechaCaducidadExencion	datetime,
	@IBPorcentajeExencion		Numeric(6,2),
	@SSFechaCaducidadExencion	datetime,
	@SSPorcentajeExcencion	Numeric(6,2),
	@PaginaWeb			varchar(50),
	@Habitual			varchar(2),
	@Observaciones		ntext,
	@Saldo				numeric(18,2),
	@SaldoDocumentos		numeric(18,2),
	@CodigoProveedor		int,
	@IdCuenta			int,
	@NumeroIngresosBrutos		varchar(30),
	@IdMoneda			int,
	@LimiteCredito			numeric(18,2),
	@TipoProveedor		int,
	@Eventual			varchar(2),
	@IdTipoRetencionGanancia	int,
	@Confirmado			varchar(2),
	@CodigoPresto			varchar(13),
	@BienesOServicios		varchar(1),
	@IdIBCondicionPorDefecto	int,
	@RetenerSUSS			varchar(2),
	@ChequesALaOrdenDe		varchar(50),
	@FechaLimiteExentoGanancias	datetime,
	@FechaLimiteExentoIIBB	datetime,
	@IdImpuestoDirectoSUSS	int,
	@Importaciones_NumeroInscripcion		varchar(20),
	@Importaciones_DenominacionInscripcion	varchar(10),
	@EnviarEmail			tinyint
AS
IF Exists(Select pr.IdProveedor From Proveedores pr Where pr.IdProveedor=@IdProveedor)
	BEGIN
		UPDATE Proveedores
		SET
			RazonSocial	 		=@RazonSocial,
			Direccion			=@Direccion,
			IdLocalidad	 		=@IdLocalidad,
			CodigoPostal			=@CodigoPostal,
			IdProvincia	 		=@IdProvincia,
			IdPais				=@IdPais,
			Telefono1		 	=@Telefono1,
			Telefono2	 		=@Telefono2,
			Fax	 			=@Fax,
			Email 				=@Email,
			Cuit	 			=@Cuit,
			IdCodigoIva		 	=@IdCodigoIva,
			FechaAlta	 		=@FechaAlta,
			FechaUltimaCompra		=@FechaUltimaCompra,
			Excencion			=@Excencion,
			IdCondicionCompra		=@IdCondicionCompra,
			Contacto			=@Contacto,
			IdActividad			=@IdActividad,
			Nif				=@Nif,
			IdEstado			=@IdEstado,
			EstadoFecha			=@EstadoFecha,
			EstadoUsuario			=@EstadoUsuario,
			AltaUsuario			=@AltaUsuario,
			CodigoEmpresa			=@CodigoEmpresa,
			Nombre1			=@Nombre1,
			Nombre2			=@Nombre2,
			NombreFantasia			=@NombreFantasia,
			IGCondicion			=@IGCondicion,
			IGCertificadoAutoretencion	=@IGCertificadoAutoretencion,
			IGCertificadoNORetencion	=@IGCertificadoNORetencion,
			IGFechaCaducidadExencion	=@IGFechaCaducidadExencion,
			IGPorcentajeNORetencion	=@IGPorcentajeNORetencion,
			IvaAgenteRetencion		=@IvaAgenteRetencion,
			IvaExencionRetencion		=@IvaExencionRetencion,
			IvaFechaCaducidadExencion	=@IvaFechaCaducidadExencion,
			IvaPorcentajeExencion		=@IvaPorcentajeExencion,
			IBNumeroInscripcion		=@IBNumeroInscripcion,
			IBCondicion			=@IBCondicion,
			IBFechaCaducidadExencion	=@IBFechaCaducidadExencion,
			IBPorcentajeExencion		=@IBPorcentajeExencion,
			SSFechaCaducidadExencion	=@SSFechaCaducidadExencion,
			SSPorcentajeExcencion		=@SSPorcentajeExcencion,
			PaginaWeb			=@PaginaWeb,
			Habitual				=@Habitual,
			Observaciones			=@Observaciones,
			Saldo				=@Saldo,
			SaldoDocumentos		=@SaldoDocumentos,
			CodigoProveedor		=@CodigoProveedor,
			IdCuenta			=@IdCuenta,
			NumeroIngresosBrutos		=@NumeroIngresosBrutos,
			IdMoneda			=@IdMoneda,
			LimiteCredito			=@LimiteCredito,
			TipoProveedor			=@TipoProveedor,
			Eventual			=@Eventual,
			IdTipoRetencionGanancia	=@IdTipoRetencionGanancia,
			Confirmado			=@Confirmado,
			CodigoPresto			=@CodigoPresto,
			BienesOServicios		=@BienesOServicios,
			IdIBCondicionPorDefecto	=@IdIBCondicionPorDefecto,			RetenerSUSS			=@RetenerSUSS,
			ChequesALaOrdenDe		=@ChequesALaOrdenDe,
			FechaLimiteExentoGanancias 	=@FechaLimiteExentoGanancias,
			FechaLimiteExentoIIBB		=@FechaLimiteExentoIIBB,
			IdImpuestoDirectoSUSS		=@IdImpuestoDirectoSUSS,
			Importaciones_NumeroInscripcion=@Importaciones_NumeroInscripcion,
			Importaciones_DenominacionInscripcion=@Importaciones_DenominacionInscripcion,
			EnviarEmail=@EnviarEmail
		WHERE IdProveedor=@IdProveedor
	END
ELSE
	BEGIN
		INSERT INTO [Proveedores]
		(
		 IdProveedor,
		 RazonSocial,
		 Direccion,
		 IdLocalidad,
		 CodigoPostal,
		 IdProvincia,
		 IdPais,
		 Telefono1,
		 Telefono2,
		 Fax,
		 Email,
		 Cuit,
		 IdCodigoIva,
		 FechaAlta,
		 FechaUltimaCompra,
		 Excencion,
		 IdCondicionCompra,
		 Contacto,
		 IdActividad,
		 Nif,
		 IdEstado,
		 EstadoFecha,
		 EstadoUsuario,
		 AltaUsuario,
		 CodigoEmpresa,
		 Nombre1,
		 Nombre2,
		 NombreFantasia,
		 IGCondicion,
		 IGCertificadoAutoretencion,
		 IGCertificadoNORetencion,
		 IGFechaCaducidadExencion,
		 IGPorcentajeNORetencion,
		 IvaAgenteRetencion,
		 IvaExencionRetencion,
		 IvaFechaCaducidadExencion,
		 IvaPorcentajeExencion,
		 IBNumeroInscripcion,
		 IBCondicion,
		 IBFechaCaducidadExencion,
		 IBPorcentajeExencion,
		 SSFechaCaducidadExencion,
		 SSPorcentajeExcencion,
		 PaginaWeb,
		 Habitual,
		 Observaciones,
		 Saldo,
		 SaldoDocumentos,
		 CodigoProveedor,
		 IdCuenta,
		 NumeroIngresosBrutos,
		 IdMoneda,
		 LimiteCredito,
		 TipoProveedor,
		 Eventual,
		 IdTipoRetencionGanancia,
		 Confirmado,
		 CodigoPresto,
		 BienesOServicios,
		 IdIBCondicionPorDefecto,
		 RetenerSUSS,
		 ChequesALaOrdenDe,
		 FechaLimiteExentoGanancias,
		 FechaLimiteExentoIIBB,
		 IdImpuestoDirectoSUSS,
		 Importaciones_NumeroInscripcion,
		 Importaciones_DenominacionInscripcion,
		 EnviarEmail
		)
		VALUES
		(
		 @IdProveedor,
		 @RazonSocial,
		 @Direccion,
		 @IdLocalidad,
		 @CodigoPostal,
		 @IdProvincia,
		 @IdPais,
		 @Telefono1,
		 @Telefono2,
		 @Fax,
		 @Email,
		 @Cuit,
		 @IdCodigoIva,
		 @FechaAlta,
		 @FechaUltimaCompra,
		 @Excencion,
		 @IdCondicionCompra,
		 @Contacto,
		 @IdActividad,
		 @Nif,
		 @IdEstado,
		 @EstadoFecha,
		 @EstadoUsuario,
		 @AltaUsuario,
		 @CodigoEmpresa,
		 @Nombre1,
		 @Nombre2,
		 @NombreFantasia,
		 @IGCondicion,
		 @IGCertificadoAutoretencion,
		 @IGCertificadoNORetencion,
		 @IGFechaCaducidadExencion,
		 @IGPorcentajeNORetencion,
		 @IvaAgenteRetencion,
		 @IvaExencionRetencion,
		 @IvaFechaCaducidadExencion,
		 @IvaPorcentajeExencion,
		 @IBNumeroInscripcion,
		 @IBCondicion,
		 @IBFechaCaducidadExencion,
		 @IBPorcentajeExencion,
		 @SSFechaCaducidadExencion,
		 @SSPorcentajeExcencion,
		 @PaginaWeb,
		 @Habitual,
		 @Observaciones,
		 @Saldo,
		 @SaldoDocumentos,
		 @CodigoProveedor,
		 @IdCuenta,
		 @NumeroIngresosBrutos,
		 @IdMoneda,
		 @LimiteCredito,
		 @TipoProveedor,
		 @Eventual,
		 @IdTipoRetencionGanancia,
		 @Confirmado,		 @CodigoPresto,
		 @BienesOServicios,
		 @IdIBCondicionPorDefecto,
		 @RetenerSUSS,
		 @ChequesALaOrdenDe,
		 @FechaLimiteExentoGanancias,
		 @FechaLimiteExentoIIBB,
		 @IdImpuestoDirectoSUSS,
		 @Importaciones_NumeroInscripcion,
		 @Importaciones_DenominacionInscripcion,
		 @EnviarEmail
		)
	END
RETURN(@IdProveedor)





GO

/****** Object:  StoredProcedure [dbo].[Proveedores_T]    Script Date: 03/15/2011 11:49:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



































CREATE Procedure [dbo].[Proveedores_T]
@IdProveedor int
AS 
SELECT * 
FROM Proveedores
WHERE (IdProveedor=@IdProveedor)



































GO

/****** Object:  StoredProcedure [dbo].[Proveedores_TL]    Script Date: 03/15/2011 11:49:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO





























CREATE Procedure [dbo].[Proveedores_TL]
AS 
SELECT 
 IdProveedor,
 RazonSocial as [Titulo]
FROM Proveedores
WHERE Eventual is null and (Confirmado is null or Confirmado<>'NO')
ORDER by RazonSocial




























GO

/****** Object:  StoredProcedure [dbo].[Proveedores_TT]    Script Date: 03/15/2011 11:49:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE  Procedure [dbo].[Proveedores_TT]

AS 

declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='01111111111111111111111133'
set @vector_T='05141011201251255251552300'

SELECT 
		Proveedores.IdProveedor, 
		Proveedores.RazonSocial as [Razon social], 
		Proveedores.CodigoEmpresa as [Codigo],
		Proveedores.Direccion, 
		Localidades.Nombre AS [Localidad], 
		Proveedores.CodigoPostal as [Cod.postal], 
		Provincias.Nombre AS [Provincia], 
		Paises.Descripcion AS [Pais], 
		Proveedores.Telefono1 as [Telefono], 
		Proveedores.Telefono2 as [Telef.adic.],
		Proveedores.Fax, 
		Proveedores.Email, 
		Proveedores.Cuit, 
		DescripcionIva.Descripcion AS [Condicion IVA], 
		Proveedores.Contacto, 
		Proveedores.FechaAlta as [Fecha de alta], 
		Proveedores.FechaUltimaCompra as [Fec.ult.compra],
		Proveedores.PaginaWeb as [Pagina Web],
		Proveedores.Habitual,
		Proveedores.NombreFantasia as [Nombre de fantasia], 
		Proveedores.Observaciones,
		Proveedores.CodigoPresto as [Cod.PRESTO],
		Case When IGCondicion is null or IGCondicion=1
			Then 'NO'
			Else 'SI'
		End as [Insc.Gan.],
		Cuentas.Descripcion as [Cuenta contable],
		@Vector_T as Vector_T,
		@Vector_X as Vector_X
FROM Proveedores
LEFT OUTER JOIN DescripcionIva ON Proveedores.IdCodigoIva = DescripcionIva.IdCodigoIva 
LEFT OUTER JOIN Localidades ON Proveedores.IdLocalidad = Localidades.IdLocalidad 
LEFT OUTER JOIN Provincias ON Proveedores.IdProvincia = Provincias.IdProvincia
LEFT OUTER JOIN Paises ON Proveedores.IdPais = Paises.IdPais
LEFT OUTER JOIN Cuentas ON Proveedores.IdCuenta = Cuentas.IdCuenta
WHERE Eventual is null and (Confirmado is null or Confirmado<>'NO')
ORDER BY Proveedores.RazonSocial





GO

/****** Object:  StoredProcedure [dbo].[Proveedores_TX_Busca]    Script Date: 03/15/2011 11:49:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO





























CREATE Procedure [dbo].[Proveedores_TX_Busca]
@Buscar varchar(50)
as 
Select 
 IdProveedor,
 RazonSocial as [Titulo]
From Proveedores
Where Eventual is null  and (Confirmado is null or Confirmado<>'NO') and 
	RazonSocial LIKE '%' + @buscar + '%' 
Order by RazonSocial




























GO

/****** Object:  StoredProcedure [dbo].[Proveedores_TX_Busca1]    Script Date: 03/15/2011 11:49:02 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO





























CREATE Procedure [dbo].[Proveedores_TX_Busca1]
@Buscar varchar(50)
AS 
SELECT 
 IdProveedor,
 Case 	When CodigoEmpresa is null
	 Then RazonSocial
	Else CodigoEmpresa+' - '+RazonSocial 
 End as [Titulo]
FROM Proveedores
WHERE Eventual is null  and (Confirmado is null or Confirmado<>'NO') and  
	 (RazonSocial LIKE '%' + @buscar + '%' OR CodigoEmpresa LIKE '%' + @buscar + '%')
ORDER by [Titulo]




























GO

/****** Object:  StoredProcedure [dbo].[Proveedores_TX_Eventuales]    Script Date: 03/15/2011 11:49:02 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO







CREATE  Procedure [dbo].[Proveedores_TX_Eventuales]

AS 

declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='011133'
set @vector_T='055500'

SELECT 
		Proveedores.IdProveedor, 
		Proveedores.RazonSocial as [Razon social], 
		Proveedores.Cuit, 
		DescripcionIva.Descripcion AS [Condicion IVA], 
		@Vector_T as Vector_T,
		@Vector_X as Vector_X
FROM Proveedores
LEFT OUTER JOIN DescripcionIva ON Proveedores.IdCodigoIva = DescripcionIva.IdCodigoIva 
WHERE Eventual is not null and Eventual='SI' and (Confirmado is null or Confirmado<>'NO')
ORDER BY Proveedores.RazonSocial






GO

/****** Object:  StoredProcedure [dbo].[Proveedores_TX_EventualesParaCombo]    Script Date: 03/15/2011 11:49:02 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO





























CREATE Procedure [dbo].[Proveedores_TX_EventualesParaCombo]
AS 
SELECT 
 IdProveedor,
 RazonSocial as [Titulo]
FROM Proveedores
WHERE Eventual='SI' and (Confirmado is null or Confirmado<>'NO')
ORDER by RazonSocial




























GO

/****** Object:  StoredProcedure [dbo].[Proveedores_TX_PorCodigo]    Script Date: 03/15/2011 11:49:02 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO


































CREATE Procedure [dbo].[Proveedores_TX_PorCodigo]
@CodigoProveedor int
AS 
SELECT * 
FROM Proveedores
WHERE Eventual is null And CodigoProveedor=@CodigoProveedor

































GO

/****** Object:  StoredProcedure [dbo].[Proveedores_TX_PorCodigoEmpresa]    Script Date: 03/15/2011 11:49:02 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO







CREATE Procedure [dbo].[Proveedores_TX_PorCodigoEmpresa]
@CodigoEmpresa varchar(20)
AS 
SELECT * 
FROM Proveedores
WHERE Eventual is null And CodigoEmpresa=@CodigoEmpresa






GO

/****** Object:  StoredProcedure [dbo].[Proveedores_TX_PorCuit]    Script Date: 03/15/2011 11:49:02 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO






















CREATE Procedure [dbo].[Proveedores_TX_PorCuit]
@Cuit varchar(13)
AS 
SELECT * 
FROM Proveedores
WHERE Cuit=@Cuit





















GO

/****** Object:  StoredProcedure [dbo].[Proveedores_TX_PorCuitNoEventual]    Script Date: 03/15/2011 11:49:02 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO







CREATE Procedure [dbo].[Proveedores_TX_PorCuitNoEventual]
@Cuit varchar(13)
AS 
SELECT * 
FROM Proveedores
WHERE Cuit=@Cuit and Eventual is null







GO

/****** Object:  StoredProcedure [dbo].[Proveedores_TX_PorId]    Script Date: 03/15/2011 11:49:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


































CREATE Procedure [dbo].[Proveedores_TX_PorId]
@IdProveedor int
AS 
SELECT * 
FROM Proveedores
WHERE (IdProveedor=@IdProveedor)

































GO

/****** Object:  StoredProcedure [dbo].[Proveedores_TX_Resumido]    Script Date: 03/15/2011 11:49:02 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE  Procedure [dbo].[Proveedores_TX_Resumido]

AS 

declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='01133'
set @vector_T='05500'

SELECT 
		Proveedores.IdProveedor, 
		Proveedores.RazonSocial as [Razon social], 
		Proveedores.CodigoEmpresa as [Codigo],
		@Vector_T as Vector_T,
		@Vector_X as Vector_X
FROM Proveedores
WHERE Eventual is null and (Confirmado is null or Confirmado<>'NO')
ORDER BY Proveedores.RazonSocial





GO

/****** Object:  StoredProcedure [dbo].[Proveedores_TX_TodosParaCombo]    Script Date: 03/15/2011 11:49:02 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO







CREATE Procedure [dbo].[Proveedores_TX_TodosParaCombo]
AS 
SELECT 
 IdProveedor,
 RazonSocial as [Titulo]
FROM Proveedores
WHERE (Confirmado is null or Confirmado<>'NO')
ORDER by RazonSocial






GO

/****** Object:  StoredProcedure [dbo].[Proveedores_TX_ValidarPorCuit]    Script Date: 03/15/2011 11:49:02 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






















CREATE Procedure [dbo].[Proveedores_TX_ValidarPorCuit]
@IdProveedor int,
@Cuit varchar(13)
AS 
SELECT * 
FROM Proveedores
WHERE Cuit=@Cuit and IdProveedor<>@IdProveedor























GO

/****** Object:  StoredProcedure [dbo].[Provincias_A]    Script Date: 03/15/2011 11:49:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO





CREATE Procedure [dbo].[Provincias_A]
@IdProvincia int  output,
@Nombre varchar(50),
@Codigo varchar(2),
@IdPais int,
@ProximoNumeroCertificadoRetencionIIBB int,
@IdCuentaRetencionIBrutos int,
@TipoRegistro int,
@IdCuentaPercepcionIBrutos int,
@ProximoNumeroCertificadoPercepcionIIBB int,
@TipoRegistroPercepcion int,
@IdCuentaRetencionIBrutosCobranzas int,
@IdCuentaPercepcionIIBBConvenio int
As 
Insert into [Provincias]
(
 Nombre,
 Codigo,
 IdPais,
 ProximoNumeroCertificadoRetencionIIBB,
 IdCuentaRetencionIBrutos,
 TipoRegistro,
 IdCuentaPercepcionIBrutos,
 ProximoNumeroCertificadoPercepcionIIBB,
 TipoRegistroPercepcion,
 IdCuentaRetencionIBrutosCobranzas,
 IdCuentaPercepcionIIBBConvenio
)
Values
(
 @Nombre,
 @Codigo,
 @IdPais,
 @ProximoNumeroCertificadoRetencionIIBB,
 @IdCuentaRetencionIBrutos,
 @TipoRegistro,
 @IdCuentaPercepcionIBrutos,
 @ProximoNumeroCertificadoPercepcionIIBB,
 @TipoRegistroPercepcion,
 @IdCuentaRetencionIBrutosCobranzas,
 @IdCuentaPercepcionIIBBConvenio
)
Select @IdProvincia=@@identity
Return(@IdProvincia)




GO

/****** Object:  StoredProcedure [dbo].[Provincias_E]    Script Date: 03/15/2011 11:49:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Provincias_E]
@IdProvincia int  AS 
Delete Provincias
where (IdProvincia=@IdProvincia)
































GO

/****** Object:  StoredProcedure [dbo].[Provincias_M]    Script Date: 03/15/2011 11:49:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE  Procedure [dbo].[Provincias_M]
@IdProvincia int,
@Nombre varchar(50),
@Codigo varchar(2),
@IdPais int,
@ProximoNumeroCertificadoRetencionIIBB int,
@IdCuentaRetencionIBrutos int,
@TipoRegistro int,
@IdCuentaPercepcionIBrutos int,
@ProximoNumeroCertificadoPercepcionIIBB int,
@TipoRegistroPercepcion int,
@IdCuentaRetencionIBrutosCobranzas int,
@IdCuentaPercepcionIIBBConvenio int
AS
IF Exists(Select Aux.IdProvincia From Provincias Aux Where Aux.IdProvincia=@IdProvincia)
	BEGIN
		UPDATE Provincias
		SET
		 Nombre=@Nombre,
		 Codigo=@Codigo,
		 IdPais=@IdPais,
		 ProximoNumeroCertificadoRetencionIIBB=@ProximoNumeroCertificadoRetencionIIBB,
		 IdCuentaRetencionIBrutos=@IdCuentaRetencionIBrutos,
		 TipoRegistro=@TipoRegistro,
		 IdCuentaPercepcionIBrutos=@IdCuentaPercepcionIBrutos,
		 ProximoNumeroCertificadoPercepcionIIBB=@ProximoNumeroCertificadoPercepcionIIBB,
		 TipoRegistroPercepcion=@TipoRegistroPercepcion,
		 IdCuentaRetencionIBrutosCobranzas=@IdCuentaRetencionIBrutosCobranzas,
		 IdCuentaPercepcionIIBBConvenio=@IdCuentaPercepcionIIBBConvenio
		WHERE IdProvincia=@IdProvincia
	END
ELSE
	BEGIN
		INSERT INTO [Provincias]
		(
		 IdProvincia,
		 Nombre,
		 Codigo,
		 IdPais,
		 ProximoNumeroCertificadoRetencionIIBB,
		 IdCuentaRetencionIBrutos,
		 TipoRegistro,
		 IdCuentaPercepcionIBrutos,
		 ProximoNumeroCertificadoPercepcionIIBB,
		 TipoRegistroPercepcion,
		 IdCuentaRetencionIBrutosCobranzas,
		 IdCuentaPercepcionIIBBConvenio
		)
		VALUES
		(
		 @IdProvincia,
		 @Nombre,
		 @Codigo,
		 @IdPais,
		 @ProximoNumeroCertificadoRetencionIIBB,
		 @IdCuentaRetencionIBrutos,
		 @TipoRegistro,
		 @IdCuentaPercepcionIBrutos,
		 @ProximoNumeroCertificadoPercepcionIIBB,
		 @TipoRegistroPercepcion,
		 @IdCuentaRetencionIBrutosCobranzas,
		 @IdCuentaPercepcionIIBBConvenio
		)
	END
RETURN(@IdProvincia)





GO

/****** Object:  StoredProcedure [dbo].[Provincias_T]    Script Date: 03/15/2011 11:49:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO














CREATE Procedure [dbo].[Provincias_T]
@IdProvincia tinyint 
AS 
SELECT *
FROM Provincias
WHERE (IdProvincia=@IdProvincia)













GO

/****** Object:  StoredProcedure [dbo].[Provincias_TL]    Script Date: 03/15/2011 11:49:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Provincias_TL]
AS 
Select IdProvincia,Nombre as Titulo
FROM Provincias order by Nombre
































GO

/****** Object:  StoredProcedure [dbo].[Provincias_TT]    Script Date: 03/15/2011 11:49:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE Procedure [dbo].[Provincias_TT]
AS 
SELECT 
 Provincias.IdProvincia,
 Provincias.Nombre as [Provincia],
 Paises.Descripcion as [Pais],
 Provincias.ProximoNumeroCertificadoRetencionIIBB as [Prox.cert.ret.IIBB],
 (Select Top 1 Cuentas.Descripcion From Cuentas
  Where Cuentas.IdCuenta=Provincias.IdCuentaRetencionIBrutos) as [Cuenta Ret. IIBB],
 ProximoNumeroCertificadoPercepcionIIBB as [Prox.cert.perc.IIBB],
 (Select Top 1 Cuentas.Descripcion From Cuentas
  Where Cuentas.IdCuenta=Provincias.IdCuentaPercepcionIBrutos) as [Cuenta Perc. IIBB],
 (Select Top 1 Cuentas.Descripcion From Cuentas
  Where Cuentas.IdCuenta=Provincias.IdCuentaPercepcionIIBBConvenio) as [Cuenta Perc. IIBB (Multi)],
 (Select Top 1 Cuentas.Descripcion From Cuentas
  Where Cuentas.IdCuenta=Provincias.IdCuentaRetencionIBrutosCobranzas) as [Cuenta Ret. IIBB Cobranzas]
FROM Provincias
LEFT OUTER JOIN Paises ON Paises.IdPais=Provincias.IdPais
ORDER by Provincias.Nombre





GO

/****** Object:  StoredProcedure [dbo].[Provincias_TX_PorId]    Script Date: 03/15/2011 11:49:03 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO














CREATE Procedure [dbo].[Provincias_TX_PorId]
@IdProvincia tinyint 
AS 
SELECT *
FROM Provincias
WHERE (IdProvincia=@IdProvincia)













GO

/****** Object:  StoredProcedure [dbo].[Provincias_TX_PorNombre]    Script Date: 03/15/2011 11:49:03 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO














CREATE Procedure [dbo].[Provincias_TX_PorNombre]
@Nombre varchar(50)
AS 
SELECT *
FROM Provincias
WHERE (Nombre=@Nombre)













GO

/****** Object:  StoredProcedure [dbo].[Provincias_TX_TT]    Script Date: 03/15/2011 11:49:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE Procedure [dbo].[Provincias_TX_TT]
@IdProvincia tinyint 
AS 
SELECT 
 Provincias.IdProvincia,
 Provincias.Nombre as [Provincia],
 Paises.Descripcion as [Pais],
 Provincias.ProximoNumeroCertificadoRetencionIIBB as [Prox.cert.ret.IIBB],
 (Select Top 1 Cuentas.Descripcion From Cuentas
  Where Cuentas.IdCuenta=Provincias.IdCuentaRetencionIBrutos) as [Cuenta Ret. IIBB],
 ProximoNumeroCertificadoPercepcionIIBB as [Prox.cert.perc.IIBB],
 (Select Top 1 Cuentas.Descripcion From Cuentas
  Where Cuentas.IdCuenta=Provincias.IdCuentaPercepcionIBrutos) as [Cuenta Perc. IIBB],
 (Select Top 1 Cuentas.Descripcion From Cuentas
  Where Cuentas.IdCuenta=Provincias.IdCuentaPercepcionIIBBConvenio) as [Cuenta Perc. IIBB (Multi)],
 (Select Top 1 Cuentas.Descripcion From Cuentas
  Where Cuentas.IdCuenta=Provincias.IdCuentaRetencionIBrutosCobranzas) as [Cuenta Ret. IIBB Cobranzas]
FROM Provincias
LEFT OUTER JOIN Paises ON Paises.IdPais=Provincias.IdPais
WHERE (Provincias.IdProvincia=@IdProvincia)





GO

/****** Object:  StoredProcedure [dbo].[Recepciones_A]    Script Date: 03/15/2011 11:49:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE Procedure [dbo].[Recepciones_A]

@IdRecepcion int  output,
@NumeroRecepcion1 int,
@NumeroRecepcion2 int,
@IdProveedor int,
@FechaRecepcion datetime,
@Observaciones ntext,
@IdPedido int,
@IdRequerimiento int,
@NumeroRecepcionAlmacen int,
@IdTransportista int,
@Acargo varchar(1),
@Realizo int,
@Anulada varchar(2),
@IdAcopio int,
@SubNumero varchar(1),
@FechaRegistracion datetime,
@EnviarEmail tinyint,
@IdRecepcionOriginal int,
@IdOrigenTransmision int,
@FechaImportacionTransmision datetime,
@ImpuestosInternos numeric(18,2),
@PercepcionIIBB numeric(18,2),
@PercepcionIVA numeric(18,2),
@ImporteIVA numeric(18,2),
@Chofer varchar(50),
@Patente varchar(10),
@NumeroRemitoTransporte1 int,
@NumeroRemitoTransporte2 int,
@IdChofer int,
@IdFlete int,
@PesoBruto numeric(18,2),
@PesoNeto numeric(18,2),
@Tara numeric(18,2),
@CantidadEnOrigen numeric(18,2),
@DistanciaRecorrida numeric(18,2),
@CodigoTarifador varchar(10),
@NumeroOrdenCarga int,
@IdPesada int,
@IdTarifaFlete int,
@TarifaFlete numeric(18,2)

AS

INSERT INTO Recepciones
(
 NumeroRecepcion1,
 NumeroRecepcion2,
 IdProveedor,
 FechaRecepcion,
 Observaciones,
 IdPedido,
 IdRequerimiento,
 NumeroRecepcionAlmacen,
 IdTransportista,
 Acargo,
 Realizo,
 Anulada,
 IdAcopio,
 SubNumero,
 FechaRegistracion,
 EnviarEmail,
 IdRecepcionOriginal,
 IdOrigenTransmision,
 FechaImportacionTransmision,
 ImpuestosInternos,
 PercepcionIIBB,
 PercepcionIVA,
 ImporteIVA,
 Chofer,
 Patente,
 NumeroRemitoTransporte1,
 NumeroRemitoTransporte2,
 IdChofer,
 IdFlete,
 PesoBruto,
 PesoNeto,
 Tara,
 CantidadEnOrigen,
 DistanciaRecorrida,
 CodigoTarifador,
 NumeroOrdenCarga,
 IdPesada,
 IdTarifaFlete,
 TarifaFlete
)
VALUES
(
 @NumeroRecepcion1,
 @NumeroRecepcion2,
 @IdProveedor,
 @FechaRecepcion,
 @Observaciones,
 @IdPedido,
 @IdRequerimiento,
 @NumeroRecepcionAlmacen,
 @IdTransportista,
 @Acargo,
 @Realizo,
 @Anulada,
 @IdAcopio,
 @SubNumero,
 GetDate(),
 @EnviarEmail,
 @IdRecepcionOriginal,
 @IdOrigenTransmision,
 @FechaImportacionTransmision,
 @ImpuestosInternos,
 @PercepcionIIBB,
 @PercepcionIVA,
 @ImporteIVA,
 @Chofer,
 @Patente,
 @NumeroRemitoTransporte1,
 @NumeroRemitoTransporte2,
 @IdChofer,
 @IdFlete,
 @PesoBruto,
 @PesoNeto,
 @Tara,
 @CantidadEnOrigen,
 @DistanciaRecorrida,
 @CodigoTarifador,
 @NumeroOrdenCarga,
 @IdPesada,
 @IdTarifaFlete,
 @TarifaFlete
)
SELECT @IdRecepcion=@@identity
RETURN(@IdRecepcion)

GO

/****** Object:  StoredProcedure [dbo].[Recepciones_ActualizarEstados]    Script Date: 03/15/2011 11:49:03 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE PROCEDURE [dbo].[Recepciones_ActualizarEstados]

@IdRecepcion int

AS

DECLARE @Anulada varchar(2), @Observaciones varchar(100)
SET @Anulada=IsNull((Select Top 1 Anulada From Recepciones Where IdRecepcion=@IdRecepcion),'NO')
SET @Observaciones=''

CREATE TABLE #Auxiliar1 (IdDetallePedido INTEGER)
INSERT INTO #Auxiliar1 
 SELECT DetRec.IdDetallePedido
 FROM DetalleRecepciones DetRec
 WHERE DetRec.IdRecepcion = @IdRecepcion and DetRec.IdDetallePedido is not null
 GROUP BY DetRec.IdDetallePedido

CREATE NONCLUSTERED INDEX IX__Auxiliar1 ON #Auxiliar1 (IdDetallePedido) ON [PRIMARY]

/*  CURSOR  */
DECLARE @IdDetallePedido int
DECLARE Cur CURSOR LOCAL FORWARD_ONLY 
	FOR	SELECT IdDetallePedido
		FROM #Auxiliar1
OPEN Cur
FETCH NEXT FROM Cur INTO @IdDetallePedido
WHILE @@FETCH_STATUS = 0
BEGIN
	UPDATE DetallePedidos
	SET CantidadRecibida=IsNull((Select Sum(IsNull(DetRec.Cantidad,0))
					From DetalleRecepciones DetRec
					Left Outer Join Recepciones On DetRec.IdRecepcion=Recepciones.IdRecepcion
					Where DetRec.IdDetallePedido=@IdDetallePedido and 
						IsNull(Recepciones.Anulada,'NO')<>'SI'),0)
	WHERE IdDetallePedido=@IdDetallePedido and IsNull(Cumplido,'NO')<>'AN'  

	UPDATE DetallePedidos
	SET Cumplido = 'SI'
	WHERE IdDetallePedido=@IdDetallePedido and IsNull(Cumplido,'NO')<>'AN' and 
		(Cantidad<=CantidadRecibida or IdDioPorCumplido is not null)

	UPDATE DetallePedidos
	SET Cumplido = 'PA'
	WHERE IdDetallePedido=@IdDetallePedido and IsNull(Cumplido,'NO')<>'AN' and 
		Cantidad>CantidadRecibida and CantidadRecibida<>0 and IdDioPorCumplido is null

	UPDATE DetallePedidos
	SET Cumplido = Null
	WHERE IdDetallePedido=@IdDetallePedido and IsNull(Cumplido,'NO')<>'AN' and 
		Cantidad>CantidadRecibida and CantidadRecibida=0 and IdDioPorCumplido is null

	FETCH NEXT FROM Cur INTO @IdDetallePedido
END
CLOSE Cur
DEALLOCATE Cur


CREATE TABLE #Auxiliar2 (IdPedido INTEGER)
INSERT INTO #Auxiliar2 
 SELECT DetPed.IdPedido
 FROM DetalleRecepciones DetRec
 LEFT OUTER JOIN DetallePedidos DetPed ON DetRec.IdDetallePedido = DetPed.IdDetallePedido
 WHERE DetRec.IdRecepcion = @IdRecepcion and DetRec.IdDetallePedido is not null
 GROUP BY DetPed.IdPedido

CREATE NONCLUSTERED INDEX IX__Auxiliar2 ON #Auxiliar2 (IdPedido) ON [PRIMARY]

/*  CURSOR  */
DECLARE @IdPedido int
DECLARE Cur CURSOR LOCAL FORWARD_ONLY 
	FOR	SELECT IdPedido
		FROM #Auxiliar2
OPEN Cur
FETCH NEXT FROM Cur INTO @IdPedido
WHILE @@FETCH_STATUS = 0
BEGIN
	UPDATE Pedidos
	SET Cumplido=Null
	WHERE Pedidos.IdPedido=@IdPedido and IsNull(Cumplido,'NO')<>'AN' 

	UPDATE Pedidos
	SET Cumplido='SI'
	WHERE Pedidos.IdPedido=@IdPedido and IsNull(Cumplido,'NO')<>'AN' and 
		not exists(Select Top 1 DetPed.IdPedido
				From DetallePedidos DetPed
				Where DetPed.IdPedido=@IdPedido and 
					(IsNull(DetPed.Cumplido,'NO')='NO' or IsNull(DetPed.Cumplido,'NO')='PA'))
	FETCH NEXT FROM Cur INTO @IdPedido
END
CLOSE Cur
DEALLOCATE Cur

CREATE TABLE #Auxiliar3 (IdDetalleRequerimiento INTEGER)
INSERT INTO #Auxiliar3 
 SELECT DetRec.IdDetalleRequerimiento
 FROM DetalleRecepciones DetRec
 WHERE DetRec.IdRecepcion = @IdRecepcion and DetRec.IdDetalleRequerimiento is not null
 GROUP BY DetRec.IdDetalleRequerimiento

CREATE NONCLUSTERED INDEX IX__Auxiliar3 ON #Auxiliar3 (IdDetalleRequerimiento) ON [PRIMARY]

/*  CURSOR  */
DECLARE @IdDetalleRequerimiento int, @CantidadRecibida numeric(18,2)
DECLARE Cur CURSOR LOCAL FORWARD_ONLY 
	FOR	SELECT IdDetalleRequerimiento
		FROM #Auxiliar3
OPEN Cur
FETCH NEXT FROM Cur INTO @IdDetalleRequerimiento
WHILE @@FETCH_STATUS = 0
BEGIN
	SET @CantidadRecibida=IsNull((Select Sum(IsNull(DetRec.CantidadCC,0))
					From DetalleRecepciones DetRec
					Left Outer Join Recepciones On DetRec.IdRecepcion=Recepciones.IdRecepcion
					Where DetRec.IdDetalleRequerimiento=@IdDetalleRequerimiento and 
						IsNull(Recepciones.Anulada,'NO')<>'SI'),0)

	UPDATE DetalleRequerimientos
	SET Recepcionado = 'SI'
	WHERE IdDetalleRequerimiento=@IdDetalleRequerimiento and IsNull(Cumplido,'NO')<>'AN' and 
		Cantidad<=@CantidadRecibida

	UPDATE DetalleRequerimientos
	SET Recepcionado = 'PA'
	WHERE IdDetalleRequerimiento=@IdDetalleRequerimiento and IsNull(Cumplido,'NO')<>'AN' and 
		Cantidad>@CantidadRecibida and @CantidadRecibida<>0

	UPDATE DetalleRequerimientos
	SET Recepcionado = Null
	WHERE IdDetalleRequerimiento=@IdDetalleRequerimiento and IsNull(Cumplido,'NO')<>'AN' and 
		Cantidad>@CantidadRecibida and @CantidadRecibida=0

	IF @Anulada='SI' and IsNull((Select Top 1 P.ActivarSolicitudMateriales From Parametros P Where P.IdParametro=1),'NO')='SI'
		UPDATE DetalleRequerimientos
		SET TipoDesignacion='CMP'
		WHERE IdDetalleRequerimiento=@IdDetalleRequerimiento and TipoDesignacion='REC'

	FETCH NEXT FROM Cur INTO @IdDetalleRequerimiento
END
CLOSE Cur
DEALLOCATE Cur

CREATE TABLE #Auxiliar4 (IdRequerimiento INTEGER)
INSERT INTO #Auxiliar4 
 SELECT DetReq.IdRequerimiento
 FROM DetalleRecepciones DetRec
 LEFT OUTER JOIN DetalleRequerimientos DetReq ON DetRec.IdDetalleRequerimiento = DetReq.IdDetalleRequerimiento
 WHERE DetRec.IdRecepcion = @IdRecepcion and DetRec.IdDetalleRequerimiento is not null
 GROUP BY DetReq.IdRequerimiento

CREATE NONCLUSTERED INDEX IX__Auxiliar4 ON #Auxiliar4 (IdRequerimiento) ON [PRIMARY]

/*  CURSOR  */
DECLARE @IdRequerimiento int
DECLARE Cur CURSOR LOCAL FORWARD_ONLY 
	FOR	SELECT IdRequerimiento
		FROM #Auxiliar4
OPEN Cur
FETCH NEXT FROM Cur INTO @IdRequerimiento
WHILE @@FETCH_STATUS = 0
BEGIN
	UPDATE Requerimientos
	SET Recepcionado=Null
	WHERE IdRequerimiento=@IdRequerimiento and IsNull(Cumplido,'NO')<>'AN' 

	UPDATE Requerimientos
	SET Recepcionado='SI'
	WHERE IdRequerimiento=@IdRequerimiento and IsNull(Cumplido,'NO')<>'AN' and 
		not exists(Select Top 1 DetReq.IdRequerimiento
				From DetalleRequerimientos DetReq
				Where DetReq.IdRequerimiento=@IdRequerimiento and 
					(IsNull(DetReq.Recepcionado,'NO')='NO' or IsNull(DetReq.Recepcionado,'NO')='PA'))

	UPDATE Requerimientos
	SET Recepcionado='PA'
	WHERE IdRequerimiento=@IdRequerimiento and IsNull(Cumplido,'NO')<>'AN' and 
		Recepcionado is null and 
		exists(Select Top 1 DetReq.IdRequerimiento
			From DetalleRequerimientos DetReq
			Where DetReq.IdRequerimiento=@IdRequerimiento and 
				IsNull(DetReq.Recepcionado,'NO')<>'NO')
	FETCH NEXT FROM Cur INTO @IdRequerimiento
END
CLOSE Cur
DEALLOCATE Cur

DROP TABLE #Auxiliar1
DROP TABLE #Auxiliar2
DROP TABLE #Auxiliar3
DROP TABLE #Auxiliar4



GO

/****** Object:  StoredProcedure [dbo].[Recepciones_E]    Script Date: 03/15/2011 11:49:03 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[Recepciones_E]
@IdRecepcion int  AS 
Delete Recepciones
where (IdRecepcion=@IdRecepcion)
































GO

/****** Object:  StoredProcedure [dbo].[Recepciones_M]    Script Date: 03/15/2011 11:49:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE Procedure [dbo].[Recepciones_M]

@IdRecepcion int,
@NumeroRecepcion1 int,
@NumeroRecepcion2 int,
@IdProveedor int,
@FechaRecepcion datetime,
@Observaciones ntext,
@IdPedido int,
@IdRequerimiento int,
@NumeroRecepcionAlmacen int,
@IdTransportista int,
@Acargo varchar(1),
@Realizo int,
@Anulada varchar(2),
@IdAcopio int,
@SubNumero varchar(1),
@FechaRegistracion datetime,
@EnviarEmail tinyint,
@IdRecepcionOriginal int,
@IdOrigenTransmision int,
@FechaImportacionTransmision datetime,
@ImpuestosInternos numeric(18,2),
@PercepcionIIBB numeric(18,2),
@PercepcionIVA numeric(18,2),
@ImporteIVA numeric(18,2),
@Chofer varchar(50),
@Patente varchar(10),
@NumeroRemitoTransporte1 int,
@NumeroRemitoTransporte2 int,
@IdChofer int,
@IdFlete int,
@PesoBruto numeric(18,2),
@PesoNeto numeric(18,2),
@Tara numeric(18,2),
@CantidadEnOrigen numeric(18,2),
@DistanciaRecorrida numeric(18,2),
@CodigoTarifador varchar(10),
@NumeroOrdenCarga int,
@IdPesada int,
@IdTarifaFlete int,
@TarifaFlete numeric(18,2)

AS

UPDATE Recepciones
SET 
 NumeroRecepcion1=@NumeroRecepcion1,
 NumeroRecepcion2=@NumeroRecepcion2,
 IdProveedor=@IdProveedor,
 FechaRecepcion=@FechaRecepcion,
 Observaciones=@Observaciones,
 IdPedido=@IdPedido,
 IdRequerimiento=@IdRequerimiento,
 NumeroRecepcionAlmacen=@NumeroRecepcionAlmacen,
 IdTransportista=@IdTransportista,
 Acargo=@Acargo,
 Realizo=@Realizo,
 Anulada=@Anulada,
 IdAcopio=@IdAcopio,
 SubNumero=@SubNumero,
 FechaRegistracion=@FechaRegistracion,
 EnviarEmail=@EnviarEmail,
 IdRecepcionOriginal=@IdRecepcionOriginal,
 IdOrigenTransmision=@IdOrigenTransmision,
 FechaImportacionTransmision=@FechaImportacionTransmision,
 ImpuestosInternos=@ImpuestosInternos,
 PercepcionIIBB=@PercepcionIIBB,
 PercepcionIVA=@PercepcionIVA,
 ImporteIVA=@ImporteIVA,
 Chofer=@Chofer,
 Patente=@Patente,
 NumeroRemitoTransporte1=@NumeroRemitoTransporte1,
 NumeroRemitoTransporte2=@NumeroRemitoTransporte2,
 IdChofer=@IdChofer,
 IdFlete=@IdFlete,
 PesoBruto=@PesoBruto,
 PesoNeto=@PesoNeto,
 Tara=@Tara,
 CantidadEnOrigen=@CantidadEnOrigen,
 DistanciaRecorrida=@DistanciaRecorrida,
 CodigoTarifador=@CodigoTarifador,
 NumeroOrdenCarga=@NumeroOrdenCarga,
 IdPesada=@IdPesada,
 IdTarifaFlete=@IdTarifaFlete,
 TarifaFlete=@TarifaFlete
WHERE (IdRecepcion=@IdRecepcion)
RETURN(@IdRecepcion)

GO

/****** Object:  StoredProcedure [dbo].[Recepciones_T]    Script Date: 03/15/2011 11:49:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[Recepciones_T]
@IdRecepcion int
AS 
SELECT * 
FROM Recepciones
WHERE (IdRecepcion=@IdRecepcion)
































GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TT]    Script Date: 03/15/2011 11:49:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO



CREATE  Procedure [dbo].[Recepciones_TT]

AS 

SET NOCOUNT ON

CREATE TABLE #Auxiliar1 
			(
			 IdRecepcion INTEGER,
			 Solicitantes VARCHAR(1000),
			 Requerimientos VARCHAR(100)
			)

CREATE TABLE #Auxiliar2 
			(
			 IdRecepcion INTEGER,
			 Solicito VARCHAR(50),
			 Requerimiento INTEGER
			)
INSERT INTO #Auxiliar2 
 SELECT DetRec.IdRecepcion, Empleados.Nombre, Requerimientos.NumeroRequerimiento
 FROM DetalleRecepciones DetRec
 LEFT OUTER JOIN DetalleRequerimientos DetReq ON DetReq.IdDetalleRequerimiento = DetRec.IdDetalleRequerimiento
 LEFT OUTER JOIN Requerimientos ON Requerimientos.IdRequerimiento = DetReq.IdRequerimiento
 LEFT OUTER JOIN Empleados ON Empleados.IdEmpleado = Requerimientos.IdSolicito

CREATE NONCLUSTERED INDEX IX__Auxiliar2 ON #Auxiliar2 (IdRecepcion,Requerimiento) ON [PRIMARY]

INSERT INTO #Auxiliar1 
 SELECT IdRecepcion, '', ''
 FROM #Auxiliar2
 GROUP BY IdRecepcion

/*  CURSOR  */
DECLARE @IdRecepcion int, @Requerimiento int, @Corte int, @Solicito varchar(50), @P varchar(100), @S varchar(1000)
SET @Corte=0
SET @P=''
SET @S=''
DECLARE Cur CURSOR LOCAL FORWARD_ONLY 
	FOR	SELECT IdRecepcion, Solicito, Requerimiento
		FROM #Auxiliar2
		ORDER BY IdRecepcion
OPEN Cur
FETCH NEXT FROM Cur INTO @IdRecepcion, @Solicito, @Requerimiento
WHILE @@FETCH_STATUS = 0
   BEGIN
	IF @Corte<>@IdRecepcion
	   BEGIN
		IF @Corte<>0
			UPDATE #Auxiliar1
			SET Requerimientos = SUBSTRING(@P,1,100), Solicitantes = SUBSTRING(@S,1,1000)
			WHERE IdRecepcion=@Corte
		SET @P=''
		SET @S=''
		SET @Corte=@IdRecepcion
	   END
	IF NOT @Requerimiento IS NULL
		IF PATINDEX('%['+Convert(varchar,@Requerimiento)+']'+'%', @P)=0
		   BEGIN
			SET @P=@P+'['+Convert(varchar,@Requerimiento)+'] '
			SET @S=@S+@Solicito+' '
		   END
	FETCH NEXT FROM Cur INTO @IdRecepcion, @Solicito, @Requerimiento
   END
   IF @Corte<>0
      BEGIN
	UPDATE #Auxiliar1
	SET Requerimientos = SUBSTRING(@P,1,100), Solicitantes = SUBSTRING(@S,1,1000)
	WHERE IdRecepcion=@Corte
      END
CLOSE Cur
DEALLOCATE Cur


/* PEDIDOS */
CREATE TABLE #Auxiliar4 
			(
			 IdRecepcion INTEGER,
			 Pedidos VARCHAR(100)
			)

CREATE TABLE #Auxiliar5 
			(
			 IdRecepcion INTEGER,
			 Pedido VARCHAR(15)
			)
INSERT INTO #Auxiliar5 
 SELECT DetRec.IdRecepcion, 
	Convert(varchar,Pedidos.NumeroPedido)+
		Case When Pedidos.Subnumero is not null
			Then '/'+Convert(varchar,Pedidos.Subnumero)
			Else ''
		End
 FROM DetalleRecepciones DetRec
 LEFT OUTER JOIN DetallePedidos ON DetRec.IdDetallePedido = DetallePedidos.IdDetallePedido
 LEFT OUTER JOIN Pedidos ON DetallePedidos.IdPedido = Pedidos.IdPedido

 UNION ALL

 SELECT DetRec.IdRecepcion, 
	Convert(varchar,Ped.NumeroPedido)+
		Case When Ped.Subnumero is not null
			Then '/'+Convert(varchar,Ped.Subnumero)
			Else ''
		End+' P'
 FROM DetalleRecepciones DetRec
 LEFT OUTER JOIN DetallePedidosPRONTO DetPed ON DetRec.IdDetalleRequerimiento = DetPed.IdDetalleRequerimiento
 LEFT OUTER JOIN PedidosPRONTO Ped ON DetPed.IdPedido = Ped.IdPedido

CREATE NONCLUSTERED INDEX IX__Auxiliar5 ON #Auxiliar5 (IdRecepcion,Pedido) ON [PRIMARY]

INSERT INTO #Auxiliar4 
 SELECT #Auxiliar5.IdRecepcion, ''
 FROM #Auxiliar5
 GROUP BY #Auxiliar5.IdRecepcion

/*  CURSOR  */
DECLARE @Presupuesto varchar(13), @Pedido varchar(15)
SET @Corte=0
SET @P=''
DECLARE Cur CURSOR LOCAL FORWARD_ONLY 
	FOR	SELECT IdRecepcion, Pedido
		FROM #Auxiliar5
		ORDER BY IdRecepcion
OPEN Cur
FETCH NEXT FROM Cur INTO @IdRecepcion, @Pedido
WHILE @@FETCH_STATUS = 0
 BEGIN
	IF @Corte<>@IdRecepcion
	 BEGIN
		IF @Corte<>0
		 BEGIN
			UPDATE #Auxiliar4
			SET Pedidos = SUBSTRING(@P,1,100)
			WHERE #Auxiliar4.IdRecepcion=@Corte
		 END
		SET @P=''
		SET @Corte=@IdRecepcion
	 END
	IF NOT @Pedido IS NULL
		IF PATINDEX('%['+@Pedido+']%', @P)=0
			SET @P=@P+'['+@Pedido+'] '
	FETCH NEXT FROM Cur INTO @IdRecepcion, @Pedido
 END
 IF @Corte<>0
  BEGIN
	UPDATE #Auxiliar4
	SET Pedidos = SUBSTRING(@P,1,100)
	WHERE #Auxiliar4.IdRecepcion=@Corte
  END
CLOSE Cur
DEALLOCATE Cur

SET NOCOUNT OFF

DECLARE @vector_X varchar(30),@vector_T varchar(30)
SET @vector_X='0111111111111133'
SET @vector_T='055243EFA9029300'

SELECT 
 Recepciones.IdRecepcion as [IdAux],
 Recepciones.NumeroRecepcionAlmacen as [Nro.recep.alm.],
 Case 	When Recepciones.SubNumero is not null 
	 Then Substring(Substring('0000',1,4-Len(Convert(varchar,Recepciones.NumeroRecepcion1)))+
			Convert(varchar,Recepciones.NumeroRecepcion1)+'-'+
			Substring('00000000',1,8-Len(Convert(varchar,Recepciones.NumeroRecepcion2)))+
			Convert(varchar,Recepciones.NumeroRecepcion2)+'/'+
			Convert(varchar,Recepciones.SubNumero) ,1,20) 
	 Else Substring(Substring('0000',1,4-Len(Convert(varchar,Recepciones.NumeroRecepcion1)))+
			Convert(varchar,Recepciones.NumeroRecepcion1)+'-'+
			Substring('00000000',1,8-Len(Convert(varchar,Recepciones.NumeroRecepcion2)))+
			Convert(varchar,Recepciones.NumeroRecepcion2),1,20) 
 End as [Comprobante],
 Proveedores.RazonSocial as [Proveedor],
 Recepciones.FechaRecepcion as [Fecha],
 Recepciones.Anulada,
 #Auxiliar4.Pedidos as [Pedidos],
 #Auxiliar1.Requerimientos as [RM's],
 #Auxiliar1.Solicitantes as [Solicitantes RM's],
 Null as [Nombre LA],
 (Select Top 1 Empleados.Nombre From Empleados
	Where Empleados.IdEmpleado=Recepciones.Realizo) as [Realizo],
 Recepciones.Anulada as [Anulada],
 Recepciones.IdRecepcion,
 Recepciones.Observaciones,
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM Recepciones
LEFT OUTER JOIN Requerimientos ON Recepciones.IdRequerimiento = Requerimientos.IdRequerimiento
LEFT OUTER JOIN Proveedores ON Recepciones.IdProveedor = Proveedores.IdProveedor
LEFT OUTER JOIN #Auxiliar1 ON Recepciones.IdRecepcion=#Auxiliar1.IdRecepcion
LEFT OUTER JOIN #Auxiliar4 ON Recepciones.IdRecepcion=#Auxiliar4.IdRecepcion
ORDER BY Recepciones.FechaRecepcion, Proveedores.RazonSocial

DROP TABLE #Auxiliar1
DROP TABLE #Auxiliar2
DROP TABLE #Auxiliar4
DROP TABLE #Auxiliar5


GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_DatosPorIdDetalleRecepcion]    Script Date: 03/15/2011 11:49:04 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO










CREATE PROCEDURE [dbo].[Recepciones_TX_DatosPorIdDetalleRecepcion]
@IdDetalleRecepcion int
AS
SELECT
 Recepciones.*,
 Requerimientos.NumeroRequerimiento,
 DetReq.NumeroItem as [ItemRM],
 Pedidos.NumeroPedido,
 Pedidos.IdMoneda as [IdMonedaPedido],
 Monedas.Nombre as [MonedaPedido],
 DetPed.NumeroItem as [ItemPedido]
FROM DetalleRecepciones DetRec
LEFT OUTER JOIN Recepciones ON DetRec.IdRecepcion = Recepciones.IdRecepcion
LEFT OUTER JOIN DetallePedidos DetPed ON DetRec.IdDetallePedido = DetPed.IdDetallePedido
LEFT OUTER JOIN Pedidos ON DetPed.IdPedido = Pedidos.IdPedido
LEFT OUTER JOIN Monedas ON Monedas.IdMoneda = Pedidos.IdMoneda
LEFT OUTER JOIN DetalleRequerimientos DetReq ON DetRec.IdDetalleRequerimiento = DetReq.IdDetalleRequerimiento
LEFT OUTER JOIN Requerimientos ON DetReq.IdRequerimiento = Requerimientos.IdRequerimiento
WHERE (DetRec.IdDetalleRecepcion = @IdDetalleRecepcion)









GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_DetallesParaComprobantesProveedores]    Script Date: 03/15/2011 11:49:04 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE [dbo].[Recepciones_TX_DetallesParaComprobantesProveedores]

@IdRecepcion int

AS

SELECT
 DetRec.IdDetalleRecepcion,
 DetRec.IdRecepcion,
 DetRec.IdDetallePedido,
 DetRec.IdDetalleRequerimiento,
 DetRec.IdObra,
 DetRec.Cantidad,
 DetRec.CostoUnitario,
 DetRec.Observaciones,
 DetRec.IdArticulo,
 Articulos.Codigo as [Codigo],
 Articulos.Descripcion as [Articulo],
 Articulos.AlicuotaIVA,
 DetPed.Precio,
 DetPed.PorcentajeBonificacion,
 Case When DetPed.PorcentajeBonificacion is not null
	Then (DetRec.Cantidad*DetPed.Precio)-
		(DetRec.Cantidad*DetPed.Precio*DetPed.PorcentajeBonificacion/100)
	Else (DetRec.Cantidad*DetPed.Precio)
 End as [Importe],
 Substring('0000',1,4-Len(Convert(varchar,Recepciones.NumeroRecepcion1)))+
	Convert(varchar,Recepciones.NumeroRecepcion1)+'-'+
	Substring('00000000',1,8-Len(Convert(varchar,Recepciones.NumeroRecepcion2)))+
	Convert(varchar,Recepciones.NumeroRecepcion2) as [Remito],
 Pedidos.NumeroPedido as [Pedido],
 DetPed.NumeroItem as [It.Ped],
 Pedidos.IdCondicionCompra,
 Pedidos.Bonificacion,
 Requerimientos.NumeroRequerimiento as [RM],
 DetalleRequerimientos.NumeroItem as [It.RM],
 IsNull(Unidades.Abreviatura,Unidades.Descripcion) as [Unidad],
 Obras.NumeroObra as [Obra],
 Depositos.Abreviatura+' - E:'+Ubicaciones.Estanteria+
	' M:'+Ubicaciones.Modulo+' G:'+Ubicaciones.Gabeta as [Ubicacion]
FROM DetalleRecepciones DetRec
LEFT OUTER JOIN Recepciones ON DetRec.IdRecepcion = Recepciones.IdRecepcion
LEFT OUTER JOIN Articulos ON DetRec.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN DetallePedidos DetPed ON DetRec.IdDetallePedido = DetPed.IdDetallePedido
LEFT OUTER JOIN Pedidos ON DetPed.IdPedido = Pedidos.IdPedido
LEFT OUTER JOIN DetalleRequerimientos ON DetRec.IdDetalleRequerimiento = DetalleRequerimientos.IdDetalleRequerimiento
LEFT OUTER JOIN Requerimientos ON DetalleRequerimientos.IdRequerimiento = Requerimientos.IdRequerimiento
LEFT OUTER JOIN Unidades ON DetRec.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN Obras ON DetRec.IdObra = Obras.IdObra
LEFT OUTER JOIN Ubicaciones ON DetRec.IdUbicacion = Ubicaciones.IdUbicacion
LEFT OUTER JOIN Depositos ON Ubicaciones.IdDeposito = Depositos.IdDeposito
WHERE (DetRec.IdRecepcion = @IdRecepcion)
ORDER by Pedidos.NumeroPedido,DetPed.NumeroItem



GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_DetallesPorIdRecepcion]    Script Date: 03/15/2011 11:49:04 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO













CREATE PROCEDURE [dbo].[Recepciones_TX_DetallesPorIdRecepcion]
@IdRecepcion int
AS
SELECT *
FROM DetalleRecepciones DetRec
WHERE (DetRec.IdRecepcion = @IdRecepcion)













GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_EntreFechas]    Script Date: 03/15/2011 11:49:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE PROCEDURE [dbo].[Recepciones_TX_EntreFechas]
@Desde datetime,
@Hasta datetime,
@IdObra int
AS
SELECT
FechaRecepcion as [Fecha],
Proveedores.RazonSocial as [Proveedor],
Case 	When Recepciones.SubNumero is not null 
	Then str(NumeroRecepcion1,4)+'-'+str(NumeroRecepcion2,8)+'/'+Recepciones.SubNumero 
 	Else str(NumeroRecepcion1,4)+'-'+str(NumeroRecepcion2,8) 
End as [Comprobante],
Obras.NumeroObra as [Obra],
CentrosCosto.Descripcion as [Centro de costo],
Pedidos.NumeroPedido as [Pedido],
Requerimientos.NumeroRequerimiento as [RM],
Acopios.NumeroAcopio as [Numero LA],
Acopios.Nombre as [Nombre LA],
NumeroRecepcionAlmacen as [Nro.Recepcion Interno]
FROM Recepciones
LEFT OUTER JOIN Pedidos ON Recepciones.IdPedido = Pedidos.IdPedido
LEFT OUTER JOIN Requerimientos ON Recepciones.IdRequerimiento = Requerimientos.IdRequerimiento
LEFT OUTER JOIN Obras ON Requerimientos.IdObra = Obras.IdObra
LEFT OUTER JOIN CentrosCosto ON Requerimientos.IdCentroCosto=CentrosCosto.IdCentroCosto
LEFT OUTER JOIN Proveedores ON Recepciones.IdProveedor = Proveedores.IdProveedor
LEFT OUTER JOIN Acopios ON Recepciones.IdAcopio=Acopios.IdAcopio
WHERE Recepciones.FechaRecepcion Between @Desde and @Hasta and 
	 (@IdObra=-1 or Requerimientos.IdObra=@IdObra)
ORDER By FechaRecepcion,Proveedores.RazonSocial
































GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_MaterialesRecibidos]    Script Date: 03/15/2011 11:49:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE PROCEDURE [dbo].[Recepciones_TX_MaterialesRecibidos]

@Desde datetime,
@Hasta datetime,
@IdObra int

AS

SELECT
 'RECEPCION' as [Tipo],
 Case 	When Recepciones.SubNumero is not null 
	 Then Substring(Substring('0000',1,4-Len(Convert(varchar,Recepciones.NumeroRecepcion1)))+
			Convert(varchar,Recepciones.NumeroRecepcion1)+'-'+
			Substring('00000000',1,8-Len(Convert(varchar,Recepciones.NumeroRecepcion2)))+
			Convert(varchar,Recepciones.NumeroRecepcion2)+'/'+
			Convert(varchar,Recepciones.SubNumero) ,1,20) 
	 Else Substring(Substring('0000',1,4-Len(Convert(varchar,Recepciones.NumeroRecepcion1)))+
			Convert(varchar,Recepciones.NumeroRecepcion1)+'-'+
			Substring('00000000',1,8-Len(Convert(varchar,Recepciones.NumeroRecepcion2)))+
			Convert(varchar,Recepciones.NumeroRecepcion2),1,20) 
 End as [Recepcion],
 Recepciones.NumeroRecepcionAlmacen as [Nro.recep.alm.],
 Proveedores.RazonSocial as [Proveedor],
 DetalleRequerimientos.FechaEntrega as [Fecha necesidad],
 DetallePedidos.FechaEntrega as [Fecha promesa],
 Recepciones.FechaRecepcion as [Fecha entrega],
 Case When DateDiff(d,DetallePedidos.FechaEntrega,Recepciones.FechaRecepcion)<=0 
	Then DateDiff(d,DetallePedidos.FechaEntrega,Recepciones.FechaRecepcion) * -1
	Else Null
 End as [En termino (dias)],
 Case When DateDiff(d,DetallePedidos.FechaEntrega,Recepciones.FechaRecepcion)>0 
	Then DateDiff(d,DetallePedidos.FechaEntrega,Recepciones.FechaRecepcion)
	Else Null
 End as [Fuera de termino (dias)],
 Articulos.Descripcion as [Material],
 Articulos.Codigo as [Codigo],
 Convert(varchar(4000),dr.Observaciones) as [Observaciones],
 dr.Cantidad as [Cantidad],
 Unidades.Abreviatura as [Unidad],
 Case
	When dr.IdDetalleAcopios is not null 
		Then (Select LMateriales.NumeroLMateriales
			From LMateriales
			Where LMateriales.IdLMateriales=(Select Top 1 DetalleLMateriales.IdLMateriales
								From DetalleLMateriales
								Where DetalleLMateriales.IdDetalleAcopios=dr.IdDetalleAcopios))
	When dr.IdDetalleRequerimiento is not null 
		Then (Select LMateriales.NumeroLMateriales
			From LMateriales
			Where LMateriales.IdLMateriales=(Select Top 1 DetalleLMateriales.IdLMateriales
								From DetalleLMateriales
								Where DetalleLMateriales.IdDetalleLMateriales=(Select Top 1 DetalleRequerimientos.IdDetalleLMateriales
														From DetalleRequerimientos
														Where DetalleRequerimientos.IdDetalleRequerimiento=dr.IdDetalleRequerimiento)))
	When dr.IdDetallePedido is not null 
		Then (Select LMateriales.NumeroLMateriales
			From LMateriales
			Where LMateriales.IdLMateriales=(Select Top 1 DetalleLMateriales.IdLMateriales
								From DetalleLMateriales
								Where DetalleLMateriales.IdDetalleLMateriales=(Select Top 1 DetallePedidos.IdDetalleLMateriales
														From DetallePedidos
														Where DetallePedidos.IdDetallePedido=dr.IdDetallePedido)))
 End as [L.Materiales],
 Obras.NumeroObra as [Obra],
 Requerimientos.NumeroRequerimiento as [RM],
 DetalleRequerimientos.NumeroItem as [Item RM],
 DetalleRequerimientos.CodigoDistribucion as [Cod.Distr.],
 Case 	When Pedidos.SubNumero is not null 
	Then Substring('00000000',1,8-Len(Convert(varchar,Pedidos.NumeroPedido)))+
		Convert(varchar,Pedidos.NumeroPedido)+'/'+
		Convert(varchar,Pedidos.SubNumero)
	Else Substring('00000000',1,8-Len(Convert(varchar,Pedidos.NumeroPedido)))+
		Convert(varchar,Pedidos.NumeroPedido)
 End as [Pedido],
 DetallePedidos.NumeroItem as [Item pedido],
 Rubros.Descripcion as [Rubro],
 Empleados.Nombre as [Solicito],
 Null as [Cuenta],
 dr.CostoUnitario*dr.CotizacionMoneda as [Costo],
 dr.Cantidad*dr.CostoUnitario*dr.CotizacionMoneda as [TotalItem],
 Null as [Factura],
 Null as [Cuenta de compra]
From DetalleRecepciones dr
Left Outer Join Recepciones On dr.IdRecepcion=Recepciones.IdRecepcion
Left Outer Join Articulos On dr.IdArticulo=Articulos.IdArticulo
Left Outer Join Rubros On Articulos.IdRubro=Rubros.IdRubro
Left Outer Join Unidades On dr.IdUnidad=Unidades.IdUnidad
Left Outer Join Proveedores On Recepciones.IdProveedor = Proveedores.IdProveedor
Left Outer Join Obras On dr.IdObra=Obras.IdObra
Left Outer Join DetalleRequerimientos On dr.IdDetalleRequerimiento=DetalleRequerimientos.IdDetalleRequerimiento
Left Outer Join Requerimientos On DetalleRequerimientos.IdRequerimiento=Requerimientos.IdRequerimiento
Left Outer Join DetallePedidos On dr.IdDetallePedido = DetallePedidos.IdDetallePedido
Left Outer Join Pedidos On DetallePedidos.IdPedido = Pedidos.IdPedido
Left Outer Join Empleados On Requerimientos.IdSolicito = Empleados.IdEmpleado
Where 	Controlado is not null and 
	IsNull(Recepciones.Anulada,'NO')<>'SI' and 
	Recepciones.FechaRecepcion Between @Desde and @Hasta and 
	(@IdObra=-1 or @IdObra=dr.IdObra)

UNION ALL

SELECT 
 'OTROS ING.' as [Tipo],
 Substring('00000000',1,8-Len(Convert(varchar,oia.NumeroOtroIngresoAlmacen)))+
	Convert(varchar,oia.NumeroOtroIngresoAlmacen) as [Recepcion],
 Null as [Nro.recep.alm.],
 Null as [Proveedor],
 Null as [Fecha necesidad],
 Null as [Fecha promesa],
 oia.FechaOtroIngresoAlmacen as [Fecha entrega],
 Null as [En termino (dias)],
 Null as [Fuera de termino (dias)],
 Articulos.Descripcion as [Material],
 Articulos.Codigo as [Codigo],
 Convert(varchar(4000),doia.Observaciones) as [Observaciones],
 doia.Cantidad as [Cantidad],
 Unidades.Abreviatura as [Unidad],
 Null as [L.Materiales],
 Obras.NumeroObra as [Obra],
 Null as [RM],
 Null as [Item RM],
 Null as [Cod.Distr.],
 Null as [Pedido],
 Null as [Item pedido],
 Rubros.Descripcion as [Rubro],
 Null as [Solicito],
 Null as [Cuenta],
 Null as [Costo],
 Null as [TotalItem],
 Null as [Factura],
 Null as [Cuenta]
FROM DetalleOtrosIngresosAlmacen doia
LEFT OUTER JOIN OtrosIngresosAlmacen oia On doia.IdOtroIngresoAlmacen=oia.IdOtroIngresoAlmacen
LEFT OUTER JOIN Articulos On doia.IdArticulo=Articulos.IdArticulo
LEFT OUTER JOIN Rubros On Articulos.IdRubro=Rubros.IdRubro
LEFT OUTER JOIN Unidades On doia.IdUnidad=Unidades.IdUnidad
LEFT OUTER JOIN Obras On oia.IdObra=Obras.IdObra
WHERE IsNull(oia.Anulado,'NO')<>'SI' and 
	oia.FechaOtroIngresoAlmacen Between @Desde and @Hasta and 
	(@IdObra=-1 or @IdObra=oia.IdObra)
ORDER BY [Fecha entrega], [Tipo] desc, [Nro.recep.alm.], [Item pedido]



GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_MaterialesRecibidosAprobados]    Script Date: 03/15/2011 11:49:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE PROCEDURE [dbo].[Recepciones_TX_MaterialesRecibidosAprobados]
@Desde datetime,
@Hasta datetime,
@IdObra int
AS
Select 
Articulos.Descripcion as [Material],
dcc.Observaciones as [Observaciones],
dcc.Fecha as [Fecha],
dcc.Cantidad as [Cantidad],
Unidades.Abreviatura as [Unidad],
Case 	When dr.Cantidad1 is null Then ''
	Else Convert(varchar(10),dr.Cantidad1)
End as [Med.1],
Case 	When dr.Cantidad2 is null Then ''
	Else Convert(varchar(10),dr.Cantidad2)
End as [Med.2],
Case
	When dr.IdDetalleAcopios is not null 
		Then (Select LMateriales.NumeroLMateriales
			From LMateriales
			Where LMateriales.IdLMateriales=(Select Top 1 DetalleLMateriales.IdLMateriales
								From DetalleLMateriales
								Where DetalleLMateriales.IdDetalleAcopios=dr.IdDetalleAcopios))
	When dr.IdDetalleRequerimiento is not null 
		Then (Select LMateriales.NumeroLMateriales
			From LMateriales
			Where LMateriales.IdLMateriales=(Select Top 1 DetalleLMateriales.IdLMateriales
								From DetalleLMateriales
								Where DetalleLMateriales.IdDetalleLMateriales=(Select Top 1 DetalleRequerimientos.IdDetalleLMateriales
														From DetalleRequerimientos
														Where DetalleRequerimientos.IdDetalleRequerimiento=dr.IdDetalleRequerimiento)))
	When dr.IdDetallePedido is not null 
		Then (Select LMateriales.NumeroLMateriales
			From LMateriales
			Where LMateriales.IdLMateriales=(Select Top 1 DetalleLMateriales.IdLMateriales
								From DetalleLMateriales
								Where DetalleLMateriales.IdDetalleLMateriales=(Select Top 1 DetallePedidos.IdDetalleLMateriales
														From DetallePedidos
														Where DetallePedidos.IdDetallePedido=dr.IdDetallePedido)))
End as [L.Materiales],
str(Recepciones.NumeroRecepcion1,4)+'-'+str(Recepciones.NumeroRecepcion2,8) as [Recepcion],
(Select Obras.NumeroObra
 From Obras 
 Where Obras.IdObra=(Select Top 1 Requerimientos.IdObra
			From Requerimientos
			Where Requerimientos.IdRequerimiento=Recepciones.IdRequerimiento)) as [Obra],
Case
	When dr.IdDetalleAcopios is not null 
		Then (Select Equipos.Tag
			From Equipos
			Where Equipos.IdEquipo=(Select LMateriales.IdEquipo 
						From LMateriales
						Where LMateriales.IdLMateriales=(Select Top 1 DetalleLMateriales.IdLMateriales
										From DetalleLMateriales
										Where DetalleLMateriales.IdDetalleAcopios=dr.IdDetalleAcopios)))
	When dr.IdDetalleRequerimiento is not null 
		Then (Select Equipos.Tag
			From Equipos
			Where Equipos.IdEquipo=(Select LMateriales.NumeroLMateriales
						From LMateriales
						Where LMateriales.IdLMateriales=(Select Top 1 DetalleLMateriales.IdLMateriales
										From DetalleLMateriales
										Where DetalleLMateriales.IdDetalleLMateriales=(Select Top 1 DetalleRequerimientos.IdDetalleLMateriales
																From DetalleRequerimientos
																Where DetalleRequerimientos.IdDetalleRequerimiento=dr.IdDetalleRequerimiento))))
	When dr.IdDetallePedido is not null 
		Then (Select Equipos.Tag
			From Equipos
			Where Equipos.IdEquipo=(Select LMateriales.NumeroLMateriales
						From LMateriales
						Where LMateriales.IdLMateriales=(Select Top 1 DetalleLMateriales.IdLMateriales
										From DetalleLMateriales
										Where DetalleLMateriales.IdDetalleLMateriales=(Select Top 1 DetallePedidos.IdDetalleLMateriales
																From DetallePedidos
																Where DetallePedidos.IdDetallePedido=dr.IdDetallePedido))))
End as [Equipo],
Case
	When dr.IdDetalleRequerimiento is not null 
		Then (Select Requerimientos.NumeroRequerimiento
			From Requerimientos
			Where Requerimientos.IdRequerimiento=(Select Top 1 DetalleRequerimientos.IdRequerimiento
								From DetalleRequerimientos
								Where DetalleRequerimientos.IdDetalleRequerimiento=dr.IdDetalleRequerimiento))
	When dr.IdDetallePedido is not null 
		Then (Select Requerimientos.NumeroRequerimiento
			From Requerimientos
			Where Requerimientos.IdRequerimiento=(Select Top 1 DetalleRequerimientos.IdRequerimiento
								From DetalleRequerimientos
								Where DetalleRequerimientos.IdDetalleRequerimiento=(Select Top 1 DetallePedidos.IdDetalleRequerimiento
															From DetallePedidos
															Where DetallePedidos.IdDetallePedido=dr.IdDetallePedido)))
End as [R.M.],
Case
	When dr.IdDetalleAcopios is not null 
		Then (Select Acopios.NumeroAcopio
			From Acopios
			Where Acopios.IdAcopio=(Select Top 1 DetalleAcopios.IdAcopio
						From DetalleAcopios
						Where DetalleAcopios.IdDetalleAcopios=dr.IdDetalleAcopios))
	When dr.IdDetallePedido is not null 
		Then (Select Acopios.NumeroAcopio
			From Acopios
			Where Acopios.IdAcopio=(Select Top 1 DetalleAcopios.IdAcopio
						From DetalleAcopios
						Where DetalleAcopios.IdDetalleAcopios=(Select Top 1 DetallePedidos.IdDetalleAcopios
											From DetallePedidos
											Where DetallePedidos.IdDetallePedido=dr.IdDetallePedido)))
End as [L.Acopio],
Proveedores.RazonSocial as [Proveedor],
dr.Trasabilidad
From DetalleControlesCalidad dcc
Left Outer Join DetalleRecepciones dr On dcc.IdDetalleRecepcion=dr.IdDetalleRecepcion
Left Outer Join Recepciones On dcc.IdRecepcion=Recepciones.IdRecepcion
Left Outer Join Proveedores On Recepciones.IdProveedor=Proveedores.IdProveedor
Left Outer Join Articulos On dr.IdArticulo=Articulos.IdArticulo
Left Outer Join Unidades On dr.IdUnidad=Unidades.IdUnidad
Where 	dcc.Fecha Between @Desde and @Hasta And 
	dcc.Cantidad>0 And 
	(@IdObra=-1 or @IdObra=(Select Top 1 Requerimientos.IdObra
					From Requerimientos
					Where Requerimientos.IdRequerimiento=Recepciones.IdRequerimiento))
































GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_ParaTransmitir]    Script Date: 03/15/2011 11:49:04 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO



CREATE Procedure [dbo].[Recepciones_TX_ParaTransmitir]

AS 

SELECT *
FROM Recepciones
WHERE EnviarEmail=1 and IsNull(Anulada,'NO')<>'SI'


GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_PendientesDeComprobante]    Script Date: 03/15/2011 11:49:04 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO







CREATE PROCEDURE [dbo].[Recepciones_TX_PendientesDeComprobante]

@IdProveedor int

AS

declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='011111111111133'
set @vector_T='055243539902900'

SELECT 
 Recepciones.IdRecepcion,
 Recepciones.NumeroRecepcionAlmacen as [Nro.recep.alm.],
 Case 	When Recepciones.SubNumero is not null 
	 Then Substring(Substring('0000',1,4-Len(Convert(varchar,Recepciones.NumeroRecepcion1)))+
			Convert(varchar,Recepciones.NumeroRecepcion1)+'-'+
			Substring('00000000',1,8-Len(Convert(varchar,Recepciones.NumeroRecepcion2)))+
			Convert(varchar,Recepciones.NumeroRecepcion2)+'/'+
			Convert(varchar,Recepciones.SubNumero) ,1,20) 
	 Else Substring(Substring('0000',1,4-Len(Convert(varchar,Recepciones.NumeroRecepcion1)))+
			Convert(varchar,Recepciones.NumeroRecepcion1)+'-'+
			Substring('00000000',1,8-Len(Convert(varchar,Recepciones.NumeroRecepcion2)))+
			Convert(varchar,Recepciones.NumeroRecepcion2),1,20) 
 End as [Comprobante],
 Proveedores.RazonSocial as [Proveedor],
 Recepciones.FechaRecepcion as [Fecha],
 Recepciones.Anulada,
 Case 	When Pedidos.SubNumero is not null 
	Then str(Pedidos.NumeroPedido,8)+' / '+str(Pedidos.SubNumero,4)
	Else str(Pedidos.NumeroPedido,8)
 End as [Pedido],
 Requerimientos.NumeroRequerimiento as [RM],
 Acopios.NumeroAcopio as [Numero LA],
 Acopios.Nombre as [Nombre LA],
 (Select Top 1 Empleados.Nombre
  from Empleados
  Where Empleados.IdEmpleado=Recepciones.Realizo) as [Realizo],
 Recepciones.Anulada as [Anulada],
 Recepciones.IdRecepcion,
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM Recepciones
LEFT OUTER JOIN Pedidos ON Recepciones.IdPedido = Pedidos.IdPedido
LEFT OUTER JOIN Requerimientos ON Recepciones.IdRequerimiento = Requerimientos.IdRequerimiento
LEFT OUTER JOIN Proveedores ON Recepciones.IdProveedor = Proveedores.IdProveedor
LEFT OUTER JOIN Acopios ON Recepciones.IdAcopio=Acopios.IdAcopio
WHERE (@IdProveedor=-1 or Recepciones.IdProveedor=@IdProveedor) and 
	Exists(Select Top 1 DetRec.IdRecepcion 
		From DetalleRecepciones DetRec
		Where DetRec.IdRecepcion=Recepciones.IdRecepcion and 
			Not Exists(Select Top 1 DetCP.IdDetalleComprobanteProveedor
				   From DetalleComprobantesProveedores DetCP
				   Where DetCP.IdDetalleRecepcion=DetRec.IdDetalleRecepcion))
ORDER BY Proveedores.RazonSocial,FechaRecepcion







GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_PendientesPorIdDetalle]    Script Date: 03/15/2011 11:49:04 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE PROCEDURE [dbo].[Recepciones_TX_PendientesPorIdDetalle]
@IdDetRec int,
@IdDetPed int,
@IdDetReq int,
@IdDetAco int
AS
SELECT
CASE	
	WHEN 	@IdDetPed>0
	 THEN 	(Select DetPed.Cantidad
		 From DetallePedidos DetPed
		 WHERE DetPed.IdDetallePedido=@IdDetPed)
	WHEN 	@IdDetReq>0
	 THEN 	(Select DetReq.Cantidad
		 From DetalleRequerimientos DetReq
		 WHERE DetReq.IdDetalleRequerimiento=@IdDetReq)
	WHEN 	@IdDetAco>0
	 THEN 	(Select DetAco.Cantidad
		 From DetalleAcopios DetAco
		 WHERE DetAco.IdDetalleAcopios=@IdDetAco)
	 ELSE 	0
End as [Cant.Orig.],
CASE	
	WHEN 	@IdDetPed>0
	 THEN 	(Select Sum(DetRec.Cantidad)
		 From DetalleRecepciones DetRec
		 WHERE DetRec.IdDetalleRecepcion<>@IdDetRec And DetRec.IdDetallePedido=@IdDetPed) 
	WHEN 	@IdDetReq>0
	 THEN 	(Select Sum(DetRec.Cantidad)
		 From DetalleRecepciones DetRec
		 WHERE DetRec.IdDetalleRecepcion<>@IdDetRec And DetRec.IdDetalleRequerimiento=@IdDetReq) 
	WHEN 	@IdDetAco>0
	 THEN 	(Select Sum(DetRec.Cantidad)
		 From DetalleRecepciones DetRec
		 WHERE DetRec.IdDetalleRecepcion<>@IdDetRec And DetRec.IdDetalleAcopios=@IdDetAco) 
	 ELSE 	0
End as [Recibido]
































GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_PorNumeroInterno]    Script Date: 03/15/2011 11:49:04 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[Recepciones_TX_PorNumeroInterno]
@NumeroRecepcionAlmacen int
AS 
SELECT * 
FROM Recepciones
WHERE NumeroRecepcionAlmacen=@NumeroRecepcionAlmacen
































GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:49:04 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE Procedure [dbo].[Recepciones_TX_SetearComoTransmitido]
AS 
UPDATE Recepciones
SET EnviarEmail=0
WHERE EnviarEmail<>0





GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_Todos]    Script Date: 03/15/2011 11:49:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE  Procedure [dbo].[Recepciones_TX_Todos]

AS 

SET NOCOUNT ON

CREATE TABLE #Auxiliar1 
			(
			 IdRecepcion INTEGER,
			 Solicitantes VARCHAR(1000),
			 Requerimientos VARCHAR(100)
			)

CREATE TABLE #Auxiliar2 
			(
			 IdRecepcion INTEGER,
			 Solicito VARCHAR(50),
			 Requerimiento VARCHAR(8)
			)
INSERT INTO #Auxiliar2 
 SELECT DetRec.IdRecepcion, Empleados.Nombre, 
	Substring('00000000',1,8-Len(Convert(varchar,Requerimientos.NumeroRequerimiento)))+
			Convert(varchar,Requerimientos.NumeroRequerimiento)
 FROM DetalleRecepciones DetRec
 LEFT OUTER JOIN DetalleRequerimientos DetReq ON DetReq.IdDetalleRequerimiento = DetRec.IdDetalleRequerimiento
 LEFT OUTER JOIN Requerimientos ON Requerimientos.IdRequerimiento = DetReq.IdRequerimiento
 LEFT OUTER JOIN Empleados ON Empleados.IdEmpleado = Requerimientos.IdSolicito

CREATE NONCLUSTERED INDEX IX__Auxiliar2 ON #Auxiliar2 (IdRecepcion,Requerimiento) ON [PRIMARY]

INSERT INTO #Auxiliar1 
 SELECT IdRecepcion, '', ''
 FROM #Auxiliar2
 GROUP BY IdRecepcion

/*  CURSOR  */
DECLARE @IdRecepcion int, @Requerimiento varchar(8), @Corte int, @Solicito varchar(50), 
	@P varchar(100), @S varchar(1000)
SET @Corte=0
SET @P=''
SET @S=''
DECLARE Cur CURSOR LOCAL FORWARD_ONLY 
	FOR	SELECT IdRecepcion, Solicito, Requerimiento
		FROM #Auxiliar2
		ORDER BY IdRecepcion
OPEN Cur
FETCH NEXT FROM Cur INTO @IdRecepcion, @Solicito, @Requerimiento
WHILE @@FETCH_STATUS = 0
   BEGIN
	IF @Corte<>@IdRecepcion
	   BEGIN
		IF @Corte<>0
			UPDATE #Auxiliar1
			SET Requerimientos = SUBSTRING(@P,1,100), Solicitantes = SUBSTRING(@S,1,1000)
			WHERE IdRecepcion=@Corte
		SET @P=''
		SET @S=''
		SET @Corte=@IdRecepcion
	   END
	IF NOT @Requerimiento IS NULL
		IF PATINDEX('%'+@Requerimiento+' '+'%', @P)=0
		   BEGIN
			SET @P=@P+@Requerimiento+' '
			SET @S=@S+@Solicito+' '
		   END
	FETCH NEXT FROM Cur INTO @IdRecepcion, @Solicito, @Requerimiento
   END
   IF @Corte<>0
      BEGIN
	UPDATE #Auxiliar1
	SET Requerimientos = SUBSTRING(@P,1,100), Solicitantes = SUBSTRING(@S,1,1000)
	WHERE IdRecepcion=@Corte
      END
CLOSE Cur
DEALLOCATE Cur

SET NOCOUNT OFF

DECLARE @vector_X varchar(30),@vector_T varchar(30)
SET @vector_X='011111111111133'
SET @vector_T='055243539902900'

SELECT 
 Recepciones.IdRecepcion,
 Recepciones.NumeroRecepcionAlmacen as [Nro.recep.alm.],
 Case 	When Recepciones.SubNumero is not null 
	 Then Substring(Substring('0000',1,4-Len(Convert(varchar,Recepciones.NumeroRecepcion1)))+
			Convert(varchar,Recepciones.NumeroRecepcion1)+'-'+
			Substring('00000000',1,8-Len(Convert(varchar,Recepciones.NumeroRecepcion2)))+
			Convert(varchar,Recepciones.NumeroRecepcion2)+'/'+
			Convert(varchar,Recepciones.SubNumero) ,1,20) 
	 Else Substring(Substring('0000',1,4-Len(Convert(varchar,Recepciones.NumeroRecepcion1)))+
			Convert(varchar,Recepciones.NumeroRecepcion1)+'-'+
			Substring('00000000',1,8-Len(Convert(varchar,Recepciones.NumeroRecepcion2)))+
			Convert(varchar,Recepciones.NumeroRecepcion2),1,20) 
 End as [Comprobante],
 Proveedores.RazonSocial as [Proveedor],
 Recepciones.FechaRecepcion as [Fecha],
 Recepciones.Anulada,
 Case 	When Pedidos.SubNumero is not null 
	Then str(Pedidos.NumeroPedido,8)+' / '+str(Pedidos.SubNumero,4)
	Else str(Pedidos.NumeroPedido,8)
 End as [Pedido],
 #Auxiliar1.Requerimientos as [RM's],
 #Auxiliar1.Solicitantes as [Solicitantes RM's],
 Acopios.Nombre as [Nombre LA],
 (Select Top 1 Empleados.Nombre
  from Empleados
  Where Empleados.IdEmpleado=Recepciones.Realizo) as [Realizo],
 Recepciones.Anulada as [Anulada],
 Recepciones.IdRecepcion,
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM Recepciones
LEFT OUTER JOIN Pedidos ON Recepciones.IdPedido = Pedidos.IdPedido
LEFT OUTER JOIN Requerimientos ON Recepciones.IdRequerimiento = Requerimientos.IdRequerimiento
LEFT OUTER JOIN Proveedores ON Recepciones.IdProveedor = Proveedores.IdProveedor
LEFT OUTER JOIN Acopios ON Recepciones.IdAcopio=Acopios.IdAcopio
LEFT OUTER JOIN #Auxiliar1 ON Recepciones.IdRecepcion=#Auxiliar1.IdRecepcion
ORDER BY FechaRecepcion,Proveedores.RazonSocial

DROP TABLE #Auxiliar1
DROP TABLE #Auxiliar2



GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_TT]    Script Date: 03/15/2011 11:49:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO



CREATE  Procedure [dbo].[Recepciones_TX_TT]

@IdRecepcion int

AS 

SET NOCOUNT ON

CREATE TABLE #Auxiliar1 
			(
			 IdRecepcion INTEGER,
			 Solicitantes VARCHAR(1000),
			 Requerimientos VARCHAR(100)
			)

CREATE TABLE #Auxiliar2 
			(
			 IdRecepcion INTEGER,
			 Solicito VARCHAR(50),
			 Requerimiento VARCHAR(8)
			)
INSERT INTO #Auxiliar2 
 SELECT DetRec.IdRecepcion, Empleados.Nombre, 
	Substring('00000000',1,8-Len(Convert(varchar,Requerimientos.NumeroRequerimiento)))+
			Convert(varchar,Requerimientos.NumeroRequerimiento)
 FROM DetalleRecepciones DetRec
 LEFT OUTER JOIN Recepciones ON DetRec.IdRecepcion = Recepciones.IdRecepcion
 LEFT OUTER JOIN DetalleRequerimientos DetReq ON DetReq.IdDetalleRequerimiento = DetRec.IdDetalleRequerimiento
 LEFT OUTER JOIN Requerimientos ON Requerimientos.IdRequerimiento = DetReq.IdRequerimiento
 LEFT OUTER JOIN Empleados ON Empleados.IdEmpleado = Requerimientos.IdSolicito
 WHERE (DetRec.IdRecepcion=@IdRecepcion)

CREATE NONCLUSTERED INDEX IX__Auxiliar2 ON #Auxiliar2 (IdRecepcion,Requerimiento) ON [PRIMARY]

INSERT INTO #Auxiliar1 
 SELECT IdRecepcion, '', ''
 FROM #Auxiliar2
 GROUP BY IdRecepcion

/*  CURSOR  */
DECLARE @IdRecepcion1 int, @Requerimiento varchar(8), @Corte int, @Solicito varchar(50), 
	@P varchar(100), @S varchar(1000)
SET @Corte=0
SET @P=''
SET @S=''
DECLARE Cur CURSOR LOCAL FORWARD_ONLY 
	FOR	SELECT IdRecepcion, Solicito, Requerimiento
		FROM #Auxiliar2
		ORDER BY IdRecepcion
OPEN Cur
FETCH NEXT FROM Cur INTO @IdRecepcion1, @Solicito, @Requerimiento
WHILE @@FETCH_STATUS = 0
   BEGIN
	IF @Corte<>@IdRecepcion1
	   BEGIN
		IF @Corte<>0
			UPDATE #Auxiliar1
			SET Requerimientos = SUBSTRING(@P,1,100), Solicitantes = SUBSTRING(@S,1,1000)
			WHERE IdRecepcion=@Corte
		SET @P=''
		SET @S=''
		SET @Corte=@IdRecepcion1
	   END
	IF NOT @Requerimiento IS NULL
		IF PATINDEX('%'+@Requerimiento+' '+'%', @P)=0
		   BEGIN
			SET @P=@P+@Requerimiento+' '
			SET @S=@S+@Solicito+' '
		   END
	FETCH NEXT FROM Cur INTO @IdRecepcion1, @Solicito, @Requerimiento
   END
   IF @Corte<>0
      BEGIN
	UPDATE #Auxiliar1
	SET Requerimientos = SUBSTRING(@P,1,100), Solicitantes = SUBSTRING(@S,1,1000)
	WHERE IdRecepcion=@Corte
      END
CLOSE Cur
DEALLOCATE Cur


/* PEDIDOS */
CREATE TABLE #Auxiliar4 
			(
			 IdRecepcion INTEGER,
			 Pedidos VARCHAR(100)
			)

CREATE TABLE #Auxiliar5 
			(
			 IdRecepcion INTEGER,
			 Pedido VARCHAR(15)
			)
INSERT INTO #Auxiliar5 
 SELECT DetRec.IdRecepcion, 
	Convert(varchar,Pedidos.NumeroPedido)+
		Case When Pedidos.Subnumero is not null
			Then '/'+Convert(varchar,Pedidos.Subnumero)
			Else ''
		End
 FROM DetalleRecepciones DetRec
 LEFT OUTER JOIN Recepciones ON DetRec.IdRecepcion = Recepciones.IdRecepcion
 LEFT OUTER JOIN DetallePedidos ON DetRec.IdDetallePedido = DetallePedidos.IdDetallePedido
 LEFT OUTER JOIN Pedidos ON DetallePedidos.IdPedido = Pedidos.IdPedido
 WHERE (DetRec.IdRecepcion=@IdRecepcion)

 UNION ALL

 SELECT DetRec.IdRecepcion, 
	Convert(varchar,Ped.NumeroPedido)+
		Case When Ped.Subnumero is not null
			Then '/'+Convert(varchar,Ped.Subnumero)
			Else ''
		End+' P'
 FROM DetalleRecepciones DetRec
 LEFT OUTER JOIN Recepciones ON DetRec.IdRecepcion = Recepciones.IdRecepcion
 LEFT OUTER JOIN DetallePedidosPRONTO DetPed ON DetRec.IdDetalleRequerimiento = DetPed.IdDetalleRequerimiento
 LEFT OUTER JOIN PedidosPRONTO Ped ON DetPed.IdPedido = Ped.IdPedido
 WHERE (DetRec.IdRecepcion=@IdRecepcion)

CREATE NONCLUSTERED INDEX IX__Auxiliar5 ON #Auxiliar5 (IdRecepcion,Pedido) ON [PRIMARY]

INSERT INTO #Auxiliar4 
 SELECT IdRecepcion, ''
 FROM #Auxiliar5
 GROUP BY IdRecepcion

/*  CURSOR  */
DECLARE @Presupuesto varchar(13), @Pedido varchar(15)
SET @Corte=0
SET @P=''
DECLARE Cur CURSOR LOCAL FORWARD_ONLY 
	FOR	SELECT IdRecepcion, Pedido
		FROM #Auxiliar5
		ORDER BY IdRecepcion
OPEN Cur
FETCH NEXT FROM Cur INTO @IdRecepcion1, @Pedido
WHILE @@FETCH_STATUS = 0
 BEGIN
	IF @Corte<>@IdRecepcion1
	 BEGIN
		IF @Corte<>0
		 BEGIN
			UPDATE #Auxiliar4
			SET Pedidos = SUBSTRING(@P,1,100)
			WHERE #Auxiliar4.IdRecepcion=@Corte
		 END
		SET @P=''
		SET @Corte=@IdRecepcion1
	 END
	IF NOT @Pedido IS NULL
		IF PATINDEX('%['+@Pedido+']%', @P)=0
			SET @P=@P+'['+@Pedido+'] '
	FETCH NEXT FROM Cur INTO @IdRecepcion1, @Pedido
 END
 IF @Corte<>0
  BEGIN
	UPDATE #Auxiliar4
	SET Pedidos = SUBSTRING(@P,1,100)
	WHERE #Auxiliar4.IdRecepcion=@Corte
  END
CLOSE Cur
DEALLOCATE Cur

SET NOCOUNT OFF

DECLARE @vector_X varchar(30),@vector_T varchar(30)
SET @vector_X='011111111111133'
SET @vector_T='055243EFA9029300'

SELECT 
 Recepciones.IdRecepcion,
 Recepciones.NumeroRecepcionAlmacen as [Nro.recep.alm.],
 Case 	When Recepciones.SubNumero is not null 
	 Then Substring(Substring('0000',1,4-Len(Convert(varchar,Recepciones.NumeroRecepcion1)))+
			Convert(varchar,Recepciones.NumeroRecepcion1)+'-'+
			Substring('00000000',1,8-Len(Convert(varchar,Recepciones.NumeroRecepcion2)))+
			Convert(varchar,Recepciones.NumeroRecepcion2)+'/'+
			Convert(varchar,Recepciones.SubNumero) ,1,20) 
	 Else Substring(Substring('0000',1,4-Len(Convert(varchar,Recepciones.NumeroRecepcion1)))+
			Convert(varchar,Recepciones.NumeroRecepcion1)+'-'+
			Substring('00000000',1,8-Len(Convert(varchar,Recepciones.NumeroRecepcion2)))+
			Convert(varchar,Recepciones.NumeroRecepcion2),1,20) 
 End as [Comprobante],
 Proveedores.RazonSocial as [Proveedor],
 Recepciones.FechaRecepcion as [Fecha],
 Recepciones.Anulada,
 #Auxiliar4.Pedidos as [Pedidos],
 #Auxiliar1.Requerimientos as [RM's],
 #Auxiliar1.Solicitantes as [Solicitantes RM's],
 Null as [Nombre LA],
 (Select Top 1 Empleados.Nombre
  from Empleados
  Where Empleados.IdEmpleado=Recepciones.Realizo) as [Realizo],
 Recepciones.Anulada as [Anulada],
 Recepciones.IdRecepcion,
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM Recepciones
LEFT OUTER JOIN Requerimientos ON Recepciones.IdRequerimiento = Requerimientos.IdRequerimiento
LEFT OUTER JOIN Proveedores ON Recepciones.IdProveedor = Proveedores.IdProveedor
LEFT OUTER JOIN #Auxiliar1 ON Recepciones.IdRecepcion=#Auxiliar1.IdRecepcion
LEFT OUTER JOIN #Auxiliar4 ON Recepciones.IdRecepcion=#Auxiliar4.IdRecepcion
WHERE (Recepciones.IdRecepcion=@IdRecepcion)

DROP TABLE #Auxiliar1
DROP TABLE #Auxiliar2
DROP TABLE #Auxiliar4
DROP TABLE #Auxiliar5


GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_Ultimos3Meses]    Script Date: 03/15/2011 11:49:04 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE  Procedure [dbo].[Recepciones_TX_Ultimos3Meses]

@Desde datetime

AS 

SET NOCOUNT ON

CREATE TABLE #Auxiliar1 
			(
			 IdRecepcion INTEGER,
			 Solicitantes VARCHAR(1000),
			 Requerimientos VARCHAR(100)
			)

CREATE TABLE #Auxiliar2 
			(
			 IdRecepcion INTEGER,
			 Solicito VARCHAR(50),
			 Requerimiento INTEGER
			)
INSERT INTO #Auxiliar2 
 SELECT DetRec.IdRecepcion, Empleados.Nombre, Requerimientos.NumeroRequerimiento
 FROM DetalleRecepciones DetRec
 LEFT OUTER JOIN Recepciones ON Recepciones.IdRecepcion = DetRec.IdRecepcion
 LEFT OUTER JOIN DetalleRequerimientos DetReq ON DetReq.IdDetalleRequerimiento = DetRec.IdDetalleRequerimiento
 LEFT OUTER JOIN Requerimientos ON Requerimientos.IdRequerimiento = DetReq.IdRequerimiento
 LEFT OUTER JOIN Empleados ON Empleados.IdEmpleado = Requerimientos.IdSolicito
 WHERE Recepciones.FechaRecepcion>=@Desde

CREATE NONCLUSTERED INDEX IX__Auxiliar2 ON #Auxiliar2 (IdRecepcion,Requerimiento) ON [PRIMARY]

INSERT INTO #Auxiliar1 
 SELECT IdRecepcion, '', ''
 FROM #Auxiliar2
 GROUP BY IdRecepcion

/*  CURSOR  */
DECLARE @IdRecepcion int, @Requerimiento int, @Corte int, @Solicito varchar(50), @P varchar(100), @S varchar(1000)
SET @Corte=0
SET @P=''
SET @S=''
DECLARE Cur CURSOR LOCAL FORWARD_ONLY 
	FOR	SELECT IdRecepcion, Solicito, Requerimiento
		FROM #Auxiliar2
		ORDER BY IdRecepcion
OPEN Cur
FETCH NEXT FROM Cur INTO @IdRecepcion, @Solicito, @Requerimiento
WHILE @@FETCH_STATUS = 0
   BEGIN
	IF @Corte<>@IdRecepcion
	   BEGIN
		IF @Corte<>0
			UPDATE #Auxiliar1
			SET Requerimientos = SUBSTRING(@P,1,100), Solicitantes = SUBSTRING(@S,1,1000)
			WHERE IdRecepcion=@Corte
		SET @P=''
		SET @S=''
		SET @Corte=@IdRecepcion
	   END
	IF NOT @Requerimiento IS NULL
		IF PATINDEX('%['+Convert(varchar,@Requerimiento)+']'+'%', @P)=0
		   BEGIN
			SET @P=@P+'['+Convert(varchar,@Requerimiento)+'] '
			SET @S=@S+@Solicito+' '
		   END
	FETCH NEXT FROM Cur INTO @IdRecepcion, @Solicito, @Requerimiento
   END
   IF @Corte<>0
      BEGIN
	UPDATE #Auxiliar1
	SET Requerimientos = SUBSTRING(@P,1,100), Solicitantes = SUBSTRING(@S,1,1000)
	WHERE IdRecepcion=@Corte
      END
CLOSE Cur
DEALLOCATE Cur


/* PEDIDOS */
CREATE TABLE #Auxiliar4 
			(
			 IdRecepcion INTEGER,
			 Pedidos VARCHAR(100)
			)

CREATE TABLE #Auxiliar5 
			(
			 IdRecepcion INTEGER,
			 Pedido VARCHAR(15)
			)
INSERT INTO #Auxiliar5 
 SELECT DetRec.IdRecepcion, 
	Convert(varchar,Pedidos.NumeroPedido)+
		Case When Pedidos.Subnumero is not null
			Then '/'+Convert(varchar,Pedidos.Subnumero)
			Else ''
		End
 FROM DetalleRecepciones DetRec
 LEFT OUTER JOIN Recepciones ON Recepciones.IdRecepcion = DetRec.IdRecepcion
 LEFT OUTER JOIN DetallePedidos ON DetRec.IdDetallePedido = DetallePedidos.IdDetallePedido
 LEFT OUTER JOIN Pedidos ON DetallePedidos.IdPedido = Pedidos.IdPedido
 WHERE Recepciones.FechaRecepcion>=@Desde

 UNION ALL

 SELECT DetRec.IdRecepcion, 
	Convert(varchar,Ped.NumeroPedido)+
		Case When Ped.Subnumero is not null
			Then '/'+Convert(varchar,Ped.Subnumero)
			Else ''
		End+' P'
 FROM DetalleRecepciones DetRec
 LEFT OUTER JOIN Recepciones ON Recepciones.IdRecepcion = DetRec.IdRecepcion
 LEFT OUTER JOIN DetallePedidosPRONTO DetPed ON DetRec.IdDetalleRequerimiento = DetPed.IdDetalleRequerimiento
 LEFT OUTER JOIN PedidosPRONTO Ped ON DetPed.IdPedido = Ped.IdPedido
 WHERE Recepciones.FechaRecepcion>=@Desde

CREATE NONCLUSTERED INDEX IX__Auxiliar5 ON #Auxiliar5 (IdRecepcion,Pedido) ON [PRIMARY]

INSERT INTO #Auxiliar4 
 SELECT IdRecepcion, ''
 FROM #Auxiliar5
 GROUP BY IdRecepcion

/*  CURSOR  */
DECLARE @Presupuesto varchar(13), @Pedido varchar(15)
SET @Corte=0
SET @P=''
DECLARE Cur CURSOR LOCAL FORWARD_ONLY 
	FOR	SELECT IdRecepcion, Pedido
		FROM #Auxiliar5
		ORDER BY IdRecepcion
OPEN Cur
FETCH NEXT FROM Cur INTO @IdRecepcion, @Pedido
WHILE @@FETCH_STATUS = 0
 BEGIN
	IF @Corte<>@IdRecepcion
	 BEGIN
		IF @Corte<>0
		 BEGIN
			UPDATE #Auxiliar4
			SET Pedidos = SUBSTRING(@P,1,100)
			WHERE #Auxiliar4.IdRecepcion=@Corte
		 END
		SET @P=''
		SET @Corte=@IdRecepcion
	 END
	IF NOT @Pedido IS NULL
		IF PATINDEX('%['+@Pedido+']%', @P)=0
			SET @P=@P+'['+@Pedido+'] '
	FETCH NEXT FROM Cur INTO @IdRecepcion, @Pedido
 END
 IF @Corte<>0
  BEGIN
	UPDATE #Auxiliar4
	SET Pedidos = SUBSTRING(@P,1,100)
	WHERE #Auxiliar4.IdRecepcion=@Corte
  END
CLOSE Cur
DEALLOCATE Cur

SET NOCOUNT OFF

DECLARE @vector_X varchar(30),@vector_T varchar(30)
SET @vector_X='0111111111111133'
SET @vector_T='055243EFA9029300'

SELECT 
 Recepciones.IdRecepcion,
 Recepciones.NumeroRecepcionAlmacen as [Nro.recep.alm.],
 Case 	When Recepciones.SubNumero is not null 
	 Then Substring(Substring('0000',1,4-Len(Convert(varchar,Recepciones.NumeroRecepcion1)))+
			Convert(varchar,Recepciones.NumeroRecepcion1)+'-'+
			Substring('00000000',1,8-Len(Convert(varchar,Recepciones.NumeroRecepcion2)))+
			Convert(varchar,Recepciones.NumeroRecepcion2)+'/'+
			Convert(varchar,Recepciones.SubNumero) ,1,20) 
	 Else Substring(Substring('0000',1,4-Len(Convert(varchar,Recepciones.NumeroRecepcion1)))+
			Convert(varchar,Recepciones.NumeroRecepcion1)+'-'+
			Substring('00000000',1,8-Len(Convert(varchar,Recepciones.NumeroRecepcion2)))+
			Convert(varchar,Recepciones.NumeroRecepcion2),1,20) 
 End as [Comprobante],
 Proveedores.RazonSocial as [Proveedor],
 Recepciones.FechaRecepcion as [Fecha],
 Recepciones.Anulada,
 #Auxiliar4.Pedidos as [Pedidos],
 #Auxiliar1.Requerimientos as [RM's],
 #Auxiliar1.Solicitantes as [Solicitantes RM's],
 Null as [Nombre LA],
 (Select Top 1 Empleados.Nombre
  from Empleados
  Where Empleados.IdEmpleado=Recepciones.Realizo) as [Realizo],
 Recepciones.Anulada as [Anulada],
 Recepciones.IdRecepcion,
 Recepciones.Observaciones,
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM Recepciones
LEFT OUTER JOIN Requerimientos ON Recepciones.IdRequerimiento = Requerimientos.IdRequerimiento
LEFT OUTER JOIN Proveedores ON Recepciones.IdProveedor = Proveedores.IdProveedor
LEFT OUTER JOIN #Auxiliar1 ON Recepciones.IdRecepcion=#Auxiliar1.IdRecepcion
LEFT OUTER JOIN #Auxiliar4 ON Recepciones.IdRecepcion=#Auxiliar4.IdRecepcion
WHERE Recepciones.FechaRecepcion>=@Desde
ORDER BY Recepciones.FechaRecepcion, Proveedores.RazonSocial

DROP TABLE #Auxiliar1
DROP TABLE #Auxiliar2
DROP TABLE #Auxiliar4
DROP TABLE #Auxiliar5



GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_xNro]    Script Date: 03/15/2011 11:49:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE Procedure [dbo].[Recepciones_TX_xNro]

@Numero1 int,
@Numero2 int,
@Prov int

AS 

SELECT * 
FROM Recepciones
WHERE NumeroRecepcion1=@Numero1 and NumeroRecepcion2=@Numero2 and IdProveedor=@Prov
ORDER By SubNumero

GO

/****** Object:  StoredProcedure [dbo].[Recepciones_TX_xNroLetra]    Script Date: 03/15/2011 11:49:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE Procedure [dbo].[Recepciones_TX_xNroLetra]

@Numero1 int,
@Numero2 int,
@Prov int

AS 

SELECT * 
FROM Recepciones
WHERE NumeroRecepcion1=@Numero1 and NumeroRecepcion2=@Numero2  and IdProveedor=@Prov

GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_A]    Script Date: 03/15/2011 11:49:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE Procedure [dbo].[Requerimientos_A]
@IdRequerimiento int  output,
@NumeroRequerimiento int,
@FechaRequerimiento datetime,
@LugarEntrega ntext,
@Observaciones ntext,
@IdObra int,
@IdCentroCosto int,
@IdSolicito int,
@IdSector int,
@MontoPrevisto numeric(12,2),
@IdComprador int,
@Aprobo int,
@FechaAprobacion datetime,
@MontoParaCompra numeric(12,2),
@Cumplido varchar(2),
@Consorcial varchar(2),
@UsuarioAnulacion varchar(6),
@FechaAnulacion datetime,
@MotivoAnulacion ntext,
@EnviarEmail tinyint,
@IdRequerimientoOriginal int,
@IdOrigenTransmision int,
@IdAutorizoCumplido int,
@IdDioPorCumplido int,
@FechaDadoPorCumplido datetime,
@ObservacionesCumplido ntext,
@IdMoneda int,
@Detalle varchar(50),
@DirectoACompras varchar(2),
@IdAutorizoDirectoACompras int,
@PRESTOContrato varchar(13),
@Confirmado varchar(2),
@FechaImportacionTransmision datetime,
@IdImporto int,
@FechaLlegadaImportacion datetime,
@TipoRM varchar(2),
@TipoRequerimiento varchar(2),
@Recepcionado varchar(2)
AS 
INSERT INTO Requerimientos
(
 NumeroRequerimiento,
 FechaRequerimiento,
 LugarEntrega,
 Observaciones,
 IdObra,
 IdCentroCosto,
 IdSolicito,
 IdSector,
 MontoPrevisto,
 IdComprador,
 Aprobo,
 FechaAprobacion,
 MontoParaCompra,
 Cumplido,
 Consorcial,
 UsuarioAnulacion,
 FechaAnulacion,
 MotivoAnulacion,
 EnviarEmail,
 IdRequerimientoOriginal,
 IdOrigenTransmision,
 IdAutorizoCumplido,
 IdDioPorCumplido,
 FechaDadoPorCumplido,
 ObservacionesCumplido,
 IdMoneda,
 Detalle,
 DirectoACompras,
 IdAutorizoDirectoACompras,
 PRESTOContrato,
 Confirmado,
 FechaImportacionTransmision,
 IdImporto,
 FechaLlegadaImportacion,
 TipoRM,
 TipoRequerimiento,
 Recepcionado
)
VALUES 
(
 @NumeroRequerimiento,
 @FechaRequerimiento,
 @LugarEntrega,
 @Observaciones,
 @IdObra,
 @IdCentroCosto,
 @IdSolicito,
 @IdSector,
 @MontoPrevisto,
 @IdComprador,
 @Aprobo,
 @FechaAprobacion,
 @MontoParaCompra,
 @Cumplido,
 @Consorcial,
 @UsuarioAnulacion,
 @FechaAnulacion,
 @MotivoAnulacion,
 @EnviarEmail,
 @IdRequerimientoOriginal,
 @IdOrigenTransmision,
 @IdAutorizoCumplido,
 @IdDioPorCumplido,
 @FechaDadoPorCumplido,
 @ObservacionesCumplido,
 @IdMoneda,
 @Detalle,
 @DirectoACompras,
 @IdAutorizoDirectoACompras,
 @PRESTOContrato,
 @Confirmado,
 @FechaImportacionTransmision,
 @IdImporto,
 @FechaLlegadaImportacion,
 @TipoRM,
 @TipoRequerimiento,
 @Recepcionado
)
SELECT @IdRequerimiento=@@identity
RETURN(@IdRequerimiento)



GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_ActualizarDetalles]    Script Date: 03/15/2011 11:49:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[Requerimientos_ActualizarDetalles]
@IdRequerimientoOriginal int,
@IdOrigenTransmision int
As
Update DetalleRequerimientos
SET 
IdRequerimiento=(Select Top 1 Req.IdRequerimiento From Requerimientos Req 
		 Where 	Req.IdRequerimientoOriginal=@IdRequerimientoOriginal and 
			Req.IdOrigenTransmision=@IdOrigenTransmision)
Where 	IdRequerimientoOriginal=@IdRequerimientoOriginal and 
	IdOrigenTransmision=@IdOrigenTransmision
































GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_ActualizarEstado]    Script Date: 03/15/2011 11:49:05 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE PROCEDURE [dbo].[Requerimientos_ActualizarEstado]

@IdRequerimiento int,
@IdDetalleRequerimiento int

AS

IF @IdDetalleRequerimiento>0
	SET @IdRequerimiento=IsNull((Select Top 1 DetReq.IdRequerimiento
					From DetalleRequerimientos DetReq
					Where DetReq.IdDetalleRequerimiento=@IdDetalleRequerimiento),0)

UPDATE Requerimientos
SET Cumplido=Null
WHERE Requerimientos.IdRequerimiento=@IdRequerimiento  

UPDATE Requerimientos
SET Cumplido='SI'
WHERE Requerimientos.IdRequerimiento=@IdRequerimiento and 
	not exists(Select Top 1 DetReq.IdRequerimiento
			From DetalleRequerimientos DetReq
			Where DetReq.IdRequerimiento=@IdRequerimiento and 
				(IsNull(DetReq.Cumplido,'NO')='NO' or IsNull(DetReq.Cumplido,'NO')='PA'))
UPDATE Requerimientos
SET Cumplido='AN'
WHERE Requerimientos.IdRequerimiento=@IdRequerimiento and 
	not exists(Select Top 1 DetReq.IdRequerimiento
			From DetalleRequerimientos DetReq
			Where DetReq.IdRequerimiento=@IdRequerimiento and IsNull(DetReq.Cumplido,'NO')<>'AN')



GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_E]    Script Date: 03/15/2011 11:49:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[Requerimientos_E]
@IdRequerimiento int  AS 
Delete Requerimientos
where (IdRequerimiento=@IdRequerimiento)
































GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_M]    Script Date: 03/15/2011 11:49:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE Procedure [dbo].[Requerimientos_M]
@IdRequerimiento int,
@NumeroRequerimiento int,
@FechaRequerimiento datetime,
@LugarEntrega ntext,
@Observaciones ntext,
@IdObra int,
@IdCentroCosto int,
@IdSolicito int,
@IdSector int,
@MontoPrevisto numeric(12,2),
@IdComprador int,
@Aprobo int,
@FechaAprobacion datetime,
@MontoParaCompra numeric(12,2),
@Cumplido varchar(2),
@Consorcial varchar(2),
@UsuarioAnulacion varchar(6),
@FechaAnulacion datetime,
@MotivoAnulacion ntext,
@EnviarEmail tinyint,
@IdRequerimientoOriginal int,
@IdOrigenTransmision int,
@IdAutorizoCumplido int,
@IdDioPorCumplido int,
@FechaDadoPorCumplido datetime,
@ObservacionesCumplido ntext,
@IdMoneda int,
@Detalle varchar(50),
@DirectoACompras varchar(2),
@IdAutorizoDirectoACompras int,
@PRESTOContrato varchar(13),
@Confirmado varchar(2),
@FechaImportacionTransmision datetime,
@IdImporto int,
@FechaLlegadaImportacion datetime,
@TipoRM varchar(2),
@TipoRequerimiento varchar(2),
@Recepcionado varchar(2)
AS
UPDATE Requerimientos
SET 
 NumeroRequerimiento=@NumeroRequerimiento,
 FechaRequerimiento=@FechaRequerimiento,
 LugarEntrega=@LugarEntrega,
 Observaciones=@Observaciones,
 IdObra=@IdObra,
 IdCentroCosto=@IdCentroCosto,
 IdSolicito=@IdSolicito,
 IdSector=@IdSector,
 MontoPrevisto=@MontoPrevisto,
 IdComprador=@IdComprador,
 Aprobo=@Aprobo,
 FechaAprobacion=@FechaAprobacion,
 MontoParaCompra=@MontoParaCompra,
 Cumplido=@Cumplido,
 Consorcial=@Consorcial,
 UsuarioAnulacion=@UsuarioAnulacion,
 FechaAnulacion=@FechaAnulacion,
 MotivoAnulacion=@MotivoAnulacion,
 EnviarEmail=@EnviarEmail,
 IdRequerimientoOriginal=@IdRequerimientoOriginal,
 IdOrigenTransmision=@IdOrigenTransmision,
 IdAutorizoCumplido=@IdAutorizoCumplido,
 IdDioPorCumplido=@IdDioPorCumplido,
 FechaDadoPorCumplido=@FechaDadoPorCumplido,
 ObservacionesCumplido=@ObservacionesCumplido,
 IdMoneda=@IdMoneda,
 Detalle=@Detalle,
 DirectoACompras=@DirectoACompras,
 IdAutorizoDirectoACompras=@IdAutorizoDirectoACompras,
 PRESTOContrato=@PRESTOContrato,
 Confirmado=@Confirmado,
 FechaImportacionTransmision=@FechaImportacionTransmision,
 IdImporto=@IdImporto,
 FechaLlegadaImportacion=@FechaLlegadaImportacion,
 TipoRM=@TipoRM,
 TipoRequerimiento=@TipoRequerimiento,
 Recepcionado=@Recepcionado
WHERE (IdRequerimiento=@IdRequerimiento)
RETURN(@IdRequerimiento)



GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_T]    Script Date: 03/15/2011 11:49:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[Requerimientos_T]
@IdRequerimiento int
AS 
SELECT * 
FROM Requerimientos
WHERE (IdRequerimiento=@IdRequerimiento)
































GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TT]    Script Date: 03/15/2011 11:49:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE  Procedure [dbo].[Requerimientos_TT]

AS 

SET NOCOUNT ON

DECLARE @ActivarSolicitudMateriales varchar(2)
SET @ActivarSolicitudMateriales=IsNull((Select Top 1 P.ActivarSolicitudMateriales 
					From Parametros P Where P.IdParametro=1),'NO')

/* PEDIDOS */
CREATE TABLE #Auxiliar4 
			(
			 IdRequerimiento INTEGER,
			 Pedidos VARCHAR(100)
			)

CREATE TABLE #Auxiliar5 
			(
			 IdRequerimiento INTEGER,
			 Pedido VARCHAR(15)
			)
INSERT INTO #Auxiliar5 
 SELECT 
  DetReq.IdRequerimiento,
  Convert(varchar,Pedidos.NumeroPedido)+
	Case When Pedidos.Subnumero is not null
		Then '/'+Convert(varchar,Pedidos.Subnumero)
		Else ''
	End
 FROM DetalleRequerimientos DetReq
 LEFT OUTER JOIN DetallePedidos ON DetReq.IdDetalleRequerimiento = DetallePedidos.IdDetalleRequerimiento
 LEFT OUTER JOIN Pedidos ON DetallePedidos.IdPedido = Pedidos.IdPedido

 UNION ALL

 SELECT 
  DetReq.IdRequerimiento,
  Convert(varchar,Ped.NumeroPedido)+
	Case When Ped.Subnumero is not null
		Then '/'+Convert(varchar,Ped.Subnumero)
		Else ''
	End+' P'
 FROM DetalleRequerimientos DetReq
 LEFT OUTER JOIN DetallePedidosPRONTO DetPed ON DetReq.IdDetalleRequerimiento = DetPed.IdDetalleRequerimiento
 LEFT OUTER JOIN PedidosPRONTO Ped ON DetPed.IdPedido = Ped.IdPedido

CREATE NONCLUSTERED INDEX IX__Auxiliar5 ON #Auxiliar5 (IdRequerimiento,Pedido) ON [PRIMARY]

INSERT INTO #Auxiliar4 
 SELECT 
  IdRequerimiento,
  ''
 FROM #Auxiliar5
 GROUP BY IdRequerimiento

/*  CURSOR  */
DECLARE @IdRequerimiento int, @Presupuesto varchar(13), @P varchar(100), @Corte int, @Pedido varchar(15)
SET @Corte=0
SET @P=''
DECLARE Cur CURSOR LOCAL FORWARD_ONLY 
	FOR	SELECT IdRequerimiento, Pedido
		FROM #Auxiliar5
		ORDER BY IdRequerimiento
OPEN Cur
FETCH NEXT FROM Cur INTO @IdRequerimiento, @Pedido
WHILE @@FETCH_STATUS = 0
 BEGIN
	IF @Corte<>@IdRequerimiento
	 BEGIN
		IF @Corte<>0
		 BEGIN
			UPDATE #Auxiliar4
			SET Pedidos = SUBSTRING(@P,1,100)
			WHERE #Auxiliar4.IdRequerimiento=@Corte
		 END
		SET @P=''
		SET @Corte=@IdRequerimiento
	 END
	IF NOT @Pedido IS NULL
		IF PATINDEX('%['+@Pedido+']%', @P)=0
			SET @P=@P+'['+@Pedido+'] '
	FETCH NEXT FROM Cur INTO @IdRequerimiento, @Pedido
 END
 IF @Corte<>0
  BEGIN
	UPDATE #Auxiliar4
	SET Pedidos = SUBSTRING(@P,1,100)
	WHERE #Auxiliar4.IdRequerimiento=@Corte
  END
CLOSE Cur
DEALLOCATE Cur

/* RECEPCION DE MATERIALES */
CREATE TABLE #Auxiliar6 
			(
			 IdRequerimiento INTEGER,
			 Recepciones VARCHAR(100)
			)

CREATE TABLE #Auxiliar7 
			(
			 IdRequerimiento INTEGER,
			 Recepcion VARCHAR(20)
			)
INSERT INTO #Auxiliar7 
 SELECT 
  DetReq.IdRequerimiento,
  Case When Recepciones.SubNumero is not null 
	 Then Substring(Substring('0000',1,4-Len(Convert(varchar,Recepciones.NumeroRecepcion1)))+
			Convert(varchar,Recepciones.NumeroRecepcion1)+'-'+
			Substring('00000000',1,8-Len(Convert(varchar,Recepciones.NumeroRecepcion2)))+
			Convert(varchar,Recepciones.NumeroRecepcion2)+'/'+
			Convert(varchar,Recepciones.SubNumero) ,1,20) 
	 Else Substring(Substring('0000',1,4-Len(Convert(varchar,Recepciones.NumeroRecepcion1)))+
			Convert(varchar,Recepciones.NumeroRecepcion1)+'-'+
			Substring('00000000',1,8-Len(Convert(varchar,Recepciones.NumeroRecepcion2)))+
			Convert(varchar,Recepciones.NumeroRecepcion2),1,20) 
  End
 FROM DetalleRequerimientos DetReq
 LEFT OUTER JOIN DetalleRecepciones ON DetReq.IdDetalleRequerimiento = DetalleRecepciones.IdDetalleRequerimiento
 LEFT OUTER JOIN Recepciones ON DetalleRecepciones.IdRecepcion = Recepciones.IdRecepcion

CREATE NONCLUSTERED INDEX IX__Auxiliar7 ON #Auxiliar7 (IdRequerimiento,Recepcion) ON [PRIMARY]

INSERT INTO #Auxiliar6 
 SELECT IdRequerimiento, ''
 FROM #Auxiliar7
 GROUP BY IdRequerimiento

/*  CURSOR  */
DECLARE @Recepcion varchar(20)
SET @Corte=0
SET @P=''
DECLARE Cur CURSOR LOCAL FORWARD_ONLY 
	FOR	SELECT IdRequerimiento, Recepcion
		FROM #Auxiliar7
		ORDER BY IdRequerimiento
OPEN Cur
FETCH NEXT FROM Cur INTO @IdRequerimiento, @Recepcion
WHILE @@FETCH_STATUS = 0
   BEGIN
	IF @Corte<>@IdRequerimiento
	   BEGIN
		IF @Corte<>0
		   BEGIN
			UPDATE #Auxiliar6
			SET Recepciones = SUBSTRING(@P,1,100)
			WHERE IdRequerimiento=@Corte
		   END
		SET @P=''
		SET @Corte=@IdRequerimiento
	   END
	IF NOT @Recepcion IS NULL
		IF PATINDEX('%'+@Recepcion+' '+'%', @P)=0
			SET @P=@P+@Recepcion+' '
	FETCH NEXT FROM Cur INTO @IdRequerimiento, @Recepcion
   END
   IF @Corte<>0
      BEGIN
	UPDATE #Auxiliar6
	SET Recepciones = SUBSTRING(@P,1,100)
	WHERE IdRequerimiento=@Corte
      END
CLOSE Cur
DEALLOCATE Cur


/* SALIDAS DE MATERIALES */
CREATE TABLE #Auxiliar8 
			(
			 IdRequerimiento INTEGER,
			 Salidas VARCHAR(100)
			)

CREATE TABLE #Auxiliar9 
			(
			 IdRequerimiento INTEGER,
			 Salida VARCHAR(13)
			)
INSERT INTO #Auxiliar9 
 SELECT 
  DetReq.IdRequerimiento,
  Substring(Substring('0000',1,4-Len(Convert(varchar,IsNull(SalidasMateriales.NumeroSalidaMateriales2,0))))+
	Convert(varchar,IsNull(SalidasMateriales.NumeroSalidaMateriales2,0))+'-'+
	Substring('00000000',1,8-Len(Convert(varchar,SalidasMateriales.NumeroSalidaMateriales)))+
	Convert(varchar,SalidasMateriales.NumeroSalidaMateriales),1,13)
 FROM DetalleRequerimientos DetReq
 LEFT OUTER JOIN DetalleValesSalida ON DetReq.IdDetalleRequerimiento = DetalleValesSalida.IdDetalleRequerimiento
 LEFT OUTER JOIN DetalleSalidasMateriales ON DetalleValesSalida.IdDetalleValeSalida = DetalleSalidasMateriales.IdDetalleValeSalida
 LEFT OUTER JOIN SalidasMateriales ON DetalleSalidasMateriales.IdSalidaMateriales = SalidasMateriales.IdSalidaMateriales

CREATE NONCLUSTERED INDEX IX__Auxiliar9 ON #Auxiliar9 (IdRequerimiento,Salida) ON [PRIMARY]

INSERT INTO #Auxiliar8 
 SELECT IdRequerimiento, ''
 FROM #Auxiliar9
 GROUP BY IdRequerimiento

/*  CURSOR  */
DECLARE @Salida varchar(13)
SET @Corte=0
SET @P=''
DECLARE Cur CURSOR LOCAL FORWARD_ONLY 
	FOR	SELECT IdRequerimiento, Salida
		FROM #Auxiliar9
		ORDER BY IdRequerimiento
OPEN Cur
FETCH NEXT FROM Cur INTO @IdRequerimiento, @Salida
WHILE @@FETCH_STATUS = 0
   BEGIN
	IF @Corte<>@IdRequerimiento
	   BEGIN
		IF @Corte<>0
		   BEGIN
			UPDATE #Auxiliar8
			SET Salidas = SUBSTRING(@P,1,100)
			WHERE IdRequerimiento=@Corte
		   END
		SET @P=''
		SET @Corte=@IdRequerimiento
	   END
	IF NOT @Salida IS NULL
		IF PATINDEX('%'+@Salida+' '+'%', @P)=0
			SET @P=@P+@Salida+' '
	FETCH NEXT FROM Cur INTO @IdRequerimiento, @Salida
   END
   IF @Corte<>0
      BEGIN
	UPDATE #Auxiliar8
	SET Salidas = SUBSTRING(@P,1,100)
	WHERE IdRequerimiento=@Corte
      END
CLOSE Cur
DEALLOCATE Cur

SET NOCOUNT OFF

DECLARE @vector_X varchar(30),@vector_T varchar(30)
SET @vector_X='011111111111111133'
IF @ActivarSolicitudMateriales='SI'
	SET @vector_T='059419200FFF511200'
ELSE
	SET @vector_T='059411200FFF511200'

SELECT 
 Requerimientos.IdRequerimiento,
 Requerimientos.NumeroRequerimiento as [Numero Req.],
 Requerimientos.IdRequerimiento as [IdReq],
 Requerimientos.FechaRequerimiento as [Fecha],
 Case When IsNull(Requerimientos.TipoRM,'NN')='NN' Then 'Normal'
	When IsNull(Requerimientos.TipoRM,'NN')='FF' Then 'F.Fijo'
	When IsNull(Requerimientos.TipoRM,'NN')='CC' Then 'C.Cte.'
 End as [Tipo],
 Requerimientos.Cumplido as [Cump.],
 Requerimientos.Recepcionado as [Recibido],
 Requerimientos.Detalle as [Detalle],
 Obras.NumeroObra+' '+Obras.Descripcion as [Obra],
 #Auxiliar4.Pedidos as [Pedidos],
 #Auxiliar6.Recepciones as [Recepciones],
 #Auxiliar8.Salidas as [Salidas],
 (Select Count(*) From DetalleRequerimientos Where DetalleRequerimientos.IdRequerimiento=Requerimientos.IdRequerimiento) as [Cant.Items],
 (Select Top 1 Empleados.Nombre from Empleados Where Requerimientos.Aprobo=Empleados.IdEmpleado) as [Liberada por],
 (Select Top 1 Empleados.Nombre from Empleados Where Requerimientos.IdSolicito=Empleados.IdEmpleado) as [Solicitada por],
 Sectores.Descripcion as [Sector],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM Requerimientos
LEFT OUTER JOIN Obras ON Requerimientos.IdObra=Obras.IdObra
LEFT OUTER JOIN CentrosCosto ON Requerimientos.IdCentroCosto=CentrosCosto.IdCentroCosto
LEFT OUTER JOIN Sectores ON Requerimientos.IdSector=Sectores.IdSector
LEFT OUTER JOIN Monedas ON Requerimientos.IdMoneda=Monedas.IdMoneda
LEFT OUTER JOIN ArchivosATransmitirDestinos ON Requerimientos.IdOrigenTransmision = ArchivosATransmitirDestinos.IdArchivoATransmitirDestino
LEFT OUTER JOIN #Auxiliar4 ON Requerimientos.IdRequerimiento=#Auxiliar4.IdRequerimiento
LEFT OUTER JOIN #Auxiliar6 ON Requerimientos.IdRequerimiento=#Auxiliar6.IdRequerimiento
LEFT OUTER JOIN #Auxiliar8 ON Requerimientos.IdRequerimiento=#Auxiliar8.IdRequerimiento
WHERE  (Confirmado is null or Confirmado<>'NO')
ORDER BY Requerimientos.FechaRequerimiento Desc, 
	Requerimientos.NumeroRequerimiento Desc

DROP TABLE #Auxiliar4
DROP TABLE #Auxiliar5
DROP TABLE #Auxiliar6
DROP TABLE #Auxiliar7
DROP TABLE #Auxiliar8
DROP TABLE #Auxiliar9



GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_AConfirmar]    Script Date: 03/15/2011 11:49:05 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE  Procedure [dbo].[Requerimientos_TX_AConfirmar]

AS 

declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='0111111111133'
set @vector_T='0541061125900'

SELECT 
 Requerimientos.IdRequerimiento,
 Requerimientos.NumeroRequerimiento as [Numero Req.],
 Requerimientos.FechaRequerimiento as [Fecha],
 Requerimientos.Cumplido as [Cump.],
 Requerimientos.Detalle as [Detalle],
 Obras.NumeroObra as [Obra],
 (Select Top 1 Empleados.Nombre from Empleados Where Requerimientos.Aprobo=Empleados.IdEmpleado) as [Liberada por],
 (Select Top 1 Empleados.Nombre from Empleados Where Requerimientos.IdSolicito=Empleados.IdEmpleado) as [Solicitada por],
 Sectores.Descripcion as [Sector],
 (Select Count(*) From DetalleRequerimientos Where DetalleRequerimientos.IdRequerimiento=Requerimientos.IdRequerimiento) as [Cant.Items],
 Requerimientos.IdRequerimiento,
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM Requerimientos
LEFT OUTER JOIN Obras ON Requerimientos.IdObra=Obras.IdObra
LEFT OUTER JOIN CentrosCosto ON Requerimientos.IdCentroCosto=CentrosCosto.IdCentroCosto
LEFT OUTER JOIN Sectores ON Requerimientos.IdSector=Sectores.IdSector
LEFT OUTER JOIN Monedas ON Requerimientos.IdMoneda=Monedas.IdMoneda
LEFT OUTER JOIN ArchivosATransmitirDestinos ON Requerimientos.IdOrigenTransmision = ArchivosATransmitirDestinos.IdArchivoATransmitirDestino
WHERE  (Confirmado is not null and Confirmado='NO')
ORDER BY NumeroRequerimiento





GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_Cumplidos]    Script Date: 03/15/2011 11:49:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE  Procedure [dbo].[Requerimientos_TX_Cumplidos]
AS 
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='0111111111111111133'
set @vector_T='0541053011255555900'
SELECT 
Requerimientos.IdRequerimiento,
Requerimientos.NumeroRequerimiento as [Numero Req.],
Requerimientos.FechaRequerimiento as [Fecha],
Requerimientos.Cumplido as [Cump.],
Requerimientos.Detalle as [Detalle],
Obras.NumeroObra as [Obra],
Case 	When Obras.Consorcial is null or Obras.Consorcial='NO' Then Null
	When Obras.Consorcial='SI' Then 
	 Case 	When Requerimientos.Consorcial is null or Requerimientos.Consorcial='SI' Then 'Consorcial'
		Else 'Cautiva'
	 End
	Else Null
End as [Tipo obra],
CentrosCosto.Descripcion as [Centro de costo],
(Select Top 1 Empleados.Nombre from Empleados Where Requerimientos.Aprobo=Empleados.IdEmpleado) as [Liberada por],
(Select Top 1 Empleados.Nombre from Empleados Where Requerimientos.IdSolicito=Empleados.IdEmpleado) as [Solicitada por],
Sectores.Descripcion as [Sector],
Requerimientos.MontoParaCompra as [Monto p/compra],
Requerimientos.MontoPrevisto as [Monto previsto],
Monedas.Nombre as [Moneda],
ArchivosATransmitirDestinos.Descripcion as [Origen],
(Select Count(*) From DetalleRequerimientos Where DetalleRequerimientos.IdRequerimiento=Requerimientos.IdRequerimiento) as [Cant.Items],
Requerimientos.IdRequerimiento,
@Vector_T as Vector_T,
@Vector_X as Vector_X
FROM Requerimientos
LEFT OUTER JOIN Obras ON Requerimientos.IdObra=Obras.IdObra
LEFT OUTER JOIN CentrosCosto ON Requerimientos.IdCentroCosto=CentrosCosto.IdCentroCosto
LEFT OUTER JOIN Sectores ON Requerimientos.IdSector=Sectores.IdSector
LEFT OUTER JOIN Monedas ON Requerimientos.IdMoneda=Monedas.IdMoneda
LEFT OUTER JOIN ArchivosATransmitirDestinos ON Requerimientos.IdOrigenTransmision = ArchivosATransmitirDestinos.IdArchivoATransmitirDestino
WHERE Requerimientos.Cumplido is not null and Requerimientos.Cumplido<>'NO'
ORDER BY NumeroRequerimiento
































GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_DatosObra]    Script Date: 03/15/2011 11:49:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE [dbo].[Requerimientos_TX_DatosObra]
@IdDetalleRequerimiento int
AS
SELECT
 Obras.NumeroObra as [Obra],
 Clientes.RazonSocial as [Cliente],
 Equipos.Descripcion as [Equipo],
 Requerimientos.NumeroRequerimiento,
 DetReq.NumeroItem
FROM DetalleRequerimientos DetReq
LEFT OUTER JOIN Requerimientos ON DetReq.IdRequerimiento = Requerimientos.IdRequerimiento
LEFT OUTER JOIN Obras ON Requerimientos.IdObra = Obras.IdObra
LEFT OUTER JOIN Equipos ON DetReq.IdEquipo = Equipos.IdEquipo
LEFT OUTER JOIN Clientes ON Obras.IdCliente = Clientes.IdCliente
WHERE DetReq.IdDetalleRequerimiento=@IdDetalleRequerimiento



GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_DatosRequerimiento]    Script Date: 03/15/2011 11:49:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE Procedure [dbo].[Requerimientos_TX_DatosRequerimiento]

@IdDetalleRequerimiento int

As 

Select
 DetReq.*,
 Requerimientos.NumeroRequerimiento,
 Requerimientos.FechaRequerimiento,
 Requerimientos.Aprobo,
 Requerimientos.IdComprador as [IdCompradorRM],
 Requerimientos.IdObra as [IdObra],
 Requerimientos.Cumplido as [CumplidoReq],
 Requerimientos.TipoRequerimiento,
 Articulos.Descripcion as [DescripcionArt],
 Articulos.Codigo,
 Articulos.AlicuotaIVA,
 IsNull(Articulos.CostoPPP,0) as [CostoPPP],
 IsNull(Articulos.CostoReposicion,0) as [CostoReposicion],
 Unidades.Descripcion as [Unidad en],
 IsNull(Unidades.Abreviatura,Unidades.Descripcion) as [Unidad],
 (Select Sum(DetRec.Cantidad)
  From DetalleRecepciones DetRec
  Left Outer Join Recepciones On DetRec.IdRecepcion = Recepciones.IdRecepcion
  Where DetReq.IdDetalleRequerimiento=DetRec.IdDetalleRequerimiento and 
	(Recepciones.Anulada is null or Recepciones.Anulada<>'SI')) as [Entregado],
 DetReq.Cantidad - Isnull((Select Sum(DetRec.Cantidad)
 				From DetalleRecepciones DetRec 
				Left Outer Join Recepciones On Recepciones.IdRecepcion=DetRec.IdRecepcion
				Where DetRec.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento and 
					(Recepciones.Anulada is null or Recepciones.Anulada<>'SI')),0)
 as [Pendiente],
 IsNull((Select Sum(DetallePedidos.Cantidad) 
	From DetallePedidos 
	Where DetallePedidos.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento and 
		(DetallePedidos.Cumplido is null or DetallePedidos.Cumplido<>'AN')),0)  as [Pedido],
 IsNull((Select Sum(DetalleValesSalida.Cantidad) 
	From DetalleValesSalida 
	Where DetalleValesSalida.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento and 
		(DetalleValesSalida.Estado is null or DetalleValesSalida.Estado<>'AN')),0)  as [SalidaPorVales],
 0 as [Reservado],
 Obras.NumeroObra as [Obra],
 Obras.NumeroObra+' '+Obras.Descripcion as [Obra1],
 Clientes.RazonSocial as [Cliente],
 Equipos.Descripcion as [Equipo],
 Rubros.Descripcion as [Rubro],
 IsNull(ControlesCalidad.Abreviatura,ControlesCalidad.Descripcion) as [CC],
 (Select Top 1 Empleados.Nombre from Empleados Where Requerimientos.Aprobo=Empleados.IdEmpleado) as [Liberada por],
 (Select Top 1 Empleados.Nombre from Empleados Where Requerimientos.IdSolicito=Empleados.IdEmpleado) as [Solicitada por]
From DetalleRequerimientos DetReq
Left Outer Join Requerimientos On Requerimientos.IdRequerimiento=DetReq.IdRequerimiento
Left Outer Join Articulos On DetReq.IdArticulo = Articulos.IdArticulo
Left Outer Join Unidades On DetReq.IdUnidad = Unidades.IdUnidad
Left Outer Join Obras On Requerimientos.IdObra = Obras.IdObra
Left Outer Join Clientes On Obras.IdCliente = Clientes.IdCliente
Left Outer Join Equipos On DetReq.IdEquipo = Equipos.IdEquipo
Left Outer Join Rubros On Articulos.IdRubro = Rubros.IdRubro
Left Outer Join ControlesCalidad On DetReq.IdControlCalidad = ControlesCalidad.IdControlCalidad
Where DetReq.IdDetalleRequerimiento=@IdDetalleRequerimiento



GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_EntregasConcretadas]    Script Date: 03/15/2011 11:49:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




















CREATE Procedure [dbo].[Requerimientos_TX_EntregasConcretadas]
@IdRequerimiento int
AS 
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='011111133'
set @vector_T='005553300'
Select
DetReq.IdDetalleRequerimiento,
DetReq.NumeroItem as [Item],
Case
	When Recepciones.NumeroRecepcion1 is not null Then str(Recepciones.NumeroRecepcion1,4)+'-'+str(Recepciones.NumeroRecepcion2,8)
	Else Null
End as [Numero remito],
Recepciones.FechaRecepcion as [Fecha remito],
Proveedores.RazonSocial as [Proveedor],
Pedidos.NumeroPedido as [Pedido],
DetalleRecepciones.Cantidad as [Cantidad],
@Vector_T as Vector_T,
@Vector_X as Vector_X
From DetalleRequerimientos DetReq
Left Outer Join Requerimientos On Requerimientos.IdRequerimiento=DetReq.IdRequerimiento
Left Outer Join DetallePedidos On DetallePedidos.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento
LEFT OUTER JOIN Pedidos ON DetallePedidos.IdPedido = Pedidos.IdPedido
Left Outer Join DetalleRecepciones On DetalleRecepciones.IdDetallePedido=DetallePedidos.IdDetallePedido
Left Outer Join Recepciones On Recepciones.IdRecepcion=DetalleRecepciones.IdRecepcion
Left Outer Join Proveedores ON Recepciones.IdProveedor = Proveedores.IdProveedor
Where DetReq.IdRequerimiento=@IdRequerimiento and DetalleRecepciones.Cantidad is not null and 
	 (Requerimientos.Confirmado is null or Requerimientos.Confirmado<>'NO')
Order By DetReq.NumeroItem



















GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_ItemsPorObra]    Script Date: 03/15/2011 11:49:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE  Procedure [dbo].[Requerimientos_TX_ItemsPorObra]
@IdObra int
AS 
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='01110111111133'
set @vector_T='01020102222900'
SELECT 
	DetLMat.IdDetalleLMateriales,
	LMat.NumeroLMateriales as [Nro.LM],
	DetLMat.NumeroItem as [Item],
	LMat.Fecha as [Fecha],
	DetLMat.IdArticulo,
	Articulos.Descripcion as [Articulo],
	DetLMat.Cantidad as [Cant.],
	DetLMat.Cantidad1 as [Med.1],
	DetLMat.Cantidad2 as [Med.2],
	DetLMat.Cantidad as [Cant.falt.],
	CASE 
		WHEN DetLMat.Cantidad1 IS NOT NULL AND DetLMat.Cantidad2 IS NOT NULL AND DetLMat.Cantidad1<>0 AND DetLMat.Cantidad2<>0 THEN  DetLMat.Cantidad*DetLMat.Cantidad1*DetLMat.Cantidad2
		WHEN DetLMat.Cantidad1 IS NOT NULL AND DetLMat.Cantidad1<>0 THEN  DetLMat.Cantidad*DetLMat.Cantidad1
		ELSE DetLMat.Cantidad
	END as [Total falt.],
	DetLMat.IdDetalleLMateriales as [Id1],
	@Vector_T as Vector_T,
	@Vector_X as Vector_X
FROM DetalleLMateriales DetLMat
LEFT OUTER JOIN LMateriales LMat ON DetLMat.IdLMateriales = LMat.IdLMateriales
LEFT OUTER JOIN Articulos ON DetLMat.IdArticulo = Articulos.IdArticulo
WHERE (not DetLMat.IdArticulo is null and LMat.IdObra=@IdObra)
ORDER BY Articulos.Descripcion
































GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_ItemsPorObra1]    Script Date: 03/15/2011 11:49:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE  Procedure [dbo].[Requerimientos_TX_ItemsPorObra1]
@IdObra int
as
select 
DetAco.idDetalleAcopios,
DetAco.IdArticulo,
DetAco.Cantidad,
DetAco.Cantidad1,
DetAco.Cantidad2,
case
	when (Cantidad1 is not null and Cantidad1<>0) and (Cantidad2 is not null and Cantidad2<>0) then Cantidad*Cantidad1*Cantidad2
	when Cantidad1 is not null and Cantidad1<>0 then Cantidad*Cantidad1
	else Cantidad
end as Cargado
from DetalleAcopios DetAco
INNER JOIN Acopios Aco ON DetAco.IdAcopio = Aco.IdAcopio
where Aco.IdObra=@IdObra
































GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_ItemsPorObra2]    Script Date: 03/15/2011 11:49:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE  Procedure [dbo].[Requerimientos_TX_ItemsPorObra2]
@IdObra int
as
select 
DetReq.idDetalleRequerimiento,
DetReq.IdArticulo,
DetReq.Cantidad,
DetReq.Cantidad1,
DetReq.Cantidad2,
case
	when (Cantidad1 is not null and Cantidad1<>0) and (Cantidad2 is not null and Cantidad2<>0) then Cantidad*Cantidad1*Cantidad2
	when Cantidad1 is not null and Cantidad1<>0 then Cantidad*Cantidad1
	else Cantidad
end as Cargado
from DetalleRequerimientos DetReq
INNER JOIN Requerimientos Req ON DetReq.IdRequerimiento = Req.IdRequerimiento
where Req.IdObra=@IdObra
































GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_ItemsPorObra3]    Script Date: 03/15/2011 11:49:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE  Procedure [dbo].[Requerimientos_TX_ItemsPorObra3]
@IdObra int
as
select 
DetRes.IdDetalleReserva,
DetRes.IdArticulo,
DetRes.CantidadUnidades,
DetRes.Cantidad1,
DetRes.Cantidad2,
case
	when (Cantidad1 is not null and Cantidad1<>0) and (Cantidad2 is not null and Cantidad2<>0) then CantidadUnidades*Cantidad1*Cantidad2
	when Cantidad1 is not null and Cantidad1<>0 then CantidadUnidades*Cantidad1
	else CantidadUnidades
end as Cargado
FROM DetalleReservas DetRes
INNER JOIN Reservas Res ON DetRes.IdReserva = Res.IdReserva
WHERE DetRes.IdObra=@IdObra and DetRes.Estado is null
































GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_ParaTransmitir]    Script Date: 03/15/2011 11:49:06 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE Procedure [dbo].[Requerimientos_TX_ParaTransmitir]

@IdRequerimiento int = Null

AS 

SELECT *
FROM Requerimientos
WHERE EnviarEmail=1 and aprobo is not null and IsNull(TipoRM,'NN')='NN' and 
	(IsNull(@IdRequerimiento,-1)=-1 or IsNull(@IdRequerimiento,-1)=IdRequerimiento)



GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_Pendientes]    Script Date: 03/15/2011 11:49:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE PROCEDURE [dbo].[Requerimientos_TX_Pendientes]

AS

declare @vector_X varchar(50),@vector_T varchar(50),@TiposComprobante varchar(1)
set @TiposComprobante=' '
set @vector_X='01111101111110111111111114133'
set @vector_T='02033100100000049913111419900'

SELECT 
 DetReq.IdDetalleRequerimiento,
 Requerimientos.NumeroRequerimiento as [Req.Nro.],
 DetReq.NumeroItem as [Item],
 Requerimientos.MontoPrevisto as [Monto prev.],
 Requerimientos.MontoParaCompra as [Monto comp.],
 Empleados.Nombre as [Comprador],
 DetReq.IdDetalleLMateriales,
 LMateriales.NumeroLMateriales as [L.Mat.],
 DetalleLMateriales.NumeroItem as [Itm.LM],
 DetReq.Cantidad as [Cant.],
 (Select Unidades.Descripcion
	From Unidades
	Where Unidades.IdUnidad=DetReq.IdUnidad) as [Unidad en],
 DetReq.Cantidad1 as [Med.1],
 DetReq.Cantidad2 as [Med.2],
 DetReq.IdArticulo,
 Articulos.Descripcion as Articulo,
 DetReq.FechaEntrega as [F.entrega],
 DetReq.IdDetalleRequerimiento,
 DetReq.IdRequerimiento,
 (Select Empleados.Nombre From Empleados 
  Where Empleados.IdEmpleado=Requerimientos.IdSolicito) as [Solicito],
 CASE 	WHEN DetReq.IdDetalleLMateriales is not null 
	 THEN (Select Obras.NumeroObra From Obras Where Obras.IdObra=LMateriales.IdObra)
	 ELSE (Select Obras.NumeroObra From Obras Where Obras.IdObra=Requerimientos.IdObra)
 END as [Obra],
 CASE 	WHEN DetReq.IdDetalleLMateriales is not null 
	 THEN (Select Equipos.Tag From Equipos Where Equipos.IdEquipo=LMateriales.IdEquipo)
	 ELSE Null
 END as [Equipo],
 (Select SUM(DetallePedidos.Cantidad)
  From DetallePedidos 
  Where DetallePedidos.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento and 
	(DetallePedidos.Cumplido is null or DetallePedidos.Cumplido<>'AN')) as [Cant.Ped.],
 (Select SUM(DetalleRecepciones.Cantidad)
  From DetalleRecepciones 
  Left Outer Join Recepciones On Recepciones.IdRecepcion=DetalleRecepciones.IdRecepcion
  Where DetalleRecepciones.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento and 
	(Recepciones.Anulada is null or Recepciones.Anulada<>'SI')) as [RM],
 Cuentas.Descripcion as [Cuenta contable],
 DetReq.Cumplido as [Cump.],
 DetReq.Observaciones,
 DetReq.IdDetalleRequerimiento,
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleRequerimientos DetReq
LEFT OUTER JOIN Articulos ON DetReq.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Requerimientos ON DetReq.IdRequerimiento = Requerimientos.IdRequerimiento
LEFT OUTER JOIN DetalleLMateriales ON DetReq.IdDetalleLMateriales = DetalleLMateriales.IdDetalleLMateriales
LEFT OUTER JOIN LMateriales ON DetalleLMateriales.IdLMateriales=LMateriales.IdLMateriales
LEFT OUTER JOIN Empleados ON DetReq.IdComprador = Empleados.IdEmpleado
LEFT OUTER JOIN Cuentas ON DetReq.IdCuenta = Cuentas.IdCuenta
WHERE Requerimientos.Aprobo is not null AND 
	 (@TiposComprobante='T' or DetReq.Cumplido is null or (DetReq.Cumplido<>'SI' and DetReq.Cumplido<>'AN')) AND 
	 (@TiposComprobante='T' or Requerimientos.Cumplido is null or (Requerimientos.Cumplido<>'SI' and Requerimientos.Cumplido<>'AN')) AND 
	 (@TiposComprobante='T' or DetReq.IdProveedor is null) AND 
	 (@TiposComprobante='T' or DetReq.IdAproboAlmacen is not null) AND 
	 (Requerimientos.Confirmado is null or Requerimientos.Confirmado<>'NO')
ORDER BY Requerimientos.NumeroRequerimiento,DetReq.NumeroItem





GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_Pendientes1]    Script Date: 03/15/2011 11:49:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO



CREATE PROCEDURE [dbo].[Requerimientos_TX_Pendientes1]

@TiposComprobante varchar(1)

AS

DECLARE @CantidadFirmasRM int, @LiberarCircuito varchar(2), @FirmasLiberacion int

SET @CantidadFirmasRM=IsNull((Select Count(*) 
				From DetalleAutorizaciones
				Left Outer Join Autorizaciones On DetalleAutorizaciones.IdAutorizacion=Autorizaciones.IdAutorizacion
				Where Autorizaciones.IdFormulario=3),0)
SET @FirmasLiberacion=1
SET @LiberarCircuito='NO'

Declare @vector_X varchar(50),@vector_T varchar(50)
Set @vector_X='01111111111101110111111111411111133'
Set @vector_T='02H00D111222299200499131419955E1600'

SELECT 
 DetReq.IdDetalleRequerimiento,
 Requerimientos.NumeroRequerimiento as [Req.Nro.],
 DetReq.NumeroItem as [Item],
 DetReq.Cantidad as [Cant.],
 Unidades.Abreviatura as [Un.],
 Case When DetReq.DescripcionManual is null Then Articulos.Descripcion Else DetReq.DescripcionManual End as [Articulo],
 (Select SUM(DetallePedidos.Cantidad) 
	From DetallePedidos 
	Where DetallePedidos.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento and 
		(DetallePedidos.Cumplido is null or DetallePedidos.Cumplido<>'AN')) 
	as [Cant.Ped.],
 (Select SUM(DetalleRecepciones.CantidadCC) 
	From DetalleRecepciones 
	Left Outer Join Recepciones On Recepciones.IdRecepcion=DetalleRecepciones.IdRecepcion
	Where DetalleRecepciones.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento and 
		(Recepciones.Anulada is null or Recepciones.Anulada<>'SI')) 
	as [Recibido],
 (Select Sum(DetalleValesSalida.Cantidad) 
	From DetalleValesSalida 
	Where DetalleValesSalida.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento and 
		(DetalleValesSalida.Estado is null or DetalleValesSalida.Estado<>'AN')) as [Vales],
 Requerimientos.MontoPrevisto as [Monto prev.],
 Requerimientos.MontoParaCompra as [Monto comp.],
 Empleados.Nombre as [Comprador],
 DetReq.IdDetalleLMateriales,
 LMateriales.NumeroLMateriales as [L.Mat.],
 DetalleLMateriales.NumeroOrden as [Itm.LM],
 (Select SUM(IsNull(Stock.CantidadUnidades,0)) 
	From Stock 
	Where DetReq.IdArticulo=Stock.IdArticulo) as [En stock],
 DetReq.IdArticulo,
 Articulos.StockMinimo as [Stk.min.],
 DetReq.FechaEntrega as [F.entrega],
 DetReq.IdDetalleRequerimiento as [IdAux],
 DetReq.IdRequerimiento,
 (Select Empleados.Nombre From Empleados 
  Where Empleados.IdEmpleado=Requerimientos.IdSolicito) as [Solicito],
 CASE 	WHEN DetReq.IdDetalleLMateriales is not null 
	 THEN (Select (Obras.NumeroObra+' '+Obras.Descripcion)  From Obras Where Obras.IdObra=LMateriales.IdObra)
	 ELSE (Select (Obras.NumeroObra+' '+Obras.Descripcion ) From Obras Where Obras.IdObra=Requerimientos.IdObra)
 END as [Obra],
 CASE 	WHEN DetReq.IdDetalleLMateriales is not null 
	 THEN (Select Equipos.Tag From Equipos Where Equipos.IdEquipo=LMateriales.IdEquipo)
	 ELSE Null
 END as [Equipo],
 Cuentas.Descripcion as [Cuenta contable],
 DetReq.Cumplido as [Cump.],
 DetReq.Observaciones,
 DetReq.IdDetalleRequerimiento as [IdAux1],
 DetReq.Observaciones as [Observaciones item],
 Null as [Fec.Asig.Comprador],
 Null as [Tipo compra],
 (Select Top 1 Empleados.Nombre From Empleados 
  Where Empleados.IdEmpleado=(Select Top 1 Aut.IdAutorizo 
				From AutorizacionesPorComprobante Aut 
				Where Aut.IdFormulario=3 and Aut.OrdenAutorizacion=1 and 
					Aut.IdComprobante=DetReq.IdRequerimiento)) as [2da.Firma],
 (Select Top 1 Aut.FechaAutorizacion 
  From AutorizacionesPorComprobante Aut 
  Where Aut.IdFormulario=3 and Aut.OrdenAutorizacion=1 and 
	Aut.IdComprobante=DetReq.IdRequerimiento) as [Fecha 2da.Firma],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleRequerimientos DetReq
LEFT OUTER JOIN Articulos ON DetReq.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Requerimientos ON DetReq.IdRequerimiento = Requerimientos.IdRequerimiento
LEFT OUTER JOIN DetalleLMateriales ON DetReq.IdDetalleLMateriales = DetalleLMateriales.IdDetalleLMateriales
LEFT OUTER JOIN LMateriales ON DetalleLMateriales.IdLMateriales=LMateriales.IdLMateriales
LEFT OUTER JOIN Empleados ON DetReq.IdComprador = Empleados.IdEmpleado
LEFT OUTER JOIN Cuentas ON DetReq.IdCuenta = Cuentas.IdCuenta
LEFT OUTER JOIN Unidades ON DetReq.IdUnidad = Unidades.IdUnidad
--LEFT OUTER JOIN TiposCompra ON Requerimientos.IdTipoCompra = TiposCompra.IdTipoCompra
WHERE 
	Requerimientos.Aprobo is not null and 
	(@TiposComprobante='T' or DetReq.Cumplido is null or (DetReq.Cumplido<>'SI' and DetReq.Cumplido<>'AN')) and 
	(@TiposComprobante='T' or Requerimientos.Cumplido is null or (Requerimientos.Cumplido<>'SI' and Requerimientos.Cumplido<>'AN')) and 
/*	 (@TiposComprobante='T' or DetReq.IdProveedor is null) AND 	*/
	(@TiposComprobante='T' or 
	 (DetReq.IdAproboAlmacen is not null or (Requerimientos.DirectoACompras is not null and Requerimientos.DirectoACompras='SI'))) and 
	IsNull(Requerimientos.Confirmado,'SI')<>'NO' and 
	IsNull(DetReq.TipoDesignacion,'CMP')<>'S/D' and 
	IsNull(DetReq.TipoDesignacion,'CMP')<>'STK' and 
	(@LiberarCircuito='NO' or 
	 (@LiberarCircuito='SI' and 
	  IsNull((Select Count(*) 
		From AutorizacionesPorComprobante Aut
		Where Aut.IdFormulario=3 and 
			Aut.IdComprobante=Requerimientos.IdRequerimiento),0)>=@CantidadFirmasRM))
ORDER BY Requerimientos.NumeroRequerimiento, DetReq.NumeroItem


GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_PendientesDeAsignacion]    Script Date: 03/15/2011 11:49:06 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO



CREATE PROCEDURE [dbo].[Requerimientos_TX_PendientesDeAsignacion]

AS

DECLARE @vector_X varchar(50),@vector_T varchar(50)
SET @vector_X='011111011111111101111111114111111133'
SET @vector_T='02H99909101114110F499139919999354300'

SELECT 
 DetReq.IdDetalleRequerimiento,
 Requerimientos.NumeroRequerimiento as [Req.Nro.],
 DetReq.NumeroItem as [Item],
 Requerimientos.MontoPrevisto as [Monto prev.],
 Requerimientos.MontoParaCompra as [Monto comp.],
 Empleados.Nombre as [Comprador],
 LMateriales.NumeroLMateriales as [L.Mat.],
 DetalleLMateriales.NumeroOrden as [Itm.LM],
 DetReq.Cantidad as [Cant.],
 IsNull(Unidades.Abreviatura,Unidades.Descripcion) as [Unidad en],
 (Select Sum(DetalleValesSalida.Cantidad) 
	From DetalleValesSalida 
	Where DetalleValesSalida.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento and 
		(DetalleValesSalida.Estado is null or DetalleValesSalida.Estado<>'AN')) as [Vales],
 IsNull((Select SUM(Det.Cantidad) 
		From DetallePedidos Det 
		Where Det.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento and 
			IsNull(Det.Cumplido,'NO')<>'AN'),0)+
	 IsNull((Select SUM(Det.Cantidad) 
			From DetallePedidosPRONTO Det 
			Where Det.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento and 
				IsNull(Det.Cumplido,'NO')<>'AN'),0)
	as [Cant.Ped.],
 (Select SUM(DetalleRecepciones.CantidadCC) 
	From DetalleRecepciones 
	Left Outer Join Recepciones On Recepciones.IdRecepcion=DetalleRecepciones.IdRecepcion
	Where DetalleRecepciones.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento and 
		IsNull(Recepciones.Anulada,'NO')<>'SI') 
	as [Recibido],
 Case When DetReq.TipoDesignacion='REC' Then 
	 (Select Top 1
	  Case 	When Recepciones.SubNumero is not null 
		 Then Substring(Substring('0000',1,4-Len(Convert(varchar,Recepciones.NumeroRecepcion1)))+
				Convert(varchar,Recepciones.NumeroRecepcion1)+'-'+
				Substring('00000000',1,8-Len(Convert(varchar,Recepciones.NumeroRecepcion2)))+
				Convert(varchar,Recepciones.NumeroRecepcion2)+'/'+
				Convert(varchar,Recepciones.SubNumero) ,1,20) 
		 Else Substring(Substring('0000',1,4-Len(Convert(varchar,Recepciones.NumeroRecepcion1)))+
				Convert(varchar,Recepciones.NumeroRecepcion1)+'-'+
				Substring('00000000',1,8-Len(Convert(varchar,Recepciones.NumeroRecepcion2)))+
				Convert(varchar,Recepciones.NumeroRecepcion2),1,20) 
	  End 
	  From DetalleRecepciones DetRec
	  Left Outer Join Recepciones On DetRec.IdRecepcion = Recepciones.IdRecepcion
	  Where DetRec.IdDetalleRequerimiento = DetReq.IdDetalleRequerimiento and 
		IsNull(Recepciones.Anulada,'NO')<>'SI' )
 	Else Null 
 End as [Recepcion],
 (Select SUM(IsNull(Stock.CantidadUnidades,0)) 
	From Stock 
	Where DetReq.IdArticulo=Stock.IdArticulo) as [En stock],
 Articulos.StockMinimo as [Stk.min.],
 DetReq.IdArticulo,
 Case When DetReq.DescripcionManual is null Then Articulos.Descripcion Else DetReq.DescripcionManual End as [Articulo],
 DetReq.FechaEntrega as [F.entrega],
 DetReq.IdDetalleRequerimiento as [IdAux],
 DetReq.IdRequerimiento,
 (Select Empleados.Nombre From Empleados 
  Where Empleados.IdEmpleado=Requerimientos.IdSolicito) as [Solicito],
 Case 	When DetReq.IdDetalleLMateriales is not null 
	 Then (Select (Obras.NumeroObra+' '+Obras.Descripcion)  From Obras Where Obras.IdObra=LMateriales.IdObra)
	 Else (Select (Obras.NumeroObra+' '+Obras.Descripcion) From Obras Where Obras.IdObra=Requerimientos.IdObra)
 End as [Obra],
 Case 	When DetReq.IdDetalleLMateriales is not null 
	 Then (Select Equipos.Tag From Equipos Where Equipos.IdEquipo=LMateriales.IdEquipo)
	 Else Null
 End as [Equipo],
 Cuentas.Descripcion as [Cuenta contable],
 DetReq.Cumplido as [Cump.],
 DetReq.Observaciones,
 DetReq.IdDetalleRequerimiento as [IdAux1],
 DetReq.IdDetalleLMateriales,
 DetReq.TipoDesignacion,
 DetReq.Recepcionado as [Recibido],
 DetReq.Observaciones as [Observaciones item],
 (Select Top 1
  Case 	When Recepciones.SubNumero is not null 
	 Then Substring(Substring('0000',1,4-Len(Convert(varchar,Recepciones.NumeroRecepcion1)))+
			Convert(varchar,Recepciones.NumeroRecepcion1)+'-'+
			Substring('00000000',1,8-Len(Convert(varchar,Recepciones.NumeroRecepcion2)))+
			Convert(varchar,Recepciones.NumeroRecepcion2)+'/'+
			Convert(varchar,Recepciones.SubNumero) ,1,20) 
	 Else Substring(Substring('0000',1,4-Len(Convert(varchar,Recepciones.NumeroRecepcion1)))+
			Convert(varchar,Recepciones.NumeroRecepcion1)+'-'+
			Substring('00000000',1,8-Len(Convert(varchar,Recepciones.NumeroRecepcion2)))+
			Convert(varchar,Recepciones.NumeroRecepcion2),1,20) 
  End 
  From DetalleRecepciones DetRec
  Left Outer Join Recepciones On DetRec.IdRecepcion = Recepciones.IdRecepcion
  Where DetRec.IdDetalleRequerimiento = DetReq.IdDetalleRequerimiento and 
	IsNull(Recepciones.Anulada,'NO')<>'SI' ) as [Ult.Recepcion],
 Case When IsNull(Requerimientos.TipoRM,'NN')='NN' Then 'Normal'
	When IsNull(Requerimientos.TipoRM,'NN')='FF' Then 'F.Fijo'
	When IsNull(Requerimientos.TipoRM,'NN')='CC' Then 'C.Cte.'
 End as [Tipo],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleRequerimientos DetReq
LEFT OUTER JOIN Articulos ON DetReq.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Requerimientos ON DetReq.IdRequerimiento = Requerimientos.IdRequerimiento
LEFT OUTER JOIN DetalleLMateriales ON DetReq.IdDetalleLMateriales = DetalleLMateriales.IdDetalleLMateriales
LEFT OUTER JOIN LMateriales ON DetalleLMateriales.IdLMateriales=LMateriales.IdLMateriales
LEFT OUTER JOIN Empleados ON DetReq.IdComprador = Empleados.IdEmpleado
LEFT OUTER JOIN Cuentas ON DetReq.IdCuenta = Cuentas.IdCuenta
LEFT OUTER JOIN Unidades ON DetReq.IdUnidad = Unidades.IdUnidad
WHERE 
	Requerimientos.Aprobo is not null and 
	IsNull(DetReq.Cumplido,'NO')<>'AN' and 
	IsNull(Requerimientos.Cumplido,'NO')<>'AN' and 
	IsNull(Requerimientos.Confirmado,'SI')='SI' and 
	(DetReq.TipoDesignacion is not null and 
	 (DetReq.TipoDesignacion='S/D' or DetReq.TipoDesignacion='REC' or 
	  (DetReq.TipoDesignacion='STK' and 
/*
	   (Select Sum(IsNull(dr.Cantidad,0)) 
		From DetalleRecepciones dr 
		Left Outer Join Recepciones On Recepciones.IdRecepcion=dr.IdRecepcion
		Where dr.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento and 
			IsNull(Recepciones.Anulada,'NO')<>'SI') > 
*/
	   DetReq.Cantidad > 
	   IsNull((Select Sum(IsNull(dv.Cantidad,0)) 
			From DetalleValesSalida dv 
			Where dv.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento and 
				(dv.Estado is null or dv.Estado<>'AN')),0)
	  )
	 )
	)
ORDER BY Requerimientos.NumeroRequerimiento, DetReq.NumeroItem


GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_PendientesPlaneamiento]    Script Date: 03/15/2011 11:49:06 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO



CREATE PROCEDURE [dbo].[Requerimientos_TX_PendientesPlaneamiento]

@TiposComprobante varchar(1),
@TipoRM varchar(2) = Null

AS

SET @TipoRM=IsNull(@TipoRM,'TT')

DECLARE @vector_X varchar(50),@vector_T varchar(50)
SET @vector_X='01111111111101105111111111133'
SET @vector_T='03E12114214002108412221199500'

SELECT 
 DetReq.IdDetalleRequerimiento,
 Articulos.Codigo as [Codigo],
 Case When DetReq.DescripcionManual is null Then Articulos.Descripcion Else DetReq.DescripcionManual End as [Articulo],
 DetReq.Cantidad as [Cant.],
 (Select Unidades.Abreviatura
	From Unidades
	Where Unidades.IdUnidad=DetReq.IdUnidad) as  [Unidad en],
 DetReq.Cantidad1 as [Med.1],
 DetReq.Cantidad2 as [Med.2],
 Obras.NumeroObra as [Obra],
/* Equipos.Tag as [Equipo], */
 'RM' as [Cpte.tipo],
 Requerimientos.NumeroRequerimiento as [Nro.],
 Requerimientos.FechaRequerimiento as [F.cpte.],
 DetReq.NumeroItem as [Item],
 DetReq.IdDetalleLMateriales,
 LMateriales.NumeroLMateriales as [L.Mat.nro.],
 DetalleLMateriales.NumeroOrden as [Itm.LM],
 DetReq.IdArticulo,
 DetReq.Observaciones,
 DetReq.FechaEntrega as [F.necesidad],
 (Select Empleados.Nombre From Empleados 
	Where Empleados.IdEmpleado=Requerimientos.IdSolicito) 
	as [Solicito],
/*
 (Select SUM(DetalleReservas.CantidadUnidades) 
	From DetalleReservas 
	Where DetalleReservas.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento) 
	as [Reservado],
*/
 (Select SUM(IsNull(Stock.CantidadUnidades,0)) 
	From Stock 
	Where DetReq.IdArticulo=Stock.IdArticulo) as [En stock],
 (Select SUM(DetallePedidos.Cantidad) 
	From DetallePedidos 
	Where DetallePedidos.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento and (DetallePedidos.Cumplido is null or DetallePedidos.Cumplido<>'AN')) 
	as [Cant.Ped.],
 (Select SUM(DetalleRecepciones.CantidadCC) 
	From DetalleRecepciones 
	Left Outer Join Recepciones On Recepciones.IdRecepcion=DetalleRecepciones.IdRecepcion
	Where DetalleRecepciones.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento and 
		(Recepciones.Anulada is null or Recepciones.Anulada<>'SI')) 
	as [Recibido],
 DetReq.Cumplido as [Cump.],
 Empleados.Nombre as [Comprador asignado],
 DetReq.IdDetalleRequerimiento as [IdAux],
 DetReq.IdRequerimiento,
-- DetReq.FechaAsignacionComprador as [Fec.Asig.Comprador],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleRequerimientos DetReq
LEFT OUTER JOIN Articulos ON DetReq.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Requerimientos ON DetReq.IdRequerimiento = Requerimientos.IdRequerimiento
LEFT OUTER JOIN Obras ON Requerimientos.IdObra = Obras.IdObra
LEFT OUTER JOIN Equipos ON DetReq.IdEquipo = Equipos.IdEquipo
LEFT OUTER JOIN DetalleLMateriales ON DetReq.IdDetalleLMateriales = DetalleLMateriales.IdDetalleLMateriales
LEFT OUTER JOIN LMateriales ON DetalleLMateriales.IdLMateriales=LMateriales.IdLMateriales
LEFT OUTER JOIN Empleados ON DetReq.IdComprador = Empleados.IdEmpleado
LEFT OUTER JOIN Cuentas ON DetReq.IdCuenta = Cuentas.IdCuenta
WHERE 
	Requerimientos.Aprobo is not null and DetReq.IdProveedor is null and 
	IsNull(DetReq.Cumplido,'NO')<>'AN' and  IsNull(Requerimientos.Cumplido,'NO')<>'AN' and 
	((IsNull(DetReq.TipoDesignacion,'CMP')='STK' and IsNull(DetReq.Recepcionado,'NO')<>'SI') or 
	 (IsNull(DetReq.Cumplido,'NO')<>'SI' and  IsNull(Requerimientos.Cumplido,'NO')<>'SI')) and 
	IsNull(Requerimientos.Confirmado,'SI')<>'NO' and 
	IsNull(DetReq.TipoDesignacion,'CMP')<>'S/D' and 
	(@TipoRM='TT' or Requerimientos.TipoRM=@TipoRM) and 
	Not (Requerimientos.TipoRM='FF' and IsNull(DetReq.Recepcionado,'NO')='SI')

--	 (@TiposComprobante='T' or 
--	  (DetReq.IdAproboAlmacen is not null or (Requerimientos.DirectoACompras is not null and Requerimientos.DirectoACompras='SI'))) and 

UNION ALL

SELECT 
 DetAco.IdDetalleAcopios,
 Articulos.Codigo as [Codigo],
 Articulos.Descripcion as [Articulo],
 DetAco.Cantidad as [Cant.],
 (SELECT Unidades.Abreviatura
	FROM Unidades
	WHERE Unidades.IdUnidad=DetAco.IdUnidad) as  [Unidad en],
 DetAco.Cantidad1 as [Med.1],
 DetAco.Cantidad2 as [Med.2],
 Obras.NumeroObra as [Obra],
/* Equipos.Tag as [Equipo], */
 'LA' as [Cpte.tipo],
 Acopios.NumeroAcopio as [Nro.],
 Acopios.Fecha as [F.cpte.],
 DetAco.NumeroItem as [Item],
 Null,
 Null,
 Null,
 DetAco.IdArticulo,
 DetAco.Observaciones,
 DetAco.FechaNecesidad as [F.necesidad],
 Null,
 (SELECT SUM(DetalleReservas.CantidadUnidades) 
	FROM DetalleReservas 
	WHERE DetalleReservas.IdDetalleAcopios=DetAco.IdDetalleAcopios) 
	as [Reservado],
 (SELECT SUM(DetallePedidos.Cantidad)
	FROM DetallePedidos 
	WHERE DetallePedidos.IdDetalleAcopios=DetAco.IdDetalleAcopios and (DetallePedidos.Cumplido is null or DetallePedidos.Cumplido<>'AN')) 
	as [Cant.Ped.],
 (SELECT SUM(DetalleRecepciones.CantidadCC) 
	FROM DetalleRecepciones 
	WHERE DetalleRecepciones.IdDetalleAcopios=DetAco.IdDetalleAcopios) 
	as [Recibido],
 DetAco.Cumplido as [Cump.],
 Empleados.Nombre as [Comprador asignado],
 DetAco.IdDetalleAcopios as [IdAux],
 DetAco.IdAcopio,
-- Null as [Fec.Asig.Comprador],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleAcopios DetAco
LEFT OUTER JOIN Articulos ON DetAco.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Acopios ON DetAco.IdAcopio = Acopios.IdAcopio
LEFT OUTER JOIN Obras ON Acopios.IdObra=Obras.IdObra
LEFT OUTER JOIN Equipos ON DetAco.IdEquipo = Equipos.IdEquipo
LEFT OUTER JOIN Cuentas ON DetAco.IdCuenta = Cuentas.IdCuenta
LEFT OUTER JOIN Empleados ON DetAco.IdComprador = Empleados.IdEmpleado
WHERE Acopios.Aprobo is not null AND 
	 (@TiposComprobante='T' or DetAco.Cumplido is null or (DetAco.Cumplido<>'SI' and DetAco.Cumplido<>'AN')) AND 
	 (@TiposComprobante='T' or DetAco.IdProveedor is null) AND
	 (@TiposComprobante='T' or DetAco.IdAproboAlmacen is not null) 
ORDER BY [Nro.],[Item]


GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_PendientesPorIdRM]    Script Date: 03/15/2011 11:49:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE PROCEDURE [dbo].[Requerimientos_TX_PendientesPorIdRM]

@IdRequerimiento int

AS

declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='0111101111111101111111133'
set @vector_T='0212100101100000499111900'

SELECT 
 DetReq.IdDetalleRequerimiento,
 Requerimientos.NumeroRequerimiento as [Req.Nro.],
 DetReq.NumeroItem as [Item],
 Requerimientos.MontoPrevisto as [Monto prev.],
 Empleados.Nombre as [Comprador],
 DetReq.IdDetalleLMateriales,
 LMateriales.NumeroLMateriales as [L.Mat.],
 DetalleLMateriales.NumeroItem as [Itm.LM],
 DetReq.Cantidad as [Cant.],
 (Select SUM(DetallePedidos.Cantidad) as [TCant]
	From DetallePedidos 
	Where DetallePedidos.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento and 
		(DetallePedidos.Cumplido is null or DetallePedidos.Cumplido<>'AN')) as [Pedido],
 (Select SUM(DetalleRecepciones.Cantidad) as [TCant]
	From DetalleRecepciones 
	Left Outer Join Recepciones On Recepciones.IdRecepcion=DetalleRecepciones.IdRecepcion
	Where DetalleRecepciones.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento and 
		(Recepciones.Anulada is null or Recepciones.Anulada<>'SI')) as [RM],
 (Select Unidades.Descripcion
	From Unidades
	Where Unidades.IdUnidad=DetReq.IdUnidad) as  [Unidad en],
 DetReq.Cantidad1 as [Med.1],
 DetReq.Cantidad2 as [Med.2],
 DetReq.IdArticulo,
 Articulos.Descripcion as Articulo,
 DetReq.FechaEntrega as [F.entrega],
 DetReq.IdDetalleRequerimiento,
 DetReq.IdRequerimiento,
 (Select Empleados.Nombre From Empleados Where Empleados.IdEmpleado=Requerimientos.IdSolicito) as [Solicito],
 CASE 	WHEN DetReq.IdDetalleLMateriales is not null 
	 THEN (Select Obras.NumeroObra From Obras Where Obras.IdObra=LMateriales.IdObra)
	 ELSE (Select Obras.NumeroObra From Obras Where Obras.IdObra=Requerimientos.IdObra)
 END as [Obra],
 CASE 	WHEN DetReq.IdDetalleLMateriales is not null 
	 THEN (Select Equipos.Tag From Equipos Where Equipos.IdEquipo=LMateriales.IdEquipo)
	 ELSE Null
 END as [Equipo],
 DetReq.IdDetalleRequerimiento,
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleRequerimientos DetReq
LEFT OUTER JOIN Articulos ON DetReq.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Requerimientos ON DetReq.IdRequerimiento = Requerimientos.IdRequerimiento
LEFT OUTER JOIN DetalleLMateriales ON DetReq.IdDetalleLMateriales = DetalleLMateriales.IdDetalleLMateriales
LEFT OUTER JOIN LMateriales ON DetalleLMateriales.IdLMateriales=LMateriales.IdLMateriales
LEFT OUTER JOIN Empleados ON DetReq.IdComprador = Empleados.IdEmpleado
WHERE Requerimientos.IdRequerimiento=@IdRequerimiento and 
	Requerimientos.Aprobo is not null AND  (DetReq.Cumplido is null or DetReq.Cumplido<>'SI') AND 
	(Requerimientos.Cumplido is null or Requerimientos.Cumplido<>'SI') AND 
	(Requerimientos.Confirmado is null or Requerimientos.Confirmado<>'NO') AND 
	(NOT EXISTS (Select * From DetallePedidos Where DetallePedidos.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento) OR
	(Select SUM(DetallePedidos.Cantidad) as [TCant]
		From DetallePedidos 
		Where DetallePedidos.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento and 
			(DetallePedidos.Cumplido is null or DetallePedidos.Cumplido<>'AN'))<DetReq.Cantidad) AND 
	(NOT EXISTS (Select * From DetalleRecepciones Where DetalleRecepciones.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento) OR
	(Select SUM(DetalleRecepciones.Cantidad) as [TCant1]
		From DetalleRecepciones 
		Left Outer Join Recepciones On Recepciones.IdRecepcion=DetalleRecepciones.IdRecepcion
		Where DetalleRecepciones.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento and 
			(Recepciones.Anulada is null or Recepciones.Anulada<>'SI'))<DetReq.Cantidad)
ORDER BY Requerimientos.NumeroRequerimiento





GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_PendientesPorRM]    Script Date: 03/15/2011 11:49:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE PROCEDURE [dbo].[Requerimientos_TX_PendientesPorRM]

AS

declare @vector_X varchar(50),@vector_T varchar(50),@TiposComprobante varchar(1)
set @TiposComprobante=' '
set @vector_X='011111111133'
set @vector_T='024211491900'

SELECT 
 DetReq.IdRequerimiento,
 Requerimientos.NumeroRequerimiento as [Req.Nro.],
 Requerimientos.FechaRequerimiento as [Fecha],
 Requerimientos.MontoPrevisto as [Monto prev.],
 Empleados.Nombre as [Comprador],
 LMateriales.NumeroLMateriales as [L.Mat.],
 Obras.NumeroObra as [Obra],
 DetReq.IdRequerimiento,
 Requerimientos.Cumplido as [Cump.],
 DetReq.IdRequerimiento,
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleRequerimientos DetReq
LEFT OUTER JOIN Requerimientos ON DetReq.IdRequerimiento = Requerimientos.IdRequerimiento
LEFT OUTER JOIN DetalleLMateriales ON DetReq.IdDetalleLMateriales = DetalleLMateriales.IdDetalleLMateriales
LEFT OUTER JOIN LMateriales ON DetalleLMateriales.IdLMateriales=LMateriales.IdLMateriales
LEFT OUTER JOIN Empleados ON Requerimientos.IdComprador = Empleados.IdEmpleado
LEFT OUTER JOIN Obras ON Requerimientos.IdObra=Obras.IdObra
WHERE Requerimientos.Aprobo is not null AND 
	 (Requerimientos.Confirmado is null or Requerimientos.Confirmado<>'NO') AND 
	 (@TiposComprobante='T' or DetReq.Cumplido is null or (DetReq.Cumplido<>'SI' and DetReq.Cumplido<>'AN')) AND 
	 (@TiposComprobante='T' or Requerimientos.Cumplido is null or (Requerimientos.Cumplido<>'SI' and Requerimientos.Cumplido<>'AN')) AND 
	 (@TiposComprobante='T' or DetReq.IdProveedor is null) AND 
	 (@TiposComprobante='T' or DetReq.IdAproboAlmacen is not null)
GROUP BY DetReq.IdRequerimiento,Requerimientos.NumeroRequerimiento,Requerimientos.FechaRequerimiento,Requerimientos.MontoPrevisto,Empleados.Nombre,LMateriales.NumeroLMateriales,Obras.NumeroObra,Requerimientos.Cumplido
ORDER BY Requerimientos.NumeroRequerimiento





GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_PendientesPorRM1]    Script Date: 03/15/2011 11:49:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE PROCEDURE [dbo].[Requerimientos_TX_PendientesPorRM1]

@TiposComprobante varchar(1)

AS

DECLARE @CantidadFirmasRM int, @LiberarCircuito varchar(2), @FirmasLiberacion int

SET @CantidadFirmasRM=IsNull((Select Count(*) 
				From DetalleAutorizaciones
				Left Outer Join Autorizaciones On DetalleAutorizaciones.IdAutorizacion=Autorizaciones.IdAutorizacion
				Where Autorizaciones.IdFormulario=3),0)
SET @FirmasLiberacion=1
SET @LiberarCircuito='NO'

Declare @vector_X varchar(30),@vector_T varchar(30)
Set @vector_X='011111111411133'
Set @vector_T='0242139199E1600'

SELECT 
 DetReq.IdRequerimiento,
 Requerimientos.NumeroRequerimiento as [Req.Nro.],
 Requerimientos.FechaRequerimiento as [Fecha],
 Requerimientos.MontoPrevisto as [Monto prev.],
 Empleados.Nombre as [Comprador],
 Obras.NumeroObra+' '+Obras.Descripcion  as [Obra],
 DetReq.IdRequerimiento,
 Requerimientos.Cumplido as [Cump.],
 DetReq.IdRequerimiento as [IdAux],
 Convert(varchar(2000),Requerimientos.Observaciones) as [Observaciones],
 Null as [Tipo compra],
 (Select Top 1 Empleados.Nombre From Empleados 
  Where Empleados.IdEmpleado=(Select Top 1 Aut.IdAutorizo 
				From AutorizacionesPorComprobante Aut 
				Where Aut.IdFormulario=3 and Aut.OrdenAutorizacion=1 and 
					Aut.IdComprobante=DetReq.IdRequerimiento)) as [2da.Firma],
 (Select Top 1 Aut.FechaAutorizacion 
  From AutorizacionesPorComprobante Aut 
  Where Aut.IdFormulario=3 and Aut.OrdenAutorizacion=1 and 
	Aut.IdComprobante=DetReq.IdRequerimiento) as [Fecha 2da.Firma],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleRequerimientos DetReq
LEFT OUTER JOIN Requerimientos ON DetReq.IdRequerimiento = Requerimientos.IdRequerimiento
LEFT OUTER JOIN DetalleLMateriales ON DetReq.IdDetalleLMateriales = DetalleLMateriales.IdDetalleLMateriales
LEFT OUTER JOIN LMateriales ON DetalleLMateriales.IdLMateriales=LMateriales.IdLMateriales
LEFT OUTER JOIN Empleados ON Requerimientos.IdComprador = Empleados.IdEmpleado
LEFT OUTER JOIN Obras ON Requerimientos.IdObra=Obras.IdObra
--LEFT OUTER JOIN TiposCompra ON Requerimientos.IdTipoCompra = TiposCompra.IdTipoCompra
WHERE 
	Requerimientos.Aprobo is not null and 
	(Requerimientos.Confirmado is null or Requerimientos.Confirmado<>'NO') and 
	(@TiposComprobante='T' or DetReq.Cumplido is null or (DetReq.Cumplido<>'SI' and DetReq.Cumplido<>'AN')) and 
	(@TiposComprobante='T' or Requerimientos.Cumplido is null or (Requerimientos.Cumplido<>'SI' and Requerimientos.Cumplido<>'AN')) and 
/*	 (@TiposComprobante='T' or DetReq.IdProveedor is null) AND 	*/
	(@TiposComprobante='T' or 
	 (DetReq.IdAproboAlmacen is not null or (Requerimientos.DirectoACompras is not null and Requerimientos.DirectoACompras='SI'))) and 
	IsNull(Requerimientos.Confirmado,'SI')<>'NO' and 
	IsNull(DetReq.TipoDesignacion,'CMP')<>'S/D' and 
	IsNull(DetReq.TipoDesignacion,'CMP')<>'STK' and 
	(@LiberarCircuito='NO' or 
	 (@LiberarCircuito='SI' and 
	  IsNull((Select Count(*) 
		From AutorizacionesPorComprobante Aut
		Where Aut.IdFormulario=3 and 
			Aut.IdComprobante=Requerimientos.IdRequerimiento),0)>=@CantidadFirmasRM))
GROUP BY DetReq.IdRequerimiento,Requerimientos.NumeroRequerimiento,Requerimientos.FechaRequerimiento,
		Requerimientos.MontoPrevisto,Empleados.Nombre,Obras.NumeroObra,Requerimientos.Cumplido,Obras.Descripcion,
		Convert(varchar(2000),Requerimientos.Observaciones)
ORDER BY Requerimientos.NumeroRequerimiento



GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_PorCC]    Script Date: 03/15/2011 11:49:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


















CREATE  Procedure [dbo].[Requerimientos_TX_PorCC]

AS 

declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='0111111111111111133'
set @vector_T='0594105301125505500'

SELECT 
 Requerimientos.IdRequerimiento,
 Requerimientos.NumeroRequerimiento as [Numero Req.],
 Requerimientos.IdRequerimiento as [IdReq],
 Requerimientos.FechaRequerimiento as [Fecha],
 Requerimientos.Cumplido as [Cump.],
 Requerimientos.Detalle as [Detalle],
 Obras.NumeroObra as [Obra],
 Case 	When Obras.Consorcial is null or Obras.Consorcial='NO' Then Null
	When Obras.Consorcial='SI' Then 
	 Case 	When Requerimientos.Consorcial is null or Requerimientos.Consorcial='SI' Then 'Consorcial'
		Else 'Cautiva'
	 End
	Else Null
 End as [Tipo obra],
 CentrosCosto.Descripcion as [Centro de costo],
 (Select Top 1 Empleados.Nombre from Empleados Where Requerimientos.Aprobo=Empleados.IdEmpleado) as [Liberada por],
 (Select Top 1 Empleados.Nombre from Empleados Where Requerimientos.IdSolicito=Empleados.IdEmpleado) as [Solicitada por],
 Sectores.Descripcion as [Sector],
 Requerimientos.MontoParaCompra as [Monto p/compra],
 Requerimientos.MontoPrevisto as [Monto previsto],
 Monedas.Nombre as [Moneda],
 ArchivosATransmitirDestinos.Descripcion as [Origen],
 (Select Count(*) From DetalleRequerimientos Where DetalleRequerimientos.IdRequerimiento=Requerimientos.IdRequerimiento) as [Cant.Items],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM Requerimientos
LEFT OUTER JOIN Obras ON Requerimientos.IdObra=Obras.IdObra
LEFT OUTER JOIN CentrosCosto ON Requerimientos.IdCentroCosto=CentrosCosto.IdCentroCosto
LEFT OUTER JOIN Sectores ON Requerimientos.IdSector=Sectores.IdSector
LEFT OUTER JOIN Monedas ON Requerimientos.IdMoneda=Monedas.IdMoneda
LEFT OUTER JOIN ArchivosATransmitirDestinos ON Requerimientos.IdOrigenTransmision = ArchivosATransmitirDestinos.IdArchivoATransmitirDestino
WHERE Requerimientos.IdCentroCosto is not null and 
	 (Requerimientos.Cumplido is null or Requerimientos.Cumplido='NO') and 
	 (Requerimientos.Confirmado is null or Requerimientos.Confirmado<>'NO')
ORDER BY NumeroRequerimiento

















GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_PorDetLmat]    Script Date: 03/15/2011 11:49:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE  Procedure [dbo].[Requerimientos_TX_PorDetLmat]
@IdDetalleLMateriales int
AS 
SELECT 
DetLMat.IdDetalleLMateriales,
LMat.NumeroLMateriales,
DetLMat.NumeroItem
FROM DetalleLMateriales DetLMat
LEFT OUTER JOIN LMateriales LMat ON DetLMat.IdLMateriales = LMat.IdLMateriales
WHERE DetLMat.IdDetalleLMateriales=@IdDetalleLMateriales
































GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_PorId]    Script Date: 03/15/2011 11:49:06 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


















CREATE Procedure [dbo].[Requerimientos_TX_PorId]
@IdRequerimiento int
AS 
SELECT * 
FROM Requerimientos
WHERE (IdRequerimiento=@IdRequerimiento)


















GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_PorIdOrigen]    Script Date: 03/15/2011 11:49:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[Requerimientos_TX_PorIdOrigen]
@IdRequerimientoOriginal int,
@IdOrigenTransmision int
AS 
SELECT Top 1 IdRequerimiento
FROM Requerimientos
WHERE IdRequerimientoOriginal=@IdRequerimientoOriginal and IdOrigenTransmision=@IdOrigenTransmision
































GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_PorIdOrigenDetalle]    Script Date: 03/15/2011 11:49:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[Requerimientos_TX_PorIdOrigenDetalle]
@IdDetalleRequerimientoOriginal int,
@IdOrigenTransmision int
AS 
SELECT Top 1 drm.IdDetalleRequerimiento,Requerimientos.IdRequerimiento
FROM DetalleRequerimientos drm
LEFT OUTER JOIN Requerimientos ON drm.IdRequerimiento=Requerimientos.IdRequerimiento
WHERE 	drm.IdDetalleRequerimientoOriginal=@IdDetalleRequerimientoOriginal and 
	drm.IdOrigenTransmision=@IdOrigenTransmision
































GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_PorNumero]    Script Date: 03/15/2011 11:49:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[Requerimientos_TX_PorNumero]
@NumeroRequerimiento int
AS 
SELECT * 
FROM Requerimientos
WHERE (NumeroRequerimiento=@NumeroRequerimiento)
































GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_PorObra]    Script Date: 03/15/2011 11:49:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


















CREATE  Procedure [dbo].[Requerimientos_TX_PorObra]

AS 

declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='0111111111111111133'
set @vector_T='0594105301125505500'

SELECT 
 Requerimientos.IdRequerimiento,
 Requerimientos.NumeroRequerimiento as [Numero Req.],
 Requerimientos.IdRequerimiento as [IdReq],
 Requerimientos.FechaRequerimiento as [Fecha],
 Requerimientos.Cumplido as [Cump.],
 Requerimientos.Detalle as [Detalle],
 Obras.NumeroObra as [Obra],
 Case 	When Obras.Consorcial is null or Obras.Consorcial='NO' Then Null
	When Obras.Consorcial='SI' Then 
	 Case 	When Requerimientos.Consorcial is null or Requerimientos.Consorcial='SI' Then 'Consorcial'
		Else 'Cautiva'
	 End
	Else Null
 End as [Tipo obra],
 CentrosCosto.Descripcion as [Centro de costo],
 (Select Top 1 Empleados.Nombre from Empleados Where Requerimientos.Aprobo=Empleados.IdEmpleado) as [Liberada por],
 (Select Top 1 Empleados.Nombre from Empleados Where Requerimientos.IdSolicito=Empleados.IdEmpleado) as [Solicitada por],
 Sectores.Descripcion as [Sector],
 Requerimientos.MontoParaCompra as [Monto p/compra],
 Requerimientos.MontoPrevisto as [Monto previsto],
 Monedas.Nombre as [Moneda],
 ArchivosATransmitirDestinos.Descripcion as [Origen],
 (Select Count(*) From DetalleRequerimientos Where DetalleRequerimientos.IdRequerimiento=Requerimientos.IdRequerimiento) as [Cant.Items],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM Requerimientos
LEFT OUTER JOIN Obras ON Requerimientos.IdObra=Obras.IdObra
LEFT OUTER JOIN CentrosCosto ON Requerimientos.IdCentroCosto=CentrosCosto.IdCentroCosto
LEFT OUTER JOIN Sectores ON Requerimientos.IdSector=Sectores.IdSector
LEFT OUTER JOIN Monedas ON Requerimientos.IdMoneda=Monedas.IdMoneda
LEFT OUTER JOIN ArchivosATransmitirDestinos ON Requerimientos.IdOrigenTransmision = ArchivosATransmitirDestinos.IdArchivoATransmitirDestino
WHERE Requerimientos.IdObra is not null and 
	 (Requerimientos.Cumplido is null or Requerimientos.Cumplido='NO') and 
	 (Requerimientos.Confirmado is null or Requerimientos.Confirmado<>'NO')
ORDER BY NumeroRequerimiento

















GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_PorPRESTOContrato]    Script Date: 03/15/2011 11:49:06 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




















CREATE Procedure [dbo].[Requerimientos_TX_PorPRESTOContrato]
@PRESTOContrato varchar(13)
AS 
SELECT Top 1 IdRequerimiento
FROM Requerimientos
WHERE PRESTOContrato=@PRESTOContrato




















GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:49:06 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE Procedure [dbo].[Requerimientos_TX_SetearComoTransmitido]

@IdRequerimiento int = Null

AS 

UPDATE Requerimientos
SET EnviarEmail=0
WHERE EnviarEmail<>0 and aprobo is not null and 
	(IsNull(@IdRequerimiento,-1)=-1 or IsNull(@IdRequerimiento,-1)=IdRequerimiento)



GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_SinControl]    Script Date: 03/15/2011 11:49:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[Requerimientos_TX_SinControl]
@IdRequerimiento int
AS 
Select
DetReq.IdDetalleRequerimiento
From DetalleRequerimientos DetReq
Where DetReq.IdRequerimiento=@IdRequerimiento and DetReq.IdControlCalidad is null
































GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_SinFechaNecesidad]    Script Date: 03/15/2011 11:49:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[Requerimientos_TX_SinFechaNecesidad]
@IdRequerimiento int
AS 
Select
DetReq.IdDetalleRequerimiento
From DetalleRequerimientos DetReq
LEFT OUTER JOIN Requerimientos ON DetReq.IdRequerimiento=Requerimientos.IdRequerimiento
LEFT OUTER JOIN Obras ON Requerimientos.IdObra=Obras.IdObra
Where 	DetReq.IdRequerimiento=@IdRequerimiento and DetReq.FechaEntrega is null and 
	Substring(Obras.NumeroObra,1,3)='OBT'
































GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_Sumarizadas]    Script Date: 03/15/2011 11:49:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE  Procedure [dbo].[Requerimientos_TX_Sumarizadas]
@IdObra int
AS 
declare @Clave as int
set @clave=0
SELECT 
	@Clave,
	substring(Articulos.Descripcion,1,85) as [Articulo],
	SUM(DetReq.Cantidad) as [Cant.],
	DetReq.Cantidad1 as [Med.1],
	DetReq.Cantidad2 as [Med.2]
FROM DetalleRequerimientos DetReq
LEFT OUTER JOIN Requerimientos Req ON DetReq.IdRequerimiento = Req.IdRequerimiento
LEFT OUTER JOIN Articulos ON DetReq.IdArticulo = Articulos.IdArticulo
WHERE (Req.IdObra=@IdObra)
GROUP BY Articulos.Descripcion,DetReq.Cantidad1,DetReq.Cantidad2
































GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_TodosLosDetalles]    Script Date: 03/15/2011 11:49:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE Procedure [dbo].[Requerimientos_TX_TodosLosDetalles]

@IdRequerimiento int

AS

SELECT
 DetReq.*,
 Requerimientos.NumeroRequerimiento,
 (Select Sum(DetalleRecepciones.Cantidad) 
	From DetalleRecepciones 
	Where DetalleRecepciones.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento) as [Entregado],
 Case	
	When	(Select Sum(DetalleRecepciones.Cantidad) 
		From DetalleRecepciones 
		Where DetalleRecepciones.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento) is not null
	Then	(DetReq.Cantidad - (Select Sum(DetalleRecepciones.Cantidad) 
					From DetalleRecepciones 
					Where DetalleRecepciones.IdDetalleRequerimiento=DetReq.IdDetalleRequerimiento))
	Else	DetReq.Cantidad
 End as [Pendiente],
 Requerimientos.IdObra as [IdObra],
 Obras.NumeroObra as [Obra],
 Articulos.Descripcion as [DescripcionArt],
 Articulos.Codigo,
 Case When DetReq.IdEquipoDestino is not null 
	Then IsNull((Select Top 1 A.NumeroInventario From Articulos A 
			Where DetReq.IdEquipoDestino=A.IdArticulo),'')
	Else ''
 End as [EquipoDestino]
FROM DetalleRequerimientos DetReq
LEFT OUTER JOIN Requerimientos ON Requerimientos.IdRequerimiento=DetReq.IdRequerimiento
LEFT OUTER JOIN Obras ON Requerimientos.IdObra = Obras.IdObra
LEFT OUTER JOIN Articulos ON DetReq.IdArticulo = Articulos.IdArticulo
WHERE DetReq.IdRequerimiento=@IdRequerimiento
ORDER BY DetReq.NumeroItem



GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_TT]    Script Date: 03/15/2011 11:49:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE  Procedure [dbo].[Requerimientos_TX_TT]

@IdRequerimiento int

AS 

SET NOCOUNT ON

/* PEDIDOS */
CREATE TABLE #Auxiliar4 
			(
			 IdRequerimiento INTEGER,
			 Pedidos VARCHAR(100)
			)

CREATE TABLE #Auxiliar5 
			(
			 IdRequerimiento INTEGER,
			 Pedido VARCHAR(15)
			)
INSERT INTO #Auxiliar5 
 SELECT 
  DetReq.IdRequerimiento,
  Convert(varchar,Pedidos.NumeroPedido)+
	Case When Pedidos.Subnumero is not null
		Then '/'+Convert(varchar,Pedidos.Subnumero)
		Else ''
	End
 FROM DetalleRequerimientos DetReq
 LEFT OUTER JOIN Requerimientos ON DetReq.IdRequerimiento = Requerimientos.IdRequerimiento
 LEFT OUTER JOIN DetallePedidos ON DetReq.IdDetalleRequerimiento = DetallePedidos.IdDetalleRequerimiento
 LEFT OUTER JOIN Pedidos ON DetallePedidos.IdPedido = Pedidos.IdPedido
 WHERE Requerimientos.IdRequerimiento=@IdRequerimiento

 UNION ALL

 SELECT 
  DetReq.IdRequerimiento,
  Convert(varchar,Ped.NumeroPedido)+
	Case When Ped.Subnumero is not null
		Then '/'+Convert(varchar,Ped.Subnumero)
		Else ''
	End+' P'
 FROM DetalleRequerimientos DetReq
 LEFT OUTER JOIN DetallePedidosPRONTO DetPed ON DetReq.IdDetalleRequerimiento = DetPed.IdDetalleRequerimiento
 LEFT OUTER JOIN PedidosPRONTO Ped ON DetPed.IdPedido = Ped.IdPedido

CREATE NONCLUSTERED INDEX IX__Auxiliar5 ON #Auxiliar5 (IdRequerimiento,Pedido) ON [PRIMARY]

INSERT INTO #Auxiliar4 
 SELECT 
  IdRequerimiento,
  ''
 FROM #Auxiliar5
 GROUP BY IdRequerimiento

/*  CURSOR  */
DECLARE @IdRequerimiento1 int, @Presupuesto varchar(13), @P varchar(100), @Corte int, @Pedido varchar(15)
SET @Corte=0
SET @P=''
DECLARE Cur CURSOR LOCAL FORWARD_ONLY 
	FOR	SELECT IdRequerimiento, Pedido
		FROM #Auxiliar5
		ORDER BY IdRequerimiento
OPEN Cur
FETCH NEXT FROM Cur INTO @IdRequerimiento1, @Pedido
WHILE @@FETCH_STATUS = 0
 BEGIN
	IF @Corte<>@IdRequerimiento1
	 BEGIN
		IF @Corte<>0
		 BEGIN
			UPDATE #Auxiliar4
			SET Pedidos = SUBSTRING(@P,1,100)
			WHERE #Auxiliar4.IdRequerimiento=@Corte
		 END
		SET @P=''
		SET @Corte=@IdRequerimiento1
	 END
	IF NOT @Pedido IS NULL
		IF PATINDEX('%['+@Pedido+']%', @P)=0
			SET @P=@P+'['+@Pedido+'] '
	FETCH NEXT FROM Cur INTO @IdRequerimiento1, @Pedido
 END
 IF @Corte<>0
  BEGIN
	UPDATE #Auxiliar4
	SET Pedidos = SUBSTRING(@P,1,100)
	WHERE #Auxiliar4.IdRequerimiento=@Corte
  END
CLOSE Cur
DEALLOCATE Cur

/* RECEPCION DE MATERIALES */
CREATE TABLE #Auxiliar6 
			(
			 IdRequerimiento INTEGER,
			 Recepciones VARCHAR(100)
			)

CREATE TABLE #Auxiliar7 
			(
			 IdRequerimiento INTEGER,
			 Recepcion VARCHAR(20)
			)
INSERT INTO #Auxiliar7 
 SELECT 
  DetReq.IdRequerimiento,
  Case When Recepciones.SubNumero is not null 
	 Then Substring(Substring('0000',1,4-Len(Convert(varchar,Recepciones.NumeroRecepcion1)))+
			Convert(varchar,Recepciones.NumeroRecepcion1)+'-'+
			Substring('00000000',1,8-Len(Convert(varchar,Recepciones.NumeroRecepcion2)))+
			Convert(varchar,Recepciones.NumeroRecepcion2)+'/'+
			Convert(varchar,Recepciones.SubNumero) ,1,20) 
	 Else Substring(Substring('0000',1,4-Len(Convert(varchar,Recepciones.NumeroRecepcion1)))+
			Convert(varchar,Recepciones.NumeroRecepcion1)+'-'+
			Substring('00000000',1,8-Len(Convert(varchar,Recepciones.NumeroRecepcion2)))+
			Convert(varchar,Recepciones.NumeroRecepcion2),1,20) 
  End
 FROM DetalleRequerimientos DetReq
 LEFT OUTER JOIN Requerimientos ON DetReq.IdRequerimiento = Requerimientos.IdRequerimiento
 LEFT OUTER JOIN DetalleRecepciones ON DetReq.IdDetalleRequerimiento = DetalleRecepciones.IdDetalleRequerimiento
 LEFT OUTER JOIN Recepciones ON DetalleRecepciones.IdRecepcion = Recepciones.IdRecepcion
 WHERE Requerimientos.IdRequerimiento=@IdRequerimiento

CREATE NONCLUSTERED INDEX IX__Auxiliar7 ON #Auxiliar7 (IdRequerimiento,Recepcion) ON [PRIMARY]

INSERT INTO #Auxiliar6 
 SELECT IdRequerimiento, ''
 FROM #Auxiliar7
 GROUP BY IdRequerimiento

/*  CURSOR  */
DECLARE @Recepcion varchar(20)
SET @Corte=0
SET @P=''
DECLARE Cur CURSOR LOCAL FORWARD_ONLY 
	FOR	SELECT IdRequerimiento, Recepcion
		FROM #Auxiliar7
		ORDER BY IdRequerimiento
OPEN Cur
FETCH NEXT FROM Cur INTO @IdRequerimiento1, @Recepcion
WHILE @@FETCH_STATUS = 0
   BEGIN
	IF @Corte<>@IdRequerimiento1
	   BEGIN
		IF @Corte<>0
		   BEGIN
			UPDATE #Auxiliar6
			SET Recepciones = SUBSTRING(@P,1,100)
			WHERE IdRequerimiento=@Corte
		   END
		SET @P=''
		SET @Corte=@IdRequerimiento1
	   END
	IF NOT @Recepcion IS NULL
		IF PATINDEX('%'+@Recepcion+' '+'%', @P)=0
			SET @P=@P+@Recepcion+' '
	FETCH NEXT FROM Cur INTO @IdRequerimiento1, @Recepcion
   END
   IF @Corte<>0
      BEGIN
	UPDATE #Auxiliar6
	SET Recepciones = SUBSTRING(@P,1,100)
	WHERE IdRequerimiento=@Corte
      END
CLOSE Cur
DEALLOCATE Cur


/* SALIDAS DE MATERIALES */
CREATE TABLE #Auxiliar8 
			(
			 IdRequerimiento INTEGER,
			 Salidas VARCHAR(100)
			)

CREATE TABLE #Auxiliar9 
			(
			 IdRequerimiento INTEGER,
			 Salida VARCHAR(13)
			)
INSERT INTO #Auxiliar9 
 SELECT 
  DetReq.IdRequerimiento,
  Substring(Substring('0000',1,4-Len(Convert(varchar,IsNull(SalidasMateriales.NumeroSalidaMateriales2,0))))+
	Convert(varchar,IsNull(SalidasMateriales.NumeroSalidaMateriales2,0))+'-'+
	Substring('00000000',1,8-Len(Convert(varchar,SalidasMateriales.NumeroSalidaMateriales)))+
	Convert(varchar,SalidasMateriales.NumeroSalidaMateriales),1,13)
 FROM DetalleRequerimientos DetReq
 LEFT OUTER JOIN Requerimientos ON DetReq.IdRequerimiento = Requerimientos.IdRequerimiento
 LEFT OUTER JOIN DetalleValesSalida ON DetReq.IdDetalleRequerimiento = DetalleValesSalida.IdDetalleRequerimiento
 LEFT OUTER JOIN DetalleSalidasMateriales ON DetalleValesSalida.IdDetalleValeSalida = DetalleSalidasMateriales.IdDetalleValeSalida
 LEFT OUTER JOIN SalidasMateriales ON DetalleSalidasMateriales.IdSalidaMateriales = SalidasMateriales.IdSalidaMateriales
 WHERE Requerimientos.IdRequerimiento=@IdRequerimiento

CREATE NONCLUSTERED INDEX IX__Auxiliar9 ON #Auxiliar9 (IdRequerimiento,Salida) ON [PRIMARY]

INSERT INTO #Auxiliar8 
 SELECT IdRequerimiento, ''
 FROM #Auxiliar9
 GROUP BY IdRequerimiento

/*  CURSOR  */
DECLARE @Salida varchar(13)
SET @Corte=0
SET @P=''
DECLARE Cur CURSOR LOCAL FORWARD_ONLY 
	FOR	SELECT IdRequerimiento, Salida
		FROM #Auxiliar9
		ORDER BY IdRequerimiento
OPEN Cur
FETCH NEXT FROM Cur INTO @IdRequerimiento1, @Salida
WHILE @@FETCH_STATUS = 0
   BEGIN
	IF @Corte<>@IdRequerimiento1
	   BEGIN
		IF @Corte<>0
		   BEGIN
			UPDATE #Auxiliar8
			SET Salidas = SUBSTRING(@P,1,100)
			WHERE IdRequerimiento=@Corte
		   END
		SET @P=''
		SET @Corte=@IdRequerimiento1
	   END
	IF NOT @Salida IS NULL
		IF PATINDEX('%'+@Salida+' '+'%', @P)=0
			SET @P=@P+@Salida+' '
	FETCH NEXT FROM Cur INTO @IdRequerimiento1, @Salida
   END
   IF @Corte<>0
      BEGIN
	UPDATE #Auxiliar8
	SET Salidas = SUBSTRING(@P,1,100)
	WHERE IdRequerimiento=@Corte
      END
CLOSE Cur
DEALLOCATE Cur

SET NOCOUNT OFF

Declare @vector_X varchar(30),@vector_T varchar(30)
Set @vector_X='01111111111111133'
Set @vector_T='05941100FFF511200'

SELECT 
 Requerimientos.IdRequerimiento,
 Requerimientos.NumeroRequerimiento as [Numero Req.],
 Requerimientos.IdRequerimiento as [IdReq],
 Requerimientos.FechaRequerimiento as [Fecha],
 Case When IsNull(Requerimientos.TipoRM,'NN')='NN' Then 'Normal'
	When IsNull(Requerimientos.TipoRM,'NN')='FF' Then 'F.Fijo'
	When IsNull(Requerimientos.TipoRM,'NN')='CC' Then 'C.Cte.'
 End as [Tipo],
 Requerimientos.Cumplido as [Cump.],
 Requerimientos.Detalle as [Detalle],
 Obras.NumeroObra+' '+Obras.Descripcion as [Obra],
 #Auxiliar4.Pedidos as [Pedidos],
 #Auxiliar6.Recepciones as [Recepciones],
 #Auxiliar8.Salidas as [Salidas],
 (Select Count(*) From DetalleRequerimientos Where DetalleRequerimientos.IdRequerimiento=Requerimientos.IdRequerimiento) as [Cant.Items],
 (Select Top 1 Empleados.Nombre from Empleados Where Requerimientos.Aprobo=Empleados.IdEmpleado) as [Liberada por],
 (Select Top 1 Empleados.Nombre from Empleados Where Requerimientos.IdSolicito=Empleados.IdEmpleado) as [Solicitada por],
 Sectores.Descripcion as [Sector],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM Requerimientos
LEFT OUTER JOIN Obras ON Requerimientos.IdObra=Obras.IdObra
LEFT OUTER JOIN CentrosCosto ON Requerimientos.IdCentroCosto=CentrosCosto.IdCentroCosto
LEFT OUTER JOIN Sectores ON Requerimientos.IdSector=Sectores.IdSector
LEFT OUTER JOIN Monedas ON Requerimientos.IdMoneda=Monedas.IdMoneda
LEFT OUTER JOIN ArchivosATransmitirDestinos ON Requerimientos.IdOrigenTransmision = ArchivosATransmitirDestinos.IdArchivoATransmitirDestino
LEFT OUTER JOIN #Auxiliar4 ON Requerimientos.IdRequerimiento=#Auxiliar4.IdRequerimiento
LEFT OUTER JOIN #Auxiliar6 ON Requerimientos.IdRequerimiento=#Auxiliar6.IdRequerimiento
LEFT OUTER JOIN #Auxiliar8 ON Requerimientos.IdRequerimiento=#Auxiliar8.IdRequerimiento
WHERE Requerimientos.IdRequerimiento=@IdRequerimiento and (Confirmado is null or Confirmado<>'NO')

DROP TABLE #Auxiliar4
DROP TABLE #Auxiliar5
DROP TABLE #Auxiliar6
DROP TABLE #Auxiliar7
DROP TABLE #Auxiliar8
DROP TABLE #Auxiliar9



GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TX_ValidarNumero]    Script Date: 03/15/2011 11:49:07 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




















CREATE Procedure [dbo].[Requerimientos_TX_ValidarNumero]
@NumeroRequerimiento int,
@IdRequerimiento int
AS 
SELECT * 
FROM Requerimientos
WHERE (@IdRequerimiento<=0 or Requerimientos.IdRequerimiento<>@IdRequerimiento) and 
	 (NumeroRequerimiento=@NumeroRequerimiento)




















GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TXAnio]    Script Date: 03/15/2011 11:49:07 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO





















CREATE Procedure [dbo].[Requerimientos_TXAnio]
As
SELECT 
min(CONVERT(varchar, YEAR(FechaRequerimiento)))  AS Período,YEAR(FechaRequerimiento)
FROM Requerimientos
WHERE FechaRequerimiento is not null
GROUP BY  YEAR(FechaRequerimiento) 
ORDER by  YEAR(FechaRequerimiento)  desc





















GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TXFecha]    Script Date: 03/15/2011 11:49:07 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE  Procedure [dbo].[Requerimientos_TXFecha]

@Desde datetime,
@Hasta datetime

AS 

SET NOCOUNT ON

DECLARE @ActivarSolicitudMateriales varchar(2)
SET @ActivarSolicitudMateriales=IsNull((Select Top 1 P.ActivarSolicitudMateriales 
					From Parametros P Where P.IdParametro=1),'NO')

/* PEDIDOS */
CREATE TABLE #Auxiliar4 
			(
			 IdRequerimiento INTEGER,
			 Pedidos VARCHAR(100)
			)

CREATE TABLE #Auxiliar5 
			(
			 IdRequerimiento INTEGER,
			 Pedido VARCHAR(15)
			)
INSERT INTO #Auxiliar5 
 SELECT 
  DetReq.IdRequerimiento,
  Convert(varchar,Pedidos.NumeroPedido)+
	Case When Pedidos.Subnumero is not null
		Then '/'+Convert(varchar,Pedidos.Subnumero)
		Else ''
	End
 FROM DetalleRequerimientos DetReq
 LEFT OUTER JOIN Requerimientos ON DetReq.IdRequerimiento = Requerimientos.IdRequerimiento
 LEFT OUTER JOIN DetallePedidos ON DetReq.IdDetalleRequerimiento = DetallePedidos.IdDetalleRequerimiento
 LEFT OUTER JOIN Pedidos ON DetallePedidos.IdPedido = Pedidos.IdPedido
 WHERE (Requerimientos.FechaRequerimiento Between @Desde And @Hasta)

 UNION ALL

 SELECT 
  DetReq.IdRequerimiento,
  Convert(varchar,Ped.NumeroPedido)+
	Case When Ped.Subnumero is not null
		Then '/'+Convert(varchar,Ped.Subnumero)
		Else ''
	End+' P'
 FROM DetalleRequerimientos DetReq
 LEFT OUTER JOIN DetallePedidosPRONTO DetPed ON DetReq.IdDetalleRequerimiento = DetPed.IdDetalleRequerimiento
 LEFT OUTER JOIN PedidosPRONTO Ped ON DetPed.IdPedido = Ped.IdPedido

CREATE NONCLUSTERED INDEX IX__Auxiliar5 ON #Auxiliar5 (IdRequerimiento,Pedido) ON [PRIMARY]

INSERT INTO #Auxiliar4 
 SELECT 
  IdRequerimiento,
  ''
 FROM #Auxiliar5
 GROUP BY IdRequerimiento

/*  CURSOR  */
DECLARE @IdRequerimiento int, @Presupuesto varchar(13), @P varchar(100), @Corte int, @Pedido varchar(15)
SET @Corte=0
SET @P=''
DECLARE Cur CURSOR LOCAL FORWARD_ONLY 
	FOR	SELECT IdRequerimiento, Pedido
		FROM #Auxiliar5
		ORDER BY IdRequerimiento
OPEN Cur
FETCH NEXT FROM Cur INTO @IdRequerimiento, @Pedido
WHILE @@FETCH_STATUS = 0
 BEGIN
	IF @Corte<>@IdRequerimiento
	 BEGIN
		IF @Corte<>0
		 BEGIN
			UPDATE #Auxiliar4
			SET Pedidos = SUBSTRING(@P,1,100)
			WHERE #Auxiliar4.IdRequerimiento=@Corte
		 END
		SET @P=''
		SET @Corte=@IdRequerimiento
	 END
	IF NOT @Pedido IS NULL
		IF PATINDEX('%['+@Pedido+']%', @P)=0
			SET @P=@P+'['+@Pedido+'] '
	FETCH NEXT FROM Cur INTO @IdRequerimiento, @Pedido
 END
 IF @Corte<>0
  BEGIN
	UPDATE #Auxiliar4
	SET Pedidos = SUBSTRING(@P,1,100)
	WHERE #Auxiliar4.IdRequerimiento=@Corte
  END
CLOSE Cur
DEALLOCATE Cur

/* RECEPCION DE MATERIALES */
CREATE TABLE #Auxiliar6 
			(
			 IdRequerimiento INTEGER,
			 Recepciones VARCHAR(100)
			)

CREATE TABLE #Auxiliar7 
			(
			 IdRequerimiento INTEGER,
			 Recepcion VARCHAR(20)
			)
INSERT INTO #Auxiliar7 
 SELECT 
  DetReq.IdRequerimiento,
  Case When Recepciones.SubNumero is not null 
	 Then Substring(Substring('0000',1,4-Len(Convert(varchar,Recepciones.NumeroRecepcion1)))+
			Convert(varchar,Recepciones.NumeroRecepcion1)+'-'+
			Substring('00000000',1,8-Len(Convert(varchar,Recepciones.NumeroRecepcion2)))+
			Convert(varchar,Recepciones.NumeroRecepcion2)+'/'+
			Convert(varchar,Recepciones.SubNumero) ,1,20) 
	 Else Substring(Substring('0000',1,4-Len(Convert(varchar,Recepciones.NumeroRecepcion1)))+
			Convert(varchar,Recepciones.NumeroRecepcion1)+'-'+
			Substring('00000000',1,8-Len(Convert(varchar,Recepciones.NumeroRecepcion2)))+
			Convert(varchar,Recepciones.NumeroRecepcion2),1,20) 
  End
 FROM DetalleRequerimientos DetReq
 LEFT OUTER JOIN Requerimientos ON DetReq.IdRequerimiento = Requerimientos.IdRequerimiento
 LEFT OUTER JOIN DetalleRecepciones ON DetReq.IdDetalleRequerimiento = DetalleRecepciones.IdDetalleRequerimiento
 LEFT OUTER JOIN Recepciones ON DetalleRecepciones.IdRecepcion = Recepciones.IdRecepcion
 WHERE (Requerimientos.FechaRequerimiento Between @Desde And @Hasta)

CREATE NONCLUSTERED INDEX IX__Auxiliar7 ON #Auxiliar7 (IdRequerimiento,Recepcion) ON [PRIMARY]

INSERT INTO #Auxiliar6 
 SELECT IdRequerimiento, ''
 FROM #Auxiliar7
 GROUP BY IdRequerimiento

/*  CURSOR  */
DECLARE @Recepcion varchar(20)
SET @Corte=0
SET @P=''
DECLARE Cur CURSOR LOCAL FORWARD_ONLY 
	FOR	SELECT IdRequerimiento, Recepcion
		FROM #Auxiliar7
		ORDER BY IdRequerimiento
OPEN Cur
FETCH NEXT FROM Cur INTO @IdRequerimiento, @Recepcion
WHILE @@FETCH_STATUS = 0
   BEGIN
	IF @Corte<>@IdRequerimiento
	   BEGIN
		IF @Corte<>0
		   BEGIN
			UPDATE #Auxiliar6
			SET Recepciones = SUBSTRING(@P,1,100)
			WHERE IdRequerimiento=@Corte
		   END
		SET @P=''
		SET @Corte=@IdRequerimiento
	   END
	IF NOT @Recepcion IS NULL
		IF PATINDEX('%'+@Recepcion+' '+'%', @P)=0
			SET @P=@P+@Recepcion+' '
	FETCH NEXT FROM Cur INTO @IdRequerimiento, @Recepcion
   END
   IF @Corte<>0
      BEGIN
	UPDATE #Auxiliar6
	SET Recepciones = SUBSTRING(@P,1,100)
	WHERE IdRequerimiento=@Corte
      END
CLOSE Cur
DEALLOCATE Cur


/* SALIDAS DE MATERIALES */
CREATE TABLE #Auxiliar8 
			(
			 IdRequerimiento INTEGER,
			 Salidas VARCHAR(100)
			)

CREATE TABLE #Auxiliar9 
			(
			 IdRequerimiento INTEGER,
			 Salida VARCHAR(13)
			)
INSERT INTO #Auxiliar9 
 SELECT 
  DetReq.IdRequerimiento,
  Substring(Substring('0000',1,4-Len(Convert(varchar,IsNull(SalidasMateriales.NumeroSalidaMateriales2,0))))+
	Convert(varchar,IsNull(SalidasMateriales.NumeroSalidaMateriales2,0))+'-'+
	Substring('00000000',1,8-Len(Convert(varchar,SalidasMateriales.NumeroSalidaMateriales)))+
	Convert(varchar,SalidasMateriales.NumeroSalidaMateriales),1,13)
 FROM DetalleRequerimientos DetReq
 LEFT OUTER JOIN Requerimientos ON DetReq.IdRequerimiento = Requerimientos.IdRequerimiento
 LEFT OUTER JOIN DetalleValesSalida ON DetReq.IdDetalleRequerimiento = DetalleValesSalida.IdDetalleRequerimiento
 LEFT OUTER JOIN DetalleSalidasMateriales ON DetalleValesSalida.IdDetalleValeSalida = DetalleSalidasMateriales.IdDetalleValeSalida
 LEFT OUTER JOIN SalidasMateriales ON DetalleSalidasMateriales.IdSalidaMateriales = SalidasMateriales.IdSalidaMateriales
 WHERE (Requerimientos.FechaRequerimiento Between @Desde And @Hasta)

CREATE NONCLUSTERED INDEX IX__Auxiliar9 ON #Auxiliar9 (IdRequerimiento,Salida) ON [PRIMARY]

INSERT INTO #Auxiliar8 
 SELECT IdRequerimiento, ''
 FROM #Auxiliar9
 GROUP BY IdRequerimiento

/*  CURSOR  */
DECLARE @Salida varchar(13)
SET @Corte=0
SET @P=''
DECLARE Cur CURSOR LOCAL FORWARD_ONLY 
	FOR	SELECT IdRequerimiento, Salida
		FROM #Auxiliar9
		ORDER BY IdRequerimiento
OPEN Cur
FETCH NEXT FROM Cur INTO @IdRequerimiento, @Salida
WHILE @@FETCH_STATUS = 0
   BEGIN
	IF @Corte<>@IdRequerimiento
	   BEGIN
		IF @Corte<>0
		   BEGIN
			UPDATE #Auxiliar8
			SET Salidas = SUBSTRING(@P,1,100)
			WHERE IdRequerimiento=@Corte
		   END
		SET @P=''
		SET @Corte=@IdRequerimiento
	   END
	IF NOT @Salida IS NULL
		IF PATINDEX('%'+@Salida+' '+'%', @P)=0
			SET @P=@P+@Salida+' '
	FETCH NEXT FROM Cur INTO @IdRequerimiento, @Salida
   END
   IF @Corte<>0
      BEGIN
	UPDATE #Auxiliar8
	SET Salidas = SUBSTRING(@P,1,100)
	WHERE IdRequerimiento=@Corte
      END
CLOSE Cur
DEALLOCATE Cur

SET NOCOUNT OFF

DECLARE @vector_X varchar(30),@vector_T varchar(30)
SET @vector_X='011111111111111133'
IF @ActivarSolicitudMateriales='SI'
	SET @vector_T='059419200FFF511200'
ELSE
	SET @vector_T='059411200FFF511200'

SELECT 
 Requerimientos.IdRequerimiento,
 Requerimientos.NumeroRequerimiento as [Numero Req.],
 Requerimientos.IdRequerimiento as [IdReq],
 Requerimientos.FechaRequerimiento as [Fecha],
 Case When IsNull(Requerimientos.TipoRM,'NN')='NN' Then 'Normal'
	When IsNull(Requerimientos.TipoRM,'NN')='FF' Then 'F.Fijo'
	When IsNull(Requerimientos.TipoRM,'NN')='CC' Then 'C.Cte.'
 End as [Tipo],
 Requerimientos.Cumplido as [Cump.],
 Requerimientos.Recepcionado as [Recibido],
 Requerimientos.Detalle as [Detalle],
 Obras.NumeroObra+' '+Obras.Descripcion as [Obra],
 #Auxiliar4.Pedidos as [Pedidos],
 #Auxiliar6.Recepciones as [Recepciones],
 #Auxiliar8.Salidas as [Salidas],
 (Select Count(*) From DetalleRequerimientos Where DetalleRequerimientos.IdRequerimiento=Requerimientos.IdRequerimiento) as [Cant.Items],
 (Select Top 1 Empleados.Nombre from Empleados Where Requerimientos.Aprobo=Empleados.IdEmpleado) as [Liberada por],
 (Select Top 1 Empleados.Nombre from Empleados Where Requerimientos.IdSolicito=Empleados.IdEmpleado) as [Solicitada por],
 Sectores.Descripcion as [Sector],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM Requerimientos
LEFT OUTER JOIN Obras ON Requerimientos.IdObra=Obras.IdObra
LEFT OUTER JOIN CentrosCosto ON Requerimientos.IdCentroCosto=CentrosCosto.IdCentroCosto
LEFT OUTER JOIN Sectores ON Requerimientos.IdSector=Sectores.IdSector
LEFT OUTER JOIN Monedas ON Requerimientos.IdMoneda=Monedas.IdMoneda
LEFT OUTER JOIN ArchivosATransmitirDestinos ON Requerimientos.IdOrigenTransmision = ArchivosATransmitirDestinos.IdArchivoATransmitirDestino
LEFT OUTER JOIN #Auxiliar4 ON Requerimientos.IdRequerimiento=#Auxiliar4.IdRequerimiento
LEFT OUTER JOIN #Auxiliar6 ON Requerimientos.IdRequerimiento=#Auxiliar6.IdRequerimiento
LEFT OUTER JOIN #Auxiliar8 ON Requerimientos.IdRequerimiento=#Auxiliar8.IdRequerimiento
WHERE (Requerimientos.FechaRequerimiento Between @Desde And @Hasta) and 
	(Confirmado is null or Confirmado<>'NO')
ORDER BY Requerimientos.FechaRequerimiento Desc, 
	Requerimientos.NumeroRequerimiento Desc

DROP TABLE #Auxiliar4
DROP TABLE #Auxiliar5



GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TXMes]    Script Date: 03/15/2011 11:49:07 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO





















CREATE Procedure [dbo].[Requerimientos_TXMes]
@Anio int
As
SELECT 
min(CONVERT(varchar, MONTH(FechaRequerimiento)) + '/' + CONVERT(varchar, YEAR(FechaRequerimiento)) )  AS Período,
YEAR(FechaRequerimiento), 
MONTH(FechaRequerimiento),
CASE 
	WHEN MONTH(FechaRequerimiento)=1 THEN 'Enero'
	WHEN MONTH(FechaRequerimiento)=2 THEN 'Febrero'
	WHEN MONTH(FechaRequerimiento)=3 THEN 'Marzo'
	WHEN MONTH(FechaRequerimiento)=4 THEN 'Abril'
	WHEN MONTH(FechaRequerimiento)=5 THEN 'Mayo'
	WHEN MONTH(FechaRequerimiento)=6 THEN 'Junio'
	WHEN MONTH(FechaRequerimiento)=7 THEN 'Julio'
	WHEN MONTH(FechaRequerimiento)=8 THEN 'Agosto'
	WHEN MONTH(FechaRequerimiento)=9 THEN 'Setiembre'
	WHEN MONTH(FechaRequerimiento)=10 THEN 'Octubre'
	WHEN MONTH(FechaRequerimiento)=11 THEN 'Noviembre'
	WHEN MONTH(FechaRequerimiento)=12 THEN 'Diciembre'
	ELSE 'Error'
END as Mes
FROM Requerimientos
WHERE YEAR(FechaRequerimiento)=@Anio
GROUP BY  YEAR(FechaRequerimiento) , MONTH(FechaRequerimiento)  
ORDER by  YEAR(FechaRequerimiento)  desc , MONTH(FechaRequerimiento)  desc





















GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TXPorNumeroObra]    Script Date: 03/15/2011 11:49:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE  Procedure [dbo].[Requerimientos_TXPorNumeroObra]
@NumeroObra varchar(10)
AS 
SELECT 
Requerimientos.IdRequerimiento,
Requerimientos.NumeroRequerimiento as Numero,
Requerimientos.FechaRequerimiento as Fecha,
Obras.NumeroObra as [Obra]
FROM Requerimientos
LEFT OUTER JOIN Obras ON Requerimientos.IdObra=Obras.IdObra
WHERE (not Requerimientos.IdObra is null and Obras.NumeroObra=@NumeroObra)
ORDER BY NumeroRequerimiento
































GO

/****** Object:  StoredProcedure [dbo].[Requerimientos_TXPorObra]    Script Date: 03/15/2011 11:49:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE PROCEDURE [dbo].[Requerimientos_TXPorObra]
@IdObra int
as
SELECT
Requerimientos.IdRequerimiento,
Requerimientos.NumeroRequerimiento,
Requerimientos.FechaRequerimiento
FROM Requerimientos
WHERE (not Requerimientos.IdObra is null and Requerimientos.IdObra = @IdObra)
GROUP BY Requerimientos.IdRequerimiento,Requerimientos.NumeroRequerimiento,Requerimientos.FechaRequerimiento
































GO

/****** Object:  StoredProcedure [dbo].[Reservas_A]    Script Date: 03/15/2011 11:49:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO







CREATE Procedure [dbo].[Reservas_A]
@IdReserva int  output,
@NumeroReserva int,
@FechaReserva datetime,
@Observaciones ntext,
@Tipo varchar(1),
@IdReservaOriginal int,
@IdOrigenTransmision int,
@FechaImportacionTransmision datetime
As 
Insert into Reservas
(
 NumeroReserva,
 FechaReserva,
 Observaciones,
 Tipo,
 IdReservaOriginal,
 IdOrigenTransmision,
 FechaImportacionTransmision
)
Values
(
 @NumeroReserva,
 @FechaReserva,
 @Observaciones,
 @Tipo,
 @IdReservaOriginal,
 @IdOrigenTransmision,
 @FechaImportacionTransmision
)
Select @IdReserva=@@identity
Return(@IdReserva)






GO

/****** Object:  StoredProcedure [dbo].[Reservas_E]    Script Date: 03/15/2011 11:49:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Reservas_E]
@IdReserva int  AS 
Delete Reservas
where (IdReserva=@IdReserva)
































GO

/****** Object:  StoredProcedure [dbo].[Reservas_Generar]    Script Date: 03/15/2011 11:49:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO

























CREATE Procedure [dbo].[Reservas_Generar]

AS

TRUNCATE TABLE _TempReservasStock

INSERT INTO _TempReservasStock
 SELECT
  DetLA.IdDetalleAcopios,
  'Acopio',
  Acopios.NumeroAcopio, 
  Acopios.Nombre,
  DetLA.NumeroItem,
  Acopios.IdObra,
  Obras.NumeroObra,
  (Select Top 1 Equipos.Tag From Equipos 
   Where Equipos.IdEquipo=(Select Top 1 LMateriales.IdEquipo 
			 From LMateriales
			 Where LMateriales.IdLMateriales=(Select Top 1 DetalleLMateriales.IdLMateriales 
							  From DetalleLMateriales
							  Where DetalleLMateriales.IdDetalleAcopios=DetLA.IdDetalleAcopios))),
  Articulos.Descripcion,
  DetLA.Cantidad,
  Unidades.Abreviatura,
  (SELECT Sum(Stock.CantidadUnidades) 
	FROM Stock
	WHERE Stock.IdArticulo=DetLA.IdArticulo),
  (SELECT Sum(dr.CantidadUnidades) 
	FROM DetalleReservas dr
	WHERE dr.IdArticulo=DetLA.IdArticulo),
  Null,
  Null,
  Empleados.Nombre,
  DetLA.FechaNecesidad,
  DetLA.Observaciones,
  Acopios.IdAcopio,
  Null,
  DetLA.IdArticulo,
  DetLA.IdUnidad
 FROM DetalleAcopios DetLA
 LEFT OUTER JOIN Acopios ON DetLA.IdAcopio = Acopios.IdAcopio
 LEFT OUTER JOIN Obras ON Acopios.IdObra = Obras.IdObra
 LEFT OUTER JOIN Empleados ON Acopios.Realizo=Empleados.IdEmpleado
 LEFT OUTER JOIN Articulos ON DetLA.IdArticulo = Articulos.IdArticulo
 LEFT OUTER JOIN Unidades ON DetLA.IdUnidad = Unidades.IdUnidad
 WHERE Acopios.Aprobo is not null AND DetLA.IdAproboAlmacen is null

 UNION ALL

 SELECT
  DetRM.IdDetalleRequerimiento,
  'R.M.',
  Requerimientos.NumeroRequerimiento,
  Null,
  DetRM.NumeroItem,
  Requerimientos.IdObra,
  Obras.NumeroObra,
  (Select Top 1 Equipos.Tag From Equipos 
   Where Equipos.IdEquipo=(Select Top 1 LMateriales.IdEquipo 
			 From LMateriales
			 Where LMateriales.IdLMateriales=(Select Top 1 DetalleLMateriales.IdLMateriales 
							  From DetalleLMateriales
							  Where DetalleLMateriales.IdDetalleLMateriales=DetRM.IdDetalleLMateriales))),
  Articulos.Descripcion,
  DetRM.Cantidad,
  Unidades.Abreviatura,
  (SELECT Sum(Stock.CantidadUnidades) 
	FROM Stock
	WHERE Stock.IdArticulo=DetRM.IdArticulo),
  (SELECT Sum(dr.CantidadUnidades) 
	FROM DetalleReservas dr
	WHERE dr.IdArticulo=DetRM.IdArticulo),
  Null,
  Null,
  Empleados.Nombre,
  DetRM.FechaEntrega,
  DetRM.Observaciones,
  Null,
  Requerimientos.IdRequerimiento,
  DetRM.IdArticulo,
  DetRM.IdUnidad
 FROM DetalleRequerimientos DetRM
 LEFT OUTER JOIN Requerimientos ON DetRM.IdRequerimiento = Requerimientos.IdRequerimiento
 LEFT OUTER JOIN Obras ON Requerimientos.IdObra = Obras.IdObra
 LEFT OUTER JOIN Empleados ON Requerimientos.IdSolicito=Empleados.IdEmpleado
 LEFT OUTER JOIN Articulos ON DetRM.IdArticulo = Articulos.IdArticulo
 LEFT OUTER JOIN Unidades ON DetRM.IdUnidad = Unidades.IdUnidad
 WHERE Requerimientos.Aprobo is not null and DetRM.IdAproboAlmacen is null and 
	 (Requerimientos.DirectoACompras is null or Requerimientos.DirectoACompras='NO')
























GO

/****** Object:  StoredProcedure [dbo].[Reservas_M]    Script Date: 03/15/2011 11:49:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO







CREATE Procedure [dbo].[Reservas_M]
@IdReserva int,
@NumeroReserva int,
@FechaReserva datetime,
@Observaciones ntext,
@Tipo varchar(1),
@IdReservaOriginal int,
@IdOrigenTransmision int,
@FechaImportacionTransmision datetime
As
Update Reservas
Set 
 NumeroReserva=@NumeroReserva,
 FechaReserva=@FechaReserva,
 Observaciones=@Observaciones,
 Tipo=@Tipo,
 IdReservaOriginal=@IdReservaOriginal,
 IdOrigenTransmision=@IdOrigenTransmision,
 FechaImportacionTransmision=@FechaImportacionTransmision
Where (IdReserva=@IdReserva)
Return(@IdReserva)






GO

/****** Object:  StoredProcedure [dbo].[Reservas_T]    Script Date: 03/15/2011 11:49:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Reservas_T]
@IdReserva int
AS 
SELECT * 
FROM Reservas
WHERE (IdReserva=@IdReserva)
































GO

/****** Object:  StoredProcedure [dbo].[Reservas_TT]    Script Date: 03/15/2011 11:49:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE  Procedure [dbo].[Reservas_TT]
AS 
SELECT 
Reservas.IdReserva,
Reservas.NumeroReserva as [Reserva],
Case 	When Tipo='M' Then 'Manual'
	When Tipo='A' Then 'Automatica'
	Else Null
End as [Tipo de reserva],
Reservas.FechaReserva as [Fecha],
Reservas.Observaciones
FROM Reservas
ORDER BY NumeroReserva
































GO

/****** Object:  StoredProcedure [dbo].[Reservas_TX_DesdeDetalle]    Script Date: 03/15/2011 11:49:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE  Procedure [dbo].[Reservas_TX_DesdeDetalle]
@IdDetalleReserva int
AS 
SELECT 
	Reservas.IdReserva,
	Reservas.NumeroReserva
FROM DetalleReservas
LEFT OUTER JOIN Reservas ON DetalleReservas.IdReserva = Reservas.IdReserva
WHERE (DetalleReservas.IdDetalleReserva=@IdDetalleReserva)
































GO

/****** Object:  StoredProcedure [dbo].[Reservas_TX_ParaTransmitir]    Script Date: 03/15/2011 11:49:07 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE Procedure [dbo].[Reservas_TX_ParaTransmitir]
AS 
SELECT *
FROM Reservas
WHERE EnviarEmail=1





GO

/****** Object:  StoredProcedure [dbo].[Reservas_TX_PorObra]    Script Date: 03/15/2011 11:49:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE PROCEDURE [dbo].[Reservas_TX_PorObra]
@IdObra int
as
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='00011111111133'
set @vector_T='00014110332100'
SELECT
DetRes.IdDetalleReserva,
DetRes.IdReserva,
DetRes.IdArticulo,
Reservas.NumeroReserva as [Reserva],
Reservas.FechaReserva as [Fecha],
Articulos.Descripcion as Articulo,
DetRes.Partida,
DetRes.CantidadUnidades as [Cant.],
DetRes.Cantidad1 as [Med.1],
DetRes.Cantidad2 as [Med.2],
Unidades.Descripcion as [En :],
DetRes.Retirada as [Retiró?],
@Vector_T as Vector_T,
@Vector_X as Vector_X
FROM DetalleReservas DetRes
LEFT OUTER JOIN Reservas ON DetRes.IdReserva = Reservas.IdReserva
LEFT OUTER JOIN Articulos ON DetRes.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Unidades ON DetRes.IdUnidad = Unidades.IdUnidad
WHERE DetRes.IdObra = @IdObra and (DetRes.Retirada is null or DetRes.Retirada<>'SI')
































GO

/****** Object:  StoredProcedure [dbo].[Reservas_TX_Reservar]    Script Date: 03/15/2011 11:49:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

























CREATE  Procedure [dbo].[Reservas_TX_Reservar]

AS 

declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='011111111111111111111133'
set @vector_T='021103111122220849999900'

SELECT
 IdComprobante,
 Tipo as [Comp.],
 Numero,
 Nombre,
 Item,
 Obra,
 Equipo,
 Articulo,
 Cantidad as [Cant.],
 Unidad as [En],
 Stock,
 Reservado,
 Case 	When Stock is not null and Reservado is not null Then 
		Case 	When Stock>=Reservado Then Stock-Reservado
			Else Null
		End
	When Stock is null and Reservado is not null Then Null
	Else Stock
 End as [Disponible],
 Reserva,
 Genero as [Generado por],
 Observaciones,
 FechaNecesidad as [Fec.nec.],
 IdAcopio,
 IdRequerimiento,
 IdObra,
 IdArticulo,
 IdUnidad,
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM _TempReservasStock
ORDER By Articulo,Tipo,Numero,Item
























GO

/****** Object:  StoredProcedure [dbo].[Reservas_TX_Reservar_Acopios]    Script Date: 03/15/2011 11:49:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE  Procedure [dbo].[Reservas_TX_Reservar_Acopios]
AS 
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='011111111111111111111133'
set @vector_T='021103111122220849999900'
SELECT
IdComprobante,
Tipo as [Comp.],
Numero,
Nombre,
Item,
Obra,
Equipo,
Articulo,
Cantidad as [Cant.],
Unidad as [En],
Stock,
Reservado,
Case 	When Stock is not null and Reservado is not null Then 
		Case 	When Stock>=Reservado Then Stock-Reservado
			Else Null
		End
	When Stock is null and Reservado is not null Then Null
	Else Stock
End as [Disponible],
Reserva,
Genero as [Generado por],
Observaciones,
FechaNecesidad as [Fec.nec.],
IdAcopio,
IdRequerimiento,
IdObra,
IdArticulo,
IdUnidad,
@Vector_T as Vector_T,
@Vector_X as Vector_X
FROM _TempReservasStock
WHERE Tipo='Acopio'
ORDER By Articulo,Tipo,Numero,Item
































GO

/****** Object:  StoredProcedure [dbo].[Reservas_TX_Reservar_PorObra]    Script Date: 03/15/2011 11:49:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE  Procedure [dbo].[Reservas_TX_Reservar_PorObra]
@IdObra int
AS 
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='011111111111111111111133'
set @vector_T='021103111122220849999900'
SELECT
IdComprobante,
Tipo as [Comp.],
Numero,
Nombre,
Item,
Obra,
Equipo,
Articulo,
Cantidad as [Cant.],
Unidad as [En],
Stock,
Reservado,
Case 	When Stock is not null and Reservado is not null Then 
		Case 	When Stock>=Reservado Then Stock-Reservado
			Else Null
		End
	When Stock is null and Reservado is not null Then Null
	Else Stock
End as [Disponible],
Reserva,
Genero as [Generado por],
Observaciones,
FechaNecesidad as [Fec.nec.],
IdAcopio,
IdRequerimiento,
IdObra,
IdArticulo,
IdUnidad,
@Vector_T as Vector_T,
@Vector_X as Vector_X
FROM _TempReservasStock
WHERE IdObra=@IdObra
ORDER By Articulo,Tipo,Numero,Item
































GO

/****** Object:  StoredProcedure [dbo].[Reservas_TX_Reservar_RM]    Script Date: 03/15/2011 11:49:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE  Procedure [dbo].[Reservas_TX_Reservar_RM]
AS 
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='011111111111111111111133'
set @vector_T='021103111122220849999900'
SELECT
IdComprobante,
Tipo as [Comp.],
Numero,
Nombre,
Item,
Obra,
Equipo,
Articulo,
Cantidad as [Cant.],
Unidad as [En],
Stock,
Reservado,
Case 	When Stock is not null and Reservado is not null Then 
		Case 	When Stock>=Reservado Then Stock-Reservado
			Else Null
		End
	When Stock is null and Reservado is not null Then Null
	Else Stock
End as [Disponible],
Reserva,
Genero as [Generado por],
Observaciones,
FechaNecesidad as [Fec.nec.],
IdAcopio,
IdRequerimiento,
IdObra,
IdArticulo,
IdUnidad,
@Vector_T as Vector_T,
@Vector_X as Vector_X
FROM _TempReservasStock
WHERE Tipo='R.M.'
ORDER By Articulo,Tipo,Numero,Item
































GO

/****** Object:  StoredProcedure [dbo].[Reservas_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:49:07 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE Procedure [dbo].[Reservas_TX_SetearComoTransmitido]
AS 
UPDATE Reservas
SET EnviarEmail=0
WHERE EnviarEmail<>0





GO

/****** Object:  StoredProcedure [dbo].[Reservas_TX_Sumarizadas]    Script Date: 03/15/2011 11:49:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE  Procedure [dbo].[Reservas_TX_Sumarizadas]
@IdObra int
AS 
declare @Clave as int
set @clave=0
SELECT 
	@Clave,
	substring(Articulos.Descripcion,1,85) as [Articulo],
	SUM(DetRes.CantidadUnidades) as [Cant.],
	DetRes.Cantidad1 as [Med.1],
	DetRes.Cantidad2 as [Med.2]
FROM DetalleReservas DetRes
LEFT OUTER JOIN Reservas Res ON DetRes.IdReserva = Res.IdReserva
LEFT OUTER JOIN Articulos ON DetRes.IdArticulo = Articulos.IdArticulo
WHERE (DetRes.IdObra=@IdObra)
GROUP BY Articulos.Descripcion,DetRes.Cantidad1,DetRes.Cantidad2
































GO

/****** Object:  StoredProcedure [dbo].[Reservas_TX_Todas]    Script Date: 03/15/2011 11:49:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE PROCEDURE [dbo].[Reservas_TX_Todas]
as
declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='000111111111133'
set @vector_T='000143311220100'
SELECT
DetRes.IdDetalleReserva,
DetRes.IdReserva,
DetRes.IdArticulo,
Reservas.NumeroReserva as [Reserva],
Reservas.FechaReserva as [Fecha],
Obras.NumeroObra as [Obra],
Articulos.Descripcion as [Articulo],
DetRes.Partida,
DetRes.CantidadUnidades as [Cant.],
DetRes.Cantidad1 as [Med.1],
DetRes.Cantidad2 as [Med.2],
Unidades.Descripcion as [En :],
DetRes.Retirada as [Retiró?],
@Vector_T as Vector_T,
@Vector_X as Vector_X
FROM DetalleReservas DetRes
LEFT OUTER JOIN Reservas ON DetRes.IdReserva = Reservas.IdReserva
LEFT OUTER JOIN Obras ON DetRes.IdObra = Obras.IdObra
LEFT OUTER JOIN Articulos ON DetRes.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Unidades ON DetRes.IdUnidad = Unidades.IdUnidad
WHERE DetRes.Retirada is null or DetRes.Retirada<>'SI'
































GO

/****** Object:  StoredProcedure [dbo].[Reservas_TX_TT]    Script Date: 03/15/2011 11:49:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE  Procedure [dbo].[Reservas_TX_TT]
@IdReserva int
AS 
SELECT 
Reservas.IdReserva,
Reservas.NumeroReserva as [Reserva],
Case 	When Tipo='M' Then 'Manual'
	When Tipo='A' Then 'Automatica'
	Else Null
End as [Tipo de reserva],
Reservas.FechaReserva as [Fecha],
Reservas.Observaciones
FROM Reservas
WHERE (IdReserva=@IdReserva)
































GO

/****** Object:  StoredProcedure [dbo].[Rubros_E]    Script Date: 03/15/2011 11:49:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[Rubros_E]
@IdRubro smallint  AS 
Delete Rubros
where (IdRubro=@IdRubro)
































GO

/****** Object:  StoredProcedure [dbo].[Rubros_M]    Script Date: 03/15/2011 11:49:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE  Procedure [dbo].[Rubros_M]
@IdRubro int ,
@Descripcion varchar(50),
@Abreviatura varchar(15),
@EnviarEmail tinyint,
@IdCuenta int,
@IdCuentaCompras int
AS
IF Exists(Select ru.IdRubro From Rubros ru Where ru.IdRubro=@IdRubro)
	BEGIN
		UPDATE Rubros
		SET
		 Descripcion=@Descripcion,
		 Abreviatura=@Abreviatura,
		 EnviarEmail=@EnviarEmail,
		 IdCuenta=@IdCuenta,
		 IdCuentaCompras=@IdCuentaCompras
		WHERE IdRubro=@IdRubro
	END
ELSE
	BEGIN
		INSERT INTO [Rubros]
		(
		 IdRubro,
		 Descripcion,
		 Abreviatura,
		 EnviarEmail,
		 IdCuenta,
		 IdCuentaCompras
		)
		VALUES
		(
		 @IdRubro,
		 @Descripcion,
		 @Abreviatura,
		 @EnviarEmail,
		 @IdCuenta,
		 @IdCuentaCompras
		)
	END
RETURN(@IdRubro)





GO

/****** Object:  StoredProcedure [dbo].[Rubros_T]    Script Date: 03/15/2011 11:49:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Rubros_T]
@IdRubro smallint
AS 
SELECT*
FROM Rubros
where (IdRubro=@IdRubro)
































GO

/****** Object:  StoredProcedure [dbo].[Rubros_TL]    Script Date: 03/15/2011 11:49:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[Rubros_TL]
AS 
Select IdRubro,Descripcion as Titulo
FROM Rubros order by Descripcion
































GO

/****** Object:  StoredProcedure [dbo].[Rubros_TT]    Script Date: 03/15/2011 11:49:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




















CREATE Procedure [dbo].[Rubros_TT]
AS 
SELECT
 Rubros.IdRubro,
 Rubros.Descripcion,
 Rubros.Abreviatura,
 (Select Top 1 Cuentas.Descripcion From Cuentas
  Where Cuentas.IdCuenta=Rubros.IdCuenta) as [Cuenta ventas],
 (Select Top 1 Cuentas.Descripcion From Cuentas
  Where Cuentas.IdCuenta=Rubros.IdCuentaCompras) as [Cuenta compras]
FROM Rubros
ORDER by Rubros.Descripcion



















GO

/****** Object:  StoredProcedure [dbo].[Rubros_TX_ParaTransmitir]    Script Date: 03/15/2011 11:49:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Rubros_TX_ParaTransmitir]
AS 
SELECT *
FROM Rubros
WHERE EnviarEmail=1
































GO

/****** Object:  StoredProcedure [dbo].[Rubros_TX_ParaTransmitir_Todos]    Script Date: 03/15/2011 11:49:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Rubros_TX_ParaTransmitir_Todos]
AS 
SELECT *
FROM Rubros
































GO

/****** Object:  StoredProcedure [dbo].[Rubros_TX_PorId]    Script Date: 03/15/2011 11:49:08 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






























CREATE Procedure [dbo].[Rubros_TX_PorId]
@IdRubro smallint
AS 
SELECT*
FROM Rubros
WHERE (IdRubro=@IdRubro)































GO

/****** Object:  StoredProcedure [dbo].[Rubros_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:49:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[Rubros_TX_SetearComoTransmitido]
AS 
Update Rubros
SET EnviarEmail=0
WHERE EnviarEmail<>0
































GO

/****** Object:  StoredProcedure [dbo].[Rubros_TX_TT]    Script Date: 03/15/2011 11:49:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




















CREATE Procedure [dbo].[Rubros_TX_TT]
@IdRubro smallint
AS 
SELECT
 Rubros.IdRubro,
 Rubros.Descripcion,
 Rubros.Abreviatura,
 (Select Top 1 Cuentas.Descripcion From Cuentas
  Where Cuentas.IdCuenta=Rubros.IdCuenta) as [Cuenta ventas],
 (Select Top 1 Cuentas.Descripcion From Cuentas
  Where Cuentas.IdCuenta=Rubros.IdCuentaCompras) as [Cuenta compras]
FROM Rubros
WHERE (IdRubro=@IdRubro)



















GO

/****** Object:  StoredProcedure [dbo].[SalidasMateriales_A]    Script Date: 03/15/2011 11:49:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE Procedure [dbo].[SalidasMateriales_A]

@IdSalidaMateriales int  output,
@NumeroSalidaMateriales int,
@FechaSalidaMateriales datetime,
@IdObra int,
@Observaciones ntext,
@Aprobo int,
@TipoSalida int,
@IdTransportista1 int,
@IdTransportista2 int,
@Cliente varchar(50),
@Direccion varchar(50),
@Localidad varchar(50),
@CodigoPostal varchar(30),
@CondicionIva varchar(30),
@Cuit varchar(13),
@NumeroSalidaMateriales2 int,
@ACargo varchar(1),
@Emitio int,
@ValePreimpreso int,
@Referencia varchar(50),
@NumeroDocumento varchar(30),
@Patente1 varchar(25),
@Patente2 varchar(25),
@Patente3 varchar(25),
@Patente4 varchar(25),
@IdProveedor int,
@Chofer varchar(50),
@IdCentroCosto int,
@FechaRegistracion datetime,
@Anulada varchar(2),
@FechaAnulacion datetime,
@IdUsuarioAnulo int,
@EnviarEmail tinyint,
@IdSalidaMaterialesOriginal int,
@IdOrigenTransmision int,
@FechaImportacionTransmision datetime,
@MotivoAnulacion ntext,
@NumeroRemitoTransporte1 int,
@NumeroRemitoTransporte2 int,
@IdChofer int,
@IdFlete int,
@PesoBruto numeric(18,2),
@PesoNeto numeric(18,2),
@Tara numeric(18,2),
@CantidadEnOrigen numeric(18,2),
@DistanciaRecorrida numeric(18,2),
@CodigoTarifador varchar(10),
@IdPesada int

AS 

INSERT INTO SalidasMateriales
(
 NumeroSalidaMateriales,
 FechaSalidaMateriales,
 IdObra,
 Observaciones,
 Aprobo,
 TipoSalida,
 IdTransportista1,
 IdTransportista2,
 Cliente,
 Direccion,
 Localidad,
 CodigoPostal,
 CondicionIva,
 Cuit,
 NumeroSalidaMateriales2,
 ACargo,
 Emitio,
 ValePreimpreso,
 Referencia,
 NumeroDocumento,
 Patente1,
 Patente2,
 Patente3,
 Patente4,
 IdProveedor,
 Chofer,
 IdCentroCosto,
 FechaRegistracion,
 Anulada,
 FechaAnulacion,
 IdUsuarioAnulo,
 EnviarEmail,
 IdSalidaMaterialesOriginal,
 IdOrigenTransmision,
 FechaImportacionTransmision,
 MotivoAnulacion,
 NumeroRemitoTransporte1,
 NumeroRemitoTransporte2,
 IdChofer,
 IdFlete,
 PesoBruto,
 PesoNeto,
 Tara,
 CantidadEnOrigen,
 DistanciaRecorrida,
 CodigoTarifador,
 IdPesada
)
VALUES
(
 @NumeroSalidaMateriales,
 @FechaSalidaMateriales,
 @IdObra,
 @Observaciones,
 @Aprobo,
 @TipoSalida,
 @IdTransportista1,
 @IdTransportista2,
 @Cliente,
 @Direccion,
 @Localidad,
 @CodigoPostal,
 @CondicionIva,
 @Cuit,
 @NumeroSalidaMateriales2,
 @ACargo,
 @Emitio,
 @ValePreimpreso,
 @Referencia,
 @NumeroDocumento,
 @Patente1,
 @Patente2,
 @Patente3,
 @Patente4,
 @IdProveedor,
 @Chofer,
 @IdCentroCosto,
 GetDate(),
 @Anulada,
 @FechaAnulacion,
 @IdUsuarioAnulo,
 @EnviarEmail,
 @IdSalidaMaterialesOriginal,
 @IdOrigenTransmision,
 @FechaImportacionTransmision,
 @MotivoAnulacion,
 @NumeroRemitoTransporte1,
 @NumeroRemitoTransporte2,
 @IdChofer,
 @IdFlete,
 @PesoBruto,
 @PesoNeto,
 @Tara,
 @CantidadEnOrigen,
 @DistanciaRecorrida,
 @CodigoTarifador,
 @IdPesada
)

SELECT @IdSalidaMateriales=@@identity
RETURN(@IdSalidaMateriales)

GO

/****** Object:  StoredProcedure [dbo].[SalidasMateriales_AjustarStockSalidaMaterialesAnulada]    Script Date: 03/15/2011 11:49:08 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE PROCEDURE [dbo].[SalidasMateriales_AjustarStockSalidaMaterialesAnulada]

@IdSalidaMateriales int

AS

CREATE TABLE #Auxiliar1	
			(
			 IdDetalleSalidaMateriales INTEGER,
			 IdArticulo INTEGER,
			 Cantidad NUMERIC(18,2),
			 IdUnidad INTEGER,
			 Partida VARCHAR(20),
			 IdUbicacion INTEGER,
			 IdObra INTEGER
			)

INSERT INTO #Auxiliar1 
 SELECT IdDetalleSalidaMateriales, IdArticulo, Cantidad, IdUnidad, Partida, IdUbicacion, IdObra
 FROM DetalleSalidasMateriales DetSal
 WHERE DetSal.IdSalidaMateriales = @IdSalidaMateriales

CREATE NONCLUSTERED INDEX IX__Auxiliar1 ON #Auxiliar1 (IdDetalleSalidaMateriales) ON [PRIMARY]

/*  CURSOR  */
DECLARE @IdStock int, @IdDetalleSalidaMateriales int, @IdArticulo int, @Cantidad numeric(18,2), 
	@IdUnidad int, @Partida varchar(20), @IdUbicacion int, @IdObra int

DECLARE Cur CURSOR LOCAL FORWARD_ONLY 
	FOR	SELECT IdDetalleSalidaMateriales, IdArticulo, Cantidad, IdUnidad, Partida, 
			IdUbicacion, IdObra
		FROM #Auxiliar1
		ORDER BY IdDetalleSalidaMateriales
OPEN Cur
FETCH NEXT FROM Cur INTO @IdDetalleSalidaMateriales, @IdArticulo, @Cantidad, @IdUnidad, 
			 @Partida, @IdUbicacion, @IdObra
WHILE @@FETCH_STATUS = 0
   BEGIN
	SET @IdStock=IsNull((Select Top 1 Stock.IdStock
				From Stock 
				Where IdArticulo=@IdArticulo and Partida=@Partida and 
					IdUbicacion=@IdUbicacion and IdObra=@IdObra and 
					IdUnidad=@IdUnidad),0)
	IF @IdStock>0 
		UPDATE Stock
		SET CantidadUnidades=IsNull(CantidadUnidades,0)+@Cantidad
		WHERE IdArticulo=@IdArticulo and Partida=@Partida and 
			IdUbicacion=@IdUbicacion and IdObra=@IdObra and IdUnidad=@IdUnidad
	ELSE
		INSERT INTO Stock (IdArticulo, Partida, CantidadUnidades, CantidadAdicional,
					IdUnidad, IdUbicacion, IdObra)
		VALUES (@IdArticulo, @Partida, @Cantidad, Null, @IdUnidad, @IdUbicacion, @IdObra)

	FETCH NEXT FROM Cur INTO @IdDetalleSalidaMateriales, @IdArticulo, @Cantidad, @IdUnidad, 
				 @Partida, @IdUbicacion, @IdObra
   END
CLOSE Cur
DEALLOCATE Cur

DROP TABLE #Auxiliar1



GO

/****** Object:  StoredProcedure [dbo].[SalidasMateriales_E]    Script Date: 03/15/2011 11:49:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[SalidasMateriales_E]
@IdSalidaMateriales int  AS 
Delete SalidasMateriales
where (IdSalidaMateriales=@IdSalidaMateriales)
































GO

/****** Object:  StoredProcedure [dbo].[SalidasMateriales_M]    Script Date: 03/15/2011 11:49:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE Procedure [dbo].[SalidasMateriales_M]

@IdSalidaMateriales int,
@NumeroSalidaMateriales int,
@FechaSalidaMateriales datetime,
@IdObra int,
@Observaciones ntext,
@Aprobo int,
@TipoSalida int,
@IdTransportista1 int,
@IdTransportista2 int,
@Cliente varchar(50),
@Direccion varchar(50),
@Localidad varchar(50),
@CodigoPostal varchar(30),
@CondicionIva varchar(30),
@Cuit varchar(13),
@NumeroSalidaMateriales2 int,
@ACargo varchar(1),
@Emitio int,
@ValePreimpreso int,
@Referencia varchar(50),
@NumeroDocumento varchar(30),
@Patente1 varchar(25),
@Patente2 varchar(25),
@Patente3 varchar(25),
@Patente4 varchar(25),
@IdProveedor int,
@Chofer varchar(50),
@IdCentroCosto int,
@FechaRegistracion datetime,
@Anulada varchar(2),
@FechaAnulacion datetime,
@IdUsuarioAnulo int,
@EnviarEmail tinyint,
@IdSalidaMaterialesOriginal int,
@IdOrigenTransmision int,
@FechaImportacionTransmision datetime,
@MotivoAnulacion ntext,
@NumeroRemitoTransporte1 int,
@NumeroRemitoTransporte2 int,
@IdChofer int,
@IdFlete int,
@PesoBruto numeric(18,2),
@PesoNeto numeric(18,2),
@Tara numeric(18,2),
@CantidadEnOrigen numeric(18,2),
@DistanciaRecorrida numeric(18,2),
@CodigoTarifador varchar(10),
@IdPesada int

AS

UPDATE SalidasMateriales
SET
 NumeroSalidaMateriales=@NumeroSalidaMateriales,
 FechaSalidaMateriales=@FechaSalidaMateriales,
 IdObra=@IdObra,
 Observaciones=@Observaciones,
 Aprobo=@Aprobo,
 TipoSalida=@TipoSalida,
 IdTransportista1=@IdTransportista1,
 IdTransportista2=@IdTransportista2,
 Cliente=@Cliente,
 Direccion=@Direccion,
 Localidad=@Localidad,
 CodigoPostal=@CodigoPostal,
 CondicionIva=@CondicionIva,
 Cuit=@Cuit,
 NumeroSalidaMateriales2=@NumeroSalidaMateriales2,
 ACargo=@ACargo,
 Emitio=@Emitio,
 ValePreimpreso=@ValePreimpreso,
 Referencia=@Referencia,
 NumeroDocumento=@NumeroDocumento,
 Patente1=@Patente1,
 Patente2=@Patente2,
 Patente3=@Patente3,
 Patente4=@Patente4,
 IdProveedor=@IdProveedor,
 Chofer=@Chofer,
 IdCentroCosto=@IdCentroCosto,
 FechaRegistracion=@FechaRegistracion,
 Anulada=@Anulada,
 FechaAnulacion=@FechaAnulacion,
 IdUsuarioAnulo=@IdUsuarioAnulo,
 EnviarEmail=@EnviarEmail,
 IdSalidaMaterialesOriginal=@IdSalidaMaterialesOriginal,
 IdOrigenTransmision=@IdOrigenTransmision,
 FechaImportacionTransmision=@FechaImportacionTransmision,
 MotivoAnulacion=@MotivoAnulacion,
 NumeroRemitoTransporte1=@NumeroRemitoTransporte1,
 NumeroRemitoTransporte2=@NumeroRemitoTransporte2,
 IdChofer=@IdChofer,
 IdFlete=@IdFlete,
 PesoBruto=@PesoBruto,
 PesoNeto=@PesoNeto,
 Tara=@Tara,
 CantidadEnOrigen=@CantidadEnOrigen,
 DistanciaRecorrida=@DistanciaRecorrida,
 CodigoTarifador=@CodigoTarifador,
 IdPesada=@IdPesada
WHERE (IdSalidaMateriales=@IdSalidaMateriales)

RETURN(@IdSalidaMateriales)

GO

/****** Object:  StoredProcedure [dbo].[SalidasMateriales_T]    Script Date: 03/15/2011 11:49:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE Procedure [dbo].[SalidasMateriales_T]
@IdSalidaMateriales int
AS 
SELECT * 
FROM SalidasMateriales
WHERE (IdSalidaMateriales=@IdSalidaMateriales)



GO

/****** Object:  StoredProcedure [dbo].[SalidasMateriales_TT]    Script Date: 03/15/2011 11:49:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE  Procedure [dbo].[SalidasMateriales_TT]

AS 

SET NOCOUNT ON

CREATE TABLE #Auxiliar2 
			(
			 IdSalidaMateriales INTEGER,
			 Requerimientos VARCHAR(100)
			)

CREATE TABLE #Auxiliar3 
			(
			 IdSalidaMateriales INTEGER,
			 NumeroRequerimiento INTEGER
			)
INSERT INTO #Auxiliar3 
 SELECT 
  DetSal.IdSalidaMateriales,
  Requerimientos.NumeroRequerimiento
 FROM DetalleSalidasMateriales DetSal
 LEFT OUTER JOIN SalidasMateriales ON DetSal.IdSalidaMateriales = SalidasMateriales.IdSalidaMateriales
 LEFT OUTER JOIN DetalleValesSalida ON DetSal.IdDetalleValeSalida = DetalleValesSalida.IdDetalleValeSalida
 LEFT OUTER JOIN DetalleRequerimientos ON DetalleValesSalida.IdDetalleRequerimiento = DetalleRequerimientos.IdDetalleRequerimiento
 LEFT OUTER JOIN Requerimientos ON DetalleRequerimientos.IdRequerimiento = Requerimientos.IdRequerimiento

CREATE NONCLUSTERED INDEX IX__Auxiliar3 ON #Auxiliar3 (IdSalidaMateriales,NumeroRequerimiento) ON [PRIMARY]

INSERT INTO #Auxiliar2 
 SELECT IdSalidaMateriales, ''
 FROM #Auxiliar3
 GROUP BY IdSalidaMateriales

/*  CURSOR  */
DECLARE @IdSalidaMateriales int, @Corte int, @NumeroRequerimiento int, @RMs varchar(100)
SET @Corte=0
SET @RMs=''
DECLARE Cur CURSOR LOCAL FORWARD_ONLY 
	FOR	SELECT IdSalidaMateriales, NumeroRequerimiento
		FROM #Auxiliar3
		ORDER BY IdSalidaMateriales
OPEN Cur
FETCH NEXT FROM Cur INTO @IdSalidaMateriales, @NumeroRequerimiento
WHILE @@FETCH_STATUS = 0
 BEGIN
	IF @Corte<>@IdSalidaMateriales
	   BEGIN
		IF @Corte<>0
		   BEGIN
			UPDATE #Auxiliar2
			SET Requerimientos = SUBSTRING(@RMs,1,100)
			WHERE #Auxiliar2.IdSalidaMateriales=@Corte
		   END
		SET @RMs=''
		SET @Corte=@IdSalidaMateriales
	   END
	IF NOT @NumeroRequerimiento IS NULL
		IF PATINDEX('%['+CONVERT(VARCHAR,@NumeroRequerimiento)+']'+'%', @RMs)=0
			SET @RMs=@RMs+'['+CONVERT(VARCHAR,@NumeroRequerimiento)+'] '
	FETCH NEXT FROM Cur INTO @IdSalidaMateriales, @NumeroRequerimiento
 END
 IF @Corte<>0
  BEGIN
	UPDATE #Auxiliar2
	SET Requerimientos = SUBSTRING(@RMs,1,100)
	WHERE #Auxiliar2.IdSalidaMateriales=@Corte
  END
CLOSE Cur
DEALLOCATE Cur

SET NOCOUNT OFF

DECLARE @vector_X varchar(30),@vector_T varchar(30)
SET @vector_X='0111111111111133'
SET @vector_T='07554F5222255200'

SELECT 
 SalidasMateriales.IdSalidaMateriales,
 CASE	WHEN SalidasMateriales.TipoSalida=0 THEN 'Salida a fabrica'
	WHEN SalidasMateriales.TipoSalida=1 THEN 'Salida a obra'
	WHEN SalidasMateriales.TipoSalida=2 THEN 'Para facturar'
	WHEN SalidasMateriales.TipoSalida=3 THEN 'A Proveedor'
	WHEN SalidasMateriales.TipoSalida=4 THEN 'Devolucion de fabrica'
	ELSE Null
 END as [Tipo de salida],
 Substring(Substring('0000',1,4-Len(Convert(varchar,SalidasMateriales.NumeroSalidaMateriales2)))+
	Convert(varchar,SalidasMateriales.NumeroSalidaMateriales2)+'-'+
	Substring('00000000',1,8-Len(Convert(varchar,SalidasMateriales.NumeroSalidaMateriales)))+
	Convert(varchar,SalidasMateriales.NumeroSalidaMateriales),1,20) as [Nro. de salida],
 SalidasMateriales.ValePreimpreso as [Vale preimpreso],
 SalidasMateriales.FechaSalidaMateriales as [Fecha],
 #Auxiliar2.Requerimientos as [Requerimientos],
 Obras.NumeroObra as [Numero obra],
 CentrosCosto.Descripcion as [Centro de costo],
 Empleados.Nombre as [Aprobo],
 SalidasMateriales.Cliente as [Cliente],
 Proveedores.RazonSocial as [Proveedor],
 SalidasMateriales.Direccion as [Direccion],
 SalidasMateriales.Localidad as [Localidad],
 SalidasMateriales.CodigoPostal as [Cod.pos.],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM SalidasMateriales
LEFT OUTER JOIN Obras ON SalidasMateriales.IdObra = Obras.IdObra
LEFT OUTER JOIN CentrosCosto ON SalidasMateriales.IdCentroCosto = CentrosCosto.IdCentroCosto
LEFT OUTER JOIN Empleados ON SalidasMateriales.Aprobo = Empleados.IdEmpleado
LEFT OUTER JOIN Proveedores ON SalidasMateriales.IdProveedor = Proveedores.IdProveedor
LEFT OUTER JOIN #Auxiliar2 ON SalidasMateriales.IdSalidaMateriales = #Auxiliar2.IdSalidaMateriales
ORDER BY SalidasMateriales.FechaSalidaMateriales

DROP TABLE #Auxiliar2
DROP TABLE #Auxiliar3



GO

/****** Object:  StoredProcedure [dbo].[SalidasMateriales_TX_DetalladoPorFechas]    Script Date: 03/15/2011 11:49:09 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO







CREATE PROCEDURE [dbo].[SalidasMateriales_TX_DetalladoPorFechas]

@Desde datetime,
@Hasta datetime,
@IdObra int,
@CodigoSalida int,
@IdGrupoObra int

AS

SELECT
 SalidasMateriales.IdSalidaMateriales,
 SalidasMateriales.ValePreimpreso as [Preimpreso],
 Case When SalidasMateriales.NumeroSalidaMateriales2 is not null
	Then Substring('0000',1,4-Len(Convert(varchar,SalidasMateriales.NumeroSalidaMateriales2)))+
		Convert(varchar,SalidasMateriales.NumeroSalidaMateriales2)
	Else '0000'
 End + ' - ' +
 Case When SalidasMateriales.NumeroSalidaMateriales is not null
	Then Substring('00000000',1,8-Len(Convert(varchar,SalidasMateriales.NumeroSalidaMateriales)))+
		Convert(varchar,SalidasMateriales.NumeroSalidaMateriales)
 End as [Numero],
 Obras.NumeroObra as [Obra],
 Articulos.Codigo as [Codigo],
 Unidades.Abreviatura as [Unidad],
 Articulos.Descripcion as [Descripcion],
 DetSal.Cantidad as [Cantidad],
 DetSal.Cantidad1 as [Med1],
 DetSal.Cantidad2 as [Med2],
 Articulos.CostoPPP,
 Articulos.CostoPPPDolar,
 Articulos.CostoReposicion,
 Articulos.CostoReposicionDolar
FROM DetalleSalidasMateriales DetSal
LEFT OUTER JOIN SalidasMateriales ON DetSal.IdSalidaMateriales = SalidasMateriales.IdSalidaMateriales
LEFT OUTER JOIN Articulos ON DetSal.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Unidades ON DetSal.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN Obras ON SalidasMateriales.IdObra=Obras.IdObra
WHERE SalidasMateriales.FechaSalidaMateriales>=@Desde and SalidasMateriales.FechaSalidaMateriales<=@Hasta and 
	(@IdObra=-1 or SalidasMateriales.IdObra=@IdObra) and  (@IdGrupoObra=-1 or Obras.IdGrupoObra=@IdGrupoObra) and 
	SalidasMateriales.TipoSalida=@CodigoSalida
ORDER BY Articulos.Descripcion






GO

/****** Object:  StoredProcedure [dbo].[SalidasMateriales_TX_ParaTransmitir]    Script Date: 03/15/2011 11:49:09 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE Procedure [dbo].[SalidasMateriales_TX_ParaTransmitir]
AS 
SELECT *
FROM SalidasMateriales
WHERE EnviarEmail=1





GO

/****** Object:  StoredProcedure [dbo].[SalidasMateriales_TX_Recepciones_y_Envios]    Script Date: 03/15/2011 11:49:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO







CREATE  Procedure [dbo].[SalidasMateriales_TX_Recepciones_y_Envios]

AS 

SELECT 
 SalidasMateriales.IdSalidaMateriales,
 SalidasMateriales.FechaSalidaMateriales as [Fecha],
 'Envio' as [Tipo],
 CASE	WHEN SalidasMateriales.TipoSalida=0 THEN 'Salida a fabrica'
	WHEN SalidasMateriales.TipoSalida=1 THEN 'Salida a obra'
	WHEN SalidasMateriales.TipoSalida=2 THEN 'Para facturar'
	WHEN SalidasMateriales.TipoSalida=3 THEN 'A Proveedor'
	WHEN SalidasMateriales.TipoSalida=4 THEN 'Devolucion de fabrica'
	ELSE Null
 END as [Para],
 str(NumeroSalidaMateriales2,4)+'-'+str(NumeroSalidaMateriales,8) as [Numero],
 Null as [Proveedor],
 Transportistas.RazonSocial as [Transportista],
 Obras.NumeroObra as [Obra],
 Null as [Pedido],
 Null as [RM]
FROM SalidasMateriales
LEFT OUTER JOIN Obras ON SalidasMateriales.IdObra = Obras.IdObra
LEFT OUTER JOIN Empleados ON SalidasMateriales.Aprobo = Empleados.IdEmpleado
LEFT OUTER JOIN Transportistas ON SalidasMateriales.IdTransportista1 = Transportistas.IdTransportista

UNION ALL 

SELECT 
 Recepciones.IdRecepcion,
 FechaRecepcion as [Fecha],
 'Recepcion' as [Tipo],
 Null as [Para],
 str(NumeroRecepcion1,4)+'-'+str(NumeroRecepcion2,8) as [Numero],
 Proveedores.RazonSocial as [Proveedor],
 Transportistas.RazonSocial as [Transportista],
 Null as [Obra],
 Pedidos.NumeroPedido as [Pedido],
 Requerimientos.NumeroRequerimiento as [RM]
FROM Recepciones
LEFT OUTER JOIN Pedidos ON Recepciones.IdPedido = Pedidos.IdPedido
LEFT OUTER JOIN Requerimientos ON Recepciones.IdRequerimiento = Requerimientos.IdRequerimiento
LEFT OUTER JOIN Proveedores ON Recepciones.IdProveedor = Proveedores.IdProveedor
LEFT OUTER JOIN Transportistas ON Recepciones.IdTransportista = Transportistas.IdTransportista
WHERE (Recepciones.Anulada is null or Recepciones.Anulada<>'SI')

ORDER BY [Fecha]






GO

/****** Object:  StoredProcedure [dbo].[SalidasMateriales_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:49:09 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE Procedure [dbo].[SalidasMateriales_TX_SetearComoTransmitido]
AS 
UPDATE SalidasMateriales
SET EnviarEmail=0
WHERE EnviarEmail<>0





GO

/****** Object:  StoredProcedure [dbo].[SalidasMateriales_TX_Todos]    Script Date: 03/15/2011 11:49:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




















CREATE  Procedure [dbo].[SalidasMateriales_TX_Todos]

AS 

SELECT 
 SalidasMateriales.IdSalidaMateriales,
 SalidasMateriales.FechaSalidaMateriales as [Fecha],
 'Envio' as [Tipo],
 CASE	WHEN SalidasMateriales.TipoSalida=0 THEN 'Salida a fabrica'
	WHEN SalidasMateriales.TipoSalida=1 THEN 'Salida a obra'
	WHEN SalidasMateriales.TipoSalida=2 THEN 'Para facturar'
	WHEN SalidasMateriales.TipoSalida=3 THEN 'A Proveedor'
	WHEN SalidasMateriales.TipoSalida=4 THEN 'Devolucion de fabrica'
	ELSE Null
 END as [Para],
 str(NumeroSalidaMateriales2,4)+'-'+str(NumeroSalidaMateriales,8) as [Numero],
 Null as [Proveedor],
 Transportistas.RazonSocial as [Transportista],
 Obras.NumeroObra as [Obra],
 Null as [Pedido],
 Null as [RM]
FROM SalidasMateriales
LEFT OUTER JOIN Obras ON SalidasMateriales.IdObra = Obras.IdObra
LEFT OUTER JOIN Empleados ON SalidasMateriales.Aprobo = Empleados.IdEmpleado
LEFT OUTER JOIN Transportistas ON SalidasMateriales.IdTransportista1 = Transportistas.IdTransportista
ORDER BY [Fecha]



















GO

/****** Object:  StoredProcedure [dbo].[SalidasMateriales_TX_TraerVale]    Script Date: 03/15/2011 11:49:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE PROCEDURE [dbo].[SalidasMateriales_TX_TraerVale]
@IdDetalleValeSalida int
as
SELECT
DetVal.IdDetalleValeSalida,
ValesSalida.NumeroValeSalida as [Vale]
FROM DetalleValesSalida DetVal
LEFT OUTER JOIN ValesSalida ON DetVal.IdValeSalida = ValesSalida.IdValeSalida
WHERE (DetVal.IdDetalleValeSalida = @IdDetalleValeSalida)
































GO

/****** Object:  StoredProcedure [dbo].[SalidasMateriales_TX_TT]    Script Date: 03/15/2011 11:49:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE  Procedure [dbo].[SalidasMateriales_TX_TT]

@IdSalidaMateriales int

AS 

SET NOCOUNT ON

CREATE TABLE #Auxiliar2 
			(
			 IdSalidaMateriales INTEGER,
			 Requerimientos VARCHAR(100)
			)

CREATE TABLE #Auxiliar3 
			(
			 IdSalidaMateriales INTEGER,
			 NumeroRequerimiento INTEGER
			)
INSERT INTO #Auxiliar3 
 SELECT 
  DetSal.IdSalidaMateriales,
  Requerimientos.NumeroRequerimiento
 FROM DetalleSalidasMateriales DetSal
 LEFT OUTER JOIN SalidasMateriales ON DetSal.IdSalidaMateriales = SalidasMateriales.IdSalidaMateriales
 LEFT OUTER JOIN DetalleValesSalida ON DetSal.IdDetalleValeSalida = DetalleValesSalida.IdDetalleValeSalida
 LEFT OUTER JOIN DetalleRequerimientos ON DetalleValesSalida.IdDetalleRequerimiento = DetalleRequerimientos.IdDetalleRequerimiento
 LEFT OUTER JOIN Requerimientos ON DetalleRequerimientos.IdRequerimiento = Requerimientos.IdRequerimiento
 WHERE (DetSal.IdSalidaMateriales=@IdSalidaMateriales)

CREATE NONCLUSTERED INDEX IX__Auxiliar3 ON #Auxiliar3 (IdSalidaMateriales,NumeroRequerimiento) ON [PRIMARY]

INSERT INTO #Auxiliar2 
 SELECT IdSalidaMateriales, ''
 FROM #Auxiliar3
 GROUP BY IdSalidaMateriales

/*  CURSOR  */
DECLARE @IdSalidaMateriales1 int, @Corte int, @NumeroRequerimiento int, @RMs varchar(100)
SET @Corte=0
SET @RMs=''
DECLARE Cur CURSOR LOCAL FORWARD_ONLY 
	FOR	SELECT IdSalidaMateriales, NumeroRequerimiento
		FROM #Auxiliar3
		ORDER BY IdSalidaMateriales
OPEN Cur
FETCH NEXT FROM Cur INTO @IdSalidaMateriales1, @NumeroRequerimiento
WHILE @@FETCH_STATUS = 0
 BEGIN
	IF @Corte<>@IdSalidaMateriales1
	   BEGIN
		IF @Corte<>0
		   BEGIN
			UPDATE #Auxiliar2
			SET Requerimientos = SUBSTRING(@RMs,1,100)
			WHERE #Auxiliar2.IdSalidaMateriales=@Corte
		   END
		SET @RMs=''
		SET @Corte=@IdSalidaMateriales1
	   END
	IF NOT @NumeroRequerimiento IS NULL
		IF PATINDEX('%'+CONVERT(VARCHAR,@NumeroRequerimiento)+' '+'%', @RMs)=0
			SET @RMs=@RMs+CONVERT(VARCHAR,@NumeroRequerimiento)+' '
	FETCH NEXT FROM Cur INTO @IdSalidaMateriales1, @NumeroRequerimiento
 END
 IF @Corte<>0
  BEGIN
	UPDATE #Auxiliar2
	SET Requerimientos = SUBSTRING(@RMs,1,100)
	WHERE #Auxiliar2.IdSalidaMateriales=@Corte
  END
CLOSE Cur
DEALLOCATE Cur

SET NOCOUNT OFF

DECLARE @vector_X varchar(30),@vector_T varchar(30)
SET @vector_X='0111111111111133'
SET @vector_T='07554F5222255200'

SELECT 
 SalidasMateriales.IdSalidaMateriales,
 CASE	WHEN SalidasMateriales.TipoSalida=0 THEN 'Salida a fabrica'
	WHEN SalidasMateriales.TipoSalida=1 THEN 'Salida a obra'
	WHEN SalidasMateriales.TipoSalida=2 THEN 'Para facturar'
	WHEN SalidasMateriales.TipoSalida=3 THEN 'A Proveedor'
	WHEN SalidasMateriales.TipoSalida=4 THEN 'Devolucion de fabrica'
	ELSE Null
 END as [Tipo de salida],
 Substring(Substring('0000',1,4-Len(Convert(varchar,SalidasMateriales.NumeroSalidaMateriales2)))+
	Convert(varchar,SalidasMateriales.NumeroSalidaMateriales2)+'-'+
	Substring('00000000',1,8-Len(Convert(varchar,SalidasMateriales.NumeroSalidaMateriales)))+
	Convert(varchar,SalidasMateriales.NumeroSalidaMateriales),1,20) as [Nro. de salida],
 SalidasMateriales.ValePreimpreso as [Vale preimpreso],
 SalidasMateriales.FechaSalidaMateriales as [Fecha],
 #Auxiliar2.Requerimientos as [Requerimientos],
 Obras.NumeroObra as [Numero obra],
 CentrosCosto.Descripcion as [Centro de costo],
 Empleados.Nombre as [Aprobo],
 SalidasMateriales.Cliente as [Cliente],
 Proveedores.RazonSocial as [Proveedor],
 SalidasMateriales.Direccion as [Direccion],
 SalidasMateriales.Localidad as [Localidad],
 SalidasMateriales.CodigoPostal as [Cod.pos.],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM SalidasMateriales
LEFT OUTER JOIN Obras ON SalidasMateriales.IdObra = Obras.IdObra
LEFT OUTER JOIN CentrosCosto ON SalidasMateriales.IdCentroCosto = CentrosCosto.IdCentroCosto
LEFT OUTER JOIN Empleados ON SalidasMateriales.Aprobo = Empleados.IdEmpleado
LEFT OUTER JOIN Proveedores ON SalidasMateriales.IdProveedor = Proveedores.IdProveedor
LEFT OUTER JOIN #Auxiliar2 ON SalidasMateriales.IdSalidaMateriales = #Auxiliar2.IdSalidaMateriales
WHERE (SalidasMateriales.IdSalidaMateriales=@IdSalidaMateriales)

DROP TABLE #Auxiliar2
DROP TABLE #Auxiliar3



GO

/****** Object:  StoredProcedure [dbo].[SalidasMaterialesPRONTO_A]    Script Date: 03/15/2011 11:49:09 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE Procedure [dbo].[SalidasMaterialesPRONTO_A]

@IdSalidaMaterialesPRONTO int  output,
@IdDetalleSalidaMateriales int,
@IdSalidaMateriales int,
@NumeroSalidaMateriales2 int,
@NumeroSalidaMateriales int,
@FechaSalidaMateriales datetime,
@Observaciones ntext,
@IdArticulo int,
@Cantidad numeric(12,2),
@IdUnidad int,
@IdObra int,
@CostoUnitario numeric(18,4),
@IdMoneda int,
@IdDetalleRequerimientoOriginal int

AS
 
IF Not Exists(Select Top 1 IdDetalleSalidaMateriales
		From SalidasMaterialesPRONTO
		Where IdDetalleSalidaMateriales=@IdDetalleSalidaMateriales)
   BEGIN
	INSERT INTO [SalidasMaterialesPRONTO]
	(
	 IdDetalleSalidaMateriales,
	 IdSalidaMateriales,
	 NumeroSalidaMateriales2,
	 NumeroSalidaMateriales,
	 FechaSalidaMateriales,
	 Observaciones,
	 IdArticulo,
	 Cantidad,
	 IdUnidad,
	 IdObra,
	 CostoUnitario,
	 IdMoneda,
	 IdDetalleRequerimientoOriginal
	)
	VALUES 
	(
	 @IdDetalleSalidaMateriales,
	 @IdSalidaMateriales,
	 @NumeroSalidaMateriales2,
	 @NumeroSalidaMateriales,
	 @FechaSalidaMateriales,
	 @Observaciones,
	 @IdArticulo,
	 @Cantidad,
	 @IdUnidad,
	 @IdObra,
	 @CostoUnitario,
	 @IdMoneda,
	 @IdDetalleRequerimientoOriginal
	)
	SELECT @IdSalidaMaterialesPRONTO=@@identity
   END
RETURN(@IdSalidaMaterialesPRONTO)



GO

/****** Object:  StoredProcedure [dbo].[SalidasMaterialesPRONTO_T]    Script Date: 03/15/2011 11:49:09 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE Procedure [dbo].[SalidasMaterialesPRONTO_T]
@IdSalidaMaterialesPRONTO int
AS 
SELECT * 
FROM SalidasMaterialesPRONTO
WHERE (IdSalidaMaterialesPRONTO=@IdSalidaMaterialesPRONTO)



GO

/****** Object:  StoredProcedure [dbo].[SalidasMaterialesPRONTO_TX_DatosPorIdDetalleSalidaMateriales]    Script Date: 03/15/2011 11:49:10 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE Procedure [dbo].[SalidasMaterialesPRONTO_TX_DatosPorIdDetalleSalidaMateriales]
@IdDetalleSalidaMateriales int
AS 
SELECT 
 Det.*, 
 Det.Cantidad - IsNull((Select Sum(IsNull(DetRec.Cantidad,0)) 
			From DetalleRecepciones DetRec 
			Left Outer Join Recepciones On Recepciones.IdRecepcion=DetRec.IdRecepcion
			Where DetRec.IdDetalleSalidaMaterialesPRONTO=Det.IdDetalleSalidaMateriales and 
				IsNull(Recepciones.Anulada,'NO')<>'SI'),0) as [Pendiente],
 Articulos.Codigo as [Codigo],
 Articulos.Descripcion as [Articulo],
 Obras.NumeroObra as [Obra],
 Requerimientos.NumeroRequerimiento as [RM],
 DetReq.NumeroItem as [ItemRM]
FROM SalidasMaterialesPRONTO Det
LEFT OUTER JOIN Articulos ON Det.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Obras ON Det.IdObra = Obras.IdObra
LEFT OUTER JOIN DetalleRequerimientos DetReq ON Det.IdDetalleRequerimientoOriginal = DetReq.IdDetalleRequerimiento
LEFT OUTER JOIN Requerimientos ON DetReq.IdRequerimiento = Requerimientos.IdRequerimiento
WHERE (Det.IdDetalleSalidaMateriales=@IdDetalleSalidaMateriales)



GO

/****** Object:  StoredProcedure [dbo].[SalidasMaterialesPRONTO_TX_Pendientes]    Script Date: 03/15/2011 11:49:10 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO



CREATE  Procedure [dbo].[SalidasMaterialesPRONTO_TX_Pendientes]

AS 

Declare @vector_X varchar(30),@vector_T varchar(30)
Set @vector_X='011111111111133'
Set @vector_T='0E944D144000400'

SELECT
 Det.IdDetalleSalidaMateriales,
 Substring('0000',1,4-Len(Convert(varchar,Det.NumeroSalidaMateriales2)))+
	Convert(varchar,Det.NumeroSalidaMateriales2)+'-'+
	Substring('00000000',1,8-Len(Convert(varchar,Det.NumeroSalidaMateriales)))+
	Convert(varchar,Det.NumeroSalidaMateriales) as [Nro. de salida],
 Det.IdDetalleSalidaMateriales as [IdAux],
 Det.FechaSalidaMateriales as [Fecha],
 Articulos.Codigo as [Codigo],
 Articulos.Descripcion as [Articulo],
 Det.Cantidad as [Cant.],
 (Select Sum(IsNull(DetRec.Cantidad,0)) 
	From DetalleRecepciones DetRec 
	Left Outer Join Recepciones On Recepciones.IdRecepcion=DetRec.IdRecepcion
	Where DetRec.IdDetalleSalidaMaterialesPRONTO=Det.IdDetalleSalidaMateriales and 
		IsNull(Recepciones.Anulada,'NO')<>'SI') as [Recepcionado],
 Det.Cantidad - IsNull((Select Sum(IsNull(DetRec.Cantidad,0)) 
			From DetalleRecepciones DetRec 
			Left Outer Join Recepciones On Recepciones.IdRecepcion=DetRec.IdRecepcion
			Where DetRec.IdDetalleSalidaMaterialesPRONTO=Det.IdDetalleSalidaMateriales and 
				IsNull(Recepciones.Anulada,'NO')<>'SI'),0) as [Pendiente],
 Unidades.Abreviatura as [Un],
 Requerimientos.NumeroRequerimiento as [RM],
 DetReq.NumeroItem as [It.RM],
 Det.Observaciones as [Observaciones],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM SalidasMaterialesPRONTO Det
LEFT OUTER JOIN Articulos ON Det.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Unidades ON Det.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN DetalleRequerimientos DetReq ON Det.IdDetalleRequerimientoOriginal = DetReq.IdDetalleRequerimiento
LEFT OUTER JOIN Requerimientos ON DetReq.IdRequerimiento = Requerimientos.IdRequerimiento
WHERE IsNull((Select Sum(IsNull(DetRec.Cantidad,0)) 
		From DetalleRecepciones DetRec 
		Left Outer Join Recepciones On Recepciones.IdRecepcion=DetRec.IdRecepcion
		Where DetRec.IdDetalleSalidaMaterialesPRONTO=Det.IdDetalleSalidaMateriales and 
			IsNull(Recepciones.Anulada,'NO')<>'SI'),0)<Det.Cantidad


GO

/****** Object:  StoredProcedure [dbo].[Sectores_A]    Script Date: 03/15/2011 11:49:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO






























CREATE Procedure [dbo].[Sectores_A]
@IdSector int  output,
@Descripcion varchar(50),
@SectorDeObra varchar(2),
@IdEncargado int,
@SeUsaEnPresupuestos varchar(2),
@OrdenPresentacion int
AS 
Insert into [Sectores]
(
Descripcion,
SectorDeObra,
IdEncargado,
SeUsaEnPresupuestos,
OrdenPresentacion
)
Values
(
@Descripcion,
@SectorDeObra,
@IdEncargado,
@SeUsaEnPresupuestos,
@OrdenPresentacion
)
Select @IdSector=@@identity
Return(@IdSector)






























GO

/****** Object:  StoredProcedure [dbo].[Sectores_E]    Script Date: 03/15/2011 11:49:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Sectores_E]
@IdSector int  AS 
Delete Sectores
where (IdSector=@IdSector)































GO

/****** Object:  StoredProcedure [dbo].[Sectores_M]    Script Date: 03/15/2011 11:49:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE  Procedure [dbo].[Sectores_M]
@IdSector int,
@Descripcion varchar(50),
@SectorDeObra varchar(2),
@IdEncargado int,
@SeUsaEnPresupuestos varchar(2),
@OrdenPresentacion int
AS
IF Exists(Select Aux.IdSector From Sectores Aux Where Aux.IdSector=@IdSector)
	BEGIN
		UPDATE Sectores
		SET
		 Descripcion=@Descripcion,
		 SectorDeObra=@SectorDeObra,
		 IdEncargado=@IdEncargado,
		 SeUsaEnPresupuestos=@SeUsaEnPresupuestos,
		 OrdenPresentacion=@OrdenPresentacion
		WHERE IdSector=@IdSector
	END
ELSE
	BEGIN
		INSERT INTO [Sectores]
		(
		 IdSector,
		 Descripcion,
		 SectorDeObra,
		 IdEncargado,
		 SeUsaEnPresupuestos,
		 OrdenPresentacion
		)
		VALUES
		(
		 @IdSector,
		 @Descripcion,
		 @SectorDeObra,
		 @IdEncargado,
		 @SeUsaEnPresupuestos,
		 @OrdenPresentacion
		)
	END
RETURN(@IdSector)





GO

/****** Object:  StoredProcedure [dbo].[Sectores_T]    Script Date: 03/15/2011 11:49:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE Procedure [dbo].[Sectores_T]
@IdSector int
AS 
SELECT *
FROM Sectores
WHERE (IdSector=@IdSector)



GO

/****** Object:  StoredProcedure [dbo].[Sectores_TL]    Script Date: 03/15/2011 11:49:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Sectores_TL]
AS 
Select IdSector,Descripcion as Titulo
FROM Sectores
order by Descripcion































GO

/****** Object:  StoredProcedure [dbo].[Sectores_TT]    Script Date: 03/15/2011 11:49:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE Procedure [dbo].[Sectores_TT]
AS 
SELECT 
 Sectores.IdSector,
 Sectores.Descripcion as [Sector],
 SectorDeObra as [Es obra?],
 Empleados.Nombre as [Encargado]
FROM Sectores
LEFT OUTER JOIN Empleados ON Sectores.IdEncargado=Empleados.IdEmpleado
ORDER BY Sectores.Descripcion





GO

/****** Object:  StoredProcedure [dbo].[Sectores_TX_PorDescripcion]    Script Date: 03/15/2011 11:49:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[Sectores_TX_PorDescripcion]
@Descripcion varchar(50)
AS 
Select 
IdSector
FROM Sectores
where Descripcion=@Descripcion































GO

/****** Object:  StoredProcedure [dbo].[Sectores_TX_PorId]    Script Date: 03/15/2011 11:49:10 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE Procedure [dbo].[Sectores_TX_PorId]
@IdSector int
AS 
SELECT *
FROM Sectores
WHERE (IdSector=@IdSector)



GO

/****** Object:  StoredProcedure [dbo].[Sectores_TX_SinSectorOrigen]    Script Date: 03/15/2011 11:49:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Sectores_TX_SinSectorOrigen]
@IdSectorOrigen int
AS 
Select IdSector,Descripcion as Titulo
FROM Sectores
Where SeUsaEnPresupuestos='SI' and IdSector<>@IdSectorOrigen
order by Descripcion































GO

/****** Object:  StoredProcedure [dbo].[Sectores_TX_TT]    Script Date: 03/15/2011 11:49:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE Procedure [dbo].[Sectores_TX_TT]
@IdSector int
AS 
SELECT
 Sectores.IdSector,
 Sectores.Descripcion as [Sector],
 SectorDeObra as [Es obra?],
 Empleados.Nombre as [Encargado]
FROM Sectores
LEFT OUTER JOIN Empleados ON Sectores.IdEncargado=Empleados.IdEmpleado
WHERE (Sectores.IdSector=@IdSector)





GO

/****** Object:  StoredProcedure [dbo].[SiNo_TL]    Script Date: 03/15/2011 11:49:10 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE Procedure [dbo].[SiNo_TL]
AS 
Select IdSiNo,SiNo as Titulo
FROM SiNo





GO

/****** Object:  StoredProcedure [dbo].[Stock_A]    Script Date: 03/15/2011 11:49:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

























CREATE Procedure [dbo].[Stock_A]
@IdStock int  output,
@IdArticulo int,
@Partida int,
@CantidadUnidades numeric(18,2),
@CantidadAdicional numeric(18,2),
@IdUnidad int,
@IdUbicacion int,
@IdObra int
AS
Insert into [Stock]
(
 IdArticulo,
 Partida,
 CantidadUnidades,
 CantidadAdicional,
 IdUnidad,
 IdUbicacion,
 IdObra
)
Values
(
 @IdArticulo,
 @Partida,
 @CantidadUnidades,
 @CantidadAdicional,
 @IdUnidad,
 @IdUbicacion,
 @IdObra
)
Select @IdStock=@@identity
Return(@IdStock)
























GO

/****** Object:  StoredProcedure [dbo].[Stock_M]    Script Date: 03/15/2011 11:49:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

























CREATE  Procedure [dbo].[Stock_M]
@IdStock int,
@IdArticulo int,
@Partida int,
@CantidadUnidades numeric(18,2),
@CantidadAdicional numeric(18,2),
@IdUnidad int,
@IdUbicacion int,
@IdObra int
AS
Update Stock
SET 
 IdArticulo=@IdArticulo,
 Partida=@Partida,
 CantidadUnidades=@CantidadUnidades,
 CantidadAdicional=@CantidadAdicional,
 IdUnidad=@IdUnidad,
 IdUbicacion=@IdUbicacion,
 IdObra=@IdObra
Where (IdStock=@IdStock)
Return(@IdStock)
























GO

/****** Object:  StoredProcedure [dbo].[Stock_TX_ExistenciaPorArticulo]    Script Date: 03/15/2011 11:49:10 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO
























CREATE Procedure [dbo].[Stock_TX_ExistenciaPorArticulo]
@IdArticulo int
AS 
SELECT 
 Stock.IdArticulo,
 SUM(Stock.CantidadUnidades) as [Stock actual]
FROM Stock 
WHERE Stock.IdArticulo=@IdArticulo
GROUP by Stock.IdArticulo
























GO

/****** Object:  StoredProcedure [dbo].[Stock_TX_ExistenciaPorIdArticulo]    Script Date: 03/15/2011 11:49:10 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO
























CREATE Procedure [dbo].[Stock_TX_ExistenciaPorIdArticulo]
@IdArticulo int
AS 
SELECT 
 Stock.IdArticulo,
 SUM(Stock.CantidadUnidades) as [Stock actual]
FROM Stock 
WHERE Stock.IdArticulo=@IdArticulo
GROUP by Stock.IdArticulo
























GO

/****** Object:  StoredProcedure [dbo].[Stock_TX_RegistrosConStockDisponiblePorIdArticulo]    Script Date: 03/15/2011 11:49:10 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






















CREATE Procedure [dbo].[Stock_TX_RegistrosConStockDisponiblePorIdArticulo]

@IdArticulo int

AS

Declare @IdObraStockDisponible int
Set @IdObraStockDisponible=(Select Top 1 Parametros.IdObraStockDisponible 
				From Parametros Where Parametros.IdParametro=1)

SELECT *
FROM Stock
WHERE IdObra=@IdObraStockDisponible and CantidadUnidades>0 and
	 IdArticulo=@IdArticulo
ORDER BY IdArticulo





















GO

/****** Object:  StoredProcedure [dbo].[Stock_TX_RegistrosConStockNegativo]    Script Date: 03/15/2011 11:49:10 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






















CREATE Procedure [dbo].[Stock_TX_RegistrosConStockNegativo]

AS

Declare @IdObraStockDisponible int
Set @IdObraStockDisponible=(Select Top 1 Parametros.IdObraStockDisponible 
				From Parametros Where Parametros.IdParametro=1)

SELECT *
FROM Stock
WHERE IdObra<>@IdObraStockDisponible and CantidadUnidades<0
ORDER BY IdArticulo





















GO

/****** Object:  StoredProcedure [dbo].[Stock_TX_STK]    Script Date: 03/15/2011 11:49:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE Procedure [dbo].[Stock_TX_STK]

@IdArticulo int,
@Partida int,
@IdUbicacion int,
@IdObra int

AS 

SELECT *
FROM Stock
WHERE IdArticulo=@IdArticulo and IsNull(Partida,0)=@Partida and 
	 IdUbicacion=@IdUbicacion and IdObra=@IdObra


GO

/****** Object:  StoredProcedure [dbo].[Subrubros_E]    Script Date: 03/15/2011 11:49:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[Subrubros_E]
@IdSubrubro smallint  AS 
Delete Subrubros
where (IdSubrubro=@IdSubrubro)































GO

/****** Object:  StoredProcedure [dbo].[Subrubros_M]    Script Date: 03/15/2011 11:49:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE  Procedure [dbo].[Subrubros_M]
@IdSubrubro int ,
@Descripcion varchar(50),
@Abreviatura varchar(15),
@EnviarEmail tinyint
AS
IF Exists(Select su.IdSubrubro From Subrubros su Where su.IdSubrubro=@IdSubrubro)
	BEGIN
		UPDATE Subrubros
		SET
		 Descripcion=@Descripcion,
		 Abreviatura=@Abreviatura,
		 EnviarEmail=@EnviarEmail
		WHERE IdSubrubro=@IdSubrubro
	END
ELSE
	BEGIN
		INSERT INTO [Subrubros]
		(
		 IdSubrubro,
		 Descripcion,
		 Abreviatura,
		 EnviarEmail
		)
		VALUES
		(
		 @IdSubrubro,
		 @Descripcion,
		 @Abreviatura,
		 @EnviarEmail
		)
	END
RETURN(@IdSubrubro)





GO

/****** Object:  StoredProcedure [dbo].[Subrubros_T]    Script Date: 03/15/2011 11:49:11 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Subrubros_T]
@IdSubrubro smallint
AS 
SELECT *
FROM Subrubros
where (IdSubrubro=@IdSubrubro)































GO

/****** Object:  StoredProcedure [dbo].[Subrubros_TL]    Script Date: 03/15/2011 11:49:11 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[Subrubros_TL]
AS 
Select IdSubrubro,Descripcion as Titulo
FROM Subrubros order by Descripcion































GO

/****** Object:  StoredProcedure [dbo].[Subrubros_TT]    Script Date: 03/15/2011 11:49:11 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




















CREATE Procedure [dbo].[Subrubros_TT]
AS 
SELECT  
 IdSubrubro,
 Descripcion,
 Abreviatura
FROM Subrubros
ORDER by Descripcion



















GO

/****** Object:  StoredProcedure [dbo].[Subrubros_TX_ParaTransmitir]    Script Date: 03/15/2011 11:49:11 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Subrubros_TX_ParaTransmitir]
AS 
SELECT *
FROM Subrubros
WHERE EnviarEmail=1































GO

/****** Object:  StoredProcedure [dbo].[Subrubros_TX_ParaTransmitir_Todos]    Script Date: 03/15/2011 11:49:11 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Subrubros_TX_ParaTransmitir_Todos]
AS 
SELECT *
FROM Subrubros































GO

/****** Object:  StoredProcedure [dbo].[Subrubros_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:49:11 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO































CREATE Procedure [dbo].[Subrubros_TX_SetearComoTransmitido]
AS 
Update Subrubros
SET EnviarEmail=0
WHERE EnviarEmail<>0































GO

/****** Object:  StoredProcedure [dbo].[Subrubros_TX_TT]    Script Date: 03/15/2011 11:49:11 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




















CREATE Procedure [dbo].[Subrubros_TX_TT]
@IdSubrubro smallint
AS 
SELECT 
 IdSubrubro,
 Descripcion
 Abreviatura
FROM Subrubros
WHERE (IdSubrubro=@IdSubrubro)
ORDER by Descripcion



















GO

/****** Object:  StoredProcedure [dbo].[TarifasFletes_M]    Script Date: 03/15/2011 11:49:11 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE  Procedure [dbo].[TarifasFletes_M]

@IdTarifaFlete int ,
@Descripcion varchar(50),
@ValorUnitario numeric(18,2),
@Codigo varchar(10),
@LimiteInferior numeric(18,2),
@LimiteSuperior numeric(18,2),
@IdUnidad int

AS

IF EXISTS(Select Top 1 IdTarifaFlete From TarifasFletes Where IdTarifaFlete=@IdTarifaFlete)
    BEGIN
	UPDATE TarifasFletes
	SET
	 Descripcion=@Descripcion,
	 ValorUnitario=@ValorUnitario,
	 Codigo=@Codigo,
	 LimiteInferior=@LimiteInferior,
	 LimiteSuperior=@LimiteSuperior,
	 IdUnidad=@IdUnidad
	WHERE (IdTarifaFlete=@IdTarifaFlete)
    END
ELSE
    BEGIN
	INSERT INTO [TarifasFletes]
	(
	 IdTarifaFlete,
	 Descripcion,
	 ValorUnitario,
	 Codigo,
	 LimiteInferior,
	 LimiteSuperior,
	 IdUnidad
	)
	VALUES
	(
	 @IdTarifaFlete,
	 @Descripcion,
	 @ValorUnitario,
	 @Codigo,
	 @LimiteInferior,
	 @LimiteSuperior,
	 @IdUnidad
	)
	SELECT @IdTarifaFlete=@@identity
    END

RETURN(@IdTarifaFlete)

GO

/****** Object:  StoredProcedure [dbo].[TarifasFletes_T]    Script Date: 03/15/2011 11:49:11 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


CREATE Procedure [dbo].[TarifasFletes_T]

@IdTarifaFlete int

AS 

SELECT *
FROM TarifasFletes
WHERE (IdTarifaFlete=@IdTarifaFlete)

GO

/****** Object:  StoredProcedure [dbo].[TarifasFletes_TX_PorCodigo]    Script Date: 03/15/2011 11:49:11 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


CREATE Procedure [dbo].[TarifasFletes_TX_PorCodigo]

@Codigo varchar(10)

AS 

SELECT *
FROM TarifasFletes
WHERE Codigo=@Codigo

GO

/****** Object:  StoredProcedure [dbo].[TiposCuentaGrupos_TL]    Script Date: 03/15/2011 11:49:11 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE Procedure [dbo].[TiposCuentaGrupos_TL]
AS 
SELECT 
 IdTipoCuentaGrupo,
 Descripcion as Titulo
FROM TiposCuentaGrupos 
ORDER BY Descripcion





GO

/****** Object:  StoredProcedure [dbo].[TiposPoliza_TL]    Script Date: 03/15/2011 11:49:11 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[TiposPoliza_TL]
AS 
SELECT 
 IdTipoPoliza,
 Descripcion as Titulo
FROM TiposPoliza
ORDER by Descripcion






























GO

/****** Object:  StoredProcedure [dbo].[Titulos_TL]    Script Date: 03/15/2011 11:49:11 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE Procedure [dbo].[Titulos_TL]
AS 
Select 
 IdTitulo,
 Titulo
From Titulos
Order by Titulo





GO

/****** Object:  StoredProcedure [dbo].[Transportistas_E]    Script Date: 03/15/2011 11:49:11 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Transportistas_E]
@IdTransportista int  
AS 
Delete Transportistas
where (IdTransportista=@IdTransportista)
































GO

/****** Object:  StoredProcedure [dbo].[Transportistas_M]    Script Date: 03/15/2011 11:49:11 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE  Procedure [dbo].[Transportistas_M]
	@IdTransportista	int,
	@RazonSocial	 	varchar(50),
	@Direccion 		varchar(50),
	@IdLocalidad	 	int,
	@CodigoPostal	 	varchar(30),
	@IdProvincia	 	int,
	@IdPais		int,
	@Telefono 		varchar(50),
	@Fax	 		varchar(50),
	@Email 			varchar(50),
	@IdCodigoIva	 	tinyint,
	@Cuit	 		varchar(13),
	@Contacto 		varchar(50),
	@Observaciones	ntext,
	@Horario 		varchar(50),
	@Celular 		varchar(50),
	@EnviarEmail		tinyint
AS
IF Exists(Select tr.IdTransportista From Transportistas tr Where tr.IdTransportista=@IdTransportista)
	BEGIN
		UPDATE Transportistas
		SET
		 RazonSocial=@RazonSocial,
		 Direccion=@Direccion,
		 IdLocalidad=@IdLocalidad,
		 CodigoPostal=@CodigoPostal,
		 IdProvincia=@IdProvincia,
		 IdPais=@IdPais,
		 Telefono=@Telefono,
		 Fax=@Fax,
		 Email=@Email,
		 IdCodigoIva=@IdCodigoIva,
		 Cuit=@Cuit,
		 Contacto=@Contacto,
		 Observaciones=@Observaciones,
		 Horario=@Horario,
		 Celular=@Celular,
		 EnviarEmail=@EnviarEmail
		WHERE IdTransportista=@IdTransportista
	END
ELSE
	BEGIN
		INSERT INTO [Transportistas]
		(
		 IdTransportista,
		 RazonSocial,
		 Direccion,
		 IdLocalidad,
		 CodigoPostal,
		 IdProvincia,
		 IdPais,
		 Telefono,
		 Fax,
		 Email,
		 IdCodigoIva,
		 Cuit,
		 Contacto,
		 Observaciones,
		 Horario,
		 Celular,
		 EnviarEmail
		)
		VALUES
		(
		 @IdTransportista,
		 @RazonSocial,
		 @Direccion,
		 @IdLocalidad,
		 @CodigoPostal,
		 @IdProvincia,
		 @IdPais,
		 @Telefono,
		 @Fax,
		 @Email,
		 @IdCodigoIva,
		 @Cuit,
		 @Contacto,
		 @Observaciones,
		 @Horario,
		 @Celular,
		 @EnviarEmail
		)
	END
RETURN(@IdTransportista)





GO

/****** Object:  StoredProcedure [dbo].[Transportistas_T]    Script Date: 03/15/2011 11:49:11 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Transportistas_T]
@IdTransportista int
AS 
SELECT * 
FROM Transportistas
WHERE (IdTransportista=@IdTransportista)
































GO

/****** Object:  StoredProcedure [dbo].[Transportistas_TL]    Script Date: 03/15/2011 11:49:11 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE Procedure [dbo].[Transportistas_TL]
AS 
Select IdTransportista,RazonSocial as Titulo
FROM Transportistas 
Order by RazonSocial
































GO

/****** Object:  StoredProcedure [dbo].[Transportistas_TT]    Script Date: 03/15/2011 11:49:11 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE  Procedure [dbo].[Transportistas_TT]
AS 
SELECT 
	Transportistas.IdTransportista, 
	Transportistas.RazonSocial, 
	Transportistas.Direccion, 
	Localidades.Nombre AS [Localidad], 
	Transportistas.CodigoPostal, 
	Provincias.Nombre AS [Provincia], 
	Paises.Descripcion AS [Pais], 
	Transportistas.Telefono, 
	Transportistas.Fax, 
	Transportistas.Email, 
	Transportistas.Cuit, 
	DescripcionIva.Descripcion AS [Condicion IVA], 
	Transportistas.Contacto,
	Transportistas.Horario,
	Transportistas.Celular
FROM Transportistas 
	INNER JOIN DescripcionIva ON Transportistas.IdCodigoIva = DescripcionIva.IdCodigoIva 
	INNER JOIN Localidades ON Transportistas.IdLocalidad = Localidades.IdLocalidad 
	INNER JOIN Provincias ON Transportistas.IdProvincia = Provincias.IdProvincia
	INNER JOIN Paises ON Transportistas.IdPais = Paises.IdPais
ORDER BY Transportistas.RazonSocial
































GO

/****** Object:  StoredProcedure [dbo].[Transportistas_TX_ConDatos]    Script Date: 03/15/2011 11:49:11 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO



CREATE  Procedure [dbo].[Transportistas_TX_ConDatos]

@IdTransportista int

AS 

SELECT 
	Transportistas.IdTransportista, 
	Transportistas.RazonSocial, 
	Transportistas.Direccion, 
	Localidades.Nombre AS [Localidad], 
	Transportistas.CodigoPostal, 
	Provincias.Nombre AS [Provincia], 
	Paises.Descripcion AS [Pais], 
	Transportistas.Telefono, 
	Transportistas.Fax, 
	Transportistas.Email, 
	Transportistas.Cuit, 
	DescripcionIva.Descripcion AS [Condicion IVA], 
	Transportistas.Contacto,
	Transportistas.Horario,
	Transportistas.Celular
FROM Transportistas 
LEFT OUTER JOIN DescripcionIva ON Transportistas.IdCodigoIva = DescripcionIva.IdCodigoIva 
LEFT OUTER JOIN Localidades ON Transportistas.IdLocalidad = Localidades.IdLocalidad 
LEFT OUTER JOIN Provincias ON Transportistas.IdProvincia = Provincias.IdProvincia
LEFT OUTER JOIN Paises ON Transportistas.IdPais = Paises.IdPais
WHERE Transportistas.IdTransportista=@IdTransportista


GO

/****** Object:  StoredProcedure [dbo].[Transportistas_TX_TT]    Script Date: 03/15/2011 11:49:11 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
































CREATE  Procedure [dbo].[Transportistas_TX_TT]
@IdTransportista int
AS 
SELECT 
	Transportistas.IdTransportista, 
	Transportistas.RazonSocial, 
	Transportistas.Direccion, 
	Localidades.Nombre AS [Localidad], 
	Transportistas.CodigoPostal, 
	Provincias.Nombre AS [Provincia], 
	Paises.Descripcion AS [Pais], 
	Transportistas.Telefono, 
	Transportistas.Fax, 
	Transportistas.Email, 
	Transportistas.Cuit, 
	DescripcionIva.Descripcion AS [Condicion IVA], 
	Transportistas.Contacto,
	Transportistas.Horario,
	Transportistas.Celular
FROM Transportistas 
	INNER JOIN DescripcionIva ON 	Transportistas.IdCodigoIva = DescripcionIva.IdCodigoIva 
	INNER JOIN Localidades ON Transportistas.IdLocalidad = Localidades.IdLocalidad 
	INNER JOIN Provincias ON Transportistas.IdProvincia = Provincias.IdProvincia
	INNER JOIN Paises ON Transportistas.IdPais = Paises.IdPais
WHERE (IdTransportista=@IdTransportista)
ORDER BY Transportistas.RazonSocial
































GO

/****** Object:  StoredProcedure [dbo].[Ubicaciones_E]    Script Date: 03/15/2011 11:49:12 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Ubicaciones_E]
@IdUbicacion int  AS 
Delete Ubicaciones
Where (IdUbicacion=@IdUbicacion)































GO

/****** Object:  StoredProcedure [dbo].[Ubicaciones_M]    Script Date: 03/15/2011 11:49:12 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE  Procedure [dbo].[Ubicaciones_M]
@IdUbicacion int ,
@Descripcion varchar(50),
@Estanteria varchar(2),
@Modulo varchar(3),
@Gabeta varchar(4),
@IdDeposito int
AS
IF Exists(Select ub.IdUbicacion From Ubicaciones ub Where ub.IdUbicacion=@IdUbicacion)
	BEGIN
		UPDATE Ubicaciones
		SET
		 Descripcion=@Descripcion,
		 Estanteria=@Estanteria,
		 Modulo=@Modulo,
		 Gabeta=@Gabeta,
		 IdDeposito=@IdDeposito
		WHERE IdUbicacion=@IdUbicacion
	END
ELSE
	BEGIN
		INSERT INTO [Ubicaciones]
		(
		 IdUbicacion,
		 Descripcion,
		 Estanteria,
		 Modulo,
		 Gabeta,
		 IdDeposito
		)
		VALUES
		(
		 @IdUbicacion,
		 @Descripcion,
		 @Estanteria,
		 @Modulo,
		 @Gabeta,
		 @IdDeposito
		)
	END
RETURN(@IdUbicacion)





GO

/****** Object:  StoredProcedure [dbo].[Ubicaciones_T]    Script Date: 03/15/2011 11:49:12 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Ubicaciones_T]
@IdUbicacion int
AS 
SELECT *
FROM Ubicaciones
WHERE (IdUbicacion=@IdUbicacion)































GO

/****** Object:  StoredProcedure [dbo].[Ubicaciones_TL]    Script Date: 03/15/2011 11:49:12 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO











CREATE Procedure [dbo].[Ubicaciones_TL]
AS 
SELECT 
 IdUbicacion,
 Depositos.Abreviatura+' - Est.:'+Ubicaciones.Estanteria+
	' - Mod.:'+Ubicaciones.Modulo+' - Gab.:'+Ubicaciones.Gabeta as [Titulo]
FROM Ubicaciones
LEFT OUTER JOIN Depositos ON Ubicaciones.IdDeposito = Depositos.IdDeposito
ORDER by [Titulo]










GO

/****** Object:  StoredProcedure [dbo].[Ubicaciones_TT]    Script Date: 03/15/2011 11:49:12 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO






























CREATE Procedure [dbo].[Ubicaciones_TT]
AS 
SELECT 
 Ubicaciones.IdUbicacion,
 Ubicaciones.Descripcion as [Ubicacion],
 Depositos.Descripcion as [Deposito],
 Ubicaciones.Estanteria,
 Ubicaciones.Modulo,
 Ubicaciones.Gabeta
FROM Ubicaciones
LEFT OUTER JOIN Depositos ON Depositos.IdDeposito=Ubicaciones.IdDeposito
ORDER by  Ubicaciones.Descripcion





























GO

/****** Object:  StoredProcedure [dbo].[Ubicaciones_TX_PorId]    Script Date: 03/15/2011 11:49:12 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO























CREATE Procedure [dbo].[Ubicaciones_TX_PorId]
@IdUbicacion int
AS 
SELECT 
 Ubicaciones.IdUbicacion,
 Depositos.Abreviatura+' - Est.:'+Ubicaciones.Estanteria+
	' - Mod.:'+Ubicaciones.Modulo+' - Gab.:'+Ubicaciones.Gabeta as [Ubicacion]
FROM Ubicaciones
LEFT OUTER JOIN Depositos ON Ubicaciones.IdDeposito = Depositos.IdDeposito
WHERE Ubicaciones.IdUbicacion=@IdUbicacion























GO

/****** Object:  StoredProcedure [dbo].[Ubicaciones_TX_TT]    Script Date: 03/15/2011 11:49:12 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO






























CREATE Procedure [dbo].[Ubicaciones_TX_TT]
@IdUbicacion int
AS 
SELECT 
 Ubicaciones.IdUbicacion,
 Ubicaciones.Descripcion as [Ubicacion],
 Depositos.Descripcion as [Deposito],
 Ubicaciones.Estanteria,
 Ubicaciones.Modulo,
 Ubicaciones.Gabeta
FROM Ubicaciones
LEFT OUTER JOIN Depositos ON Depositos.IdDeposito=Ubicaciones.IdDeposito
WHERE (IdUbicacion=@IdUbicacion)





























GO

/****** Object:  StoredProcedure [dbo].[Unidades_A]    Script Date: 03/15/2011 11:49:12 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO





















CREATE Procedure [dbo].[Unidades_A]
@IdUnidad int  output,
@Descripcion varchar(30),
@Abreviatura varchar(15),
@CodigoAFIP varchar(2)
AS 
Insert into [Unidades]
(
 Descripcion,
 Abreviatura,
 CodigoAFIP
)
Values
(
 @Descripcion,
 @Abreviatura,
 @CodigoAFIP
)
Select @IdUnidad=@@identity
Return(@IdUnidad)




















GO

/****** Object:  StoredProcedure [dbo].[Unidades_E]    Script Date: 03/15/2011 11:49:12 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Unidades_E]
@IdUnidad smallint  AS 
Delete Unidades
where (IdUnidad=@IdUnidad)































GO

/****** Object:  StoredProcedure [dbo].[Unidades_M]    Script Date: 03/15/2011 11:49:12 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO





CREATE  Procedure [dbo].[Unidades_M]
@IdUnidad int ,
@Descripcion varchar(30),
@Abreviatura varchar(15),
@CodigoAFIP varchar(2)
AS 
IF Exists(Select uni.IdUnidad From Unidades uni Where uni.IdUnidad=@IdUnidad)
	BEGIN
		Update Unidades
		Set 
		 Descripcion=@Descripcion,
		 Abreviatura=@Abreviatura,
		 CodigoAFIP=@CodigoAFIP
		Where (IdUnidad=@IdUnidad)
	END
ELSE
	BEGIN
		Insert into [Unidades]
		(
		 IdUnidad,
		 Descripcion,
		 Abreviatura,
		 CodigoAFIP
		)
		Values
		(
		 @IdUnidad,
		 @Descripcion,
		 @Abreviatura,
		 @CodigoAFIP
		)
	END
RETURN(@IdUnidad)





GO

/****** Object:  StoredProcedure [dbo].[Unidades_T]    Script Date: 03/15/2011 11:49:12 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE Procedure [dbo].[Unidades_T]
@IdUnidad int
AS 
SELECT *
FROM Unidades
WHERE (IdUnidad=@IdUnidad)





GO

/****** Object:  StoredProcedure [dbo].[Unidades_TL]    Script Date: 03/15/2011 11:49:12 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Unidades_TL]
AS 
Select IdUnidad,Descripcion as Titulo
FROM Unidades order by Descripcion































GO

/****** Object:  StoredProcedure [dbo].[Unidades_TT]    Script Date: 03/15/2011 11:49:12 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Unidades_TT]
AS 
Select IdUnidad,Descripcion,Abreviatura
FROM Unidades
order by Descripcion































GO

/****** Object:  StoredProcedure [dbo].[Unidades_TX_PorAbreviatura]    Script Date: 03/15/2011 11:49:12 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO






CREATE Procedure [dbo].[Unidades_TX_PorAbreviatura]
@Abreviatura varchar(15)
AS 
SELECT *
FROM Unidades
WHERE (Abreviatura=@Abreviatura)






GO

/****** Object:  StoredProcedure [dbo].[Unidades_TX_PorId]    Script Date: 03/15/2011 11:49:12 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO





















CREATE Procedure [dbo].[Unidades_TX_PorId]
@IdUnidad int
AS 
SELECT IdUnidad, Descripcion,Abreviatura
FROM Unidades
WHERE (IdUnidad=@IdUnidad)





















GO

/****** Object:  StoredProcedure [dbo].[Unidades_TX_TT]    Script Date: 03/15/2011 11:49:12 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[Unidades_TX_TT]
@IdUnidad int
AS 
Select IdUnidad,Descripcion,Abreviatura
FROM Unidades
where (IdUnidad=@IdUnidad)
order by Descripcion































GO

/****** Object:  StoredProcedure [dbo].[UnidadesOperativas_A]    Script Date: 03/15/2011 11:49:12 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO






























CREATE Procedure [dbo].[UnidadesOperativas_A]
@IdUnidadOperativa int  output,
@Descripcion varchar(50)
AS 
Insert into [UnidadesOperativas]
(
 Descripcion
)
Values
(
 @Descripcion
)
Select @IdUnidadOperativa=@@identity
Return(@IdUnidadOperativa)






























GO

/****** Object:  StoredProcedure [dbo].[UnidadesOperativas_E]    Script Date: 03/15/2011 11:49:12 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[UnidadesOperativas_E]
@IdUnidadOperativa smallint  AS 
Delete UnidadesOperativas
Where (IdUnidadOperativa=@IdUnidadOperativa)































GO

/****** Object:  StoredProcedure [dbo].[UnidadesOperativas_M]    Script Date: 03/15/2011 11:49:12 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE  Procedure [dbo].[UnidadesOperativas_M]
@IdUnidadOperativa int ,
@Descripcion varchar(50)
AS
IF Exists(Select Aux.IdUnidadOperativa From UnidadesOperativas Aux Where Aux.IdUnidadOperativa=@IdUnidadOperativa)
	BEGIN
		UPDATE UnidadesOperativas
		SET
		 Descripcion=@Descripcion
		WHERE IdUnidadOperativa=@IdUnidadOperativa
	END
ELSE
	BEGIN
		INSERT INTO [UnidadesOperativas]
		(
		 IdUnidadOperativa,
		 Descripcion
		)
		VALUES
		(
		 @IdUnidadOperativa,
		 @Descripcion
		)
	END
RETURN(@IdUnidadOperativa)





GO

/****** Object:  StoredProcedure [dbo].[UnidadesOperativas_T]    Script Date: 03/15/2011 11:49:12 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[UnidadesOperativas_T]
@IdUnidadOperativa int
AS 
SELECT *
FROM UnidadesOperativas
WHERE (IdUnidadOperativa=@IdUnidadOperativa)































GO

/****** Object:  StoredProcedure [dbo].[UnidadesOperativas_TL]    Script Date: 03/15/2011 11:49:12 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[UnidadesOperativas_TL]
AS 
SELECT IdUnidadOperativa,Descripcion as Titulo
FROM UnidadesOperativas 
ORDER by Descripcion































GO

/****** Object:  StoredProcedure [dbo].[UnidadesOperativas_TT]    Script Date: 03/15/2011 11:49:12 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[UnidadesOperativas_TT]
AS 
Select *
FROM UnidadesOperativas
ORDER by Descripcion































GO

/****** Object:  StoredProcedure [dbo].[UnidadesOperativas_TX_TT]    Script Date: 03/15/2011 11:49:12 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO































CREATE Procedure [dbo].[UnidadesOperativas_TX_TT]
@IdUnidadOperativa int
AS 
SELECT *
FROM UnidadesOperativas
WHERE (IdUnidadOperativa=@IdUnidadOperativa)































GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_A]    Script Date: 03/15/2011 11:49:12 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE Procedure [dbo].[ValesSalida_A]

@IdValeSalida int  output,
@NumeroValeSalida int,
@FechaValeSalida datetime,
@IdObra int,
@Observaciones ntext,
@IdCentroCosto int,
@Aprobo int,
@NumeroValePreimpreso int,
@Cumplido varchar(2),
@EnviarEmail tinyint,
@IdValeSalidaOriginal int,
@IdOrigenTransmision int,
@FechaImportacionTransmision datetime

AS

BEGIN TRAN

BEGIN
	Set @NumeroValeSalida=IsNull((Select Top 1 P.ProximoNumeroValeSalida
					From Parametros P Where P.IdParametro=1),1)
	Update Parametros
	Set ProximoNumeroValeSalida=@NumeroValeSalida+1
END


INSERT INTO ValesSalida
(
 NumeroValeSalida,
 FechaValeSalida,
 IdObra,
 Observaciones,
 IdCentroCosto,
 Aprobo,
 NumeroValePreimpreso,
 Cumplido,
 EnviarEmail,
 IdValeSalidaOriginal,
 IdOrigenTransmision,
 FechaImportacionTransmision
)
VALUES 
(
 @NumeroValeSalida,
 @FechaValeSalida,
 @IdObra,
 @Observaciones,
 @IdCentroCosto,
 @Aprobo,
 @NumeroValePreimpreso,
 @Cumplido,
 @EnviarEmail,
 @IdValeSalidaOriginal,
 @IdOrigenTransmision,
 @FechaImportacionTransmision
)
SELECT @IdValeSalida=@@identity

IF @@ERROR <> 0 GOTO AbortTransaction

COMMIT TRAN
GOTO EndTransaction

AbortTransaction:
ROLLBACK TRAN

EndTransaction:
RETURN(@IdValeSalida)



GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_ActualizarEstado]    Script Date: 03/15/2011 11:49:13 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO




CREATE PROCEDURE [dbo].[ValesSalida_ActualizarEstado]

@IdValeSalida int

AS

SET NOCOUNT ON

Declare @Registros as int
Set @Registros=(Select Count(*) From DetalleValesSalida DetVal
			Where DetVal.IdValeSalida=@IdValeSalida)

Declare @RegistrosAnulados as int
Set @RegistrosAnulados=(Select Count(*) From DetalleValesSalida DetVal
			  Where DetVal.IdValeSalida=@IdValeSalida and 
				IsNull(DetVal.Estado,'')='AN')

Declare @RegistrosCumplidos as int
Set @RegistrosCumplidos=(Select Count(*) From DetalleValesSalida DetVal
			   Where DetVal.IdValeSalida=@IdValeSalida and 
				IsNull(DetVal.Cumplido,'')='SI')

IF @RegistrosAnulados>=@Registros
   BEGIN
	   UPDATE ValesSalida
	   SET Cumplido='AN'
	   WHERE ValesSalida.IdValeSalida=@IdValeSalida
   END
ELSE
	IF @RegistrosCumplidos+@RegistrosAnulados>=@Registros
	   BEGIN
		   UPDATE ValesSalida
		   SET Cumplido='SI'
		   WHERE ValesSalida.IdValeSalida=@IdValeSalida
	   END


CREATE TABLE #Auxiliar (IdDetalleRequerimiento INTEGER)
CREATE NONCLUSTERED INDEX IX__Auxiliar1 ON #Auxiliar (IdDetalleRequerimiento) ON [PRIMARY]
INSERT INTO #Auxiliar 
 SELECT DetVal.IdDetalleRequerimiento
 FROM DetalleValesSalida DetVal
 WHERE DetVal.IdValeSalida=@IdValeSalida and IsNull(DetVal.Estado,'')='AN' and 
	DetVal.IdDetalleRequerimiento is not null

DECLARE @IdDetalleRequerimiento int
DECLARE Cur CURSOR LOCAL FORWARD_ONLY 
	FOR	SELECT IdDetalleRequerimiento
		FROM #Auxiliar
		ORDER BY IdDetalleRequerimiento
OPEN Cur
FETCH NEXT FROM Cur INTO @IdDetalleRequerimiento
WHILE @@FETCH_STATUS = 0
   BEGIN
	UPDATE DetalleRequerimientos 
	SET TipoDesignacion='STK'
	WHERE IdDetalleRequerimiento=@IdDetalleRequerimiento
	FETCH NEXT FROM Cur INTO @IdDetalleRequerimiento
   END
CLOSE Cur
DEALLOCATE Cur

DROP TABLE #Auxiliar

SET NOCOUNT OFF



GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_AsignarEntrega]    Script Date: 03/15/2011 11:49:13 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO







CREATE PROCEDURE [dbo].[ValesSalida_AsignarEntrega]

@IdDetalleValeSalida int

AS

SET NOCOUNT ON

Declare @Cantidad as Numeric(18,2)

SET @Cantidad=(Select DetVal.Cantidad From DetalleValesSalida DetVal
			Where DetVal.IdDetalleValeSalida=@IdDetalleValeSalida)

Declare @Entregado as Numeric(18,2)

SET @Entregado=0
IF (Select Sum(DetSal.Cantidad) From DetalleSalidasMateriales DetSal
	Where DetSal.IdDetalleValeSalida is not null and 
		DetSal.IdDetalleValeSalida=@IdDetalleValeSalida) is not null
   SET @Entregado=(Select Sum(DetSal.Cantidad) From DetalleSalidasMateriales DetSal
			Where DetSal.IdDetalleValeSalida is not null and 
				DetSal.IdDetalleValeSalida=@IdDetalleValeSalida)

IF @Entregado>=@Cantidad
   BEGIN
	UPDATE DetalleValesSalida
	SET Cumplido='SI'
	WHERE DetalleValesSalida.IdDetalleValeSalida=@IdDetalleValeSalida

	Declare @IdValeSalida as int
	SET @IdValeSalida=(Select DetVal.IdValeSalida From DetalleValesSalida DetVal
				Where DetVal.IdDetalleValeSalida=@IdDetalleValeSalida)

	EXEC ValesSalida_ActualizarEstado @IdValeSalida
   END

SET NOCOUNT OFF






GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_E]    Script Date: 03/15/2011 11:49:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[ValesSalida_E]
@IdValeSalida int  AS 
Delete ValesSalida
where (IdValeSalida=@IdValeSalida)
































GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_M]    Script Date: 03/15/2011 11:49:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO







CREATE Procedure [dbo].[ValesSalida_M]
@IdValeSalida int,
@NumeroValeSalida int,
@FechaValeSalida datetime,
@IdObra int,
@Observaciones ntext,
@IdCentroCosto int,
@Aprobo int,
@NumeroValePreimpreso int,
@Cumplido varchar(2),
@EnviarEmail tinyint,
@IdValeSalidaOriginal int,
@IdOrigenTransmision int,
@FechaImportacionTransmision datetime
As
Update ValesSalida
Set 
 NumeroValeSalida=@NumeroValeSalida,
 FechaValeSalida=@FechaValeSalida,
 IdObra=@IdObra,
 Observaciones=@Observaciones,
 IdCentroCosto=@IdCentroCosto,
 Aprobo=@Aprobo,
 NumeroValePreimpreso=@NumeroValePreimpreso,
 Cumplido=@Cumplido,
 EnviarEmail=@EnviarEmail,
 IdValeSalidaOriginal=@IdValeSalidaOriginal,
 IdOrigenTransmision=@IdOrigenTransmision,
 FechaImportacionTransmision=@FechaImportacionTransmision
Where (IdValeSalida=@IdValeSalida)
Return(@IdValeSalida)






GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_T]    Script Date: 03/15/2011 11:49:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE Procedure [dbo].[ValesSalida_T]
@IdValeSalida int
AS 
SELECT * 
FROM ValesSalida
WHERE (IdValeSalida=@IdValeSalida)
































GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_TT]    Script Date: 03/15/2011 11:49:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO







CREATE  Procedure [dbo].[ValesSalida_TT]

AS 

Declare @vector_X varchar(50),@vector_T varchar(50)
Set @vector_X='011111133'
Set @vector_T='049344200'

SELECT 
 ValesSalida.IdValeSalida,
 ValesSalida.NumeroValeSalida as [Numero de vale],
 ValesSalida.IdValeSalida as [IdAux],
 ValesSalida.NumeroValePreimpreso as [Nro.preimp.],
 ValesSalida.FechaValeSalida as [Fecha],
 Obras.NumeroObra as [Numero obra],
 ValesSalida.Cumplido as [Cumplido],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM ValesSalida
LEFT OUTER JOIN Obras ON ValesSalida.IdObra = Obras.IdObra
ORDER BY NumeroValeSalida






GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_TX_DetalladoPorFechas]    Script Date: 03/15/2011 11:49:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE PROCEDURE [dbo].[ValesSalida_TX_DetalladoPorFechas]
@Desde datetime,
@Hasta datetime
as
SELECT
DetVal.IdValeSalida,
ValesSalida.NumeroValePreimpreso as [Preimpreso],
ValesSalida.NumeroValeSalida as [Vale],
Obras.NumeroObra as [Obra],
Equipos.Descripcion as [Equipo],
Null as [Codigo],
Unidades.Abreviatura as [Unidad],
Articulos.Descripcion as [Descripcion],
DetVal.Cantidad as [Cantidad],
DetVal.Cantidad1 as [Med1],
DetVal.Cantidad2 as [Med2],
Null as [Precio],
Null as [ConsumoValorizado],
Null as [ConsumoObraEquipo]
FROM DetalleValesSalida DetVal
LEFT OUTER JOIN Articulos ON DetVal.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Unidades ON DetVal.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN ValesSalida ON DetVal.IdValeSalida= ValesSalida.IdValeSalida
LEFT OUTER JOIN Obras ON ValesSalida.IdObra=Obras.IdObra
LEFT OUTER JOIN DetalleLMateriales ON DetVal.IdDetalleLMateriales=DetalleLMateriales.IdDetalleLMateriales
LEFT OUTER JOIN LMateriales ON DetalleLMateriales.IdLMateriales=LMateriales.IdLMateriales
LEFT OUTER JOIN Equipos ON LMateriales.IdEquipo=Equipos.IdEquipo
WHERE ValesSalida.FechaValeSalida>=@Desde and ValesSalida.FechaValeSalida<=@Hasta
ORDER BY Articulos.Descripcion
































GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_TX_ItemsPorObra]    Script Date: 03/15/2011 11:49:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
























CREATE  Procedure [dbo].[ValesSalida_TX_ItemsPorObra]

@IdObra int

AS 

declare @vector_X varchar(30),@vector_T varchar(30),@NroReserva as int,@IdDetalleReserva as int,@Entr1 as numeric(12,2)
set @vector_X='0111111111111111133'
set @vector_T='0911029200113011300'

SELECT 
 DetLMat.IdDetalleLMateriales,
 @IdDetalleReserva as [IdDetalleReserva],
 LMat.NumeroLMateriales as [LM],
 Equipos.Tag as [Equipo],
 @NroReserva as [Reser.],
 STR(DetLMat.NumeroItem,4)+' / '+STR(DetLMat.NumeroOrden,4) as [Item],
 DetLMat.IdArticulo,
 Articulos.Codigo as [Codigo],
 Articulos.Descripcion as [Articulo],
 DetLMat.Cantidad as [Cant.],
 DetLMat.Cantidad1 as [Med.1],
 DetLMat.Cantidad2 as [Med.2],
 CASE 
	WHEN DetLMat.Cantidad1 IS NOT NULL AND DetLMat.Cantidad2 IS NOT NULL AND DetLMat.Cantidad1<>0 AND DetLMat.Cantidad2<>0 THEN  DetLMat.Cantidad*DetLMat.Cantidad1*DetLMat.Cantidad2
	WHEN DetLMat.Cantidad1 IS NOT NULL AND DetLMat.Cantidad1<>0 THEN  DetLMat.Cantidad*DetLMat.Cantidad1
	ELSE DetLMat.Cantidad
 END as [Total],
 @Entr1 as [Cant.Ent.],
 @Entr1 as [Med.1 Ent.],
 @Entr1 as [Med.2 Ent.],
 @Entr1 as [Tot. Ent.],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleLMateriales DetLMat
LEFT OUTER JOIN LMateriales LMat ON DetLMat.IdLMateriales = LMat.IdLMateriales
LEFT OUTER JOIN Equipos ON LMat.IdEquipo = Equipos.IdEquipo
LEFT OUTER JOIN Articulos ON DetLMat.IdArticulo = Articulos.IdArticulo
WHERE (not DetLMat.IdArticulo is null and LMat.IdObra=@IdObra)
ORDER BY Articulos.Descripcion,DetLMat.IdArticulo,DetLMat.IdDetalleLMateriales























GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_TX_ItemsPorObra1]    Script Date: 03/15/2011 11:49:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE  Procedure [dbo].[ValesSalida_TX_ItemsPorObra1]
@IdObra int
as
select 
IdDetalleReserva,
Res.NumeroReserva,
IdArticulo,
CantidadUnidades,
Cantidad1,
Cantidad2,
case
	when (Cantidad1 is not null and Cantidad1<>0) and (Cantidad2 is not null and Cantidad2<>0) then CantidadUnidades*Cantidad1*Cantidad2
	when Cantidad1 is not null and Cantidad1<>0 then CantidadUnidades*Cantidad1
	else CantidadUnidades
end as Cargado
from DetalleReservas DetRes
INNER JOIN Reservas Res ON DetRes.IdReserva = Res.IdReserva
where DetRes.IdObra=@IdObra and DetRes.Estado is null
































GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_TX_ItemsPorObra2]    Script Date: 03/15/2011 11:49:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE  Procedure [dbo].[ValesSalida_TX_ItemsPorObra2]
@IdObra int
as
select 
DetalleValesSalida.IdDetalleLMateriales,
DetSal.IdSalidaMateriales,
DetSal.IdArticulo,
DetSal.Cantidad,
DetSal.Cantidad1,
DetSal.Cantidad2,
case
	when (DetSal.Cantidad1 is not null and DetSal.Cantidad1<>0) and (DetSal.Cantidad2 is not null and DetSal.Cantidad2<>0) then DetSal.Cantidad*DetSal.Cantidad1*DetSal.Cantidad2
	when DetSal.Cantidad1 is not null and DetSal.Cantidad1<>0 then DetSal.Cantidad*DetSal.Cantidad1
	else DetSal.Cantidad
end as Entregado
from DetalleSalidasMateriales DetSal
LEFT OUTER JOIN DetalleValesSalida ON DetSal.IdDetalleValeSalida = DetalleValesSalida.IdDetalleValeSalida
LEFT OUTER JOIN SalidasMateriales ON DetSal.IdSalidaMateriales = SalidasMateriales.IdSalidaMateriales
WHERE SalidasMateriales.IdObra=@IdObra
































GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_TX_ItemsPorObra3]    Script Date: 03/15/2011 11:49:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO
































CREATE  Procedure [dbo].[ValesSalida_TX_ItemsPorObra3]
@IdObra int
as
select 
DetVal.IdDetalleLMateriales,
DetVal.IdDetalleReserva,
DetVal.IdArticulo,
DetVal.Cantidad,
DetVal.Cantidad1,
DetVal.Cantidad2,
case
	when (DetVal.Cantidad1 is not null and DetVal.Cantidad1<>0) and (DetVal.Cantidad2 is not null and DetVal.Cantidad2<>0) then DetVal.Cantidad*DetVal.Cantidad1*DetVal.Cantidad2
	when DetVal.Cantidad1 is not null and DetVal.Cantidad1<>0 then DetVal.Cantidad*DetVal.Cantidad1
	else DetVal.Cantidad
end as Preparado
from DetalleValesSalida DetVal
LEFT OUTER JOIN ValesSalida ON DetVal.IdValeSalida = ValesSalida.IdValeSalida
WHERE ValesSalida.IdObra=@IdObra and DetVal.Estado is null
































GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_TX_ParaTransmitir]    Script Date: 03/15/2011 11:49:13 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE Procedure [dbo].[ValesSalida_TX_ParaTransmitir]
AS 
SELECT *
FROM ValesSalida
WHERE EnviarEmail=1



GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_TX_PendientesDetallado]    Script Date: 03/15/2011 11:49:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO







CREATE PROCEDURE [dbo].[ValesSalida_TX_PendientesDetallado]

AS

SET NOCOUNT ON

CREATE TABLE #Auxiliar1	(
			 	 IdDetalleValeSalida INTEGER,
				 Entregado NUMERIC(18, 2)
				)
INSERT INTO #Auxiliar1 
 SELECT 
  DetSal.IdDetalleValeSalida,
  SUM(DetSal.Cantidad) 
 FROM DetalleSalidasMateriales DetSal
 WHERE DetSal.IdDetalleValeSalida is not null
 GROUP BY DetSal.IdDetalleValeSalida

SET NOCOUNT OFF

declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='001111111111111133'
set @vector_T='003420122901193100'

SELECT
 DetVal.IdValeSalida,
 DetVal.IdArticulo,
 ValesSalida.NumeroValeSalida as [Vale (Det.)],
 ValesSalida.FechaValeSalida as [Fecha],
 Articulos.Codigo as [Codigo],
 Articulos.Descripcion as [Articulo],
 DetVal.Cantidad as [Cant.],
 DetVal.Cantidad1 as [Med.1],
 DetVal.Cantidad2 as [Med.2],
 DetVal.IdValeSalida,
 Unidades.Abreviatura as [En :],
 #Auxiliar1.Entregado as [Entregado],
 CASE WHEN #Auxiliar1.Entregado is not null 
	THEN DetVal.Cantidad-#Auxiliar1.Entregado
	ELSE DetVal.Cantidad
 END as [Pendiente],
 DetVal.IdDetalleValeSalida,
 Obras.NumeroObra as [Obra],
 Depositos.Descripcion+' - E:'+Ubicaciones.Estanteria+
	' M:'+Ubicaciones.Modulo+' G:'+Ubicaciones.Gabeta as [Ubicacion],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM DetalleValesSalida DetVal
LEFT OUTER JOIN Articulos ON DetVal.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Unidades ON DetVal.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN ValesSalida ON DetVal.IdValeSalida= ValesSalida.IdValeSalida
LEFT OUTER JOIN #Auxiliar1 ON DetVal.IdDetalleValeSalida= #Auxiliar1.IdDetalleValeSalida
LEFT OUTER JOIN Obras ON ValesSalida.IdObra = Obras.IdObra
LEFT OUTER JOIN Ubicaciones ON Articulos.IdUbicacionStandar = Ubicaciones.IdUbicacion
LEFT OUTER JOIN Depositos ON Ubicaciones.IdDeposito = Depositos.IdDeposito
WHERE (ValesSalida.Cumplido is null or ValesSalida.Cumplido<>'SI') and 
	(DetVal.Cumplido is null or DetVal.Cumplido<>'SI') and 
	(DetVal.Estado is null or DetVal.Estado<>'AN')

DROP TABLE #Auxiliar1






GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_TX_PendientesResumido]    Script Date: 03/15/2011 11:49:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO







CREATE PROCEDURE [dbo].[ValesSalida_TX_PendientesResumido]

AS

declare @vector_X varchar(30),@vector_T varchar(30)
set @vector_X='0111133'
set @vector_T='0555900'

SELECT
 IdValeSalida,
 NumeroValeSalida as [Vale],
 FechaValeSalida as [Fecha],
 Obras.NumeroObra as [Obra],
 IdValeSalida,
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM ValesSalida
LEFT OUTER JOIN Obras ON ValesSalida.IdObra = Obras.IdObra
WHERE (ValesSalida.Cumplido is null or ValesSalida.Cumplido<>'SI') and 
	Exists(Select DetVal.IdValeSalida
		From DetalleValesSalida DetVal
		Where DetVal.IdValeSalida=ValesSalida.IdValeSalida and 
			(DetVal.Cumplido is null or DetVal.Cumplido<>'SI') and 
			(DetVal.Estado is null or DetVal.Estado<>'AN'))






GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_TX_PorId]    Script Date: 03/15/2011 11:49:13 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO







CREATE Procedure [dbo].[ValesSalida_TX_PorId]
@IdValeSalida int
AS 
SELECT * 
FROM ValesSalida
WHERE (IdValeSalida=@IdValeSalida)







GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_TX_SetearComoTransmitido]    Script Date: 03/15/2011 11:49:13 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE Procedure [dbo].[ValesSalida_TX_SetearComoTransmitido]
AS 
UPDATE ValesSalida
SET EnviarEmail=0
WHERE EnviarEmail<>0



GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_TX_TodosLosItems]    Script Date: 03/15/2011 11:49:13 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO



CREATE PROCEDURE [dbo].[ValesSalida_TX_TodosLosItems]

@IdValeSalida int

AS

SELECT
 DetVal.*,
 LMateriales.NumeroLMateriales,
 DetalleLMateriales.NumeroItem as [NumeroItemLMateriales],
 Reservas.NumeroReserva,
 Articulos.Codigo,
 Articulos.Descripcion as [Articulo],
 IsNull(Unidades.Abreviatura,Unidades.Descripcion) as [Unidad],
 Requerimientos.NumeroRequerimiento,
 DetReq.NumeroItem as [ItemRM],
 DetReq.CodigoDistribucion,
 Requerimientos.TipoRequerimiento as [TipoRM],
 Case When DetReq.IdEquipoDestino is not null 
	Then IsNull((Select Top 1 A.NumeroInventario From Articulos A 
			Where DetReq.IdEquipoDestino=A.IdArticulo),'')
	Else ''
 End as [EquipoDestino]
FROM DetalleValesSalida DetVal
LEFT OUTER JOIN Articulos ON DetVal.IdArticulo = Articulos.IdArticulo
LEFT OUTER JOIN Unidades ON DetVal.IdUnidad = Unidades.IdUnidad
LEFT OUTER JOIN DetalleLMateriales ON DetVal.IdDetalleLMateriales = DetalleLMateriales.IdDetalleLMateriales
LEFT OUTER JOIN LMateriales ON DetalleLMateriales.IdLMateriales = LMateriales.IdLMateriales 
LEFT OUTER JOIN DetalleReservas ON DetVal.IdDetalleReserva = DetalleReservas.IdDetalleReserva
LEFT OUTER JOIN Reservas ON DetalleReservas.IdReserva= Reservas.IdReserva
LEFT OUTER JOIN DetalleRequerimientos DetReq ON DetReq.IdDetalleRequerimiento = DetVal.IdDetalleRequerimiento
LEFT OUTER JOIN Requerimientos ON Requerimientos.IdRequerimiento = DetReq.IdRequerimiento
WHERE (DetVal.IdValeSalida = @IdValeSalida)


GO

/****** Object:  StoredProcedure [dbo].[ValesSalida_TX_TT]    Script Date: 03/15/2011 11:49:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO







CREATE  Procedure [dbo].[ValesSalida_TX_TT]

@IdValeSalida int

AS 

Declare @vector_X varchar(50),@vector_T varchar(50)
Set @vector_X='011111133'
Set @vector_T='049344200'

SELECT 
 ValesSalida.IdValeSalida,
 ValesSalida.NumeroValeSalida as [Numero de vale],
 ValesSalida.IdValeSalida as [IdAux],
 ValesSalida.NumeroValePreimpreso as [Nro.preimp.],
 ValesSalida.FechaValeSalida as [Fecha],
 Obras.NumeroObra as [Numero obra],
 ValesSalida.Cumplido as [Cumplido],
 @Vector_T as Vector_T,
 @Vector_X as Vector_X
FROM ValesSalida
LEFT OUTER JOIN Obras ON ValesSalida.IdObra = Obras.IdObra
WHERE (IdValeSalida=@IdValeSalida)






GO

