@using System.Globalization
@model ProntoMVC.Areas.MvcMembership.Models.UserAdministration.DetailsViewModel
@{
    ViewBag.Title = "User Details: " + Model.DisplayName;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div style="padding-left: 15px; padding-right: 15px;">
    <br />
    <link href='@Url.Content("~/Content/MvcMembership.css")' rel="stylesheet" type="text/css" />


    <div class="" style='font-size: 34px; margin-top: 5px; height: 60px; font-weight: 400;
            text-shadow: 0 1px 0  lightgray; font-family: "Segoe UI Web Regular", "Segoe UI", "Lucida", Tahoma, Arial,"sans-serif"'>
        Usuario  @Model.DisplayName [@Model.Status]
    </div>


    <ul class="mvcMembership-tabs">
        <li>@Html.ActionLink("Detalles", "Details", "UserAdministration", new { id = Model.User.ProviderUserKey }, null)</li>
        <li>@Html.ActionLink("Empresas", "UsersEmpresas", "UserAdministration", new { id = Model.User.ProviderUserKey }, null)</li>
        <li>@Html.ActionLink("Contraseña", "Password", "UserAdministration", new { id = Model.User.ProviderUserKey }, null)</li>
        <li>@Html.ActionLink("Accesos", "Edit", "Acceso", new { nombre = Model.User.UserName, area = "" }, null)</li>



    </ul>
    <h3 class="mvcMembership">
        Roles
    </h3>
    <div class="mvcMembership-userRoles">
        <ul class="mvcMembership">
            @foreach (var role in Model.Roles)
            {

                // solo permitir Roles externos
                string[] rolesexternos = new string[5] {"ExternoCuentaCorrienteCliente",
                                                    "ExternoCuentaCorrienteProveedor",
                                                    "ExternoOrdenesPagoListas",
                                                    "ExternoPresupuestos", "AdminExterno"};



                if (!rolesexternos.Contains(role.Key)) { continue; }


                if (Roles.IsUserInRole(ViewBag.NombreUsuario, "SuperAdmin") ||
                    Roles.IsUserInRole(ViewBag.NombreUsuario, "Administrador") && (Roles.IsUserInRole(ViewBag.NombreUsuario, role.Key) || role.Key.Contains("Externo")))
                {
                    <div class="row-fluid">
                        <div class="span2">
                            @Html.ActionLink(role.Key, "Role", new { id = role.Key })
                        </div>
                        <div class="span2">
                            @if (role.Value)
                            {
                                using (Html.BeginForm("RemoveFromRole", "UserAdministration", new { id = Model.User.ProviderUserKey, role = role.Key }))
                                {
                                    <input type="submit" class="btn" value="Quitar" />
                                }
                            }
                            else
                            {
                                using (Html.BeginForm("AddToRole", "UserAdministration", new { id = Model.User.ProviderUserKey, role = role.Key }))
                                {
                                    <input type="submit" class="btn" value="Agregar" />
                                }
                            }
                        </div>
                    </div>
                }
            }
        </ul>
    </div>

</div>