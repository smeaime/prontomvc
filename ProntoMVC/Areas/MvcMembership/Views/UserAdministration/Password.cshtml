@using System.Globalization
@model ProntoMVC.Areas.MvcMembership.Models.UserAdministration.DetailsViewModel
@{
    ViewBag.Title = "Usuario " + Model.DisplayName;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div style="padding-left: 15px; padding-right: 15px;">
    <link href='@Url.Content("~/Content/MvcMembership.css")' rel="stylesheet" type="text/css" />
    <div class="" style='font-size: 34px; margin-top: 5px; height: 60px; font-weight: 400;
        text-shadow: 0 1px 0  lightgray; font-family: "Segoe UI Web Regular", "Segoe UI", "Lucida", Tahoma, Arial,"sans-serif"'>
        <br />
        @Model.DisplayName [@Model.Status] - Contraseña
        <br />
        <br />
    </div>
    <ul class="mvcMembership-tabs">
        <li>@Html.ActionLink("Detalles", "Details", "UserAdministration", new { id = Model.User.ProviderUserKey }, null)</li>
        <li>@Html.ActionLink("Empresas", "UsersEmpresas", "UserAdministration", new { id = Model.User.ProviderUserKey }, null)</li>
        <li>Contraseña</li>
        @if (Model.IsRolesEnabled)
        {
            <li>@Html.ActionLink("Roles", "UsersRoles", "UserAdministration", new { id = Model.User.ProviderUserKey }, null)</li>
        }
    </ul>
    <br />
    <div class="mvcMembership-password">
        @if (Model.User.IsLockedOut)
        {
            <p>
                Bloqueada desde @Model.User.LastLockoutDate.ToString("MMMM dd, yyyy h:mm:ss tt", CultureInfo.InvariantCulture)</p>
            using (Html.BeginForm("Unlock", "UserAdministration", new { id = Model.User.ProviderUserKey }))
            {
            <input type="submit" value="Unlock Account" />
            }
        }
        else
        {

            if (Model.User.LastPasswordChangedDate == Model.User.CreationDate)
            {
            <dl class="mvcMembership">
                <dt>Ultimo cambio:</dt>
                <dd>
                    <em>Nunca</em></dd>
            </dl>
            }
            else
            {
            <dl class="mvcMembership">
                <dt>Ultimo cambio:</dt>
                <dd>@Model.User.LastPasswordChangedDate.ToString("MMMM dd, yyyy h:mm:ss tt", CultureInfo.InvariantCulture)</dd>
            </dl>
            }






            if (Model.CanResetPassword && Model.RequirePasswordQuestionAnswerToResetPassword)
            {


           @*     using (Html.BeginForm("SetPassword", "UserAdministration", new { id = Model.User.ProviderUserKey }))
                {
            <fieldset>
                <p>
                    <label for="password">
                        Actual contraseña:</label>
                    @Html.Password("password")
                </p>
                <p>
                    <label for="password">
                        Nueva contraseña:</label>
                    @Html.Password("nuevapass")
                </p>
                <input type="submit" value="Cambiar" class="btn btn-primary" />
            </fieldset>
                }*@
                
                
                   using (Html.BeginForm("SetMiPassword", "Account", new { area = "" }, FormMethod.Post, new { id = Model.User.ProviderUserKey }))
                        {
            <fieldset>
                <p>
                    <label for="password">
                        Actual contraseña:</label>
                    @Html.Password("password")
                </p>
                <p>
                    <label for="password">
                        Nueva contraseña:</label>
                    @Html.Password("nuevapass")
                </p>
                <input type="submit" value="Cambiar" />
            </fieldset>
                        }


                   using (Html.BeginForm("ResetPasswordWithAnswer", "UserAdministration", new { id = Model.User.ProviderUserKey }))
                   {
                     
            <fieldset>
                @*         <p>
                <label>
                    Pregunta secreta:                </label>

                    @if (string.IsNullOrEmpty(Model.User.PasswordQuestion) || string.IsNullOrEmpty(Model.User.PasswordQuestion.Trim()))
                    {
                        <dd>
                            <em>Sin definir</em></dd>
                    }
                    else
                    {
                        <dd>@Model.User.PasswordQuestion</dd>
                    }
            </p>
            <p>
                <label for="answer">
                    Respuesta secreta:</label>
                @Html.TextBox("answer")
            </p>*@
                <input type="submit" value="Administrador: resetear contraseña del usuario" class="btn btn-danger" />
            </fieldset>
                   }
            }
            else if (Model.CanResetPassword)
            {


                using (Html.BeginForm("SetMiPassword", "Account", new { area = "" }, FormMethod.Post, new { id = Model.User.ProviderUserKey }))
                {
            <fieldset>
                <p>
                    <label for="password">
                        Actual contraseña:</label>
                    @Html.Password("password")
                </p>
                <p>
                    <label for="password">
                        Nueva contraseña:</label>
                    @Html.Password("nuevapass")
                </p>
                <input type="submit" value="Cambiar" />
            </fieldset>
                }

                        
                        @*using (Html.BeginForm("SetPassword", "UserAdministration", new { id = Model.User.ProviderUserKey }))
                        {
            <fieldset>
                <p>
                    <label for="password">
                        Nueva contraseña:</label>
                    @Html.Password("password")
                </p>
                <input type="submit" value="Cambiar" />
            </fieldset>
                        }*@
                using (Html.BeginForm("ResetPassword", "UserAdministration", new { id = Model.User.ProviderUserKey }))
                {
            <fieldset>
                <input type="submit" value="Resetear pass" class="btn btn-primary" />
            </fieldset>
                }
            }

        }
        <div>
            @if ((TempData["Alerta"] ?? "").ToString().Contains("Grabado"))
            {
                <div class="alert fade in span12  alert-success" id="mensajeAlerta2" style="display: none;">
                    <button type="button" class="close" style="height: 40px; width: 40px; font-size: x-large;">
                        &times;</button>
                    <p id="textoMensajeAlerta2">
                        @TempData["Alerta"]
                    </p>
                </div>
            }
            else
            {
                <div class="alert fade in span12 " id="mensajeAlerta2" style="display: none;">
                    <button type="button" class="close" style="height: 40px; width: 40px; font-size: x-large;">
                        &times;</button>
                    <p id="textoMensajeAlerta2">
                        @TempData["Alerta"]
                    </p>
                </div>
            }
            @if ((@TempData["Alerta"] ?? "") != "")
            {
                <script>
                    $("#mensajeAlerta2").show();
                </script>
            }
        </div>
    </div>
</div>
