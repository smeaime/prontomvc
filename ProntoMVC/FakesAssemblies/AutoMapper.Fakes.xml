<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AutoMapper.Fakes</name>
    </assembly>
    <members>
        <member name="T:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Configuration.CreateTypeMapExpression</summary>
        </member>
        <member name="M:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.#ctor(AutoMapper.Configuration.CreateTypeMapExpression)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.Bind(AutoMapper.IMappingExpression)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.ConvertUsingOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Establecer el shim de CreateTypeMapExpression.ConvertUsing()</summary>
        </member>
        <member name="P:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.AcceptIMappingExpression">
            <summary>Establecer el shim de CreateTypeMapExpression.Accept(IMappingExpression mappingExpression)</summary>
        </member>
        <member name="P:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.AsType">
            <summary>Establecer el shim de CreateTypeMapExpression.As(Type typeOverride)</summary>
        </member>
        <member name="P:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.ConstructorTypePairMemberListString">
            <summary>Establecer el shim de CreateTypeMapExpression.CreateTypeMapExpression(TypePair typePair, MemberList memberList, String profileName)</summary>
        </member>
        <member name="P:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.ConvertUsingType">
            <summary>Establecer el shim de CreateTypeMapExpression.ConvertUsing(Type typeConverterType)</summary>
        </member>
        <member name="P:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.ForMemberStringActionOfIMemberConfigurationExpression">
            <summary>Establecer el shim de CreateTypeMapExpression.ForMember(String name, Action`1&lt;IMemberConfigurationExpression&gt; memberOptions)</summary>
        </member>
        <member name="P:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.ForSourceMemberStringActionOfISourceMemberConfigurationExpression">
            <summary>Establecer el shim de CreateTypeMapExpression.ForSourceMember(String sourceMemberName, Action`1&lt;ISourceMemberConfigurationExpression&gt; memberOptions)</summary>
        </member>
        <member name="P:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.MemberListGet">
            <summary>Establecer el shim de CreateTypeMapExpression.get_MemberList()</summary>
        </member>
        <member name="P:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.MemberListSetMemberList">
            <summary>Establecer el shim de CreateTypeMapExpression.set_MemberList(MemberList value)</summary>
        </member>
        <member name="P:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.ProfileNameGet">
            <summary>Establecer el shim de CreateTypeMapExpression.get_ProfileName()</summary>
        </member>
        <member name="P:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.ProfileNameSetString">
            <summary>Establecer el shim de CreateTypeMapExpression.set_ProfileName(String value)</summary>
        </member>
        <member name="P:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.TypePairGet">
            <summary>Establecer el shim de CreateTypeMapExpression.get_TypePair()</summary>
        </member>
        <member name="P:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.TypePairSetTypePair">
            <summary>Establecer el shim de CreateTypeMapExpression.set_TypePair(TypePair value)</summary>
        </member>
        <member name="P:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.WithProfileString">
            <summary>Establecer el shim de CreateTypeMapExpression.WithProfile(String profileName)</summary>
        </member>
        <member name="T:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.AllInstances.ConvertUsingOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.Configuration.CreateTypeMapExpression})">
            <summary>Establecer el shim de CreateTypeMapExpression.ConvertUsing()</summary>
        </member>
        <member name="P:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.AllInstances.AcceptIMappingExpression">
            <summary>Establecer el shim de CreateTypeMapExpression.Accept(IMappingExpression mappingExpression)</summary>
        </member>
        <member name="P:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.AllInstances.AsType">
            <summary>Establecer el shim de CreateTypeMapExpression.As(Type typeOverride)</summary>
        </member>
        <member name="P:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.AllInstances.ConvertUsingType">
            <summary>Establecer el shim de CreateTypeMapExpression.ConvertUsing(Type typeConverterType)</summary>
        </member>
        <member name="P:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.AllInstances.ForMemberStringActionOfIMemberConfigurationExpression">
            <summary>Establecer el shim de CreateTypeMapExpression.ForMember(String name, Action`1&lt;IMemberConfigurationExpression&gt; memberOptions)</summary>
        </member>
        <member name="P:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.AllInstances.ForSourceMemberStringActionOfISourceMemberConfigurationExpression">
            <summary>Establecer el shim de CreateTypeMapExpression.ForSourceMember(String sourceMemberName, Action`1&lt;ISourceMemberConfigurationExpression&gt; memberOptions)</summary>
        </member>
        <member name="P:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.AllInstances.MemberListGet">
            <summary>Establecer el shim de CreateTypeMapExpression.get_MemberList()</summary>
        </member>
        <member name="P:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.AllInstances.MemberListSetMemberList">
            <summary>Establecer el shim de CreateTypeMapExpression.set_MemberList(MemberList value)</summary>
        </member>
        <member name="P:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.AllInstances.ProfileNameGet">
            <summary>Establecer el shim de CreateTypeMapExpression.get_ProfileName()</summary>
        </member>
        <member name="P:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.AllInstances.ProfileNameSetString">
            <summary>Establecer el shim de CreateTypeMapExpression.set_ProfileName(String value)</summary>
        </member>
        <member name="P:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.AllInstances.TypePairGet">
            <summary>Establecer el shim de CreateTypeMapExpression.get_TypePair()</summary>
        </member>
        <member name="P:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.AllInstances.TypePairSetTypePair">
            <summary>Establecer el shim de CreateTypeMapExpression.set_TypePair(TypePair value)</summary>
        </member>
        <member name="P:AutoMapper.Configuration.Fakes.ShimCreateTypeMapExpression.AllInstances.WithProfileString">
            <summary>Establecer el shim de CreateTypeMapExpression.WithProfile(String profileName)</summary>
        </member>
        <member name="T:AutoMapper.Configuration.Fakes.StubCreateTypeMapExpression">
            <summary>Tipo stub de AutoMapper.Configuration.CreateTypeMapExpression</summary>
        </member>
        <member name="M:AutoMapper.Configuration.Fakes.StubCreateTypeMapExpression.#ctor(AutoMapper.Impl.TypePair,AutoMapper.MemberList,System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Configuration.Fakes.StubCreateTypeMapExpression.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubCreateTypeMapExpression</summary>
        </member>
        <member name="P:AutoMapper.Configuration.Fakes.StubCreateTypeMapExpression.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Configuration.Fakes.StubCreateTypeMapExpression.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Configuration.Fakes.StubCreateTypeMapExpression.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimAliasedMember">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.AliasedMember</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAliasedMember.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAliasedMember.#ctor(AutoMapper.AliasedMember)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAliasedMember.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAliasedMember.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAliasedMember.AliasGet">
            <summary>Establecer el shim de AliasedMember.get_Alias()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAliasedMember.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAliasedMember.ConstructorStringString">
            <summary>Establecer el shim de AliasedMember.AliasedMember(String member, String alias)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAliasedMember.EqualsAliasedMember">
            <summary>Establecer el shim de AliasedMember.Equals(AliasedMember other)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAliasedMember.EqualsObject">
            <summary>Establecer el shim de AliasedMember.Equals(Object obj)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAliasedMember.GetHashCode">
            <summary>Establecer el shim de AliasedMember.GetHashCode()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAliasedMember.MemberGet">
            <summary>Establecer el shim de AliasedMember.get_Member()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimAliasedMember.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAliasedMember.AllInstances.AliasGet">
            <summary>Establecer el shim de AliasedMember.get_Alias()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAliasedMember.AllInstances.EqualsAliasedMember">
            <summary>Establecer el shim de AliasedMember.Equals(AliasedMember other)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAliasedMember.AllInstances.EqualsObject">
            <summary>Establecer el shim de AliasedMember.Equals(Object obj)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAliasedMember.AllInstances.GetHashCode01">
            <summary>Establecer el shim de AliasedMember.GetHashCode()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAliasedMember.AllInstances.MemberGet">
            <summary>Establecer el shim de AliasedMember.get_Member()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimAutoMapperConfigurationException">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.AutoMapperConfigurationException</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAutoMapperConfigurationException.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAutoMapperConfigurationException.#ctor(AutoMapper.AutoMapperConfigurationException)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAutoMapperConfigurationException.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAutoMapperConfigurationException.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAutoMapperConfigurationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ConstructorAutoMapperConfigurationExceptionTypeMapConfigErrorsArray">
            <summary>Establecer el shim de AutoMapperConfigurationException.AutoMapperConfigurationException(TypeMapConfigErrors[] errors)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ConstructorResolutionContext">
            <summary>Establecer el shim de AutoMapperConfigurationException.AutoMapperConfigurationException(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ConstructorString">
            <summary>Establecer el shim de AutoMapperConfigurationException.AutoMapperConfigurationException(String message)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ConstructorStringException">
            <summary>Establecer el shim de AutoMapperConfigurationException.AutoMapperConfigurationException(String message, Exception inner)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ContextGet">
            <summary>Establecer el shim de AutoMapperConfigurationException.get_Context()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ErrorsGet">
            <summary>Establecer el shim de AutoMapperConfigurationException.get_Errors()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.MessageGet">
            <summary>Establecer el shim de AutoMapperConfigurationException.get_Message()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.StackTraceGet">
            <summary>Establecer el shim de AutoMapperConfigurationException.get_StackTrace()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimAutoMapperConfigurationException.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.AllInstances.ContextGet">
            <summary>Establecer el shim de AutoMapperConfigurationException.get_Context()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.AllInstances.ErrorsGet">
            <summary>Establecer el shim de AutoMapperConfigurationException.get_Errors()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.AllInstances.MessageGet">
            <summary>Establecer el shim de AutoMapperConfigurationException.get_Message()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.AllInstances.StackTraceGet">
            <summary>Establecer el shim de AutoMapperConfigurationException.get_StackTrace()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ShimTypeMapConfigErrors">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.AutoMapperConfigurationException+TypeMapConfigErrors</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ShimTypeMapConfigErrors.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ShimTypeMapConfigErrors.#ctor(AutoMapper.AutoMapperConfigurationException.TypeMapConfigErrors)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ShimTypeMapConfigErrors.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ShimTypeMapConfigErrors.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ShimTypeMapConfigErrors.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ShimTypeMapConfigErrors.ConstructorTypeMapStringArray">
            <summary>Establecer el shim de TypeMapConfigErrors.TypeMapConfigErrors(TypeMap typeMap, String[] unmappedPropertyNames)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ShimTypeMapConfigErrors.TypeMapGet">
            <summary>Establecer el shim de TypeMapConfigErrors.get_TypeMap()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ShimTypeMapConfigErrors.UnmappedPropertyNamesGet">
            <summary>Establecer el shim de TypeMapConfigErrors.get_UnmappedPropertyNames()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ShimTypeMapConfigErrors.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ShimTypeMapConfigErrors.AllInstances.TypeMapGet">
            <summary>Establecer el shim de TypeMapConfigErrors.get_TypeMap()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ShimTypeMapConfigErrors.AllInstances.UnmappedPropertyNamesGet">
            <summary>Establecer el shim de TypeMapConfigErrors.get_UnmappedPropertyNames()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimAutoMapperMappingException">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.AutoMapperMappingException</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAutoMapperMappingException.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAutoMapperMappingException.#ctor(AutoMapper.AutoMapperMappingException)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAutoMapperMappingException.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAutoMapperMappingException.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAutoMapperMappingException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.Constructor">
            <summary>Establecer el shim de AutoMapperMappingException.AutoMapperMappingException()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.ConstructorResolutionContext">
            <summary>Establecer el shim de AutoMapperMappingException.AutoMapperMappingException(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.ConstructorResolutionContextException">
            <summary>Establecer el shim de AutoMapperMappingException.AutoMapperMappingException(ResolutionContext context, Exception inner)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.ConstructorResolutionContextString">
            <summary>Establecer el shim de AutoMapperMappingException.AutoMapperMappingException(ResolutionContext context, String message)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.ConstructorString">
            <summary>Establecer el shim de AutoMapperMappingException.AutoMapperMappingException(String message)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.ConstructorStringException">
            <summary>Establecer el shim de AutoMapperMappingException.AutoMapperMappingException(String message, Exception inner)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.ContextGet">
            <summary>Establecer el shim de AutoMapperMappingException.get_Context()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.GetContextsResolutionContext">
            <summary>Establecer el shim de AutoMapperMappingException.GetContexts(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.GetDestPathResolutionContext">
            <summary>Establecer el shim de AutoMapperMappingException.GetDestPath(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.MessageGet">
            <summary>Establecer el shim de AutoMapperMappingException.get_Message()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.StackTraceGet">
            <summary>Establecer el shim de AutoMapperMappingException.get_StackTrace()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimAutoMapperMappingException.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.AllInstances.ContextGet">
            <summary>Establecer el shim de AutoMapperMappingException.get_Context()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.AllInstances.GetDestPathResolutionContext">
            <summary>Establecer el shim de AutoMapperMappingException.GetDestPath(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.AllInstances.MessageGet">
            <summary>Establecer el shim de AutoMapperMappingException.get_Message()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.AllInstances.StackTraceGet">
            <summary>Establecer el shim de AutoMapperMappingException.get_StackTrace()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimConfigurationStore">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.ConfigurationStore</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.#ctor(AutoMapper.ConfigurationStore)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.AddProfileOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Establecer el shim de ConfigurationStore.AddProfile()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.AssertConfigurationIsValidOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Establecer el shim de ConfigurationStore.AssertConfigurationIsValid()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.Bind(AutoMapper.IConfiguration)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.Bind(AutoMapper.IConfigurationProvider)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.Bind(AutoMapper.IProfileConfiguration)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.Bind(AutoMapper.IProfileExpression)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.CreateMapOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IMappingExpression{``0,``1}})">
            <summary>Establecer el shim de ConfigurationStore.CreateMap()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.CreateMapOf2MemberList``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MemberList,AutoMapper.IMappingExpression{``0,``1}})">
            <summary>Establecer el shim de ConfigurationStore.CreateMap(MemberList memberList)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.CreateMapOf2String``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,AutoMapper.IMappingExpression{``0,``1}})">
            <summary>Establecer el shim de ConfigurationStore.CreateMap(String profileName)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.CreateMapOf2StringMemberList``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,AutoMapper.MemberList,AutoMapper.IMappingExpression{``0,``1}})">
            <summary>Establecer el shim de ConfigurationStore.CreateMap(String profileName, MemberList memberList)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.CreateMappingExpressionOf2TypeMap``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.TypeMap,AutoMapper.IMappingExpression{``0,``1}})">
            <summary>Establecer el shim de ConfigurationStore.CreateMappingExpression(TypeMap typeMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AddGlobalIgnoreString">
            <summary>Establecer el shim de ConfigurationStore.AddGlobalIgnore(String startingwith)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AddProfileProfile">
            <summary>Establecer el shim de ConfigurationStore.AddProfile(Profile profile)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AliasesGet">
            <summary>Establecer el shim de ConfigurationStore.get_Aliases()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllowNullCollectionsGet">
            <summary>Establecer el shim de ConfigurationStore.get_AllowNullCollections()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllowNullCollectionsSetBoolean">
            <summary>Establecer el shim de ConfigurationStore.set_AllowNullCollections(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllowNullDestinationValuesGet">
            <summary>Establecer el shim de ConfigurationStore.get_AllowNullDestinationValues()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllowNullDestinationValuesSetBoolean">
            <summary>Establecer el shim de ConfigurationStore.set_AllowNullDestinationValues(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AssertConfigurationIsValid">
            <summary>Establecer el shim de ConfigurationStore.AssertConfigurationIsValid()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AssertConfigurationIsValidIEnumerableOfTypeMap">
            <summary>Establecer el shim de ConfigurationStore.AssertConfigurationIsValid(IEnumerable`1&lt;TypeMap&gt; typeMaps)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AssertConfigurationIsValidString">
            <summary>Establecer el shim de ConfigurationStore.AssertConfigurationIsValid(String profileName)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AssertConfigurationIsValidTypeMap">
            <summary>Establecer el shim de ConfigurationStore.AssertConfigurationIsValid(TypeMap typeMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.ClearPrefixes">
            <summary>Establecer el shim de ConfigurationStore.ClearPrefixes()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.ConstructServicesUsingFuncOfTypeObject">
            <summary>Establecer el shim de ConfigurationStore.ConstructServicesUsing(Func`2&lt;Type,Object&gt; constructor)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.ConstructorITypeMapFactoryIEnumerableOfIObjectMapper">
            <summary>Establecer el shim de ConfigurationStore.ConfigurationStore(ITypeMapFactory typeMapFactory, IEnumerable`1&lt;IObjectMapper&gt; mappers)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.ConstructorMappingEnabledGet">
            <summary>Establecer el shim de ConfigurationStore.get_ConstructorMappingEnabled()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.CreateMapTypeType">
            <summary>Establecer el shim de ConfigurationStore.CreateMap(Type sourceType, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.CreateMapTypeTypeMemberList">
            <summary>Establecer el shim de ConfigurationStore.CreateMap(Type sourceType, Type destinationType, MemberList memberList)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.CreateMapTypeTypeMemberListString">
            <summary>Establecer el shim de ConfigurationStore.CreateMap(Type sourceType, Type destinationType, MemberList memberList, String profileName)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.CreateMappingExpressionTypeMapType">
            <summary>Establecer el shim de ConfigurationStore.CreateMappingExpression(TypeMap typeMap, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.CreateProfileString">
            <summary>Establecer el shim de ConfigurationStore.CreateProfile(String profileName)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.CreateProfileStringActionOfIProfileExpression">
            <summary>Establecer el shim de ConfigurationStore.CreateProfile(String profileName, Action`1&lt;IProfileExpression&gt; profileConfiguration)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.CreateTypeMapTypeType">
            <summary>Establecer el shim de ConfigurationStore.CreateTypeMap(Type source, Type destination)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.CreateTypeMapTypeTypeStringMemberList">
            <summary>Establecer el shim de ConfigurationStore.CreateTypeMap(Type source, Type destination, String profileName, MemberList memberList)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.DataReaderMapperYieldReturnEnabledGet">
            <summary>Establecer el shim de ConfigurationStore.get_DataReaderMapperYieldReturnEnabled()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.DestinationMemberNamingConventionGet">
            <summary>Establecer el shim de ConfigurationStore.get_DestinationMemberNamingConvention()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.DestinationMemberNamingConventionSetINamingConvention">
            <summary>Establecer el shim de ConfigurationStore.set_DestinationMemberNamingConvention(INamingConvention value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.DestinationPostfixesGet">
            <summary>Establecer el shim de ConfigurationStore.get_DestinationPostfixes()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.DestinationPrefixesGet">
            <summary>Establecer el shim de ConfigurationStore.get_DestinationPrefixes()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.DisableConstructorMapping">
            <summary>Establecer el shim de ConfigurationStore.DisableConstructorMapping()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.DryRunTypeMapICollectionOfTypeMapResolutionContext">
            <summary>Establecer el shim de ConfigurationStore.DryRunTypeMap(ICollection`1&lt;TypeMap&gt; typeMapsChecked, ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.EnableYieldReturnForDataReaderMapper">
            <summary>Establecer el shim de ConfigurationStore.EnableYieldReturnForDataReaderMapper()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.FindClosedGenericTypeMapForResolutionContext">
            <summary>Establecer el shim de ConfigurationStore.FindClosedGenericTypeMapFor(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.FindTypeMapForTypePair">
            <summary>Establecer el shim de ConfigurationStore.FindTypeMapFor(TypePair typePair)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.FindTypeMapForTypeType">
            <summary>Establecer el shim de ConfigurationStore.FindTypeMapFor(Type sourceType, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.GetAllTypeMaps">
            <summary>Establecer el shim de ConfigurationStore.GetAllTypeMaps()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.GetAllTypesType">
            <summary>Establecer el shim de ConfigurationStore.GetAllTypes(Type type)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.GetDerivedTypeMapsTypeMap">
            <summary>Establecer el shim de ConfigurationStore.GetDerivedTypeMaps(TypeMap typeMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.GetMappers">
            <summary>Establecer el shim de ConfigurationStore.GetMappers()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.GetProfileConfigurationString">
            <summary>Establecer el shim de ConfigurationStore.GetProfileConfiguration(String profileName)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.GetProfileString">
            <summary>Establecer el shim de ConfigurationStore.GetProfile(String profileName)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.GetRelatedTypePairsTypePair">
            <summary>Establecer el shim de ConfigurationStore.GetRelatedTypePairs(TypePair root)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.HasOpenGenericTypeMapDefinedResolutionContext">
            <summary>Establecer el shim de ConfigurationStore.HasOpenGenericTypeMapDefined(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.IncludeBaseMappingsTypeTypeTypeMap">
            <summary>Establecer el shim de ConfigurationStore.IncludeBaseMappings(Type source, Type destination, TypeMap typeMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.IncludeSourceExtensionMethodsAssembly">
            <summary>Establecer el shim de ConfigurationStore.IncludeSourceExtensionMethods(Assembly assembly)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.MapNullSourceCollectionsAsNullAutoMapperIProfileConfigurationget">
            <summary>Establecer el shim de ConfigurationStore.AutoMapper.IProfileConfiguration.get_MapNullSourceCollectionsAsNull()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.MapNullSourceValuesAsNullAutoMapperIProfileConfigurationget">
            <summary>Establecer el shim de ConfigurationStore.AutoMapper.IProfileConfiguration.get_MapNullSourceValuesAsNull()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.MemberNameReplacersGet">
            <summary>Establecer el shim de ConfigurationStore.get_MemberNameReplacers()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.OnTypeMapCreatedTypeMap">
            <summary>Establecer el shim de ConfigurationStore.OnTypeMapCreated(TypeMap typeMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.PostfixesGet">
            <summary>Establecer el shim de ConfigurationStore.get_Postfixes()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.PrefixesGet">
            <summary>Establecer el shim de ConfigurationStore.get_Prefixes()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.RecognizeAliasStringString">
            <summary>Establecer el shim de ConfigurationStore.RecognizeAlias(String original, String alias)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.RecognizeDestinationPostfixesStringArray">
            <summary>Establecer el shim de ConfigurationStore.RecognizeDestinationPostfixes(String[] postfixes)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.RecognizeDestinationPrefixesStringArray">
            <summary>Establecer el shim de ConfigurationStore.RecognizeDestinationPrefixes(String[] prefixes)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.RecognizePostfixesStringArray">
            <summary>Establecer el shim de ConfigurationStore.RecognizePostfixes(String[] postfixes)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.RecognizePrefixesStringArray">
            <summary>Establecer el shim de ConfigurationStore.RecognizePrefixes(String[] prefixes)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.ReplaceMemberNameStringString">
            <summary>Establecer el shim de ConfigurationStore.ReplaceMemberName(String original, String newValue)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.ResolveTypeMapObjectObjectTypeType">
            <summary>Establecer el shim de ConfigurationStore.ResolveTypeMap(Object source, Object destination, Type sourceType, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.ResolveTypeMapResolutionResultType">
            <summary>Establecer el shim de ConfigurationStore.ResolveTypeMap(ResolutionResult resolutionResult, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.ResolveTypeMapTypePair">
            <summary>Establecer el shim de ConfigurationStore.ResolveTypeMap(TypePair typePair)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.ResolveTypeMapTypeType">
            <summary>Establecer el shim de ConfigurationStore.ResolveTypeMap(Type sourceType, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.Seal">
            <summary>Establecer el shim de ConfigurationStore.Seal()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.ServiceCtorGet">
            <summary>Establecer el shim de ConfigurationStore.get_ServiceCtor()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.ShouldCheckMapTypeMap">
            <summary>Establecer el shim de ConfigurationStore.ShouldCheckMap(TypeMap typeMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.ShouldMapFieldGet">
            <summary>Establecer el shim de ConfigurationStore.get_ShouldMapField()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.ShouldMapFieldSetFuncOfFieldInfoBoolean">
            <summary>Establecer el shim de ConfigurationStore.set_ShouldMapField(Func`2&lt;FieldInfo,Boolean&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.ShouldMapPropertyGet">
            <summary>Establecer el shim de ConfigurationStore.get_ShouldMapProperty()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.ShouldMapPropertySetFuncOfPropertyInfoBoolean">
            <summary>Establecer el shim de ConfigurationStore.set_ShouldMapProperty(Func`2&lt;PropertyInfo,Boolean&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.SourceExtensionMethodsGet">
            <summary>Establecer el shim de ConfigurationStore.get_SourceExtensionMethods()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.SourceMemberNamingConventionGet">
            <summary>Establecer el shim de ConfigurationStore.get_SourceMemberNamingConvention()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.SourceMemberNamingConventionSetINamingConvention">
            <summary>Establecer el shim de ConfigurationStore.set_SourceMemberNamingConvention(INamingConvention value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.StaticConstructor">
            <summary>Establecer el shim de ConfigurationStore.ConfigurationStore()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.TypeMapCreatedAddEventHandlerOfTypeMapCreatedEventArgs">
            <summary>Establecer el shim de ConfigurationStore.add_TypeMapCreated(EventHandler`1&lt;TypeMapCreatedEventArgs&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.TypeMapCreatedRemoveEventHandlerOfTypeMapCreatedEventArgs">
            <summary>Establecer el shim de ConfigurationStore.remove_TypeMapCreated(EventHandler`1&lt;TypeMapCreatedEventArgs&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore._ResolveTypeMapb__87_0TypePair">
            <summary>Establecer el shim de ConfigurationStore.&lt;ResolveTypeMap&gt;b__87_0(TypePair _)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore._ResolveTypeMapb__87_1TypePair">
            <summary>Establecer el shim de ConfigurationStore.&lt;ResolveTypeMap&gt;b__87_1(TypePair tp)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimConfigurationStore.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.AddProfileOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.ConfigurationStore})">
            <summary>Establecer el shim de ConfigurationStore.AddProfile()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.AssertConfigurationIsValidOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.ConfigurationStore})">
            <summary>Establecer el shim de ConfigurationStore.AssertConfigurationIsValid()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.CreateMapOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.ConfigurationStore,AutoMapper.IMappingExpression{``0,``1}})">
            <summary>Establecer el shim de ConfigurationStore.CreateMap()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.CreateMapOf2MemberList``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.ConfigurationStore,AutoMapper.MemberList,AutoMapper.IMappingExpression{``0,``1}})">
            <summary>Establecer el shim de ConfigurationStore.CreateMap(MemberList memberList)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.CreateMapOf2String``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.ConfigurationStore,System.String,AutoMapper.IMappingExpression{``0,``1}})">
            <summary>Establecer el shim de ConfigurationStore.CreateMap(String profileName)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.CreateMapOf2StringMemberList``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.ConfigurationStore,System.String,AutoMapper.MemberList,AutoMapper.IMappingExpression{``0,``1}})">
            <summary>Establecer el shim de ConfigurationStore.CreateMap(String profileName, MemberList memberList)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.CreateMappingExpressionOf2TypeMap``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.ConfigurationStore,AutoMapper.TypeMap,AutoMapper.IMappingExpression{``0,``1}})">
            <summary>Establecer el shim de ConfigurationStore.CreateMappingExpression(TypeMap typeMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.AddGlobalIgnoreString">
            <summary>Establecer el shim de ConfigurationStore.AddGlobalIgnore(String startingwith)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.AddProfileProfile">
            <summary>Establecer el shim de ConfigurationStore.AddProfile(Profile profile)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.AliasesGet">
            <summary>Establecer el shim de ConfigurationStore.get_Aliases()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.AllowNullCollectionsGet">
            <summary>Establecer el shim de ConfigurationStore.get_AllowNullCollections()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.AllowNullCollectionsSetBoolean">
            <summary>Establecer el shim de ConfigurationStore.set_AllowNullCollections(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.AllowNullDestinationValuesGet">
            <summary>Establecer el shim de ConfigurationStore.get_AllowNullDestinationValues()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.AllowNullDestinationValuesSetBoolean">
            <summary>Establecer el shim de ConfigurationStore.set_AllowNullDestinationValues(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.AssertConfigurationIsValid">
            <summary>Establecer el shim de ConfigurationStore.AssertConfigurationIsValid()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.AssertConfigurationIsValidIEnumerableOfTypeMap">
            <summary>Establecer el shim de ConfigurationStore.AssertConfigurationIsValid(IEnumerable`1&lt;TypeMap&gt; typeMaps)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.AssertConfigurationIsValidString">
            <summary>Establecer el shim de ConfigurationStore.AssertConfigurationIsValid(String profileName)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.AssertConfigurationIsValidTypeMap">
            <summary>Establecer el shim de ConfigurationStore.AssertConfigurationIsValid(TypeMap typeMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.ClearPrefixes">
            <summary>Establecer el shim de ConfigurationStore.ClearPrefixes()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.ConstructServicesUsingFuncOfTypeObject">
            <summary>Establecer el shim de ConfigurationStore.ConstructServicesUsing(Func`2&lt;Type,Object&gt; constructor)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.ConstructorMappingEnabledGet">
            <summary>Establecer el shim de ConfigurationStore.get_ConstructorMappingEnabled()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.CreateMapTypeType">
            <summary>Establecer el shim de ConfigurationStore.CreateMap(Type sourceType, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.CreateMapTypeTypeMemberList">
            <summary>Establecer el shim de ConfigurationStore.CreateMap(Type sourceType, Type destinationType, MemberList memberList)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.CreateMapTypeTypeMemberListString">
            <summary>Establecer el shim de ConfigurationStore.CreateMap(Type sourceType, Type destinationType, MemberList memberList, String profileName)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.CreateMappingExpressionTypeMapType">
            <summary>Establecer el shim de ConfigurationStore.CreateMappingExpression(TypeMap typeMap, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.CreateProfileString">
            <summary>Establecer el shim de ConfigurationStore.CreateProfile(String profileName)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.CreateProfileStringActionOfIProfileExpression">
            <summary>Establecer el shim de ConfigurationStore.CreateProfile(String profileName, Action`1&lt;IProfileExpression&gt; profileConfiguration)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.CreateTypeMapTypeType">
            <summary>Establecer el shim de ConfigurationStore.CreateTypeMap(Type source, Type destination)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.CreateTypeMapTypeTypeStringMemberList">
            <summary>Establecer el shim de ConfigurationStore.CreateTypeMap(Type source, Type destination, String profileName, MemberList memberList)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.DataReaderMapperYieldReturnEnabledGet">
            <summary>Establecer el shim de ConfigurationStore.get_DataReaderMapperYieldReturnEnabled()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.DestinationMemberNamingConventionGet">
            <summary>Establecer el shim de ConfigurationStore.get_DestinationMemberNamingConvention()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.DestinationMemberNamingConventionSetINamingConvention">
            <summary>Establecer el shim de ConfigurationStore.set_DestinationMemberNamingConvention(INamingConvention value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.DestinationPostfixesGet">
            <summary>Establecer el shim de ConfigurationStore.get_DestinationPostfixes()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.DestinationPrefixesGet">
            <summary>Establecer el shim de ConfigurationStore.get_DestinationPrefixes()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.DisableConstructorMapping">
            <summary>Establecer el shim de ConfigurationStore.DisableConstructorMapping()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.DryRunTypeMapICollectionOfTypeMapResolutionContext">
            <summary>Establecer el shim de ConfigurationStore.DryRunTypeMap(ICollection`1&lt;TypeMap&gt; typeMapsChecked, ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.EnableYieldReturnForDataReaderMapper">
            <summary>Establecer el shim de ConfigurationStore.EnableYieldReturnForDataReaderMapper()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.FindClosedGenericTypeMapForResolutionContext">
            <summary>Establecer el shim de ConfigurationStore.FindClosedGenericTypeMapFor(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.FindTypeMapForTypePair">
            <summary>Establecer el shim de ConfigurationStore.FindTypeMapFor(TypePair typePair)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.FindTypeMapForTypeType">
            <summary>Establecer el shim de ConfigurationStore.FindTypeMapFor(Type sourceType, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.GetAllTypeMaps">
            <summary>Establecer el shim de ConfigurationStore.GetAllTypeMaps()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.GetAllTypesType">
            <summary>Establecer el shim de ConfigurationStore.GetAllTypes(Type type)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.GetDerivedTypeMapsTypeMap">
            <summary>Establecer el shim de ConfigurationStore.GetDerivedTypeMaps(TypeMap typeMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.GetMappers">
            <summary>Establecer el shim de ConfigurationStore.GetMappers()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.GetProfileConfigurationString">
            <summary>Establecer el shim de ConfigurationStore.GetProfileConfiguration(String profileName)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.GetProfileString">
            <summary>Establecer el shim de ConfigurationStore.GetProfile(String profileName)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.GetRelatedTypePairsTypePair">
            <summary>Establecer el shim de ConfigurationStore.GetRelatedTypePairs(TypePair root)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.HasOpenGenericTypeMapDefinedResolutionContext">
            <summary>Establecer el shim de ConfigurationStore.HasOpenGenericTypeMapDefined(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.IncludeBaseMappingsTypeTypeTypeMap">
            <summary>Establecer el shim de ConfigurationStore.IncludeBaseMappings(Type source, Type destination, TypeMap typeMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.IncludeSourceExtensionMethodsAssembly">
            <summary>Establecer el shim de ConfigurationStore.IncludeSourceExtensionMethods(Assembly assembly)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.MapNullSourceCollectionsAsNullAutoMapperIProfileConfigurationget">
            <summary>Establecer el shim de ConfigurationStore.AutoMapper.IProfileConfiguration.get_MapNullSourceCollectionsAsNull()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.MapNullSourceValuesAsNullAutoMapperIProfileConfigurationget">
            <summary>Establecer el shim de ConfigurationStore.AutoMapper.IProfileConfiguration.get_MapNullSourceValuesAsNull()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.MemberNameReplacersGet">
            <summary>Establecer el shim de ConfigurationStore.get_MemberNameReplacers()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.OnTypeMapCreatedTypeMap">
            <summary>Establecer el shim de ConfigurationStore.OnTypeMapCreated(TypeMap typeMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.PostfixesGet">
            <summary>Establecer el shim de ConfigurationStore.get_Postfixes()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.PrefixesGet">
            <summary>Establecer el shim de ConfigurationStore.get_Prefixes()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.RecognizeAliasStringString">
            <summary>Establecer el shim de ConfigurationStore.RecognizeAlias(String original, String alias)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.RecognizeDestinationPostfixesStringArray">
            <summary>Establecer el shim de ConfigurationStore.RecognizeDestinationPostfixes(String[] postfixes)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.RecognizeDestinationPrefixesStringArray">
            <summary>Establecer el shim de ConfigurationStore.RecognizeDestinationPrefixes(String[] prefixes)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.RecognizePostfixesStringArray">
            <summary>Establecer el shim de ConfigurationStore.RecognizePostfixes(String[] postfixes)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.RecognizePrefixesStringArray">
            <summary>Establecer el shim de ConfigurationStore.RecognizePrefixes(String[] prefixes)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.ReplaceMemberNameStringString">
            <summary>Establecer el shim de ConfigurationStore.ReplaceMemberName(String original, String newValue)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.ResolveTypeMapObjectObjectTypeType">
            <summary>Establecer el shim de ConfigurationStore.ResolveTypeMap(Object source, Object destination, Type sourceType, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.ResolveTypeMapResolutionResultType">
            <summary>Establecer el shim de ConfigurationStore.ResolveTypeMap(ResolutionResult resolutionResult, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.ResolveTypeMapTypePair">
            <summary>Establecer el shim de ConfigurationStore.ResolveTypeMap(TypePair typePair)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.ResolveTypeMapTypeType">
            <summary>Establecer el shim de ConfigurationStore.ResolveTypeMap(Type sourceType, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.Seal">
            <summary>Establecer el shim de ConfigurationStore.Seal()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.ServiceCtorGet">
            <summary>Establecer el shim de ConfigurationStore.get_ServiceCtor()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.ShouldMapFieldGet">
            <summary>Establecer el shim de ConfigurationStore.get_ShouldMapField()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.ShouldMapFieldSetFuncOfFieldInfoBoolean">
            <summary>Establecer el shim de ConfigurationStore.set_ShouldMapField(Func`2&lt;FieldInfo,Boolean&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.ShouldMapPropertyGet">
            <summary>Establecer el shim de ConfigurationStore.get_ShouldMapProperty()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.ShouldMapPropertySetFuncOfPropertyInfoBoolean">
            <summary>Establecer el shim de ConfigurationStore.set_ShouldMapProperty(Func`2&lt;PropertyInfo,Boolean&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.SourceExtensionMethodsGet">
            <summary>Establecer el shim de ConfigurationStore.get_SourceExtensionMethods()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.SourceMemberNamingConventionGet">
            <summary>Establecer el shim de ConfigurationStore.get_SourceMemberNamingConvention()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.SourceMemberNamingConventionSetINamingConvention">
            <summary>Establecer el shim de ConfigurationStore.set_SourceMemberNamingConvention(INamingConvention value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.TypeMapCreatedAddEventHandlerOfTypeMapCreatedEventArgs">
            <summary>Establecer el shim de ConfigurationStore.add_TypeMapCreated(EventHandler`1&lt;TypeMapCreatedEventArgs&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.TypeMapCreatedRemoveEventHandlerOfTypeMapCreatedEventArgs">
            <summary>Establecer el shim de ConfigurationStore.remove_TypeMapCreated(EventHandler`1&lt;TypeMapCreatedEventArgs&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances._ResolveTypeMapb__87_0TypePair">
            <summary>Establecer el shim de ConfigurationStore.&lt;ResolveTypeMap&gt;b__87_0(TypePair _)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances._ResolveTypeMapb__87_1TypePair">
            <summary>Establecer el shim de ConfigurationStore.&lt;ResolveTypeMap&gt;b__87_1(TypePair tp)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimConstructorMap">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.ConstructorMap</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConstructorMap.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConstructorMap.#ctor(AutoMapper.ConstructorMap)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConstructorMap.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConstructorMap.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorMap.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorMap.ConstructorConstructorInfoIEnumerableOfConstructorParameterMap">
            <summary>Establecer el shim de ConstructorMap.ConstructorMap(ConstructorInfo ctor, IEnumerable`1&lt;ConstructorParameterMap&gt; ctorParams)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorMap.CtorGet">
            <summary>Establecer el shim de ConstructorMap.get_Ctor()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorMap.CtorParamsGet">
            <summary>Establecer el shim de ConstructorMap.get_CtorParams()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorMap.CtorSetConstructorInfo">
            <summary>Establecer el shim de ConstructorMap.set_Ctor(ConstructorInfo value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorMap.NewExpressionExpression">
            <summary>Establecer el shim de ConstructorMap.NewExpression(Expression instanceParameter)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorMap.ResolveValueResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de ConstructorMap.ResolveValue(ResolutionContext context, IMappingEngineRunner mappingEngine)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorMap.StaticConstructor">
            <summary>Establecer el shim de ConstructorMap.ConstructorMap()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimConstructorMap.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorMap.AllInstances.CtorGet">
            <summary>Establecer el shim de ConstructorMap.get_Ctor()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorMap.AllInstances.CtorParamsGet">
            <summary>Establecer el shim de ConstructorMap.get_CtorParams()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorMap.AllInstances.CtorSetConstructorInfo">
            <summary>Establecer el shim de ConstructorMap.set_Ctor(ConstructorInfo value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorMap.AllInstances.NewExpressionExpression">
            <summary>Establecer el shim de ConstructorMap.NewExpression(Expression instanceParameter)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorMap.AllInstances.ResolveValueResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de ConstructorMap.ResolveValue(ResolutionContext context, IMappingEngineRunner mappingEngine)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimConstructorParameterMap">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.ConstructorParameterMap</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConstructorParameterMap.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConstructorParameterMap.#ctor(AutoMapper.ConstructorParameterMap)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConstructorParameterMap.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConstructorParameterMap.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.CanResolveGet">
            <summary>Establecer el shim de ConstructorParameterMap.get_CanResolve()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.CanResolveSetBoolean">
            <summary>Establecer el shim de ConstructorParameterMap.set_CanResolve(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.ConstructorParameterInfoIMemberGetterArrayBoolean">
            <summary>Establecer el shim de ConstructorParameterMap.ConstructorParameterMap(ParameterInfo parameter, IMemberGetter[] sourceResolvers, Boolean canResolve)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.GetExpressionExpression">
            <summary>Establecer el shim de ConstructorParameterMap.GetExpression(Expression instanceParameter)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.ParameterGet">
            <summary>Establecer el shim de ConstructorParameterMap.get_Parameter()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.ParameterSetParameterInfo">
            <summary>Establecer el shim de ConstructorParameterMap.set_Parameter(ParameterInfo value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.ResolveUsingIEnumerableOfIMemberGetter">
            <summary>Establecer el shim de ConstructorParameterMap.ResolveUsing(IEnumerable`1&lt;IMemberGetter&gt; members)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.ResolveValueResolutionContext">
            <summary>Establecer el shim de ConstructorParameterMap.ResolveValue(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.SourceResolversGet">
            <summary>Establecer el shim de ConstructorParameterMap.get_SourceResolvers()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.SourceResolversSetIMemberGetterArray">
            <summary>Establecer el shim de ConstructorParameterMap.set_SourceResolvers(IMemberGetter[] value)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimConstructorParameterMap.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.AllInstances.CanResolveGet">
            <summary>Establecer el shim de ConstructorParameterMap.get_CanResolve()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.AllInstances.CanResolveSetBoolean">
            <summary>Establecer el shim de ConstructorParameterMap.set_CanResolve(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.AllInstances.GetExpressionExpression">
            <summary>Establecer el shim de ConstructorParameterMap.GetExpression(Expression instanceParameter)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.AllInstances.ParameterGet">
            <summary>Establecer el shim de ConstructorParameterMap.get_Parameter()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.AllInstances.ParameterSetParameterInfo">
            <summary>Establecer el shim de ConstructorParameterMap.set_Parameter(ParameterInfo value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.AllInstances.ResolveUsingIEnumerableOfIMemberGetter">
            <summary>Establecer el shim de ConstructorParameterMap.ResolveUsing(IEnumerable`1&lt;IMemberGetter&gt; members)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.AllInstances.ResolveValueResolutionContext">
            <summary>Establecer el shim de ConstructorParameterMap.ResolveValue(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.AllInstances.SourceResolversGet">
            <summary>Establecer el shim de ConstructorParameterMap.get_SourceResolvers()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.AllInstances.SourceResolversSetIMemberGetterArray">
            <summary>Establecer el shim de ConstructorParameterMap.set_SourceResolvers(IMemberGetter[] value)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimCtorParamConfigurationExpression`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.CtorParamConfigurationExpression`1</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimCtorParamConfigurationExpression`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimCtorParamConfigurationExpression`1.#ctor(AutoMapper.CtorParamConfigurationExpression{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimCtorParamConfigurationExpression`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimCtorParamConfigurationExpression`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimCtorParamConfigurationExpression`1.Bind(AutoMapper.ICtorParamConfigurationExpression{`0})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimCtorParamConfigurationExpression`1.MapFromOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Linq.Expressions.Expression{System.Func{`0,``0}}})">
            <summary>Establecer el shim de CtorParamConfigurationExpression`1.MapFrom(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; sourceMember)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimCtorParamConfigurationExpression`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimCtorParamConfigurationExpression`1.ConstructorConstructorParameterMap">
            <summary>Establecer el shim de CtorParamConfigurationExpression`1.CtorParamConfigurationExpression`1(ConstructorParameterMap ctorParamMap)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimCtorParamConfigurationExpression`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimCtorParamConfigurationExpression`1.AllInstances.MapFromOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.CtorParamConfigurationExpression{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}}})">
            <summary>Establecer el shim de CtorParamConfigurationExpression`1.MapFrom(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; sourceMember)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimIgnoreMapAttribute">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.IgnoreMapAttribute</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimIgnoreMapAttribute.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimIgnoreMapAttribute.#ctor(AutoMapper.IgnoreMapAttribute)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimIgnoreMapAttribute.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimIgnoreMapAttribute.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimIgnoreMapAttribute.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimIgnoreMapAttribute.Constructor">
            <summary>Establecer el shim de IgnoreMapAttribute.IgnoreMapAttribute()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimIgnoreMapAttribute.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimLowerUnderscoreNamingConvention">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.LowerUnderscoreNamingConvention</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimLowerUnderscoreNamingConvention.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimLowerUnderscoreNamingConvention.#ctor(AutoMapper.LowerUnderscoreNamingConvention)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimLowerUnderscoreNamingConvention.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimLowerUnderscoreNamingConvention.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimLowerUnderscoreNamingConvention.Bind(AutoMapper.INamingConvention)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimLowerUnderscoreNamingConvention.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimLowerUnderscoreNamingConvention.Constructor">
            <summary>Establecer el shim de LowerUnderscoreNamingConvention.LowerUnderscoreNamingConvention()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimLowerUnderscoreNamingConvention.SeparatorCharacterGet">
            <summary>Establecer el shim de LowerUnderscoreNamingConvention.get_SeparatorCharacter()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimLowerUnderscoreNamingConvention.SplittingExpressionGet">
            <summary>Establecer el shim de LowerUnderscoreNamingConvention.get_SplittingExpression()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimLowerUnderscoreNamingConvention.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimLowerUnderscoreNamingConvention.AllInstances.SeparatorCharacterGet">
            <summary>Establecer el shim de LowerUnderscoreNamingConvention.get_SeparatorCharacter()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimLowerUnderscoreNamingConvention.AllInstances.SplittingExpressionGet">
            <summary>Establecer el shim de LowerUnderscoreNamingConvention.get_SplittingExpression()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimMapper">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Mapper</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.AddProfileOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Establecer el shim de Mapper.AddProfile()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.AssertConfigurationIsValidOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Establecer el shim de Mapper.AssertConfigurationIsValid()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.CreateMapOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IMappingExpression{``0,``1}})">
            <summary>Establecer el shim de Mapper.CreateMap()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.CreateMapOf2MemberList``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MemberList,AutoMapper.IMappingExpression{``0,``1}})">
            <summary>Establecer el shim de Mapper.CreateMap(MemberList memberList)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.DynamicMapOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Establecer el shim de Mapper.DynamicMap(Object source)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.DynamicMapOf2M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1})">
            <summary>Establecer el shim de Mapper.DynamicMap(!!0 source)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.DynamicMapOf2M0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,``1})">
            <summary>Establecer el shim de Mapper.DynamicMap(!!0 source, !!1 destination)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.FindTypeMapForOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.TypeMap})">
            <summary>Establecer el shim de Mapper.FindTypeMapFor()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.MapOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Establecer el shim de Mapper.Map(Object source)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.MapOf1ObjectActionOfIMappingOperationOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Action{AutoMapper.IMappingOperationOptions},``0})">
            <summary>Establecer el shim de Mapper.Map(Object source, Action`1&lt;IMappingOperationOptions&gt; opts)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.MapOf2M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1})">
            <summary>Establecer el shim de Mapper.Map(!!0 source)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.MapOf2M0ActionOfIMappingOperationOptionsOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Action{AutoMapper.IMappingOperationOptions{``0,``1}},``1})">
            <summary>Establecer el shim de Mapper.Map(!!0 source, Action`1&lt;IMappingOperationOptions`2&lt;!!0,!!1&gt;&gt; opts)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.MapOf2M0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,``1})">
            <summary>Establecer el shim de Mapper.Map(!!0 source, !!1 destination)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.MapOf2M0M1ActionOfIMappingOperationOptionsOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,System.Action{AutoMapper.IMappingOperationOptions{``0,``1}},``1})">
            <summary>Establecer el shim de Mapper.Map(!!0 source, !!1 destination, Action`1&lt;IMappingOperationOptions`2&lt;!!0,!!1&gt;&gt; opts)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.AddGlobalIgnoreString">
            <summary>Establecer el shim de Mapper.AddGlobalIgnore(String startingwith)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.AddProfileProfile">
            <summary>Establecer el shim de Mapper.AddProfile(Profile profile)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.AllowNullDestinationValuesGet">
            <summary>Establecer el shim de Mapper.get_AllowNullDestinationValues()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.AllowNullDestinationValuesSetBoolean">
            <summary>Establecer el shim de Mapper.set_AllowNullDestinationValues(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.AssertConfigurationIsValid">
            <summary>Establecer el shim de Mapper.AssertConfigurationIsValid()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.AssertConfigurationIsValidString">
            <summary>Establecer el shim de Mapper.AssertConfigurationIsValid(String profileName)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.AssertConfigurationIsValidTypeMap">
            <summary>Establecer el shim de Mapper.AssertConfigurationIsValid(TypeMap typeMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.ConfigurationGet">
            <summary>Establecer el shim de Mapper.get_Configuration()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.ConfigurationProviderGet">
            <summary>Establecer el shim de Mapper.get_ConfigurationProvider()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.CreateMapTypeType">
            <summary>Establecer el shim de Mapper.CreateMap(Type sourceType, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.CreateMapTypeTypeMemberList">
            <summary>Establecer el shim de Mapper.CreateMap(Type sourceType, Type destinationType, MemberList memberList)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.CreateProfileString">
            <summary>Establecer el shim de Mapper.CreateProfile(String profileName)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.CreateProfileStringActionOfIProfileExpression">
            <summary>Establecer el shim de Mapper.CreateProfile(String profileName, Action`1&lt;IProfileExpression&gt; profileConfiguration)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.DynamicMapObjectObjectTypeType">
            <summary>Establecer el shim de Mapper.DynamicMap(Object source, Object destination, Type sourceType, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.DynamicMapObjectTypeType">
            <summary>Establecer el shim de Mapper.DynamicMap(Object source, Type sourceType, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.EngineGet">
            <summary>Establecer el shim de Mapper.get_Engine()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.FindTypeMapForTypeType">
            <summary>Establecer el shim de Mapper.FindTypeMapFor(Type sourceType, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.GetAllTypeMaps">
            <summary>Establecer el shim de Mapper.GetAllTypeMaps()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.InitializeActionOfIConfiguration">
            <summary>Establecer el shim de Mapper.Initialize(Action`1&lt;IConfiguration&gt; action)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.MapObjectObjectTypeType">
            <summary>Establecer el shim de Mapper.Map(Object source, Object destination, Type sourceType, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.MapObjectObjectTypeTypeActionOfIMappingOperationOptions">
            <summary>Establecer el shim de Mapper.Map(Object source, Object destination, Type sourceType, Type destinationType, Action`1&lt;IMappingOperationOptions&gt; opts)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.MapObjectTypeType">
            <summary>Establecer el shim de Mapper.Map(Object source, Type sourceType, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.MapObjectTypeTypeActionOfIMappingOperationOptions">
            <summary>Establecer el shim de Mapper.Map(Object source, Type sourceType, Type destinationType, Action`1&lt;IMappingOperationOptions&gt; opts)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.Reset">
            <summary>Establecer el shim de Mapper.Reset()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.StaticConstructor">
            <summary>Establecer el shim de Mapper.Mapper()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimMappingEngine">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.MappingEngine</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.#ctor(AutoMapper.MappingEngine)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.Bind(AutoMapper.IMappingEngine)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.Bind(AutoMapper.IMappingEngineRunner)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.Bind(System.IDisposable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.DynamicMapOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Establecer el shim de MappingEngine.DynamicMap(Object source)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.DynamicMapOf2M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1})">
            <summary>Establecer el shim de MappingEngine.DynamicMap(!!0 source)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.DynamicMapOf2M0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,``1})">
            <summary>Establecer el shim de MappingEngine.DynamicMap(!!0 source, !!1 destination)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.MapOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Establecer el shim de MappingEngine.Map(Object source)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.MapOf1ObjectActionOfIMappingOperationOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Action{AutoMapper.IMappingOperationOptions},``0})">
            <summary>Establecer el shim de MappingEngine.Map(Object source, Action`1&lt;IMappingOperationOptions&gt; opts)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.MapOf2M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1})">
            <summary>Establecer el shim de MappingEngine.Map(!!0 source)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.MapOf2M0ActionOfIMappingOperationOptionsOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Action{AutoMapper.IMappingOperationOptions{``0,``1}},``1})">
            <summary>Establecer el shim de MappingEngine.Map(!!0 source, Action`1&lt;IMappingOperationOptions`2&lt;!!0,!!1&gt;&gt; opts)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.MapOf2M0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,``1})">
            <summary>Establecer el shim de MappingEngine.Map(!!0 source, !!1 destination)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.MapOf2M0M1ActionOfIMappingOperationOptionsOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,System.Action{AutoMapper.IMappingOperationOptions{``0,``1}},``1})">
            <summary>Establecer el shim de MappingEngine.Map(!!0 source, !!1 destination, Action`1&lt;IMappingOperationOptions`2&lt;!!0,!!1&gt;&gt; opts)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.MapOf2ResolutionContextM0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.ResolutionContext,``0,``1})">
            <summary>Establecer el shim de MappingEngine.Map(ResolutionContext parentContext, !!0 source)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AutoMapperIMappingEngineRunnerCreateObjectResolutionContext">
            <summary>Establecer el shim de MappingEngine.AutoMapper.IMappingEngineRunner.CreateObject(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AutoMapperIMappingEngineRunnerMapResolutionContext">
            <summary>Establecer el shim de MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AutoMapperIMappingEngineRunnerShouldMapSourceCollectionAsNullResolutionContext">
            <summary>Establecer el shim de MappingEngine.AutoMapper.IMappingEngineRunner.ShouldMapSourceCollectionAsNull(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AutoMapperIMappingEngineRunnerShouldMapSourceValueAsNullResolutionContext">
            <summary>Establecer el shim de MappingEngine.AutoMapper.IMappingEngineRunner.ShouldMapSourceValueAsNull(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.ClearTypeMapObjectTypeMapCreatedEventArgs">
            <summary>Establecer el shim de MappingEngine.ClearTypeMap(Object sender, TypeMapCreatedEventArgs e)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.ConfigurationProviderGet">
            <summary>Establecer el shim de MappingEngine.get_ConfigurationProvider()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.ConstructorIConfigurationProvider">
            <summary>Establecer el shim de MappingEngine.MappingEngine(IConfigurationProvider configurationProvider)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.ConstructorIConfigurationProviderIDictionaryOfTypePairIObjectMapperIDictionaryOfExpressionRequestLambdaExpressionFuncOfTypeObject">
            <summary>Establecer el shim de MappingEngine.MappingEngine(IConfigurationProvider configurationProvider, IDictionary`2&lt;TypePair,IObjectMapper&gt; objectMapperCache, IDictionary`2&lt;ExpressionRequest,LambdaExpression&gt; expressionCache, Func`2&lt;Type,Object&gt; serviceCtor)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.CreateMapExpressionExpressionRequestExpressionIDictionaryOfExpressionRequestInt32">
            <summary>Establecer el shim de MappingEngine.CreateMapExpression(ExpressionRequest request, Expression instanceParameter, IDictionary`2&lt;ExpressionRequest,Int32&gt; typePairCount)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.CreateMapExpressionExpressionRequestIDictionaryOfExpressionRequestInt32">
            <summary>Establecer el shim de MappingEngine.CreateMapExpression(ExpressionRequest request, IDictionary`2&lt;ExpressionRequest,Int32&gt; typePairCount)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.CreateMapExpressionTypeTypeIDictionaryOfStringObjectStringArray">
            <summary>Establecer el shim de MappingEngine.CreateMapExpression(Type sourceType, Type destinationType, IDictionary`2&lt;String,Object&gt; parameters, String[] membersToExpand)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.CreateMemberBindingsExpressionRequestTypeMapExpressionIDictionaryOfExpressionRequestInt32">
            <summary>Establecer el shim de MappingEngine.CreateMemberBindings(ExpressionRequest request, TypeMap typeMap, Expression instanceParameter, IDictionary`2&lt;ExpressionRequest,Int32&gt; typePairCount)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.DefaultMappingOptionsIMappingOperationOptions">
            <summary>Establecer el shim de MappingEngine.DefaultMappingOptions(IMappingOperationOptions opts)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.Dispose">
            <summary>Establecer el shim de MappingEngine.Dispose()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.DisposeBoolean">
            <summary>Establecer el shim de MappingEngine.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.DynamicMapObjectObjectTypeType">
            <summary>Establecer el shim de MappingEngine.DynamicMap(Object source, Object destination, Type sourceType, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.DynamicMapObjectTypeType">
            <summary>Establecer el shim de MappingEngine.DynamicMap(Object source, Type sourceType, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.MapCoreObjectObjectTypeTypeMappingOperationOptions">
            <summary>Establecer el shim de MappingEngine.MapCore(Object source, Object destination, Type sourceType, Type destinationType, MappingOperationOptions options)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.MapCoreObjectTypeTypeMappingOperationOptions">
            <summary>Establecer el shim de MappingEngine.MapCore(Object source, Type sourceType, Type destinationType, MappingOperationOptions options)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.MapObjectObjectTypeType">
            <summary>Establecer el shim de MappingEngine.Map(Object source, Object destination, Type sourceType, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.MapObjectObjectTypeTypeActionOfIMappingOperationOptions">
            <summary>Establecer el shim de MappingEngine.Map(Object source, Object destination, Type sourceType, Type destinationType, Action`1&lt;IMappingOperationOptions&gt; opts)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.MapObjectTypeType">
            <summary>Establecer el shim de MappingEngine.Map(Object source, Type sourceType, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.MapObjectTypeTypeActionOfIMappingOperationOptions">
            <summary>Establecer el shim de MappingEngine.Map(Object source, Type sourceType, Type destinationType, Action`1&lt;IMappingOperationOptions&gt; opts)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.ResolveExpressionPropertyMapTypeExpression">
            <summary>Establecer el shim de MappingEngine.ResolveExpression(PropertyMap propertyMap, Type currentType, Expression instanceParameter)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.StaticConstructor">
            <summary>Establecer el shim de MappingEngine.MappingEngine()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine._CreateMapExpressionb__34_0ExpressionRequest">
            <summary>Establecer el shim de MappingEngine.&lt;CreateMapExpression&gt;b__34_0(ExpressionRequest tp)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimMappingEngine.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.AllInstances.DynamicMapOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MappingEngine,System.Object,``0})">
            <summary>Establecer el shim de MappingEngine.DynamicMap(Object source)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.AllInstances.DynamicMapOf2M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MappingEngine,``0,``1})">
            <summary>Establecer el shim de MappingEngine.DynamicMap(!!0 source)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.AllInstances.DynamicMapOf2M0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.MappingEngine,``0,``1})">
            <summary>Establecer el shim de MappingEngine.DynamicMap(!!0 source, !!1 destination)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.AllInstances.MapOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MappingEngine,System.Object,``0})">
            <summary>Establecer el shim de MappingEngine.Map(Object source)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.AllInstances.MapOf1ObjectActionOfIMappingOperationOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MappingEngine,System.Object,System.Action{AutoMapper.IMappingOperationOptions},``0})">
            <summary>Establecer el shim de MappingEngine.Map(Object source, Action`1&lt;IMappingOperationOptions&gt; opts)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.AllInstances.MapOf2M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MappingEngine,``0,``1})">
            <summary>Establecer el shim de MappingEngine.Map(!!0 source)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.AllInstances.MapOf2M0ActionOfIMappingOperationOptionsOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MappingEngine,``0,System.Action{AutoMapper.IMappingOperationOptions{``0,``1}},``1})">
            <summary>Establecer el shim de MappingEngine.Map(!!0 source, Action`1&lt;IMappingOperationOptions`2&lt;!!0,!!1&gt;&gt; opts)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.AllInstances.MapOf2M0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MappingEngine,``0,``1,``1})">
            <summary>Establecer el shim de MappingEngine.Map(!!0 source, !!1 destination)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.AllInstances.MapOf2M0M1ActionOfIMappingOperationOptionsOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MappingEngine,``0,``1,System.Action{AutoMapper.IMappingOperationOptions{``0,``1}},``1})">
            <summary>Establecer el shim de MappingEngine.Map(!!0 source, !!1 destination, Action`1&lt;IMappingOperationOptions`2&lt;!!0,!!1&gt;&gt; opts)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.AllInstances.MapOf2ResolutionContextM0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MappingEngine,AutoMapper.ResolutionContext,``0,``1})">
            <summary>Establecer el shim de MappingEngine.Map(ResolutionContext parentContext, !!0 source)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.AutoMapperIMappingEngineRunnerCreateObjectResolutionContext">
            <summary>Establecer el shim de MappingEngine.AutoMapper.IMappingEngineRunner.CreateObject(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.AutoMapperIMappingEngineRunnerMapResolutionContext">
            <summary>Establecer el shim de MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.AutoMapperIMappingEngineRunnerShouldMapSourceCollectionAsNullResolutionContext">
            <summary>Establecer el shim de MappingEngine.AutoMapper.IMappingEngineRunner.ShouldMapSourceCollectionAsNull(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.AutoMapperIMappingEngineRunnerShouldMapSourceValueAsNullResolutionContext">
            <summary>Establecer el shim de MappingEngine.AutoMapper.IMappingEngineRunner.ShouldMapSourceValueAsNull(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.ClearTypeMapObjectTypeMapCreatedEventArgs">
            <summary>Establecer el shim de MappingEngine.ClearTypeMap(Object sender, TypeMapCreatedEventArgs e)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.ConfigurationProviderGet">
            <summary>Establecer el shim de MappingEngine.get_ConfigurationProvider()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.CreateMapExpressionExpressionRequestExpressionIDictionaryOfExpressionRequestInt32">
            <summary>Establecer el shim de MappingEngine.CreateMapExpression(ExpressionRequest request, Expression instanceParameter, IDictionary`2&lt;ExpressionRequest,Int32&gt; typePairCount)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.CreateMapExpressionExpressionRequestIDictionaryOfExpressionRequestInt32">
            <summary>Establecer el shim de MappingEngine.CreateMapExpression(ExpressionRequest request, IDictionary`2&lt;ExpressionRequest,Int32&gt; typePairCount)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.CreateMapExpressionTypeTypeIDictionaryOfStringObjectStringArray">
            <summary>Establecer el shim de MappingEngine.CreateMapExpression(Type sourceType, Type destinationType, IDictionary`2&lt;String,Object&gt; parameters, String[] membersToExpand)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.CreateMemberBindingsExpressionRequestTypeMapExpressionIDictionaryOfExpressionRequestInt32">
            <summary>Establecer el shim de MappingEngine.CreateMemberBindings(ExpressionRequest request, TypeMap typeMap, Expression instanceParameter, IDictionary`2&lt;ExpressionRequest,Int32&gt; typePairCount)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.DefaultMappingOptionsIMappingOperationOptions">
            <summary>Establecer el shim de MappingEngine.DefaultMappingOptions(IMappingOperationOptions opts)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.Dispose">
            <summary>Establecer el shim de MappingEngine.Dispose()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.DisposeBoolean">
            <summary>Establecer el shim de MappingEngine.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.DynamicMapObjectObjectTypeType">
            <summary>Establecer el shim de MappingEngine.DynamicMap(Object source, Object destination, Type sourceType, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.DynamicMapObjectTypeType">
            <summary>Establecer el shim de MappingEngine.DynamicMap(Object source, Type sourceType, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.MapCoreObjectObjectTypeTypeMappingOperationOptions">
            <summary>Establecer el shim de MappingEngine.MapCore(Object source, Object destination, Type sourceType, Type destinationType, MappingOperationOptions options)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.MapCoreObjectTypeTypeMappingOperationOptions">
            <summary>Establecer el shim de MappingEngine.MapCore(Object source, Type sourceType, Type destinationType, MappingOperationOptions options)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.MapObjectObjectTypeType">
            <summary>Establecer el shim de MappingEngine.Map(Object source, Object destination, Type sourceType, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.MapObjectObjectTypeTypeActionOfIMappingOperationOptions">
            <summary>Establecer el shim de MappingEngine.Map(Object source, Object destination, Type sourceType, Type destinationType, Action`1&lt;IMappingOperationOptions&gt; opts)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.MapObjectTypeType">
            <summary>Establecer el shim de MappingEngine.Map(Object source, Type sourceType, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.MapObjectTypeTypeActionOfIMappingOperationOptions">
            <summary>Establecer el shim de MappingEngine.Map(Object source, Type sourceType, Type destinationType, Action`1&lt;IMappingOperationOptions&gt; opts)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances._CreateMapExpressionb__34_0ExpressionRequest">
            <summary>Establecer el shim de MappingEngine.&lt;CreateMapExpression&gt;b__34_0(ExpressionRequest tp)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimMappingOperationOptions">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.MappingOperationOptions</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingOperationOptions.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingOperationOptions.#ctor(AutoMapper.MappingOperationOptions)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingOperationOptions.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingOperationOptions.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingOperationOptions.Bind(AutoMapper.IMappingOperationOptions)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.AfterMapActionGet">
            <summary>Establecer el shim de MappingOperationOptions.get_AfterMapAction()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.AfterMapActionOfObjectObject">
            <summary>Establecer el shim de MappingOperationOptions.AfterMap(Action`2&lt;Object,Object&gt; afterFunction)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.AfterMapActionSetActionOfObjectObject">
            <summary>Establecer el shim de MappingOperationOptions.set_AfterMapAction(Action`2&lt;Object,Object&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.AutoMapperIMappingOperationOptionsConstructServicesUsingFuncOfTypeObject">
            <summary>Establecer el shim de MappingOperationOptions.AutoMapper.IMappingOperationOptions.ConstructServicesUsing(Func`2&lt;Type,Object&gt; constructor)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.BeforeMapActionGet">
            <summary>Establecer el shim de MappingOperationOptions.get_BeforeMapAction()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.BeforeMapActionOfObjectObject">
            <summary>Establecer el shim de MappingOperationOptions.BeforeMap(Action`2&lt;Object,Object&gt; beforeFunction)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.BeforeMapActionSetActionOfObjectObject">
            <summary>Establecer el shim de MappingOperationOptions.set_BeforeMapAction(Action`2&lt;Object,Object&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.Constructor">
            <summary>Establecer el shim de MappingOperationOptions.MappingOperationOptions()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.CreateMissingTypeMapsGet">
            <summary>Establecer el shim de MappingOperationOptions.get_CreateMissingTypeMaps()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.CreateMissingTypeMapsSetBoolean">
            <summary>Establecer el shim de MappingOperationOptions.set_CreateMissingTypeMaps(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.DisableCacheGet">
            <summary>Establecer el shim de MappingOperationOptions.get_DisableCache()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.DisableCacheSetBoolean">
            <summary>Establecer el shim de MappingOperationOptions.set_DisableCache(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.ItemsGet">
            <summary>Establecer el shim de MappingOperationOptions.get_Items()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.ServiceCtorGet">
            <summary>Establecer el shim de MappingOperationOptions.get_ServiceCtor()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.ServiceCtorSetFuncOfTypeObject">
            <summary>Establecer el shim de MappingOperationOptions.set_ServiceCtor(Func`2&lt;Type,Object&gt; value)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimMappingOperationOptions.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.AllInstances.AfterMapActionGet">
            <summary>Establecer el shim de MappingOperationOptions.get_AfterMapAction()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.AllInstances.AfterMapActionOfObjectObject">
            <summary>Establecer el shim de MappingOperationOptions.AfterMap(Action`2&lt;Object,Object&gt; afterFunction)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.AllInstances.AfterMapActionSetActionOfObjectObject">
            <summary>Establecer el shim de MappingOperationOptions.set_AfterMapAction(Action`2&lt;Object,Object&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.AllInstances.AutoMapperIMappingOperationOptionsConstructServicesUsingFuncOfTypeObject">
            <summary>Establecer el shim de MappingOperationOptions.AutoMapper.IMappingOperationOptions.ConstructServicesUsing(Func`2&lt;Type,Object&gt; constructor)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.AllInstances.BeforeMapActionGet">
            <summary>Establecer el shim de MappingOperationOptions.get_BeforeMapAction()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.AllInstances.BeforeMapActionOfObjectObject">
            <summary>Establecer el shim de MappingOperationOptions.BeforeMap(Action`2&lt;Object,Object&gt; beforeFunction)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.AllInstances.BeforeMapActionSetActionOfObjectObject">
            <summary>Establecer el shim de MappingOperationOptions.set_BeforeMapAction(Action`2&lt;Object,Object&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.AllInstances.CreateMissingTypeMapsGet">
            <summary>Establecer el shim de MappingOperationOptions.get_CreateMissingTypeMaps()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.AllInstances.CreateMissingTypeMapsSetBoolean">
            <summary>Establecer el shim de MappingOperationOptions.set_CreateMissingTypeMaps(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.AllInstances.DisableCacheGet">
            <summary>Establecer el shim de MappingOperationOptions.get_DisableCache()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.AllInstances.DisableCacheSetBoolean">
            <summary>Establecer el shim de MappingOperationOptions.set_DisableCache(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.AllInstances.ItemsGet">
            <summary>Establecer el shim de MappingOperationOptions.get_Items()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.AllInstances.ServiceCtorGet">
            <summary>Establecer el shim de MappingOperationOptions.get_ServiceCtor()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.AllInstances.ServiceCtorSetFuncOfTypeObject">
            <summary>Establecer el shim de MappingOperationOptions.set_ServiceCtor(Func`2&lt;Type,Object&gt; value)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimMappingOperationOptions`2">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.MappingOperationOptions`2</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingOperationOptions`2.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingOperationOptions`2.#ctor(AutoMapper.MappingOperationOptions{`0,`1})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingOperationOptions`2.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingOperationOptions`2.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingOperationOptions`2.Bind(AutoMapper.IMappingOperationOptions)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingOperationOptions`2.Bind(AutoMapper.IMappingOperationOptions{`0,`1})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions`2.AfterMapActionOfT0T1">
            <summary>Establecer el shim de MappingOperationOptions`2.AfterMap(Action`2&lt;!0,!1&gt; afterFunction)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions`2.BeforeMapActionOfT0T1">
            <summary>Establecer el shim de MappingOperationOptions`2.BeforeMap(Action`2&lt;!0,!1&gt; beforeFunction)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions`2.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions`2.Constructor">
            <summary>Establecer el shim de MappingOperationOptions`2.MappingOperationOptions`2()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimMappingOperationOptions`2.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions`2.AllInstances.AfterMapActionOfT0T1">
            <summary>Establecer el shim de MappingOperationOptions`2.AfterMap(Action`2&lt;!0,!1&gt; afterFunction)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions`2.AllInstances.BeforeMapActionOfT0T1">
            <summary>Establecer el shim de MappingOperationOptions`2.BeforeMap(Action`2&lt;!0,!1&gt; beforeFunction)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimNullReferenceExceptionSwallowingResolver">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.NullReferenceExceptionSwallowingResolver</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimNullReferenceExceptionSwallowingResolver.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimNullReferenceExceptionSwallowingResolver.#ctor(AutoMapper.NullReferenceExceptionSwallowingResolver)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimNullReferenceExceptionSwallowingResolver.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimNullReferenceExceptionSwallowingResolver.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimNullReferenceExceptionSwallowingResolver.Bind(AutoMapper.IMemberResolver)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimNullReferenceExceptionSwallowingResolver.Bind(AutoMapper.IValueResolver)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimNullReferenceExceptionSwallowingResolver.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimNullReferenceExceptionSwallowingResolver.ConstructorIMemberResolver">
            <summary>Establecer el shim de NullReferenceExceptionSwallowingResolver.NullReferenceExceptionSwallowingResolver(IMemberResolver inner)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimNullReferenceExceptionSwallowingResolver.MemberTypeGet">
            <summary>Establecer el shim de NullReferenceExceptionSwallowingResolver.get_MemberType()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimNullReferenceExceptionSwallowingResolver.ResolveResolutionResult">
            <summary>Establecer el shim de NullReferenceExceptionSwallowingResolver.Resolve(ResolutionResult source)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimNullReferenceExceptionSwallowingResolver.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimNullReferenceExceptionSwallowingResolver.AllInstances.MemberTypeGet">
            <summary>Establecer el shim de NullReferenceExceptionSwallowingResolver.get_MemberType()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimNullReferenceExceptionSwallowingResolver.AllInstances.ResolveResolutionResult">
            <summary>Establecer el shim de NullReferenceExceptionSwallowingResolver.Resolve(ResolutionResult source)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimPascalCaseNamingConvention">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.PascalCaseNamingConvention</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimPascalCaseNamingConvention.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimPascalCaseNamingConvention.#ctor(AutoMapper.PascalCaseNamingConvention)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimPascalCaseNamingConvention.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimPascalCaseNamingConvention.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimPascalCaseNamingConvention.Bind(AutoMapper.INamingConvention)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPascalCaseNamingConvention.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPascalCaseNamingConvention.Constructor">
            <summary>Establecer el shim de PascalCaseNamingConvention.PascalCaseNamingConvention()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPascalCaseNamingConvention.SeparatorCharacterGet">
            <summary>Establecer el shim de PascalCaseNamingConvention.get_SeparatorCharacter()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPascalCaseNamingConvention.SplittingExpressionGet">
            <summary>Establecer el shim de PascalCaseNamingConvention.get_SplittingExpression()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimPascalCaseNamingConvention.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPascalCaseNamingConvention.AllInstances.SeparatorCharacterGet">
            <summary>Establecer el shim de PascalCaseNamingConvention.get_SeparatorCharacter()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPascalCaseNamingConvention.AllInstances.SplittingExpressionGet">
            <summary>Establecer el shim de PascalCaseNamingConvention.get_SplittingExpression()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimProfile">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Profile</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimProfile.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimProfile.#ctor(AutoMapper.Profile)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimProfile.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimProfile.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimProfile.Bind(AutoMapper.IProfileExpression)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimProfile.CreateMapOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IMappingExpression{``0,``1}})">
            <summary>Establecer el shim de Profile.CreateMap()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimProfile.CreateMapOf2MemberList``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MemberList,AutoMapper.IMappingExpression{``0,``1}})">
            <summary>Establecer el shim de Profile.CreateMap(MemberList memberList)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AddGlobalIgnoreString">
            <summary>Establecer el shim de Profile.AddGlobalIgnore(String propertyNameStartingWith)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AliasesGet">
            <summary>Establecer el shim de Profile.get_Aliases()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllowNullCollectionsGet">
            <summary>Establecer el shim de Profile.get_AllowNullCollections()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllowNullCollectionsSetBoolean">
            <summary>Establecer el shim de Profile.set_AllowNullCollections(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllowNullDestinationValuesGet">
            <summary>Establecer el shim de Profile.get_AllowNullDestinationValues()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllowNullDestinationValuesSetBoolean">
            <summary>Establecer el shim de Profile.set_AllowNullDestinationValues(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.ClearPrefixes">
            <summary>Establecer el shim de Profile.ClearPrefixes()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.Configure">
            <summary>Establecer el shim de Profile.Configure()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.Constructor">
            <summary>Establecer el shim de Profile.Profile()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.ConstructorMappingEnabledGet">
            <summary>Establecer el shim de Profile.get_ConstructorMappingEnabled()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.ConstructorString">
            <summary>Establecer el shim de Profile.Profile(String profileName)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.CreateMapTypeType">
            <summary>Establecer el shim de Profile.CreateMap(Type sourceType, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.CreateMapTypeTypeMemberList">
            <summary>Establecer el shim de Profile.CreateMap(Type sourceType, Type destinationType, MemberList memberList)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.DataReaderMapperYieldReturnEnabledGet">
            <summary>Establecer el shim de Profile.get_DataReaderMapperYieldReturnEnabled()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.DestinationMemberNamingConventionGet">
            <summary>Establecer el shim de Profile.get_DestinationMemberNamingConvention()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.DestinationMemberNamingConventionSetINamingConvention">
            <summary>Establecer el shim de Profile.set_DestinationMemberNamingConvention(INamingConvention value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.DestinationPostfixesGet">
            <summary>Establecer el shim de Profile.get_DestinationPostfixes()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.DestinationPrefixesGet">
            <summary>Establecer el shim de Profile.get_DestinationPrefixes()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.DisableConstructorMapping">
            <summary>Establecer el shim de Profile.DisableConstructorMapping()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.GetProfile">
            <summary>Establecer el shim de Profile.GetProfile()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.IncludeSourceExtensionMethodsAssembly">
            <summary>Establecer el shim de Profile.IncludeSourceExtensionMethods(Assembly assembly)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.InitializeConfigurationStore">
            <summary>Establecer el shim de Profile.Initialize(ConfigurationStore configurator)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.MemberNameReplacersGet">
            <summary>Establecer el shim de Profile.get_MemberNameReplacers()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.PostfixesGet">
            <summary>Establecer el shim de Profile.get_Postfixes()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.PrefixesGet">
            <summary>Establecer el shim de Profile.get_Prefixes()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.ProfileNameGet">
            <summary>Establecer el shim de Profile.get_ProfileName()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.RecognizeAliasStringString">
            <summary>Establecer el shim de Profile.RecognizeAlias(String original, String alias)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.RecognizeDestinationPostfixesStringArray">
            <summary>Establecer el shim de Profile.RecognizeDestinationPostfixes(String[] postfixes)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.RecognizeDestinationPrefixesStringArray">
            <summary>Establecer el shim de Profile.RecognizeDestinationPrefixes(String[] prefixes)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.RecognizePostfixesStringArray">
            <summary>Establecer el shim de Profile.RecognizePostfixes(String[] postfixes)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.RecognizePrefixesStringArray">
            <summary>Establecer el shim de Profile.RecognizePrefixes(String[] prefixes)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.ReplaceMemberNameStringString">
            <summary>Establecer el shim de Profile.ReplaceMemberName(String original, String newValue)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.ShouldMapFieldGet">
            <summary>Establecer el shim de Profile.get_ShouldMapField()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.ShouldMapFieldSetFuncOfFieldInfoBoolean">
            <summary>Establecer el shim de Profile.set_ShouldMapField(Func`2&lt;FieldInfo,Boolean&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.ShouldMapPropertyGet">
            <summary>Establecer el shim de Profile.get_ShouldMapProperty()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.ShouldMapPropertySetFuncOfPropertyInfoBoolean">
            <summary>Establecer el shim de Profile.set_ShouldMapProperty(Func`2&lt;PropertyInfo,Boolean&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.SourceExtensionMethodsGet">
            <summary>Establecer el shim de Profile.get_SourceExtensionMethods()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.SourceMemberNamingConventionGet">
            <summary>Establecer el shim de Profile.get_SourceMemberNamingConvention()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.SourceMemberNamingConventionSetINamingConvention">
            <summary>Establecer el shim de Profile.set_SourceMemberNamingConvention(INamingConvention value)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimProfile.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimProfile.AllInstances.CreateMapOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.Profile,AutoMapper.IMappingExpression{``0,``1}})">
            <summary>Establecer el shim de Profile.CreateMap()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimProfile.AllInstances.CreateMapOf2MemberList``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.Profile,AutoMapper.MemberList,AutoMapper.IMappingExpression{``0,``1}})">
            <summary>Establecer el shim de Profile.CreateMap(MemberList memberList)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.AddGlobalIgnoreString">
            <summary>Establecer el shim de Profile.AddGlobalIgnore(String propertyNameStartingWith)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.AliasesGet">
            <summary>Establecer el shim de Profile.get_Aliases()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.AllowNullCollectionsGet">
            <summary>Establecer el shim de Profile.get_AllowNullCollections()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.AllowNullCollectionsSetBoolean">
            <summary>Establecer el shim de Profile.set_AllowNullCollections(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.AllowNullDestinationValuesGet">
            <summary>Establecer el shim de Profile.get_AllowNullDestinationValues()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.AllowNullDestinationValuesSetBoolean">
            <summary>Establecer el shim de Profile.set_AllowNullDestinationValues(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.ClearPrefixes">
            <summary>Establecer el shim de Profile.ClearPrefixes()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.Configure">
            <summary>Establecer el shim de Profile.Configure()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.ConstructorMappingEnabledGet">
            <summary>Establecer el shim de Profile.get_ConstructorMappingEnabled()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.CreateMapTypeType">
            <summary>Establecer el shim de Profile.CreateMap(Type sourceType, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.CreateMapTypeTypeMemberList">
            <summary>Establecer el shim de Profile.CreateMap(Type sourceType, Type destinationType, MemberList memberList)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.DataReaderMapperYieldReturnEnabledGet">
            <summary>Establecer el shim de Profile.get_DataReaderMapperYieldReturnEnabled()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.DestinationMemberNamingConventionGet">
            <summary>Establecer el shim de Profile.get_DestinationMemberNamingConvention()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.DestinationMemberNamingConventionSetINamingConvention">
            <summary>Establecer el shim de Profile.set_DestinationMemberNamingConvention(INamingConvention value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.DestinationPostfixesGet">
            <summary>Establecer el shim de Profile.get_DestinationPostfixes()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.DestinationPrefixesGet">
            <summary>Establecer el shim de Profile.get_DestinationPrefixes()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.DisableConstructorMapping">
            <summary>Establecer el shim de Profile.DisableConstructorMapping()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.GetProfile">
            <summary>Establecer el shim de Profile.GetProfile()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.IncludeSourceExtensionMethodsAssembly">
            <summary>Establecer el shim de Profile.IncludeSourceExtensionMethods(Assembly assembly)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.InitializeConfigurationStore">
            <summary>Establecer el shim de Profile.Initialize(ConfigurationStore configurator)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.MemberNameReplacersGet">
            <summary>Establecer el shim de Profile.get_MemberNameReplacers()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.PostfixesGet">
            <summary>Establecer el shim de Profile.get_Postfixes()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.PrefixesGet">
            <summary>Establecer el shim de Profile.get_Prefixes()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.ProfileNameGet">
            <summary>Establecer el shim de Profile.get_ProfileName()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.RecognizeAliasStringString">
            <summary>Establecer el shim de Profile.RecognizeAlias(String original, String alias)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.RecognizeDestinationPostfixesStringArray">
            <summary>Establecer el shim de Profile.RecognizeDestinationPostfixes(String[] postfixes)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.RecognizeDestinationPrefixesStringArray">
            <summary>Establecer el shim de Profile.RecognizeDestinationPrefixes(String[] prefixes)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.RecognizePostfixesStringArray">
            <summary>Establecer el shim de Profile.RecognizePostfixes(String[] postfixes)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.RecognizePrefixesStringArray">
            <summary>Establecer el shim de Profile.RecognizePrefixes(String[] prefixes)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.ReplaceMemberNameStringString">
            <summary>Establecer el shim de Profile.ReplaceMemberName(String original, String newValue)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.ShouldMapFieldGet">
            <summary>Establecer el shim de Profile.get_ShouldMapField()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.ShouldMapFieldSetFuncOfFieldInfoBoolean">
            <summary>Establecer el shim de Profile.set_ShouldMapField(Func`2&lt;FieldInfo,Boolean&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.ShouldMapPropertyGet">
            <summary>Establecer el shim de Profile.get_ShouldMapProperty()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.ShouldMapPropertySetFuncOfPropertyInfoBoolean">
            <summary>Establecer el shim de Profile.set_ShouldMapProperty(Func`2&lt;PropertyInfo,Boolean&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.SourceExtensionMethodsGet">
            <summary>Establecer el shim de Profile.get_SourceExtensionMethods()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.SourceMemberNamingConventionGet">
            <summary>Establecer el shim de Profile.get_SourceMemberNamingConvention()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.SourceMemberNamingConventionSetINamingConvention">
            <summary>Establecer el shim de Profile.set_SourceMemberNamingConvention(INamingConvention value)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimPropertyMap">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.PropertyMap</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimPropertyMap.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimPropertyMap.#ctor(AutoMapper.PropertyMap)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimPropertyMap.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimPropertyMap.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimPropertyMap.SetCustomValueResolverExpressionOf2ExpressionOfFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Linq.Expressions.Expression{System.Func{``0,``1}}})">
            <summary>Establecer el shim de PropertyMap.SetCustomValueResolverExpression(Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; sourceMember)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.ApplyConditionFuncOfResolutionContextBoolean">
            <summary>Establecer el shim de PropertyMap.ApplyCondition(Func`2&lt;ResolutionContext,Boolean&gt; condition)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.ApplyPreConditionFuncOfResolutionContextBoolean">
            <summary>Establecer el shim de PropertyMap.ApplyPreCondition(Func`2&lt;ResolutionContext,Boolean&gt; condition)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AssignCustomExpressionLambdaExpression">
            <summary>Establecer el shim de PropertyMap.AssignCustomExpression(LambdaExpression customExpression)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AssignCustomValueResolverIValueResolver">
            <summary>Establecer el shim de PropertyMap.AssignCustomValueResolver(IValueResolver valueResolver)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.CanBeSetGet">
            <summary>Establecer el shim de PropertyMap.get_CanBeSet()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.CanResolveValue">
            <summary>Establecer el shim de PropertyMap.CanResolveValue()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.ChainConstructorForResolverIValueResolver">
            <summary>Establecer el shim de PropertyMap.ChainConstructorForResolver(IValueResolver valueResolver)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.ChainResolverIValueResolver">
            <summary>Establecer el shim de PropertyMap.ChainResolver(IValueResolver valueResolver)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.ChainTypeMemberForResolverIValueResolver">
            <summary>Establecer el shim de PropertyMap.ChainTypeMemberForResolver(IValueResolver valueResolver)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.ConstructorIMemberAccessor">
            <summary>Establecer el shim de PropertyMap.PropertyMap(IMemberAccessor destinationProperty)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.ConstructorPropertyMap">
            <summary>Establecer el shim de PropertyMap.PropertyMap(PropertyMap inheritedMappedProperty)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.CustomExpressionGet">
            <summary>Establecer el shim de PropertyMap.get_CustomExpression()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.CustomExpressionSetLambdaExpression">
            <summary>Establecer el shim de PropertyMap.set_CustomExpression(LambdaExpression value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.DestinationPropertyGet">
            <summary>Establecer el shim de PropertyMap.get_DestinationProperty()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.DestinationPropertyTypeGet">
            <summary>Establecer el shim de PropertyMap.get_DestinationPropertyType()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.EqualsObject">
            <summary>Establecer el shim de PropertyMap.Equals(Object obj)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.EqualsPropertyMap">
            <summary>Establecer el shim de PropertyMap.Equals(PropertyMap other)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.ExplicitExpansionGet">
            <summary>Establecer el shim de PropertyMap.get_ExplicitExpansion()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.ExplicitExpansionSetBoolean">
            <summary>Establecer el shim de PropertyMap.set_ExplicitExpansion(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.GetDestinationValueObject">
            <summary>Establecer el shim de PropertyMap.GetDestinationValue(Object mappedObject)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.GetHashCode">
            <summary>Establecer el shim de PropertyMap.GetHashCode()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.GetMappingOrder">
            <summary>Establecer el shim de PropertyMap.GetMappingOrder()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.GetSourceValueResolvers">
            <summary>Establecer el shim de PropertyMap.GetSourceValueResolvers()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.HasCustomValueResolverGet">
            <summary>Establecer el shim de PropertyMap.get_HasCustomValueResolver()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.HasCustomValueResolverSetBoolean">
            <summary>Establecer el shim de PropertyMap.set_HasCustomValueResolver(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.Ignore">
            <summary>Establecer el shim de PropertyMap.Ignore()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.IsIgnored">
            <summary>Establecer el shim de PropertyMap.IsIgnored()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.IsMapped">
            <summary>Establecer el shim de PropertyMap.IsMapped()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.NullSubstituteGet">
            <summary>Establecer el shim de PropertyMap.get_NullSubstitute()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.NullSubstituteSetObject">
            <summary>Establecer el shim de PropertyMap.set_NullSubstitute(Object value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.RemoveLastResolver">
            <summary>Establecer el shim de PropertyMap.RemoveLastResolver()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.ResetSourceMemberChain">
            <summary>Establecer el shim de PropertyMap.ResetSourceMemberChain()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.ResolveValueResolutionContext">
            <summary>Establecer el shim de PropertyMap.ResolveValue(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.Seal">
            <summary>Establecer el shim de PropertyMap.Seal()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.SetMappingOrderInt32">
            <summary>Establecer el shim de PropertyMap.SetMappingOrder(Int32 mappingOrder)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.SetNullSubstituteObject">
            <summary>Establecer el shim de PropertyMap.SetNullSubstitute(Object nullSubstitute)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.ShouldAssignValuePreResolvingResolutionContext">
            <summary>Establecer el shim de PropertyMap.ShouldAssignValuePreResolving(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.ShouldAssignValueResolutionContext">
            <summary>Establecer el shim de PropertyMap.ShouldAssignValue(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.SourceMemberGet">
            <summary>Establecer el shim de PropertyMap.get_SourceMember()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.SourceMemberSetMemberInfo">
            <summary>Establecer el shim de PropertyMap.set_SourceMember(MemberInfo value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.UseDestinationValueGet">
            <summary>Establecer el shim de PropertyMap.get_UseDestinationValue()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.UseDestinationValueSetBoolean">
            <summary>Establecer el shim de PropertyMap.set_UseDestinationValue(Boolean value)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimPropertyMap.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimPropertyMap.AllInstances.SetCustomValueResolverExpressionOf2ExpressionOfFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.PropertyMap,System.Linq.Expressions.Expression{System.Func{``0,``1}}})">
            <summary>Establecer el shim de PropertyMap.SetCustomValueResolverExpression(Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; sourceMember)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.ApplyConditionFuncOfResolutionContextBoolean">
            <summary>Establecer el shim de PropertyMap.ApplyCondition(Func`2&lt;ResolutionContext,Boolean&gt; condition)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.ApplyPreConditionFuncOfResolutionContextBoolean">
            <summary>Establecer el shim de PropertyMap.ApplyPreCondition(Func`2&lt;ResolutionContext,Boolean&gt; condition)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.AssignCustomExpressionLambdaExpression">
            <summary>Establecer el shim de PropertyMap.AssignCustomExpression(LambdaExpression customExpression)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.AssignCustomValueResolverIValueResolver">
            <summary>Establecer el shim de PropertyMap.AssignCustomValueResolver(IValueResolver valueResolver)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.CanBeSetGet">
            <summary>Establecer el shim de PropertyMap.get_CanBeSet()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.CanResolveValue">
            <summary>Establecer el shim de PropertyMap.CanResolveValue()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.ChainConstructorForResolverIValueResolver">
            <summary>Establecer el shim de PropertyMap.ChainConstructorForResolver(IValueResolver valueResolver)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.ChainResolverIValueResolver">
            <summary>Establecer el shim de PropertyMap.ChainResolver(IValueResolver valueResolver)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.ChainTypeMemberForResolverIValueResolver">
            <summary>Establecer el shim de PropertyMap.ChainTypeMemberForResolver(IValueResolver valueResolver)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.CustomExpressionGet">
            <summary>Establecer el shim de PropertyMap.get_CustomExpression()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.CustomExpressionSetLambdaExpression">
            <summary>Establecer el shim de PropertyMap.set_CustomExpression(LambdaExpression value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.DestinationPropertyGet">
            <summary>Establecer el shim de PropertyMap.get_DestinationProperty()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.DestinationPropertyTypeGet">
            <summary>Establecer el shim de PropertyMap.get_DestinationPropertyType()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.EqualsObject">
            <summary>Establecer el shim de PropertyMap.Equals(Object obj)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.EqualsPropertyMap">
            <summary>Establecer el shim de PropertyMap.Equals(PropertyMap other)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.ExplicitExpansionGet">
            <summary>Establecer el shim de PropertyMap.get_ExplicitExpansion()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.ExplicitExpansionSetBoolean">
            <summary>Establecer el shim de PropertyMap.set_ExplicitExpansion(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.GetDestinationValueObject">
            <summary>Establecer el shim de PropertyMap.GetDestinationValue(Object mappedObject)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.GetHashCode01">
            <summary>Establecer el shim de PropertyMap.GetHashCode()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.GetMappingOrder">
            <summary>Establecer el shim de PropertyMap.GetMappingOrder()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.GetSourceValueResolvers">
            <summary>Establecer el shim de PropertyMap.GetSourceValueResolvers()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.HasCustomValueResolverGet">
            <summary>Establecer el shim de PropertyMap.get_HasCustomValueResolver()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.HasCustomValueResolverSetBoolean">
            <summary>Establecer el shim de PropertyMap.set_HasCustomValueResolver(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.Ignore">
            <summary>Establecer el shim de PropertyMap.Ignore()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.IsIgnored">
            <summary>Establecer el shim de PropertyMap.IsIgnored()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.IsMapped">
            <summary>Establecer el shim de PropertyMap.IsMapped()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.NullSubstituteGet">
            <summary>Establecer el shim de PropertyMap.get_NullSubstitute()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.NullSubstituteSetObject">
            <summary>Establecer el shim de PropertyMap.set_NullSubstitute(Object value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.RemoveLastResolver">
            <summary>Establecer el shim de PropertyMap.RemoveLastResolver()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.ResetSourceMemberChain">
            <summary>Establecer el shim de PropertyMap.ResetSourceMemberChain()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.ResolveValueResolutionContext">
            <summary>Establecer el shim de PropertyMap.ResolveValue(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.Seal">
            <summary>Establecer el shim de PropertyMap.Seal()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.SetMappingOrderInt32">
            <summary>Establecer el shim de PropertyMap.SetMappingOrder(Int32 mappingOrder)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.SetNullSubstituteObject">
            <summary>Establecer el shim de PropertyMap.SetNullSubstitute(Object nullSubstitute)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.ShouldAssignValuePreResolvingResolutionContext">
            <summary>Establecer el shim de PropertyMap.ShouldAssignValuePreResolving(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.ShouldAssignValueResolutionContext">
            <summary>Establecer el shim de PropertyMap.ShouldAssignValue(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.SourceMemberGet">
            <summary>Establecer el shim de PropertyMap.get_SourceMember()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.SourceMemberSetMemberInfo">
            <summary>Establecer el shim de PropertyMap.set_SourceMember(MemberInfo value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.UseDestinationValueGet">
            <summary>Establecer el shim de PropertyMap.get_UseDestinationValue()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.UseDestinationValueSetBoolean">
            <summary>Establecer el shim de PropertyMap.set_UseDestinationValue(Boolean value)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimResolutionContext">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.ResolutionContext</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionContext.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionContext.#ctor(AutoMapper.ResolutionContext)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionContext.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionContext.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionContext.Bind(System.IEquatable{AutoMapper.ResolutionContext})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionContext.NewOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,AutoMapper.ResolutionContext})">
            <summary>Establecer el shim de ResolutionContext.New(!!0 sourceValue)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AfterMapObject">
            <summary>Establecer el shim de ResolutionContext.AfterMap(Object destination)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.ArrayIndexGet">
            <summary>Establecer el shim de ResolutionContext.get_ArrayIndex()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.BeforeMapObject">
            <summary>Establecer el shim de ResolutionContext.BeforeMap(Object destination)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.ConstructorResolutionContextObjectObjectTypeMapPropertyMap">
            <summary>Establecer el shim de ResolutionContext.ResolutionContext(ResolutionContext context, Object sourceValue, Object destinationValue, TypeMap memberTypeMap, PropertyMap propertyMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.ConstructorResolutionContextObjectObjectTypePropertyMap">
            <summary>Establecer el shim de ResolutionContext.ResolutionContext(ResolutionContext context, Object sourceValue, Object destinationValue, Type sourceType, PropertyMap propertyMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.ConstructorResolutionContextObjectType">
            <summary>Establecer el shim de ResolutionContext.ResolutionContext(ResolutionContext context, Object sourceValue, Type sourceType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.ConstructorResolutionContextObjectTypeMapTypeTypeInt32">
            <summary>Establecer el shim de ResolutionContext.ResolutionContext(ResolutionContext context, Object sourceValue, TypeMap typeMap, Type sourceType, Type destinationType, Int32 arrayIndex)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.ConstructorResolutionContextTypeMapObjectObjectTypeType">
            <summary>Establecer el shim de ResolutionContext.ResolutionContext(ResolutionContext context, TypeMap memberTypeMap, Object sourceValue, Object destinationValue, Type sourceType, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.ConstructorTypeMapObjectObjectTypeTypeMappingOperationOptionsIMappingEngine">
            <summary>Establecer el shim de ResolutionContext.ResolutionContext(TypeMap typeMap, Object source, Object destination, Type sourceType, Type destinationType, MappingOperationOptions options, IMappingEngine engine)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.ConstructorTypeMapObjectTypeTypeMappingOperationOptionsIMappingEngine">
            <summary>Establecer el shim de ResolutionContext.ResolutionContext(TypeMap typeMap, Object source, Type sourceType, Type destinationType, MappingOperationOptions options, IMappingEngine engine)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.CreateElementContextTypeMapObjectTypeTypeInt32">
            <summary>Establecer el shim de ResolutionContext.CreateElementContext(TypeMap elementTypeMap, Object item, Type sourceElementType, Type destinationElementType, Int32 arrayIndex)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.CreateMemberContextTypeMapObjectObjectTypePropertyMap">
            <summary>Establecer el shim de ResolutionContext.CreateMemberContext(TypeMap memberTypeMap, Object memberValue, Object destinationValue, Type sourceMemberType, PropertyMap propertyMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.CreatePropertyMapContextPropertyMap">
            <summary>Establecer el shim de ResolutionContext.CreatePropertyMapContext(PropertyMap propertyMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.CreateTypeContextTypeMapObjectObjectTypeType">
            <summary>Establecer el shim de ResolutionContext.CreateTypeContext(TypeMap memberTypeMap, Object sourceValue, Object destinationValue, Type sourceType, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.CreateValueContextObjectType">
            <summary>Establecer el shim de ResolutionContext.CreateValueContext(Object sourceValue, Type sourceType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.DestinationTypeGet">
            <summary>Establecer el shim de ResolutionContext.get_DestinationType()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.DestinationValueGet">
            <summary>Establecer el shim de ResolutionContext.get_DestinationValue()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.EngineGet">
            <summary>Establecer el shim de ResolutionContext.get_Engine()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.EqualsObject">
            <summary>Establecer el shim de ResolutionContext.Equals(Object obj)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.EqualsResolutionContext">
            <summary>Establecer el shim de ResolutionContext.Equals(ResolutionContext other)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.GetContextPropertyMap">
            <summary>Establecer el shim de ResolutionContext.GetContextPropertyMap()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.GetContextTypeMap">
            <summary>Establecer el shim de ResolutionContext.GetContextTypeMap()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.GetHashCode">
            <summary>Establecer el shim de ResolutionContext.GetHashCode()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.InstanceCacheGet">
            <summary>Establecer el shim de ResolutionContext.get_InstanceCache()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.IsSourceValueNullGet">
            <summary>Establecer el shim de ResolutionContext.get_IsSourceValueNull()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.MemberNameGet">
            <summary>Establecer el shim de ResolutionContext.get_MemberName()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.OptionsGet">
            <summary>Establecer el shim de ResolutionContext.get_Options()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.ParentGet">
            <summary>Establecer el shim de ResolutionContext.get_Parent()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.PropertyMapGet">
            <summary>Establecer el shim de ResolutionContext.get_PropertyMap()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.SourceTypeGet">
            <summary>Establecer el shim de ResolutionContext.get_SourceType()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.SourceValueGet">
            <summary>Establecer el shim de ResolutionContext.get_SourceValue()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.ToString">
            <summary>Establecer el shim de ResolutionContext.ToString()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.TypeMapGet">
            <summary>Establecer el shim de ResolutionContext.get_TypeMap()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimResolutionContext.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.AfterMapObject">
            <summary>Establecer el shim de ResolutionContext.AfterMap(Object destination)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.ArrayIndexGet">
            <summary>Establecer el shim de ResolutionContext.get_ArrayIndex()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.BeforeMapObject">
            <summary>Establecer el shim de ResolutionContext.BeforeMap(Object destination)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.CreateElementContextTypeMapObjectTypeTypeInt32">
            <summary>Establecer el shim de ResolutionContext.CreateElementContext(TypeMap elementTypeMap, Object item, Type sourceElementType, Type destinationElementType, Int32 arrayIndex)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.CreateMemberContextTypeMapObjectObjectTypePropertyMap">
            <summary>Establecer el shim de ResolutionContext.CreateMemberContext(TypeMap memberTypeMap, Object memberValue, Object destinationValue, Type sourceMemberType, PropertyMap propertyMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.CreatePropertyMapContextPropertyMap">
            <summary>Establecer el shim de ResolutionContext.CreatePropertyMapContext(PropertyMap propertyMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.CreateTypeContextTypeMapObjectObjectTypeType">
            <summary>Establecer el shim de ResolutionContext.CreateTypeContext(TypeMap memberTypeMap, Object sourceValue, Object destinationValue, Type sourceType, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.CreateValueContextObjectType">
            <summary>Establecer el shim de ResolutionContext.CreateValueContext(Object sourceValue, Type sourceType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.DestinationTypeGet">
            <summary>Establecer el shim de ResolutionContext.get_DestinationType()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.DestinationValueGet">
            <summary>Establecer el shim de ResolutionContext.get_DestinationValue()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.EngineGet">
            <summary>Establecer el shim de ResolutionContext.get_Engine()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.EqualsObject">
            <summary>Establecer el shim de ResolutionContext.Equals(Object obj)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.EqualsResolutionContext">
            <summary>Establecer el shim de ResolutionContext.Equals(ResolutionContext other)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.GetContextPropertyMap">
            <summary>Establecer el shim de ResolutionContext.GetContextPropertyMap()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.GetContextTypeMap">
            <summary>Establecer el shim de ResolutionContext.GetContextTypeMap()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.GetHashCode01">
            <summary>Establecer el shim de ResolutionContext.GetHashCode()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.InstanceCacheGet">
            <summary>Establecer el shim de ResolutionContext.get_InstanceCache()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.IsSourceValueNullGet">
            <summary>Establecer el shim de ResolutionContext.get_IsSourceValueNull()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.MemberNameGet">
            <summary>Establecer el shim de ResolutionContext.get_MemberName()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.OptionsGet">
            <summary>Establecer el shim de ResolutionContext.get_Options()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.ParentGet">
            <summary>Establecer el shim de ResolutionContext.get_Parent()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.PropertyMapGet">
            <summary>Establecer el shim de ResolutionContext.get_PropertyMap()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.SourceTypeGet">
            <summary>Establecer el shim de ResolutionContext.get_SourceType()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.SourceValueGet">
            <summary>Establecer el shim de ResolutionContext.get_SourceValue()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.ToString01">
            <summary>Establecer el shim de ResolutionContext.ToString()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.TypeMapGet">
            <summary>Establecer el shim de ResolutionContext.get_TypeMap()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimResolutionResult">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.ResolutionResult</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionResult.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionResult.#ctor(AutoMapper.ResolutionResult)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionResult.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionResult.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.ConstructorObjectResolutionContext">
            <summary>Establecer el shim de ResolutionResult.ResolutionResult(Object value, ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.ConstructorObjectResolutionContextType">
            <summary>Establecer el shim de ResolutionResult.ResolutionResult(Object value, ResolutionContext context, Type memberType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.ConstructorResolutionContext">
            <summary>Establecer el shim de ResolutionResult.ResolutionResult(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.ContextGet">
            <summary>Establecer el shim de ResolutionResult.get_Context()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.Ignore">
            <summary>Establecer el shim de ResolutionResult.Ignore()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.MemberTypeGet">
            <summary>Establecer el shim de ResolutionResult.get_MemberType()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.NewObject">
            <summary>Establecer el shim de ResolutionResult.New(Object value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.NewObjectType">
            <summary>Establecer el shim de ResolutionResult.New(Object value, Type memberType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.ResolveTypeObjectType">
            <summary>Establecer el shim de ResolutionResult.ResolveType(Object value, Type memberType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.ShouldIgnoreGet">
            <summary>Establecer el shim de ResolutionResult.get_ShouldIgnore()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.ShouldIgnoreSetBoolean">
            <summary>Establecer el shim de ResolutionResult.set_ShouldIgnore(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.TypeGet">
            <summary>Establecer el shim de ResolutionResult.get_Type()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.ValueGet">
            <summary>Establecer el shim de ResolutionResult.get_Value()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimResolutionResult.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.AllInstances.ContextGet">
            <summary>Establecer el shim de ResolutionResult.get_Context()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.AllInstances.Ignore">
            <summary>Establecer el shim de ResolutionResult.Ignore()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.AllInstances.MemberTypeGet">
            <summary>Establecer el shim de ResolutionResult.get_MemberType()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.AllInstances.NewObject">
            <summary>Establecer el shim de ResolutionResult.New(Object value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.AllInstances.NewObjectType">
            <summary>Establecer el shim de ResolutionResult.New(Object value, Type memberType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.AllInstances.ShouldIgnoreGet">
            <summary>Establecer el shim de ResolutionResult.get_ShouldIgnore()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.AllInstances.ShouldIgnoreSetBoolean">
            <summary>Establecer el shim de ResolutionResult.set_ShouldIgnore(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.AllInstances.TypeGet">
            <summary>Establecer el shim de ResolutionResult.get_Type()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.AllInstances.ValueGet">
            <summary>Establecer el shim de ResolutionResult.get_Value()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimSourceMemberConfig">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.SourceMemberConfig</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimSourceMemberConfig.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimSourceMemberConfig.#ctor(AutoMapper.SourceMemberConfig)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimSourceMemberConfig.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimSourceMemberConfig.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimSourceMemberConfig.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimSourceMemberConfig.ConstructorMemberInfo">
            <summary>Establecer el shim de SourceMemberConfig.SourceMemberConfig(MemberInfo sourceMember)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimSourceMemberConfig.Ignore">
            <summary>Establecer el shim de SourceMemberConfig.Ignore()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimSourceMemberConfig.IsIgnored">
            <summary>Establecer el shim de SourceMemberConfig.IsIgnored()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimSourceMemberConfig.SourceMemberGet">
            <summary>Establecer el shim de SourceMemberConfig.get_SourceMember()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimSourceMemberConfig.SourceMemberSetMemberInfo">
            <summary>Establecer el shim de SourceMemberConfig.set_SourceMember(MemberInfo value)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimSourceMemberConfig.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimSourceMemberConfig.AllInstances.Ignore">
            <summary>Establecer el shim de SourceMemberConfig.Ignore()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimSourceMemberConfig.AllInstances.IsIgnored">
            <summary>Establecer el shim de SourceMemberConfig.IsIgnored()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimSourceMemberConfig.AllInstances.SourceMemberGet">
            <summary>Establecer el shim de SourceMemberConfig.get_SourceMember()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimSourceMemberConfig.AllInstances.SourceMemberSetMemberInfo">
            <summary>Establecer el shim de SourceMemberConfig.set_SourceMember(MemberInfo value)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimThreadSafeList`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.ThreadSafeList`1</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimThreadSafeList`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimThreadSafeList`1.#ctor(AutoMapper.ThreadSafeList{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimThreadSafeList`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimThreadSafeList`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimThreadSafeList`1.Bind(System.IDisposable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimThreadSafeList`1.Bind(System.Collections.IEnumerable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimThreadSafeList`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.AddT0">
            <summary>Establecer el shim de ThreadSafeList`1.Add(!0 propertyMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.Clear">
            <summary>Establecer el shim de ThreadSafeList`1.Clear()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.Constructor">
            <summary>Establecer el shim de ThreadSafeList`1.ThreadSafeList`1()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.Dispose">
            <summary>Establecer el shim de ThreadSafeList`1.Dispose()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.DisposeBoolean">
            <summary>Establecer el shim de ThreadSafeList`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.GetEnumeratorImpl">
            <summary>Establecer el shim de ThreadSafeList`1.GetEnumeratorImpl()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.GetOrCreatePredicateOfT0FuncOfT0">
            <summary>Establecer el shim de ThreadSafeList`1.GetOrCreate(Predicate`1&lt;!0&gt; predicate, Func`1&lt;!0&gt; creatorFunc)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.StaticConstructor">
            <summary>Establecer el shim de ThreadSafeList`1.ThreadSafeList`1()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.SystemCollectionsGenericIEnumerableTGetEnumerator">
            <summary>Establecer el shim de ThreadSafeList`1.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Establecer el shim de ThreadSafeList`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimThreadSafeList`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.AllInstances.AddT0">
            <summary>Establecer el shim de ThreadSafeList`1.Add(!0 propertyMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.AllInstances.Clear">
            <summary>Establecer el shim de ThreadSafeList`1.Clear()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.AllInstances.Dispose">
            <summary>Establecer el shim de ThreadSafeList`1.Dispose()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.AllInstances.DisposeBoolean">
            <summary>Establecer el shim de ThreadSafeList`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.AllInstances.GetEnumeratorImpl">
            <summary>Establecer el shim de ThreadSafeList`1.GetEnumeratorImpl()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.AllInstances.GetOrCreatePredicateOfT0FuncOfT0">
            <summary>Establecer el shim de ThreadSafeList`1.GetOrCreate(Predicate`1&lt;!0&gt; predicate, Func`1&lt;!0&gt; creatorFunc)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.AllInstances.SystemCollectionsGenericIEnumerableTGetEnumerator">
            <summary>Establecer el shim de ThreadSafeList`1.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Establecer el shim de ThreadSafeList`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimTypeConverter`2">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.TypeConverter`2</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeConverter`2.#ctor(AutoMapper.TypeConverter{`0,`1})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeConverter`2.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeConverter`2.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeConverter`2.Bind(AutoMapper.ITypeConverter{`0,`1})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeConverter`2.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeConverter`2.Constructor">
            <summary>Establecer el shim de TypeConverter`2.TypeConverter`2()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeConverter`2.ConvertResolutionContext">
            <summary>Establecer el shim de TypeConverter`2.Convert(ResolutionContext context)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimTypeConverter`2.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeConverter`2.AllInstances.ConvertResolutionContext">
            <summary>Establecer el shim de TypeConverter`2.Convert(ResolutionContext context)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimTypeInfo">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.TypeInfo</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeInfo.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeInfo.#ctor(AutoMapper.TypeInfo)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeInfo.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeInfo.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.BuildPublicAccessorsIEnumerableOfMemberInfo">
            <summary>Establecer el shim de TypeInfo.BuildPublicAccessors(IEnumerable`1&lt;MemberInfo&gt; allMembers)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.BuildPublicNoArgExtensionMethodsIEnumerableOfMethodInfo">
            <summary>Establecer el shim de TypeInfo.BuildPublicNoArgExtensionMethods(IEnumerable`1&lt;MethodInfo&gt; sourceExtensionMethodSearch)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.BuildPublicNoArgMethods">
            <summary>Establecer el shim de TypeInfo.BuildPublicNoArgMethods()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.BuildPublicReadAccessorsIEnumerableOfMemberInfo">
            <summary>Establecer el shim de TypeInfo.BuildPublicReadAccessors(IEnumerable`1&lt;MemberInfo&gt; allMembers)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.ConstructorTypeFuncOfPropertyInfoBooleanFuncOfFieldInfoBoolean">
            <summary>Establecer el shim de TypeInfo.TypeInfo(Type type, Func`2&lt;PropertyInfo,Boolean&gt; shouldMapProperty, Func`2&lt;FieldInfo,Boolean&gt; shouldMapField)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.ConstructorTypeFuncOfPropertyInfoBooleanFuncOfFieldInfoBooleanIEnumerableOfMethodInfo">
            <summary>Establecer el shim de TypeInfo.TypeInfo(Type type, Func`2&lt;PropertyInfo,Boolean&gt; shouldMapProperty, Func`2&lt;FieldInfo,Boolean&gt; shouldMapField, IEnumerable`1&lt;MethodInfo&gt; sourceExtensionMethodSearch)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.ConstructorsGet">
            <summary>Establecer el shim de TypeInfo.get_Constructors()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.FieldReadableFieldInfo">
            <summary>Establecer el shim de TypeInfo.FieldReadable(FieldInfo fieldInfo)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.FieldWritableFieldInfo">
            <summary>Establecer el shim de TypeInfo.FieldWritable(FieldInfo fieldInfo)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.GetAllPublicMembersFuncOfPropertyInfoBooleanFuncOfFieldInfoBooleanFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de TypeInfo.GetAllPublicMembers(Func`2&lt;PropertyInfo,Boolean&gt; propertyAvailableFor, Func`2&lt;FieldInfo,Boolean&gt; fieldAvailableFor, Func`2&lt;MemberInfo,Boolean&gt; memberAvailableFor)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.GetAllPublicReadableMembersFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de TypeInfo.GetAllPublicReadableMembers(Func`2&lt;MemberInfo,Boolean&gt; membersToMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.GetAllPublicWritableMembersFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de TypeInfo.GetAllPublicWritableMembers(Func`2&lt;MemberInfo,Boolean&gt; membersToMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.MembersToMapFuncOfPropertyInfoBooleanFuncOfFieldInfoBoolean">
            <summary>Establecer el shim de TypeInfo.MembersToMap(Func`2&lt;PropertyInfo,Boolean&gt; shouldMapProperty, Func`2&lt;FieldInfo,Boolean&gt; shouldMapField)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.PropertyReadablePropertyInfo">
            <summary>Establecer el shim de TypeInfo.PropertyReadable(PropertyInfo propertyInfo)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.PropertyWritablePropertyInfo">
            <summary>Establecer el shim de TypeInfo.PropertyWritable(PropertyInfo propertyInfo)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.PublicNoArgExtensionMethodsGet">
            <summary>Establecer el shim de TypeInfo.get_PublicNoArgExtensionMethods()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.PublicNoArgMethodsGet">
            <summary>Establecer el shim de TypeInfo.get_PublicNoArgMethods()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.PublicReadAccessorsGet">
            <summary>Establecer el shim de TypeInfo.get_PublicReadAccessors()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.PublicWriteAccessorsGet">
            <summary>Establecer el shim de TypeInfo.get_PublicWriteAccessors()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.TypeGet">
            <summary>Establecer el shim de TypeInfo.get_Type()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo._BuildPublicNoArgExtensionMethodsb__21_0MethodInfo">
            <summary>Establecer el shim de TypeInfo.&lt;BuildPublicNoArgExtensionMethods&gt;b__21_0(MethodInfo method)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimTypeInfo.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances.BuildPublicNoArgExtensionMethodsIEnumerableOfMethodInfo">
            <summary>Establecer el shim de TypeInfo.BuildPublicNoArgExtensionMethods(IEnumerable`1&lt;MethodInfo&gt; sourceExtensionMethodSearch)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances.BuildPublicNoArgMethods">
            <summary>Establecer el shim de TypeInfo.BuildPublicNoArgMethods()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances.ConstructorsGet">
            <summary>Establecer el shim de TypeInfo.get_Constructors()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances.FieldReadableFieldInfo">
            <summary>Establecer el shim de TypeInfo.FieldReadable(FieldInfo fieldInfo)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances.FieldWritableFieldInfo">
            <summary>Establecer el shim de TypeInfo.FieldWritable(FieldInfo fieldInfo)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances.GetAllPublicMembersFuncOfPropertyInfoBooleanFuncOfFieldInfoBooleanFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de TypeInfo.GetAllPublicMembers(Func`2&lt;PropertyInfo,Boolean&gt; propertyAvailableFor, Func`2&lt;FieldInfo,Boolean&gt; fieldAvailableFor, Func`2&lt;MemberInfo,Boolean&gt; memberAvailableFor)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances.GetAllPublicReadableMembersFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de TypeInfo.GetAllPublicReadableMembers(Func`2&lt;MemberInfo,Boolean&gt; membersToMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances.GetAllPublicWritableMembersFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de TypeInfo.GetAllPublicWritableMembers(Func`2&lt;MemberInfo,Boolean&gt; membersToMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances.MembersToMapFuncOfPropertyInfoBooleanFuncOfFieldInfoBoolean">
            <summary>Establecer el shim de TypeInfo.MembersToMap(Func`2&lt;PropertyInfo,Boolean&gt; shouldMapProperty, Func`2&lt;FieldInfo,Boolean&gt; shouldMapField)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances.PublicNoArgExtensionMethodsGet">
            <summary>Establecer el shim de TypeInfo.get_PublicNoArgExtensionMethods()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances.PublicNoArgMethodsGet">
            <summary>Establecer el shim de TypeInfo.get_PublicNoArgMethods()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances.PublicReadAccessorsGet">
            <summary>Establecer el shim de TypeInfo.get_PublicReadAccessors()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances.PublicWriteAccessorsGet">
            <summary>Establecer el shim de TypeInfo.get_PublicWriteAccessors()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances.TypeGet">
            <summary>Establecer el shim de TypeInfo.get_Type()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances._BuildPublicNoArgExtensionMethodsb__21_0MethodInfo">
            <summary>Establecer el shim de TypeInfo.&lt;BuildPublicNoArgExtensionMethods&gt;b__21_0(MethodInfo method)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimTypeMap">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.TypeMap</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeMap.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeMap.#ctor(AutoMapper.TypeMap)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeMap.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeMap.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AddAfterMapActionActionOfObjectObject">
            <summary>Establecer el shim de TypeMap.AddAfterMapAction(Action`2&lt;Object,Object&gt; afterMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AddBeforeMapActionActionOfObjectObject">
            <summary>Establecer el shim de TypeMap.AddBeforeMapAction(Action`2&lt;Object,Object&gt; beforeMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AddConstructorMapConstructorInfoIEnumerableOfConstructorParameterMap">
            <summary>Establecer el shim de TypeMap.AddConstructorMap(ConstructorInfo constructorInfo, IEnumerable`1&lt;ConstructorParameterMap&gt; parameters)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AddInheritedMapPropertyMap">
            <summary>Establecer el shim de TypeMap.AddInheritedMap(PropertyMap propertyMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AddInheritedPropertyMapPropertyMap">
            <summary>Establecer el shim de TypeMap.AddInheritedPropertyMap(PropertyMap mappedProperty)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AddPropertyMapIMemberAccessorIEnumerableOfIValueResolver">
            <summary>Establecer el shim de TypeMap.AddPropertyMap(IMemberAccessor destProperty, IEnumerable`1&lt;IValueResolver&gt; resolvers)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AddPropertyMapPropertyMap">
            <summary>Establecer el shim de TypeMap.AddPropertyMap(PropertyMap propertyMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AfterMapGet">
            <summary>Establecer el shim de TypeMap.get_AfterMap()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.ApplyInheritedMapTypeMap">
            <summary>Establecer el shim de TypeMap.ApplyInheritedMap(TypeMap inheritedTypeMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.ApplyInheritedTypeMapTypeMap">
            <summary>Establecer el shim de TypeMap.ApplyInheritedTypeMap(TypeMap inheritedTypeMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.BeforeMapGet">
            <summary>Establecer el shim de TypeMap.get_BeforeMap()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.ConfiguredMemberListGet">
            <summary>Establecer el shim de TypeMap.get_ConfiguredMemberList()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.ConstructDestinationUsingServiceLocatorGet">
            <summary>Establecer el shim de TypeMap.get_ConstructDestinationUsingServiceLocator()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.ConstructDestinationUsingServiceLocatorSetBoolean">
            <summary>Establecer el shim de TypeMap.set_ConstructDestinationUsingServiceLocator(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.ConstructExpressionGet">
            <summary>Establecer el shim de TypeMap.get_ConstructExpression()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.ConstructExpressionSetLambdaExpression">
            <summary>Establecer el shim de TypeMap.set_ConstructExpression(LambdaExpression value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.ConstructorMapGet">
            <summary>Establecer el shim de TypeMap.get_ConstructorMap()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.ConstructorMapSetConstructorMap">
            <summary>Establecer el shim de TypeMap.set_ConstructorMap(ConstructorMap value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.ConstructorTypeInfoTypeInfoMemberList">
            <summary>Establecer el shim de TypeMap.TypeMap(TypeInfo sourceType, TypeInfo destinationType, MemberList memberList)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.CustomMapperGet">
            <summary>Establecer el shim de TypeMap.get_CustomMapper()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.CustomMapperSetFuncOfResolutionContextObject">
            <summary>Establecer el shim de TypeMap.set_CustomMapper(Func`2&lt;ResolutionContext,Object&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.CustomProjectionGet">
            <summary>Establecer el shim de TypeMap.get_CustomProjection()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.CustomProjectionSetLambdaExpression">
            <summary>Establecer el shim de TypeMap.set_CustomProjection(LambdaExpression value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.DestinationConstructorExpressionExpression">
            <summary>Establecer el shim de TypeMap.DestinationConstructorExpression(Expression instanceParameter)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.DestinationCtorGet">
            <summary>Establecer el shim de TypeMap.get_DestinationCtor()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.DestinationCtorSetFuncOfResolutionContextObject">
            <summary>Establecer el shim de TypeMap.set_DestinationCtor(Func`2&lt;ResolutionContext,Object&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.DestinationTypeGet">
            <summary>Establecer el shim de TypeMap.get_DestinationType()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.DestinationTypeOverrideGet">
            <summary>Establecer el shim de TypeMap.get_DestinationTypeOverride()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.DestinationTypeOverrideSetType">
            <summary>Establecer el shim de TypeMap.set_DestinationTypeOverride(Type value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.EqualsObject">
            <summary>Establecer el shim de TypeMap.Equals(Object obj)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.EqualsTypeMap">
            <summary>Establecer el shim de TypeMap.Equals(TypeMap other)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.FindOrCreatePropertyMapForIMemberAccessor">
            <summary>Establecer el shim de TypeMap.FindOrCreatePropertyMapFor(IMemberAccessor destinationProperty)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.FindOrCreateSourceMemberConfigForMemberInfo">
            <summary>Establecer el shim de TypeMap.FindOrCreateSourceMemberConfigFor(MemberInfo sourceMember)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.GetDerivedTypeForType">
            <summary>Establecer el shim de TypeMap.GetDerivedTypeFor(Type derivedSourceType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.GetExistingPropertyMapForIMemberAccessor">
            <summary>Establecer el shim de TypeMap.GetExistingPropertyMapFor(IMemberAccessor destinationProperty)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.GetHashCode">
            <summary>Establecer el shim de TypeMap.GetHashCode()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.GetPropertyMaps">
            <summary>Establecer el shim de TypeMap.GetPropertyMaps()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.GetUnmappedPropertyNames">
            <summary>Establecer el shim de TypeMap.GetUnmappedPropertyNames()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.HasDerivedTypesToInclude">
            <summary>Establecer el shim de TypeMap.HasDerivedTypesToInclude()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.IgnorePropertiesStartingWithGet">
            <summary>Establecer el shim de TypeMap.get_IgnorePropertiesStartingWith()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.IgnorePropertiesStartingWithSetListOfString">
            <summary>Establecer el shim de TypeMap.set_IgnorePropertiesStartingWith(List`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.IncludeDerivedTypesTypeType">
            <summary>Establecer el shim de TypeMap.IncludeDerivedTypes(Type derivedSourceType, Type derivedDestinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.IncludedDerivedTypesGet">
            <summary>Establecer el shim de TypeMap.get_IncludedDerivedTypes()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.InheritTypesTypeMap">
            <summary>Establecer el shim de TypeMap.InheritTypes(TypeMap inheritedTypeMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.MaxDepthGet">
            <summary>Establecer el shim de TypeMap.get_MaxDepth()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.MaxDepthSetInt32">
            <summary>Establecer el shim de TypeMap.set_MaxDepth(Int32 value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.PassesDepthCheckResolutionContextInt32">
            <summary>Establecer el shim de TypeMap.PassesDepthCheck(ResolutionContext context, Int32 maxDepth)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.ProfileGet">
            <summary>Establecer el shim de TypeMap.get_Profile()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.ProfileSetString">
            <summary>Establecer el shim de TypeMap.set_Profile(String value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.Seal">
            <summary>Establecer el shim de TypeMap.Seal()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.SetConditionFuncOfResolutionContextBoolean">
            <summary>Establecer el shim de TypeMap.SetCondition(Func`2&lt;ResolutionContext,Boolean&gt; condition)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.ShouldAssignValueResolutionContext">
            <summary>Establecer el shim de TypeMap.ShouldAssignValue(ResolutionContext resolutionContext)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.SourceTypeGet">
            <summary>Establecer el shim de TypeMap.get_SourceType()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.SubstitutionGet">
            <summary>Establecer el shim de TypeMap.get_Substitution()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.SubstitutionSetFuncOfObjectObject">
            <summary>Establecer el shim de TypeMap.set_Substitution(Func`2&lt;Object,Object&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.TypeHasBeenIncludedTypeType">
            <summary>Establecer el shim de TypeMap.TypeHasBeenIncluded(Type derivedSourceType, Type derivedDestinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.UseCustomMapperFuncOfResolutionContextObject">
            <summary>Establecer el shim de TypeMap.UseCustomMapper(Func`2&lt;ResolutionContext,Object&gt; customMapper)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.UseCustomProjectionLambdaExpression">
            <summary>Establecer el shim de TypeMap.UseCustomProjection(LambdaExpression projectionExpression)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap._GetUnmappedPropertyNamesb__74_12String">
            <summary>Establecer el shim de TypeMap.&lt;GetUnmappedPropertyNames&gt;b__74_12(String memberName)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap._InheritTypesb__89_0TypePair">
            <summary>Establecer el shim de TypeMap.&lt;InheritTypes&gt;b__89_0(TypePair includedDerivedType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap._get_AfterMapb__37_0ObjectObject">
            <summary>Establecer el shim de TypeMap.&lt;get_AfterMap&gt;b__37_0(Object src, Object dest)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap._get_BeforeMapb__35_0ObjectObject">
            <summary>Establecer el shim de TypeMap.&lt;get_BeforeMap&gt;b__35_0(Object src, Object dest)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimTypeMap.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.AddAfterMapActionActionOfObjectObject">
            <summary>Establecer el shim de TypeMap.AddAfterMapAction(Action`2&lt;Object,Object&gt; afterMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.AddBeforeMapActionActionOfObjectObject">
            <summary>Establecer el shim de TypeMap.AddBeforeMapAction(Action`2&lt;Object,Object&gt; beforeMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.AddConstructorMapConstructorInfoIEnumerableOfConstructorParameterMap">
            <summary>Establecer el shim de TypeMap.AddConstructorMap(ConstructorInfo constructorInfo, IEnumerable`1&lt;ConstructorParameterMap&gt; parameters)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.AddInheritedMapPropertyMap">
            <summary>Establecer el shim de TypeMap.AddInheritedMap(PropertyMap propertyMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.AddInheritedPropertyMapPropertyMap">
            <summary>Establecer el shim de TypeMap.AddInheritedPropertyMap(PropertyMap mappedProperty)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.AddPropertyMapIMemberAccessorIEnumerableOfIValueResolver">
            <summary>Establecer el shim de TypeMap.AddPropertyMap(IMemberAccessor destProperty, IEnumerable`1&lt;IValueResolver&gt; resolvers)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.AddPropertyMapPropertyMap">
            <summary>Establecer el shim de TypeMap.AddPropertyMap(PropertyMap propertyMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.AfterMapGet">
            <summary>Establecer el shim de TypeMap.get_AfterMap()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.ApplyInheritedMapTypeMap">
            <summary>Establecer el shim de TypeMap.ApplyInheritedMap(TypeMap inheritedTypeMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.ApplyInheritedTypeMapTypeMap">
            <summary>Establecer el shim de TypeMap.ApplyInheritedTypeMap(TypeMap inheritedTypeMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.BeforeMapGet">
            <summary>Establecer el shim de TypeMap.get_BeforeMap()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.ConfiguredMemberListGet">
            <summary>Establecer el shim de TypeMap.get_ConfiguredMemberList()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.ConstructDestinationUsingServiceLocatorGet">
            <summary>Establecer el shim de TypeMap.get_ConstructDestinationUsingServiceLocator()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.ConstructDestinationUsingServiceLocatorSetBoolean">
            <summary>Establecer el shim de TypeMap.set_ConstructDestinationUsingServiceLocator(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.ConstructExpressionGet">
            <summary>Establecer el shim de TypeMap.get_ConstructExpression()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.ConstructExpressionSetLambdaExpression">
            <summary>Establecer el shim de TypeMap.set_ConstructExpression(LambdaExpression value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.ConstructorMapGet">
            <summary>Establecer el shim de TypeMap.get_ConstructorMap()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.ConstructorMapSetConstructorMap">
            <summary>Establecer el shim de TypeMap.set_ConstructorMap(ConstructorMap value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.CustomMapperGet">
            <summary>Establecer el shim de TypeMap.get_CustomMapper()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.CustomMapperSetFuncOfResolutionContextObject">
            <summary>Establecer el shim de TypeMap.set_CustomMapper(Func`2&lt;ResolutionContext,Object&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.CustomProjectionGet">
            <summary>Establecer el shim de TypeMap.get_CustomProjection()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.CustomProjectionSetLambdaExpression">
            <summary>Establecer el shim de TypeMap.set_CustomProjection(LambdaExpression value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.DestinationConstructorExpressionExpression">
            <summary>Establecer el shim de TypeMap.DestinationConstructorExpression(Expression instanceParameter)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.DestinationCtorGet">
            <summary>Establecer el shim de TypeMap.get_DestinationCtor()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.DestinationCtorSetFuncOfResolutionContextObject">
            <summary>Establecer el shim de TypeMap.set_DestinationCtor(Func`2&lt;ResolutionContext,Object&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.DestinationTypeGet">
            <summary>Establecer el shim de TypeMap.get_DestinationType()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.DestinationTypeOverrideGet">
            <summary>Establecer el shim de TypeMap.get_DestinationTypeOverride()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.DestinationTypeOverrideSetType">
            <summary>Establecer el shim de TypeMap.set_DestinationTypeOverride(Type value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.EqualsObject">
            <summary>Establecer el shim de TypeMap.Equals(Object obj)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.EqualsTypeMap">
            <summary>Establecer el shim de TypeMap.Equals(TypeMap other)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.FindOrCreatePropertyMapForIMemberAccessor">
            <summary>Establecer el shim de TypeMap.FindOrCreatePropertyMapFor(IMemberAccessor destinationProperty)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.FindOrCreateSourceMemberConfigForMemberInfo">
            <summary>Establecer el shim de TypeMap.FindOrCreateSourceMemberConfigFor(MemberInfo sourceMember)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.GetDerivedTypeForType">
            <summary>Establecer el shim de TypeMap.GetDerivedTypeFor(Type derivedSourceType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.GetExistingPropertyMapForIMemberAccessor">
            <summary>Establecer el shim de TypeMap.GetExistingPropertyMapFor(IMemberAccessor destinationProperty)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.GetHashCode01">
            <summary>Establecer el shim de TypeMap.GetHashCode()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.GetPropertyMaps">
            <summary>Establecer el shim de TypeMap.GetPropertyMaps()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.GetUnmappedPropertyNames">
            <summary>Establecer el shim de TypeMap.GetUnmappedPropertyNames()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.HasDerivedTypesToInclude">
            <summary>Establecer el shim de TypeMap.HasDerivedTypesToInclude()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.IgnorePropertiesStartingWithGet">
            <summary>Establecer el shim de TypeMap.get_IgnorePropertiesStartingWith()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.IgnorePropertiesStartingWithSetListOfString">
            <summary>Establecer el shim de TypeMap.set_IgnorePropertiesStartingWith(List`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.IncludeDerivedTypesTypeType">
            <summary>Establecer el shim de TypeMap.IncludeDerivedTypes(Type derivedSourceType, Type derivedDestinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.IncludedDerivedTypesGet">
            <summary>Establecer el shim de TypeMap.get_IncludedDerivedTypes()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.InheritTypesTypeMap">
            <summary>Establecer el shim de TypeMap.InheritTypes(TypeMap inheritedTypeMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.MaxDepthGet">
            <summary>Establecer el shim de TypeMap.get_MaxDepth()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.MaxDepthSetInt32">
            <summary>Establecer el shim de TypeMap.set_MaxDepth(Int32 value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.ProfileGet">
            <summary>Establecer el shim de TypeMap.get_Profile()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.ProfileSetString">
            <summary>Establecer el shim de TypeMap.set_Profile(String value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.Seal">
            <summary>Establecer el shim de TypeMap.Seal()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.SetConditionFuncOfResolutionContextBoolean">
            <summary>Establecer el shim de TypeMap.SetCondition(Func`2&lt;ResolutionContext,Boolean&gt; condition)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.ShouldAssignValueResolutionContext">
            <summary>Establecer el shim de TypeMap.ShouldAssignValue(ResolutionContext resolutionContext)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.SourceTypeGet">
            <summary>Establecer el shim de TypeMap.get_SourceType()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.SubstitutionGet">
            <summary>Establecer el shim de TypeMap.get_Substitution()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.SubstitutionSetFuncOfObjectObject">
            <summary>Establecer el shim de TypeMap.set_Substitution(Func`2&lt;Object,Object&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.TypeHasBeenIncludedTypeType">
            <summary>Establecer el shim de TypeMap.TypeHasBeenIncluded(Type derivedSourceType, Type derivedDestinationType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.UseCustomMapperFuncOfResolutionContextObject">
            <summary>Establecer el shim de TypeMap.UseCustomMapper(Func`2&lt;ResolutionContext,Object&gt; customMapper)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.UseCustomProjectionLambdaExpression">
            <summary>Establecer el shim de TypeMap.UseCustomProjection(LambdaExpression projectionExpression)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances._GetUnmappedPropertyNamesb__74_12String">
            <summary>Establecer el shim de TypeMap.&lt;GetUnmappedPropertyNames&gt;b__74_12(String memberName)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances._InheritTypesb__89_0TypePair">
            <summary>Establecer el shim de TypeMap.&lt;InheritTypes&gt;b__89_0(TypePair includedDerivedType)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances._get_AfterMapb__37_0ObjectObject">
            <summary>Establecer el shim de TypeMap.&lt;get_AfterMap&gt;b__37_0(Object src, Object dest)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances._get_BeforeMapb__35_0ObjectObject">
            <summary>Establecer el shim de TypeMap.&lt;get_BeforeMap&gt;b__35_0(Object src, Object dest)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimTypeMapCreatedEventArgs">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.TypeMapCreatedEventArgs</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeMapCreatedEventArgs.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeMapCreatedEventArgs.#ctor(AutoMapper.TypeMapCreatedEventArgs)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeMapCreatedEventArgs.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeMapCreatedEventArgs.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapCreatedEventArgs.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapCreatedEventArgs.ConstructorTypeMap">
            <summary>Establecer el shim de TypeMapCreatedEventArgs.TypeMapCreatedEventArgs(TypeMap typeMap)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapCreatedEventArgs.TypeMapGet">
            <summary>Establecer el shim de TypeMapCreatedEventArgs.get_TypeMap()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapCreatedEventArgs.TypeMapSetTypeMap">
            <summary>Establecer el shim de TypeMapCreatedEventArgs.set_TypeMap(TypeMap value)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimTypeMapCreatedEventArgs.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapCreatedEventArgs.AllInstances.TypeMapGet">
            <summary>Establecer el shim de TypeMapCreatedEventArgs.get_TypeMap()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapCreatedEventArgs.AllInstances.TypeMapSetTypeMap">
            <summary>Establecer el shim de TypeMapCreatedEventArgs.set_TypeMap(TypeMap value)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimTypeMapFactory">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.TypeMapFactory</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeMapFactory.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeMapFactory.#ctor(AutoMapper.TypeMapFactory)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeMapFactory.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeMapFactory.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeMapFactory.Bind(AutoMapper.ITypeMapFactory)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory.Constructor">
            <summary>Establecer el shim de TypeMapFactory.TypeMapFactory()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory.CreateTypeMapTypeTypeIMappingOptionsMemberList">
            <summary>Establecer el shim de TypeMapFactory.CreateTypeMap(Type sourceType, Type destinationType, IMappingOptions options, MemberList memberList)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory.FindTypeMemberIEnumerableOfMemberInfoIEnumerableOfMethodInfoIEnumerableOfMethodInfoStringIMappingOptions">
            <summary>Establecer el shim de TypeMapFactory.FindTypeMember(IEnumerable`1&lt;MemberInfo&gt; modelProperties, IEnumerable`1&lt;MethodInfo&gt; getMethods, IEnumerable`1&lt;MethodInfo&gt; getExtensionMethods, String nameToSearch, IMappingOptions mappingOptions)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory.GetTypeInfoTypeFuncOfPropertyInfoBooleanFuncOfFieldInfoBooleanIEnumerableOfMethodInfo">
            <summary>Establecer el shim de TypeMapFactory.GetTypeInfo(Type type, Func`2&lt;PropertyInfo,Boolean&gt; shouldMapProperty, Func`2&lt;FieldInfo,Boolean&gt; shouldMapField, IEnumerable`1&lt;MethodInfo&gt; extensionMethodsToSearch)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory.GetTypeInfoTypeIMappingOptions">
            <summary>Establecer el shim de TypeMapFactory.GetTypeInfo(Type type, IMappingOptions mappingOptions)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory.MapDestinationCtorToSourceTypeMapConstructorInfoTypeInfoIMappingOptions">
            <summary>Establecer el shim de TypeMapFactory.MapDestinationCtorToSource(TypeMap typeMap, ConstructorInfo destCtor, TypeInfo sourceTypeInfo, IMappingOptions options)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory.MapDestinationPropertyToSourceLinkedListOfMemberInfoTypeInfoStringIMappingOptions">
            <summary>Establecer el shim de TypeMapFactory.MapDestinationPropertyToSource(LinkedList`1&lt;MemberInfo&gt; resolvers, TypeInfo sourceType, String nameToSearch, IMappingOptions mappingOptions)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory.NameMatchesStringStringIMappingOptions">
            <summary>Establecer el shim de TypeMapFactory.NameMatches(String memberName, String nameToMatch, IMappingOptions mappingOptions)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory.PossibleNamesStringIEnumerableOfAliasedMemberIEnumerableOfMemberNameReplacerIEnumerableOfStringIEnumerableOfString">
            <summary>Establecer el shim de TypeMapFactory.PossibleNames(String memberName, IEnumerable`1&lt;AliasedMember&gt; aliases, IEnumerable`1&lt;MemberNameReplacer&gt; memberNameReplacers, IEnumerable`1&lt;String&gt; prefixes, IEnumerable`1&lt;String&gt; postfixes)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimTypeMapFactory.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory.AllInstances.CreateTypeMapTypeTypeIMappingOptionsMemberList">
            <summary>Establecer el shim de TypeMapFactory.CreateTypeMap(Type sourceType, Type destinationType, IMappingOptions options, MemberList memberList)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory.AllInstances.GetTypeInfoTypeFuncOfPropertyInfoBooleanFuncOfFieldInfoBooleanIEnumerableOfMethodInfo">
            <summary>Establecer el shim de TypeMapFactory.GetTypeInfo(Type type, Func`2&lt;PropertyInfo,Boolean&gt; shouldMapProperty, Func`2&lt;FieldInfo,Boolean&gt; shouldMapField, IEnumerable`1&lt;MethodInfo&gt; extensionMethodsToSearch)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory.AllInstances.GetTypeInfoTypeIMappingOptions">
            <summary>Establecer el shim de TypeMapFactory.GetTypeInfo(Type type, IMappingOptions mappingOptions)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory.AllInstances.MapDestinationCtorToSourceTypeMapConstructorInfoTypeInfoIMappingOptions">
            <summary>Establecer el shim de TypeMapFactory.MapDestinationCtorToSource(TypeMap typeMap, ConstructorInfo destCtor, TypeInfo sourceTypeInfo, IMappingOptions options)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory.AllInstances.MapDestinationPropertyToSourceLinkedListOfMemberInfoTypeInfoStringIMappingOptions">
            <summary>Establecer el shim de TypeMapFactory.MapDestinationPropertyToSource(LinkedList`1&lt;MemberInfo&gt; resolvers, TypeInfo sourceType, String nameToSearch, IMappingOptions mappingOptions)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimValueResolver`2">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.ValueResolver`2</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimValueResolver`2.#ctor(AutoMapper.ValueResolver{`0,`1})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimValueResolver`2.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimValueResolver`2.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimValueResolver`2.Bind(AutoMapper.IValueResolver)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimValueResolver`2.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimValueResolver`2.Constructor">
            <summary>Establecer el shim de ValueResolver`2.ValueResolver`2()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimValueResolver`2.ResolveResolutionResult">
            <summary>Establecer el shim de ValueResolver`2.Resolve(ResolutionResult source)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimValueResolver`2.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimValueResolver`2.AllInstances.ResolveResolutionResult">
            <summary>Establecer el shim de ValueResolver`2.Resolve(ResolutionResult source)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubAliasedMember">
            <summary>Tipo stub de AutoMapper.AliasedMember</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAliasedMember.#ctor(System.String,System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAliasedMember.Equals(System.Object)">
            <summary>Establecer el stub de AliasedMember.Equals(Object obj)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAliasedMember.EqualsObject">
            <summary>Establecer el stub de AliasedMember.Equals(Object obj)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAliasedMember.GetHashCode">
            <summary>Establecer el stub de AliasedMember.GetHashCode()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAliasedMember.GetHashCode01">
            <summary>Establecer el stub de AliasedMember.GetHashCode()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAliasedMember.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubAliasedMember</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAliasedMember.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAliasedMember.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAliasedMember.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubAutoMapperConfigurationException">
            <summary>Tipo stub de AutoMapper.AutoMapperConfigurationException</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperConfigurationException.#ctor(AutoMapper.ResolutionContext)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperConfigurationException.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperConfigurationException.#ctor(AutoMapper.AutoMapperConfigurationException.TypeMapConfigErrors[])">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperConfigurationException.#ctor(System.String,System.Exception)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperConfigurationException.AttachBackingFieldToHelpLink">
            <summary>Asocia delegados para emular StubAutoMapperConfigurationException.HelpLink como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperConfigurationException.AttachBackingFieldToSource">
            <summary>Asocia delegados para emular StubAutoMapperConfigurationException.Source como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperConfigurationException.DataGet">
            <summary>Establecer el stub de Exception.get_Data()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperConfigurationException.GetBaseException">
            <summary>Establecer el stub de Exception.GetBaseException()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperConfigurationException.GetBaseException01">
            <summary>Establecer el stub de Exception.GetBaseException()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperConfigurationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Establecer el stub de Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperConfigurationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Establecer el stub de Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperConfigurationException.HelpLinkGet">
            <summary>Establecer el stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperConfigurationException.HelpLinkSetString">
            <summary>Establecer el stub de Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperConfigurationException.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubAutoMapperConfigurationException</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperConfigurationException.MessageGet">
            <summary>Establecer el stub de AutoMapperConfigurationException.get_Message()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperConfigurationException.SourceGet">
            <summary>Establecer el stub de Exception.get_Source()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperConfigurationException.SourceSetString">
            <summary>Establecer el stub de Exception.set_Source(String value)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperConfigurationException.StackTraceGet">
            <summary>Establecer el stub de AutoMapperConfigurationException.get_StackTrace()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperConfigurationException.ToString">
            <summary>Establecer el stub de Exception.ToString()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperConfigurationException.ToString01">
            <summary>Establecer el stub de Exception.ToString()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperConfigurationException.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperConfigurationException.Data">
            <summary>Establecer el stub de Exception.get_Data()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperConfigurationException.HelpLink">
            <summary>Establecer el stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperConfigurationException.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperConfigurationException.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperConfigurationException.Message">
            <summary>Establecer el stub de AutoMapperConfigurationException.get_Message()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperConfigurationException.Source">
            <summary>Establecer el stub de Exception.get_Source()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperConfigurationException.StackTrace">
            <summary>Establecer el stub de AutoMapperConfigurationException.get_StackTrace()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubAutoMapperMappingException">
            <summary>Tipo stub de AutoMapper.AutoMapperMappingException</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperMappingException.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperMappingException.#ctor(AutoMapper.ResolutionContext)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperMappingException.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperMappingException.#ctor(AutoMapper.ResolutionContext,System.Exception)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperMappingException.#ctor(AutoMapper.ResolutionContext,System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperMappingException.#ctor(System.String,System.Exception)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperMappingException.AttachBackingFieldToHelpLink">
            <summary>Asocia delegados para emular StubAutoMapperMappingException.HelpLink como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperMappingException.AttachBackingFieldToSource">
            <summary>Asocia delegados para emular StubAutoMapperMappingException.Source como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperMappingException.DataGet">
            <summary>Establecer el stub de Exception.get_Data()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperMappingException.GetBaseException">
            <summary>Establecer el stub de Exception.GetBaseException()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperMappingException.GetBaseException01">
            <summary>Establecer el stub de Exception.GetBaseException()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperMappingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Establecer el stub de Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperMappingException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Establecer el stub de Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperMappingException.HelpLinkGet">
            <summary>Establecer el stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperMappingException.HelpLinkSetString">
            <summary>Establecer el stub de Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperMappingException.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubAutoMapperMappingException</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperMappingException.MessageGet">
            <summary>Establecer el stub de AutoMapperMappingException.get_Message()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperMappingException.SourceGet">
            <summary>Establecer el stub de Exception.get_Source()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperMappingException.SourceSetString">
            <summary>Establecer el stub de Exception.set_Source(String value)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperMappingException.StackTraceGet">
            <summary>Establecer el stub de AutoMapperMappingException.get_StackTrace()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperMappingException.ToString">
            <summary>Establecer el stub de Exception.ToString()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperMappingException.ToString01">
            <summary>Establecer el stub de Exception.ToString()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperMappingException.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperMappingException.Data">
            <summary>Establecer el stub de Exception.get_Data()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperMappingException.HelpLink">
            <summary>Establecer el stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperMappingException.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperMappingException.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperMappingException.Message">
            <summary>Establecer el stub de AutoMapperMappingException.get_Message()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperMappingException.Source">
            <summary>Establecer el stub de Exception.get_Source()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperMappingException.StackTrace">
            <summary>Establecer el stub de AutoMapperMappingException.get_StackTrace()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubConfigurationStore">
            <summary>Tipo stub de AutoMapper.ConfigurationStore</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubConfigurationStore.#ctor(AutoMapper.ITypeMapFactory,System.Collections.Generic.IEnumerable{AutoMapper.IObjectMapper})">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubConfigurationStore.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubConfigurationStore</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubConfigurationStore.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubConfigurationStore.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubConfigurationStore.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubConstructorMap">
            <summary>Tipo stub de AutoMapper.ConstructorMap</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubConstructorMap.#ctor(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{AutoMapper.ConstructorParameterMap})">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubConstructorMap.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubConstructorMap</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubConstructorMap.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubConstructorMap.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubConstructorMap.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubConstructorParameterMap">
            <summary>Tipo stub de AutoMapper.ConstructorParameterMap</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubConstructorParameterMap.#ctor(System.Reflection.ParameterInfo,AutoMapper.IMemberGetter[],System.Boolean)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubConstructorParameterMap.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubConstructorParameterMap</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubConstructorParameterMap.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubConstructorParameterMap.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubConstructorParameterMap.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubCtorParamConfigurationExpression`1">
            <summary>Tipo stub de AutoMapper.CtorParamConfigurationExpression`1</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubCtorParamConfigurationExpression`1.#ctor(AutoMapper.ConstructorParameterMap)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubCtorParamConfigurationExpression`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubCtorParamConfigurationExpression</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubCtorParamConfigurationExpression`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubCtorParamConfigurationExpression`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubCtorParamConfigurationExpression`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIConfiguration">
            <summary>Tipo stub de AutoMapper.IConfiguration</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.#ctor">
            <summary>Inicializa una nueva instancia de type StubIConfiguration</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.AddGlobalIgnoreString">
            <summary>Establecer el stub de IProfileExpression.AddGlobalIgnore(String propertyNameStartingWith)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.AddProfileOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Establecer stubs de AddProfile()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.AddProfileProfile">
            <summary>Establecer el stub de IConfiguration.AddProfile(Profile profile)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.AllowNullCollectionsGet">
            <summary>Establecer el stub de IProfileExpression.get_AllowNullCollections()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.AllowNullCollectionsSetBoolean">
            <summary>Establecer el stub de IProfileExpression.set_AllowNullCollections(Boolean value)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.AllowNullDestinationValuesGet">
            <summary>Establecer el stub de IProfileExpression.get_AllowNullDestinationValues()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.AllowNullDestinationValuesSetBoolean">
            <summary>Establecer el stub de IProfileExpression.set_AllowNullDestinationValues(Boolean value)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.AttachBackingFieldToAllowNullCollections">
            <summary>Asocia delegados para emular StubIConfiguration.AllowNullCollections como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.AttachBackingFieldToAllowNullDestinationValues">
            <summary>Asocia delegados para emular StubIConfiguration.AllowNullDestinationValues como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.AttachBackingFieldToDestinationMemberNamingConvention">
            <summary>Asocia delegados para emular StubIConfiguration.DestinationMemberNamingConvention como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.AttachBackingFieldToShouldMapField">
            <summary>Asocia delegados para emular StubIConfiguration.ShouldMapField como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.AttachBackingFieldToShouldMapProperty">
            <summary>Asocia delegados para emular StubIConfiguration.ShouldMapProperty como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.AttachBackingFieldToSourceMemberNamingConvention">
            <summary>Asocia delegados para emular StubIConfiguration.SourceMemberNamingConvention como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IConfiguration#AddProfile``1">
            <summary>Establecer el stub de IConfiguration.AddProfile()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IConfiguration#AddProfile(AutoMapper.Profile)">
            <summary>Establecer el stub de IConfiguration.AddProfile(Profile profile)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IConfiguration#ConstructServicesUsing(System.Func{System.Type,System.Object})">
            <summary>Establecer el stub de IConfiguration.ConstructServicesUsing(Func`2&lt;Type,Object&gt; constructor)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IConfiguration#CreateProfile(System.String)">
            <summary>Establecer el stub de IConfiguration.CreateProfile(String profileName)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IConfiguration#CreateProfile(System.String,System.Action{AutoMapper.IProfileExpression})">
            <summary>Establecer el stub de IConfiguration.CreateProfile(String profileName, Action`1&lt;IProfileExpression&gt; profileConfiguration)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IConfiguration#DisableConstructorMapping">
            <summary>Establecer el stub de IConfiguration.DisableConstructorMapping()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IConfiguration#EnableYieldReturnForDataReaderMapper">
            <summary>Establecer el stub de IConfiguration.EnableYieldReturnForDataReaderMapper()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IConfiguration#Seal">
            <summary>Establecer el stub de IConfiguration.Seal()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#AddGlobalIgnore(System.String)">
            <summary>Establecer el stub de IProfileExpression.AddGlobalIgnore(String propertyNameStartingWith)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#ClearPrefixes">
            <summary>Establecer el stub de IProfileExpression.ClearPrefixes()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#CreateMap(System.Type,System.Type)">
            <summary>Establecer el stub de IProfileExpression.CreateMap(Type sourceType, Type destinationType)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
            <summary>Establecer el stub de IProfileExpression.CreateMap(Type sourceType, Type destinationType, MemberList memberList)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#CreateMap``2">
            <summary>Establecer el stub de IProfileExpression.CreateMap()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#CreateMap``2(AutoMapper.MemberList)">
            <summary>Establecer el stub de IProfileExpression.CreateMap(MemberList memberList)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#IncludeSourceExtensionMethods(System.Reflection.Assembly)">
            <summary>Establecer el stub de IProfileExpression.IncludeSourceExtensionMethods(Assembly assembly)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#RecognizeAlias(System.String,System.String)">
            <summary>Establecer el stub de IProfileExpression.RecognizeAlias(String original, String alias)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#RecognizeDestinationPostfixes(System.String[])">
            <summary>Establecer el stub de IProfileExpression.RecognizeDestinationPostfixes(String[] postfixes)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#RecognizeDestinationPrefixes(System.String[])">
            <summary>Establecer el stub de IProfileExpression.RecognizeDestinationPrefixes(String[] prefixes)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#RecognizePostfixes(System.String[])">
            <summary>Establecer el stub de IProfileExpression.RecognizePostfixes(String[] postfixes)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#RecognizePrefixes(System.String[])">
            <summary>Establecer el stub de IProfileExpression.RecognizePrefixes(String[] prefixes)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#ReplaceMemberName(System.String,System.String)">
            <summary>Establecer el stub de IProfileExpression.ReplaceMemberName(String original, String newValue)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.ClearPrefixes">
            <summary>Establecer el stub de IProfileExpression.ClearPrefixes()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.ConstructServicesUsingFuncOfTypeObject">
            <summary>Establecer el stub de IConfiguration.ConstructServicesUsing(Func`2&lt;Type,Object&gt; constructor)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.CreateMapOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IMappingExpression{``0,``1}})">
            <summary>Establecer stubs de CreateMap()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.CreateMapOf2MemberList``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MemberList,AutoMapper.IMappingExpression{``0,``1}})">
            <summary>Establecer stubs de CreateMap(MemberList memberList)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.CreateMapTypeType">
            <summary>Establecer el stub de IProfileExpression.CreateMap(Type sourceType, Type destinationType)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.CreateMapTypeTypeMemberList">
            <summary>Establecer el stub de IProfileExpression.CreateMap(Type sourceType, Type destinationType, MemberList memberList)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.CreateProfileString">
            <summary>Establecer el stub de IConfiguration.CreateProfile(String profileName)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.CreateProfileStringActionOfIProfileExpression">
            <summary>Establecer el stub de IConfiguration.CreateProfile(String profileName, Action`1&lt;IProfileExpression&gt; profileConfiguration)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.DestinationMemberNamingConventionGet">
            <summary>Establecer el stub de IProfileExpression.get_DestinationMemberNamingConvention()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.DestinationMemberNamingConventionSetINamingConvention">
            <summary>Establecer el stub de IProfileExpression.set_DestinationMemberNamingConvention(INamingConvention value)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.DisableConstructorMapping">
            <summary>Establecer el stub de IConfiguration.DisableConstructorMapping()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.EnableYieldReturnForDataReaderMapper">
            <summary>Establecer el stub de IConfiguration.EnableYieldReturnForDataReaderMapper()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.IncludeSourceExtensionMethodsAssembly">
            <summary>Establecer el stub de IProfileExpression.IncludeSourceExtensionMethods(Assembly assembly)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.RecognizeAliasStringString">
            <summary>Establecer el stub de IProfileExpression.RecognizeAlias(String original, String alias)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.RecognizeDestinationPostfixesStringArray">
            <summary>Establecer el stub de IProfileExpression.RecognizeDestinationPostfixes(String[] postfixes)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.RecognizeDestinationPrefixesStringArray">
            <summary>Establecer el stub de IProfileExpression.RecognizeDestinationPrefixes(String[] prefixes)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.RecognizePostfixesStringArray">
            <summary>Establecer el stub de IProfileExpression.RecognizePostfixes(String[] postfixes)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.RecognizePrefixesStringArray">
            <summary>Establecer el stub de IProfileExpression.RecognizePrefixes(String[] prefixes)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.ReplaceMemberNameStringString">
            <summary>Establecer el stub de IProfileExpression.ReplaceMemberName(String original, String newValue)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.Seal">
            <summary>Establecer el stub de IConfiguration.Seal()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.ShouldMapFieldGet">
            <summary>Establecer el stub de IProfileExpression.get_ShouldMapField()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.ShouldMapFieldSetFuncOfFieldInfoBoolean">
            <summary>Establecer el stub de IProfileExpression.set_ShouldMapField(Func`2&lt;FieldInfo,Boolean&gt; value)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.ShouldMapPropertyGet">
            <summary>Establecer el stub de IProfileExpression.get_ShouldMapProperty()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.ShouldMapPropertySetFuncOfPropertyInfoBoolean">
            <summary>Establecer el stub de IProfileExpression.set_ShouldMapProperty(Func`2&lt;PropertyInfo,Boolean&gt; value)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.SourceMemberNamingConventionGet">
            <summary>Establecer el stub de IProfileExpression.get_SourceMemberNamingConvention()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.SourceMemberNamingConventionSetINamingConvention">
            <summary>Establecer el stub de IProfileExpression.set_SourceMemberNamingConvention(INamingConvention value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#AllowNullCollections">
            <summary>Establecer el stub de IProfileExpression.get_AllowNullCollections()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#AllowNullDestinationValues">
            <summary>Establecer el stub de IProfileExpression.get_AllowNullDestinationValues()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#DestinationMemberNamingConvention">
            <summary>Establecer el stub de IProfileExpression.get_DestinationMemberNamingConvention()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#ShouldMapField">
            <summary>Establecer el stub de IProfileExpression.get_ShouldMapField()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#ShouldMapProperty">
            <summary>Establecer el stub de IProfileExpression.get_ShouldMapProperty()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#SourceMemberNamingConvention">
            <summary>Establecer el stub de IProfileExpression.get_SourceMemberNamingConvention()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIConfigurationProvider">
            <summary>Tipo stub de AutoMapper.IConfigurationProvider</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.#ctor">
            <summary>Inicializa una nueva instancia de type StubIConfigurationProvider</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.AssertConfigurationIsValid">
            <summary>Establecer el stub de IConfigurationProvider.AssertConfigurationIsValid()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.AssertConfigurationIsValidOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Establecer stubs de AssertConfigurationIsValid()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.AssertConfigurationIsValidString">
            <summary>Establecer el stub de IConfigurationProvider.AssertConfigurationIsValid(String profileName)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.AssertConfigurationIsValidTypeMap">
            <summary>Establecer el stub de IConfigurationProvider.AssertConfigurationIsValid(TypeMap typeMap)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IConfigurationProvider#AssertConfigurationIsValid">
            <summary>Establecer el stub de IConfigurationProvider.AssertConfigurationIsValid()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IConfigurationProvider#AssertConfigurationIsValid``1">
            <summary>Establecer el stub de IConfigurationProvider.AssertConfigurationIsValid()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IConfigurationProvider#AssertConfigurationIsValid(AutoMapper.TypeMap)">
            <summary>Establecer el stub de IConfigurationProvider.AssertConfigurationIsValid(TypeMap typeMap)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IConfigurationProvider#AssertConfigurationIsValid(System.String)">
            <summary>Establecer el stub de IConfigurationProvider.AssertConfigurationIsValid(String profileName)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IConfigurationProvider#CreateTypeMap(System.Type,System.Type)">
            <summary>Establecer el stub de IConfigurationProvider.CreateTypeMap(Type sourceType, Type destinationType)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IConfigurationProvider#FindClosedGenericTypeMapFor(AutoMapper.ResolutionContext)">
            <summary>Establecer el stub de IConfigurationProvider.FindClosedGenericTypeMapFor(ResolutionContext context)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IConfigurationProvider#FindTypeMapFor(AutoMapper.Impl.TypePair)">
            <summary>Establecer el stub de IConfigurationProvider.FindTypeMapFor(TypePair typePair)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IConfigurationProvider#FindTypeMapFor(System.Type,System.Type)">
            <summary>Establecer el stub de IConfigurationProvider.FindTypeMapFor(Type sourceType, Type destinationType)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IConfigurationProvider#GetAllTypeMaps">
            <summary>Establecer el stub de IConfigurationProvider.GetAllTypeMaps()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IConfigurationProvider#GetMappers">
            <summary>Establecer el stub de IConfigurationProvider.GetMappers()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IConfigurationProvider#GetProfileConfiguration(System.String)">
            <summary>Establecer el stub de IConfigurationProvider.GetProfileConfiguration(String profileName)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IConfigurationProvider#HasOpenGenericTypeMapDefined(AutoMapper.ResolutionContext)">
            <summary>Establecer el stub de IConfigurationProvider.HasOpenGenericTypeMapDefined(ResolutionContext context)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IConfigurationProvider#ResolveTypeMap(AutoMapper.Impl.TypePair)">
            <summary>Establecer el stub de IConfigurationProvider.ResolveTypeMap(TypePair typePair)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IConfigurationProvider#ResolveTypeMap(AutoMapper.ResolutionResult,System.Type)">
            <summary>Establecer el stub de IConfigurationProvider.ResolveTypeMap(ResolutionResult resolutionResult, Type destinationType)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IConfigurationProvider#ResolveTypeMap(System.Type,System.Type)">
            <summary>Establecer el stub de IConfigurationProvider.ResolveTypeMap(Type sourceType, Type destinationType)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IConfigurationProvider#ResolveTypeMap(System.Object,System.Object,System.Type,System.Type)">
            <summary>Establecer el stub de IConfigurationProvider.ResolveTypeMap(Object source, Object destination, Type sourceType, Type destinationType)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.CreateTypeMapTypeType">
            <summary>Establecer el stub de IConfigurationProvider.CreateTypeMap(Type sourceType, Type destinationType)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.FindClosedGenericTypeMapForResolutionContext">
            <summary>Establecer el stub de IConfigurationProvider.FindClosedGenericTypeMapFor(ResolutionContext context)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.FindTypeMapForTypePair">
            <summary>Establecer el stub de IConfigurationProvider.FindTypeMapFor(TypePair typePair)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.FindTypeMapForTypeType">
            <summary>Establecer el stub de IConfigurationProvider.FindTypeMapFor(Type sourceType, Type destinationType)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.GetAllTypeMaps">
            <summary>Establecer el stub de IConfigurationProvider.GetAllTypeMaps()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.GetMappers">
            <summary>Establecer el stub de IConfigurationProvider.GetMappers()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.GetProfileConfigurationString">
            <summary>Establecer el stub de IConfigurationProvider.GetProfileConfiguration(String profileName)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.HasOpenGenericTypeMapDefinedResolutionContext">
            <summary>Establecer el stub de IConfigurationProvider.HasOpenGenericTypeMapDefined(ResolutionContext context)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.MapNullSourceCollectionsAsNullGet">
            <summary>Establecer el stub de IProfileConfiguration.get_MapNullSourceCollectionsAsNull()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.MapNullSourceValuesAsNullGet">
            <summary>Establecer el stub de IProfileConfiguration.get_MapNullSourceValuesAsNull()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.ResolveTypeMapObjectObjectTypeType">
            <summary>Establecer el stub de IConfigurationProvider.ResolveTypeMap(Object source, Object destination, Type sourceType, Type destinationType)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.ResolveTypeMapResolutionResultType">
            <summary>Establecer el stub de IConfigurationProvider.ResolveTypeMap(ResolutionResult resolutionResult, Type destinationType)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.ResolveTypeMapTypePair">
            <summary>Establecer el stub de IConfigurationProvider.ResolveTypeMap(TypePair typePair)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.ResolveTypeMapTypeType">
            <summary>Establecer el stub de IConfigurationProvider.ResolveTypeMap(Type sourceType, Type destinationType)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.ServiceCtorGet">
            <summary>Establecer el stub de IConfigurationProvider.get_ServiceCtor()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IProfileConfiguration#MapNullSourceCollectionsAsNull">
            <summary>Establecer el stub de IProfileConfiguration.get_MapNullSourceCollectionsAsNull()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IProfileConfiguration#MapNullSourceValuesAsNull">
            <summary>Establecer el stub de IProfileConfiguration.get_MapNullSourceValuesAsNull()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IConfigurationProvider#ServiceCtor">
            <summary>Establecer el stub de IConfigurationProvider.get_ServiceCtor()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubICtorParamConfigurationExpression`1">
            <summary>Tipo stub de AutoMapper.ICtorParamConfigurationExpression`1</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubICtorParamConfigurationExpression`1.#ctor">
            <summary>Inicializa una nueva instancia de type StubICtorParamConfigurationExpression</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubICtorParamConfigurationExpression`1.am::AutoMapper#ICtorParamConfigurationExpression{TSource}#MapFrom``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de ICtorParamConfigurationExpression`1.MapFrom(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; sourceMember)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubICtorParamConfigurationExpression`1.MapFromOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Linq.Expressions.Expression{System.Func{`0,``0}}})">
            <summary>Establecer stubs de MapFrom(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; sourceMember)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIMappingAction`2">
            <summary>Tipo stub de AutoMapper.IMappingAction`2</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingAction`2.#ctor">
            <summary>Inicializa una nueva instancia de type StubIMappingAction</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingAction`2.am::AutoMapper#IMappingAction{TSource@TDestination}#Process(`0,`1)">
            <summary>Establecer el stub de IMappingAction`2.Process(!0 source, !1 destination)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingAction`2.ProcessT0T1">
            <summary>Establecer el stub de IMappingAction`2.Process(!0 source, !1 destination)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIMappingEngine">
            <summary>Tipo stub de AutoMapper.IMappingEngine</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.#ctor">
            <summary>Inicializa una nueva instancia de type StubIMappingEngine</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#CreateMapExpression(System.Type,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])">
            <summary>Establecer el stub de IMappingEngine.CreateMapExpression(Type sourceType, Type destinationType, IDictionary`2&lt;String,Object&gt; parameters, String[] membersToExpand)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#DynamicMap``2(``0,``1)">
            <summary>Establecer el stub de IMappingEngine.DynamicMap(!!0 source, !!1 destination)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#DynamicMap(System.Object,System.Object,System.Type,System.Type)">
            <summary>Establecer el stub de IMappingEngine.DynamicMap(Object source, Object destination, Type sourceType, Type destinationType)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#DynamicMap(System.Object,System.Type,System.Type)">
            <summary>Establecer el stub de IMappingEngine.DynamicMap(Object source, Type sourceType, Type destinationType)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#DynamicMap``1(System.Object)">
            <summary>Establecer el stub de IMappingEngine.DynamicMap(Object source)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#DynamicMap``2(``0)">
            <summary>Establecer el stub de IMappingEngine.DynamicMap(!!0 source)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#Map(System.Object,System.Object,System.Type,System.Type,System.Action{AutoMapper.IMappingOperationOptions})">
            <summary>Establecer el stub de IMappingEngine.Map(Object source, Object destination, Type sourceType, Type destinationType, Action`1&lt;IMappingOperationOptions&gt; opts)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#Map``1(System.Object)">
            <summary>Establecer el stub de IMappingEngine.Map(Object source)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#Map(System.Object,System.Type,System.Type)">
            <summary>Establecer el stub de IMappingEngine.Map(Object source, Type sourceType, Type destinationType)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#Map(System.Object,System.Type,System.Type,System.Action{AutoMapper.IMappingOperationOptions})">
            <summary>Establecer el stub de IMappingEngine.Map(Object source, Type sourceType, Type destinationType, Action`1&lt;IMappingOperationOptions&gt; opts)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#Map``1(System.Object,System.Action{AutoMapper.IMappingOperationOptions})">
            <summary>Establecer el stub de IMappingEngine.Map(Object source, Action`1&lt;IMappingOperationOptions&gt; opts)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#Map``2(``0)">
            <summary>Establecer el stub de IMappingEngine.Map(!!0 source)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#Map``2(``0,System.Action{AutoMapper.IMappingOperationOptions{``0,``1}})">
            <summary>Establecer el stub de IMappingEngine.Map(!!0 source, Action`1&lt;IMappingOperationOptions`2&lt;!!0,!!1&gt;&gt; opts)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#Map(System.Object,System.Object,System.Type,System.Type)">
            <summary>Establecer el stub de IMappingEngine.Map(Object source, Object destination, Type sourceType, Type destinationType)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#Map``2(``0,``1)">
            <summary>Establecer el stub de IMappingEngine.Map(!!0 source, !!1 destination)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#Map``2(``0,``1,System.Action{AutoMapper.IMappingOperationOptions{``0,``1}})">
            <summary>Establecer el stub de IMappingEngine.Map(!!0 source, !!1 destination, Action`1&lt;IMappingOperationOptions`2&lt;!!0,!!1&gt;&gt; opts)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingEngine.ConfigurationProviderGet">
            <summary>Establecer el stub de IMappingEngine.get_ConfigurationProvider()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingEngine.CreateMapExpressionTypeTypeIDictionaryOfStringObjectStringArray">
            <summary>Establecer el stub de IMappingEngine.CreateMapExpression(Type sourceType, Type destinationType, IDictionary`2&lt;String,Object&gt; parameters, String[] membersToExpand)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingEngine.Dispose">
            <summary>Establecer el stub de IDisposable.Dispose()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingEngine.DynamicMapObjectObjectTypeType">
            <summary>Establecer el stub de IMappingEngine.DynamicMap(Object source, Object destination, Type sourceType, Type destinationType)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingEngine.DynamicMapObjectTypeType">
            <summary>Establecer el stub de IMappingEngine.DynamicMap(Object source, Type sourceType, Type destinationType)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.DynamicMapOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Establecer stubs de DynamicMap(Object source)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.DynamicMapOf2M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1})">
            <summary>Establecer stubs de DynamicMap(!!0 source)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.DynamicMapOf2M0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,``1})">
            <summary>Establecer stubs de DynamicMap(!!0 source, !!1 destination)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingEngine.MapObjectObjectTypeType">
            <summary>Establecer el stub de IMappingEngine.Map(Object source, Object destination, Type sourceType, Type destinationType)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingEngine.MapObjectObjectTypeTypeActionOfIMappingOperationOptions">
            <summary>Establecer el stub de IMappingEngine.Map(Object source, Object destination, Type sourceType, Type destinationType, Action`1&lt;IMappingOperationOptions&gt; opts)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingEngine.MapObjectTypeType">
            <summary>Establecer el stub de IMappingEngine.Map(Object source, Type sourceType, Type destinationType)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingEngine.MapObjectTypeTypeActionOfIMappingOperationOptions">
            <summary>Establecer el stub de IMappingEngine.Map(Object source, Type sourceType, Type destinationType, Action`1&lt;IMappingOperationOptions&gt; opts)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.MapOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Establecer stubs de Map(Object source)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.MapOf1ObjectActionOfIMappingOperationOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Action{AutoMapper.IMappingOperationOptions},``0})">
            <summary>Establecer stubs de Map(Object source, Action`1&lt;IMappingOperationOptions&gt; opts)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.MapOf2M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1})">
            <summary>Establecer stubs de Map(!!0 source)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.MapOf2M0ActionOfIMappingOperationOptionsOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Action{AutoMapper.IMappingOperationOptions{``0,``1}},``1})">
            <summary>Establecer stubs de Map(!!0 source, Action`1&lt;IMappingOperationOptions`2&lt;!!0,!!1&gt;&gt; opts)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.MapOf2M0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,``1})">
            <summary>Establecer stubs de Map(!!0 source, !!1 destination)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.MapOf2M0M1ActionOfIMappingOperationOptionsOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,System.Action{AutoMapper.IMappingOperationOptions{``0,``1}},``1})">
            <summary>Establecer stubs de Map(!!0 source, !!1 destination, Action`1&lt;IMappingOperationOptions`2&lt;!!0,!!1&gt;&gt; opts)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.global::System#IDisposable#Dispose">
            <summary>Establecer el stub de IDisposable.Dispose()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#ConfigurationProvider">
            <summary>Establecer el stub de IMappingEngine.get_ConfigurationProvider()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIMappingEngineRunner">
            <summary>Tipo stub de AutoMapper.IMappingEngineRunner</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngineRunner.#ctor">
            <summary>Inicializa una nueva instancia de type StubIMappingEngineRunner</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngineRunner.am::AutoMapper#IMappingEngineRunner#CreateMapExpression(AutoMapper.QueryableExtensions.ExpressionRequest,System.Linq.Expressions.Expression,AutoMapper.Internal.IDictionary{AutoMapper.QueryableExtensions.ExpressionRequest,System.Int32})">
            <summary>Establecer el stub de IMappingEngineRunner.CreateMapExpression(ExpressionRequest request, Expression instanceParameter, IDictionary`2&lt;ExpressionRequest,Int32&gt; typePairCount)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngineRunner.am::AutoMapper#IMappingEngineRunner#CreateMapExpression(AutoMapper.QueryableExtensions.ExpressionRequest,AutoMapper.Internal.IDictionary{AutoMapper.QueryableExtensions.ExpressionRequest,System.Int32})">
            <summary>Establecer el stub de IMappingEngineRunner.CreateMapExpression(ExpressionRequest request, IDictionary`2&lt;ExpressionRequest,Int32&gt; typePairCount)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngineRunner.am::AutoMapper#IMappingEngineRunner#CreateObject(AutoMapper.ResolutionContext)">
            <summary>Establecer el stub de IMappingEngineRunner.CreateObject(ResolutionContext context)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngineRunner.am::AutoMapper#IMappingEngineRunner#Map(AutoMapper.ResolutionContext)">
            <summary>Establecer el stub de IMappingEngineRunner.Map(ResolutionContext context)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngineRunner.am::AutoMapper#IMappingEngineRunner#ShouldMapSourceCollectionAsNull(AutoMapper.ResolutionContext)">
            <summary>Establecer el stub de IMappingEngineRunner.ShouldMapSourceCollectionAsNull(ResolutionContext context)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngineRunner.am::AutoMapper#IMappingEngineRunner#ShouldMapSourceValueAsNull(AutoMapper.ResolutionContext)">
            <summary>Establecer el stub de IMappingEngineRunner.ShouldMapSourceValueAsNull(ResolutionContext context)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingEngineRunner.ConfigurationProviderGet">
            <summary>Establecer el stub de IMappingEngineRunner.get_ConfigurationProvider()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingEngineRunner.CreateMapExpressionExpressionRequestExpressionIDictionaryOfExpressionRequestInt32">
            <summary>Establecer el stub de IMappingEngineRunner.CreateMapExpression(ExpressionRequest request, Expression instanceParameter, IDictionary`2&lt;ExpressionRequest,Int32&gt; typePairCount)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingEngineRunner.CreateMapExpressionExpressionRequestIDictionaryOfExpressionRequestInt32">
            <summary>Establecer el stub de IMappingEngineRunner.CreateMapExpression(ExpressionRequest request, IDictionary`2&lt;ExpressionRequest,Int32&gt; typePairCount)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingEngineRunner.CreateObjectResolutionContext">
            <summary>Establecer el stub de IMappingEngineRunner.CreateObject(ResolutionContext context)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingEngineRunner.MapResolutionContext">
            <summary>Establecer el stub de IMappingEngineRunner.Map(ResolutionContext context)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingEngineRunner.ShouldMapSourceCollectionAsNullResolutionContext">
            <summary>Establecer el stub de IMappingEngineRunner.ShouldMapSourceCollectionAsNull(ResolutionContext context)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingEngineRunner.ShouldMapSourceValueAsNullResolutionContext">
            <summary>Establecer el stub de IMappingEngineRunner.ShouldMapSourceValueAsNull(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingEngineRunner.am::AutoMapper#IMappingEngineRunner#ConfigurationProvider">
            <summary>Establecer el stub de IMappingEngineRunner.get_ConfigurationProvider()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIMappingExpression">
            <summary>Tipo stub de AutoMapper.IMappingExpression</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression.#ctor">
            <summary>Inicializa una nueva instancia de type StubIMappingExpression</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression.AsType">
            <summary>Establecer el stub de IMappingExpression.As(Type typeOverride)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression.am::AutoMapper#IMappingExpression#As(System.Type)">
            <summary>Establecer el stub de IMappingExpression.As(Type typeOverride)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression.am::AutoMapper#IMappingExpression#ConvertUsing``1">
            <summary>Establecer el stub de IMappingExpression.ConvertUsing()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression.am::AutoMapper#IMappingExpression#ConvertUsing(System.Type)">
            <summary>Establecer el stub de IMappingExpression.ConvertUsing(Type typeConverterType)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression.am::AutoMapper#IMappingExpression#ForMember(System.String,System.Action{AutoMapper.IMemberConfigurationExpression})">
            <summary>Establecer el stub de IMappingExpression.ForMember(String name, Action`1&lt;IMemberConfigurationExpression&gt; memberOptions)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression.am::AutoMapper#IMappingExpression#ForSourceMember(System.String,System.Action{AutoMapper.ISourceMemberConfigurationExpression})">
            <summary>Establecer el stub de IMappingExpression.ForSourceMember(String sourceMemberName, Action`1&lt;ISourceMemberConfigurationExpression&gt; memberOptions)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression.am::AutoMapper#IMappingExpression#WithProfile(System.String)">
            <summary>Establecer el stub de IMappingExpression.WithProfile(String profileName)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression.ConvertUsingOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Establecer stubs de ConvertUsing()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression.ConvertUsingType">
            <summary>Establecer el stub de IMappingExpression.ConvertUsing(Type typeConverterType)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression.ForMemberStringActionOfIMemberConfigurationExpression">
            <summary>Establecer el stub de IMappingExpression.ForMember(String name, Action`1&lt;IMemberConfigurationExpression&gt; memberOptions)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression.ForSourceMemberStringActionOfISourceMemberConfigurationExpression">
            <summary>Establecer el stub de IMappingExpression.ForSourceMember(String sourceMemberName, Action`1&lt;ISourceMemberConfigurationExpression&gt; memberOptions)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression.WithProfileString">
            <summary>Establecer el stub de IMappingExpression.WithProfile(String profileName)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIMappingExpression`2">
            <summary>Tipo stub de AutoMapper.IMappingExpression`2</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.#ctor">
            <summary>Inicializa una nueva instancia de type StubIMappingExpression</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.AfterMapActionOfT0T1">
            <summary>Establecer el stub de IMappingExpression`2.AfterMap(Action`2&lt;!0,!1&gt; afterFunction)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.AfterMapOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IMappingExpression{`0,`1}})">
            <summary>Establecer stubs de AfterMap()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.AsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Establecer stubs de As()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#AfterMap``1">
            <summary>Establecer el stub de IMappingExpression`2.AfterMap()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#AfterMap(System.Action{`0,`1})">
            <summary>Establecer el stub de IMappingExpression`2.AfterMap(Action`2&lt;!0,!1&gt; afterFunction)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#As``1">
            <summary>Establecer el stub de IMappingExpression`2.As()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#BeforeMap``1">
            <summary>Establecer el stub de IMappingExpression`2.BeforeMap()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#BeforeMap(System.Action{`0,`1})">
            <summary>Establecer el stub de IMappingExpression`2.BeforeMap(Action`2&lt;!0,!1&gt; beforeFunction)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#ConstructProjectionUsing(System.Linq.Expressions.Expression{System.Func{`0,`1}})">
            <summary>Establecer el stub de IMappingExpression`2.ConstructProjectionUsing(Expression`1&lt;Func`2&lt;!0,!1&gt;&gt; ctor)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#ConstructUsing(System.Func{AutoMapper.ResolutionContext,`1})">
            <summary>Establecer el stub de IMappingExpression`2.ConstructUsing(Func`2&lt;ResolutionContext,!1&gt; ctor)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#ConstructUsing(System.Func{`0,`1})">
            <summary>Establecer el stub de IMappingExpression`2.ConstructUsing(Func`2&lt;!0,!1&gt; ctor)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#ConstructUsingServiceLocator">
            <summary>Establecer el stub de IMappingExpression`2.ConstructUsingServiceLocator()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#ConvertUsing``1">
            <summary>Establecer el stub de IMappingExpression`2.ConvertUsing()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#ConvertUsing(AutoMapper.ITypeConverter{`0,`1})">
            <summary>Establecer el stub de IMappingExpression`2.ConvertUsing(ITypeConverter`2&lt;!0,!1&gt; converter)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#ConvertUsing(System.Func{`0,`1})">
            <summary>Establecer el stub de IMappingExpression`2.ConvertUsing(Func`2&lt;!0,!1&gt; mappingFunction)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#ForAllMembers(System.Action{AutoMapper.IMemberConfigurationExpression{`0}})">
            <summary>Establecer el stub de IMappingExpression`2.ForAllMembers(Action`1&lt;IMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#ForCtorParam(System.String,System.Action{AutoMapper.ICtorParamConfigurationExpression{`0}})">
            <summary>Establecer el stub de IMappingExpression`2.ForCtorParam(String ctorParamName, Action`1&lt;ICtorParamConfigurationExpression`1&lt;!0&gt;&gt; paramOptions)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#ForMember(System.Linq.Expressions.Expression{System.Func{`1,System.Object}},System.Action{AutoMapper.IMemberConfigurationExpression{`0}})">
            <summary>Establecer el stub de IMappingExpression`2.ForMember(Expression`1&lt;Func`2&lt;!1,Object&gt;&gt; destinationMember, Action`1&lt;IMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#ForMember(System.String,System.Action{AutoMapper.IMemberConfigurationExpression{`0}})">
            <summary>Establecer el stub de IMappingExpression`2.ForMember(String name, Action`1&lt;IMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#ForSourceMember(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{AutoMapper.ISourceMemberConfigurationExpression{`0}})">
            <summary>Establecer el stub de IMappingExpression`2.ForSourceMember(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; sourceMember, Action`1&lt;ISourceMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#ForSourceMember(System.String,System.Action{AutoMapper.ISourceMemberConfigurationExpression{`0}})">
            <summary>Establecer el stub de IMappingExpression`2.ForSourceMember(String sourceMemberName, Action`1&lt;ISourceMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#IgnoreAllPropertiesWithAnInaccessibleSetter">
            <summary>Establecer el stub de IMappingExpression`2.IgnoreAllPropertiesWithAnInaccessibleSetter()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#IgnoreAllSourcePropertiesWithAnInaccessibleSetter">
            <summary>Establecer el stub de IMappingExpression`2.IgnoreAllSourcePropertiesWithAnInaccessibleSetter()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#Include``2">
            <summary>Establecer el stub de IMappingExpression`2.Include()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#Include(System.Type,System.Type)">
            <summary>Establecer el stub de IMappingExpression`2.Include(Type derivedSourceType, Type derivedDestinationType)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#IncludeBase``2">
            <summary>Establecer el stub de IMappingExpression`2.IncludeBase()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#MaxDepth(System.Int32)">
            <summary>Establecer el stub de IMappingExpression`2.MaxDepth(Int32 depth)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#ProjectUsing(System.Linq.Expressions.Expression{System.Func{`0,`1}})">
            <summary>Establecer el stub de IMappingExpression`2.ProjectUsing(Expression`1&lt;Func`2&lt;!0,!1&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#ReverseMap">
            <summary>Establecer el stub de IMappingExpression`2.ReverseMap()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#Substitute(System.Func{`0,System.Object})">
            <summary>Establecer el stub de IMappingExpression`2.Substitute(Func`2&lt;!0,Object&gt; substituteFunc)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#WithProfile(System.String)">
            <summary>Establecer el stub de IMappingExpression`2.WithProfile(String profileName)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.BeforeMapActionOfT0T1">
            <summary>Establecer el stub de IMappingExpression`2.BeforeMap(Action`2&lt;!0,!1&gt; beforeFunction)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.BeforeMapOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IMappingExpression{`0,`1}})">
            <summary>Establecer stubs de BeforeMap()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.ConstructProjectionUsingExpressionOfFuncOfT0T1">
            <summary>Establecer el stub de IMappingExpression`2.ConstructProjectionUsing(Expression`1&lt;Func`2&lt;!0,!1&gt;&gt; ctor)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.ConstructUsingFuncOfResolutionContextT1">
            <summary>Establecer el stub de IMappingExpression`2.ConstructUsing(Func`2&lt;ResolutionContext,!1&gt; ctor)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.ConstructUsingFuncOfT0T1">
            <summary>Establecer el stub de IMappingExpression`2.ConstructUsing(Func`2&lt;!0,!1&gt; ctor)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.ConstructUsingServiceLocator">
            <summary>Establecer el stub de IMappingExpression`2.ConstructUsingServiceLocator()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.ConvertUsingFuncOfT0T1">
            <summary>Establecer el stub de IMappingExpression`2.ConvertUsing(Func`2&lt;!0,!1&gt; mappingFunction)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.ConvertUsingITypeConverterOfT0T1">
            <summary>Establecer el stub de IMappingExpression`2.ConvertUsing(ITypeConverter`2&lt;!0,!1&gt; converter)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.ConvertUsingOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Establecer stubs de ConvertUsing()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.ForAllMembersActionOfIMemberConfigurationExpressionOfT0">
            <summary>Establecer el stub de IMappingExpression`2.ForAllMembers(Action`1&lt;IMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.ForCtorParamStringActionOfICtorParamConfigurationExpressionOfT0">
            <summary>Establecer el stub de IMappingExpression`2.ForCtorParam(String ctorParamName, Action`1&lt;ICtorParamConfigurationExpression`1&lt;!0&gt;&gt; paramOptions)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.ForMemberExpressionOfFuncOfT1ObjectActionOfIMemberConfigurationExpressionOfT0">
            <summary>Establecer el stub de IMappingExpression`2.ForMember(Expression`1&lt;Func`2&lt;!1,Object&gt;&gt; destinationMember, Action`1&lt;IMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.ForMemberStringActionOfIMemberConfigurationExpressionOfT0">
            <summary>Establecer el stub de IMappingExpression`2.ForMember(String name, Action`1&lt;IMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.ForSourceMemberExpressionOfFuncOfT0ObjectActionOfISourceMemberConfigurationExpressionOfT0">
            <summary>Establecer el stub de IMappingExpression`2.ForSourceMember(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; sourceMember, Action`1&lt;ISourceMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.ForSourceMemberStringActionOfISourceMemberConfigurationExpressionOfT0">
            <summary>Establecer el stub de IMappingExpression`2.ForSourceMember(String sourceMemberName, Action`1&lt;ISourceMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.IgnoreAllPropertiesWithAnInaccessibleSetter">
            <summary>Establecer el stub de IMappingExpression`2.IgnoreAllPropertiesWithAnInaccessibleSetter()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.IgnoreAllSourcePropertiesWithAnInaccessibleSetter">
            <summary>Establecer el stub de IMappingExpression`2.IgnoreAllSourcePropertiesWithAnInaccessibleSetter()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.IncludeBaseOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IMappingExpression{`0,`1}})">
            <summary>Establecer stubs de IncludeBase()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.IncludeOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IMappingExpression{`0,`1}})">
            <summary>Establecer stubs de Include()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.IncludeTypeType">
            <summary>Establecer el stub de IMappingExpression`2.Include(Type derivedSourceType, Type derivedDestinationType)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.MaxDepthInt32">
            <summary>Establecer el stub de IMappingExpression`2.MaxDepth(Int32 depth)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.ProjectUsingExpressionOfFuncOfT0T1">
            <summary>Establecer el stub de IMappingExpression`2.ProjectUsing(Expression`1&lt;Func`2&lt;!0,!1&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.ReverseMap">
            <summary>Establecer el stub de IMappingExpression`2.ReverseMap()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.SubstituteFuncOfT0Object">
            <summary>Establecer el stub de IMappingExpression`2.Substitute(Func`2&lt;!0,Object&gt; substituteFunc)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.TypeMapGet">
            <summary>Establecer el stub de IMappingExpression`2.get_TypeMap()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.WithProfileString">
            <summary>Establecer el stub de IMappingExpression`2.WithProfile(String profileName)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#TypeMap">
            <summary>Establecer el stub de IMappingExpression`2.get_TypeMap()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIMappingOperationOptions">
            <summary>Tipo stub de AutoMapper.IMappingOperationOptions</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingOperationOptions.#ctor">
            <summary>Inicializa una nueva instancia de type StubIMappingOperationOptions</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOperationOptions.AfterMapActionOfObjectObject">
            <summary>Establecer el stub de IMappingOperationOptions.AfterMap(Action`2&lt;Object,Object&gt; afterFunction)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingOperationOptions.AttachBackingFieldToCreateMissingTypeMaps">
            <summary>Asocia delegados para emular StubIMappingOperationOptions.CreateMissingTypeMaps como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingOperationOptions.AttachBackingFieldToDisableCache">
            <summary>Asocia delegados para emular StubIMappingOperationOptions.DisableCache como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingOperationOptions.am::AutoMapper#IMappingOperationOptions#AfterMap(System.Action{System.Object,System.Object})">
            <summary>Establecer el stub de IMappingOperationOptions.AfterMap(Action`2&lt;Object,Object&gt; afterFunction)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingOperationOptions.am::AutoMapper#IMappingOperationOptions#BeforeMap(System.Action{System.Object,System.Object})">
            <summary>Establecer el stub de IMappingOperationOptions.BeforeMap(Action`2&lt;Object,Object&gt; beforeFunction)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingOperationOptions.am::AutoMapper#IMappingOperationOptions#ConstructServicesUsing(System.Func{System.Type,System.Object})">
            <summary>Establecer el stub de IMappingOperationOptions.ConstructServicesUsing(Func`2&lt;Type,Object&gt; constructor)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOperationOptions.BeforeMapActionOfObjectObject">
            <summary>Establecer el stub de IMappingOperationOptions.BeforeMap(Action`2&lt;Object,Object&gt; beforeFunction)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOperationOptions.ConstructServicesUsingFuncOfTypeObject">
            <summary>Establecer el stub de IMappingOperationOptions.ConstructServicesUsing(Func`2&lt;Type,Object&gt; constructor)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOperationOptions.CreateMissingTypeMapsGet">
            <summary>Establecer el stub de IMappingOperationOptions.get_CreateMissingTypeMaps()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOperationOptions.CreateMissingTypeMapsSetBoolean">
            <summary>Establecer el stub de IMappingOperationOptions.set_CreateMissingTypeMaps(Boolean value)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOperationOptions.DisableCacheGet">
            <summary>Establecer el stub de IMappingOperationOptions.get_DisableCache()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOperationOptions.DisableCacheSetBoolean">
            <summary>Establecer el stub de IMappingOperationOptions.set_DisableCache(Boolean value)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOperationOptions.ItemsGet">
            <summary>Establecer el stub de IMappingOperationOptions.get_Items()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOperationOptions.am::AutoMapper#IMappingOperationOptions#CreateMissingTypeMaps">
            <summary>Establecer el stub de IMappingOperationOptions.get_CreateMissingTypeMaps()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOperationOptions.am::AutoMapper#IMappingOperationOptions#DisableCache">
            <summary>Establecer el stub de IMappingOperationOptions.get_DisableCache()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOperationOptions.am::AutoMapper#IMappingOperationOptions#Items">
            <summary>Establecer el stub de IMappingOperationOptions.get_Items()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIMappingOperationOptions`2">
            <summary>Tipo stub de AutoMapper.IMappingOperationOptions`2</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingOperationOptions`2.#ctor">
            <summary>Inicializa una nueva instancia de type StubIMappingOperationOptions</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOperationOptions`2.AfterMapActionOfObjectObject">
            <summary>Establecer el stub de IMappingOperationOptions.AfterMap(Action`2&lt;Object,Object&gt; afterFunction)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOperationOptions`2.AfterMapActionOfT0T1">
            <summary>Establecer el stub de IMappingOperationOptions`2.AfterMap(Action`2&lt;!0,!1&gt; afterFunction)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingOperationOptions`2.AttachBackingFieldToCreateMissingTypeMaps">
            <summary>Asocia delegados para emular StubIMappingOperationOptions.CreateMissingTypeMaps como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingOperationOptions`2.AttachBackingFieldToDisableCache">
            <summary>Asocia delegados para emular StubIMappingOperationOptions.DisableCache como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingOperationOptions`2.am::AutoMapper#IMappingOperationOptions#AfterMap(System.Action{System.Object,System.Object})">
            <summary>Establecer el stub de IMappingOperationOptions.AfterMap(Action`2&lt;Object,Object&gt; afterFunction)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingOperationOptions`2.am::AutoMapper#IMappingOperationOptions#BeforeMap(System.Action{System.Object,System.Object})">
            <summary>Establecer el stub de IMappingOperationOptions.BeforeMap(Action`2&lt;Object,Object&gt; beforeFunction)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingOperationOptions`2.am::AutoMapper#IMappingOperationOptions#ConstructServicesUsing(System.Func{System.Type,System.Object})">
            <summary>Establecer el stub de IMappingOperationOptions.ConstructServicesUsing(Func`2&lt;Type,Object&gt; constructor)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingOperationOptions`2.am::AutoMapper#IMappingOperationOptions{TSource@TDestination}#AfterMap(System.Action{`0,`1})">
            <summary>Establecer el stub de IMappingOperationOptions`2.AfterMap(Action`2&lt;!0,!1&gt; afterFunction)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingOperationOptions`2.am::AutoMapper#IMappingOperationOptions{TSource@TDestination}#BeforeMap(System.Action{`0,`1})">
            <summary>Establecer el stub de IMappingOperationOptions`2.BeforeMap(Action`2&lt;!0,!1&gt; beforeFunction)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOperationOptions`2.BeforeMapActionOfObjectObject">
            <summary>Establecer el stub de IMappingOperationOptions.BeforeMap(Action`2&lt;Object,Object&gt; beforeFunction)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOperationOptions`2.BeforeMapActionOfT0T1">
            <summary>Establecer el stub de IMappingOperationOptions`2.BeforeMap(Action`2&lt;!0,!1&gt; beforeFunction)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOperationOptions`2.ConstructServicesUsingFuncOfTypeObject">
            <summary>Establecer el stub de IMappingOperationOptions.ConstructServicesUsing(Func`2&lt;Type,Object&gt; constructor)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOperationOptions`2.CreateMissingTypeMapsGet">
            <summary>Establecer el stub de IMappingOperationOptions.get_CreateMissingTypeMaps()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOperationOptions`2.CreateMissingTypeMapsSetBoolean">
            <summary>Establecer el stub de IMappingOperationOptions.set_CreateMissingTypeMaps(Boolean value)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOperationOptions`2.DisableCacheGet">
            <summary>Establecer el stub de IMappingOperationOptions.get_DisableCache()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOperationOptions`2.DisableCacheSetBoolean">
            <summary>Establecer el stub de IMappingOperationOptions.set_DisableCache(Boolean value)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOperationOptions`2.ItemsGet">
            <summary>Establecer el stub de IMappingOperationOptions.get_Items()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOperationOptions`2.am::AutoMapper#IMappingOperationOptions#CreateMissingTypeMaps">
            <summary>Establecer el stub de IMappingOperationOptions.get_CreateMissingTypeMaps()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOperationOptions`2.am::AutoMapper#IMappingOperationOptions#DisableCache">
            <summary>Establecer el stub de IMappingOperationOptions.get_DisableCache()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOperationOptions`2.am::AutoMapper#IMappingOperationOptions#Items">
            <summary>Establecer el stub de IMappingOperationOptions.get_Items()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIMappingOptions">
            <summary>Tipo stub de AutoMapper.IMappingOptions</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingOptions.#ctor">
            <summary>Inicializa una nueva instancia de type StubIMappingOptions</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOptions.AliasesGet">
            <summary>Establecer el stub de IMappingOptions.get_Aliases()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOptions.ConstructorMappingEnabledGet">
            <summary>Establecer el stub de IMappingOptions.get_ConstructorMappingEnabled()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOptions.DataReaderMapperYieldReturnEnabledGet">
            <summary>Establecer el stub de IMappingOptions.get_DataReaderMapperYieldReturnEnabled()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOptions.DestinationMemberNamingConventionGet">
            <summary>Establecer el stub de IMappingOptions.get_DestinationMemberNamingConvention()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOptions.DestinationPostfixesGet">
            <summary>Establecer el stub de IMappingOptions.get_DestinationPostfixes()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOptions.DestinationPrefixesGet">
            <summary>Establecer el stub de IMappingOptions.get_DestinationPrefixes()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOptions.MemberNameReplacersGet">
            <summary>Establecer el stub de IMappingOptions.get_MemberNameReplacers()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOptions.PostfixesGet">
            <summary>Establecer el stub de IMappingOptions.get_Postfixes()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOptions.PrefixesGet">
            <summary>Establecer el stub de IMappingOptions.get_Prefixes()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOptions.ShouldMapFieldGet">
            <summary>Establecer el stub de IMappingOptions.get_ShouldMapField()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOptions.ShouldMapPropertyGet">
            <summary>Establecer el stub de IMappingOptions.get_ShouldMapProperty()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOptions.SourceExtensionMethodsGet">
            <summary>Establecer el stub de IMappingOptions.get_SourceExtensionMethods()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOptions.SourceMemberNamingConventionGet">
            <summary>Establecer el stub de IMappingOptions.get_SourceMemberNamingConvention()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOptions.am::AutoMapper#IMappingOptions#Aliases">
            <summary>Establecer el stub de IMappingOptions.get_Aliases()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOptions.am::AutoMapper#IMappingOptions#ConstructorMappingEnabled">
            <summary>Establecer el stub de IMappingOptions.get_ConstructorMappingEnabled()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOptions.am::AutoMapper#IMappingOptions#DataReaderMapperYieldReturnEnabled">
            <summary>Establecer el stub de IMappingOptions.get_DataReaderMapperYieldReturnEnabled()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOptions.am::AutoMapper#IMappingOptions#DestinationMemberNamingConvention">
            <summary>Establecer el stub de IMappingOptions.get_DestinationMemberNamingConvention()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOptions.am::AutoMapper#IMappingOptions#DestinationPostfixes">
            <summary>Establecer el stub de IMappingOptions.get_DestinationPostfixes()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOptions.am::AutoMapper#IMappingOptions#DestinationPrefixes">
            <summary>Establecer el stub de IMappingOptions.get_DestinationPrefixes()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOptions.am::AutoMapper#IMappingOptions#MemberNameReplacers">
            <summary>Establecer el stub de IMappingOptions.get_MemberNameReplacers()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOptions.am::AutoMapper#IMappingOptions#Postfixes">
            <summary>Establecer el stub de IMappingOptions.get_Postfixes()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOptions.am::AutoMapper#IMappingOptions#Prefixes">
            <summary>Establecer el stub de IMappingOptions.get_Prefixes()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOptions.am::AutoMapper#IMappingOptions#ShouldMapField">
            <summary>Establecer el stub de IMappingOptions.get_ShouldMapField()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOptions.am::AutoMapper#IMappingOptions#ShouldMapProperty">
            <summary>Establecer el stub de IMappingOptions.get_ShouldMapProperty()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOptions.am::AutoMapper#IMappingOptions#SourceExtensionMethods">
            <summary>Establecer el stub de IMappingOptions.get_SourceExtensionMethods()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOptions.am::AutoMapper#IMappingOptions#SourceMemberNamingConvention">
            <summary>Establecer el stub de IMappingOptions.get_SourceMemberNamingConvention()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIMemberAccessor">
            <summary>Tipo stub de AutoMapper.IMemberAccessor</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberAccessor.#ctor">
            <summary>Inicializa una nueva instancia de type StubIMemberAccessor</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberAccessor.am::AutoMapper#IMemberAccessor#SetValue(System.Object,System.Object)">
            <summary>Establecer el stub de IMemberAccessor.SetValue(Object destination, Object value)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberAccessor.am::AutoMapper#IMemberGetter#GetValue(System.Object)">
            <summary>Establecer el stub de IMemberGetter.GetValue(Object source)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberAccessor.am::AutoMapper#IValueResolver#Resolve(AutoMapper.ResolutionResult)">
            <summary>Establecer el stub de IValueResolver.Resolve(ResolutionResult source)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberAccessor.GetValueObject">
            <summary>Establecer el stub de IMemberGetter.GetValue(Object source)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberAccessor.MemberInfoGet">
            <summary>Establecer el stub de IMemberGetter.get_MemberInfo()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberAccessor.MemberTypeGet">
            <summary>Establecer el stub de IMemberResolver.get_MemberType()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberAccessor.NameGet">
            <summary>Establecer el stub de IMemberGetter.get_Name()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberAccessor.ResolveResolutionResult">
            <summary>Establecer el stub de IValueResolver.Resolve(ResolutionResult source)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberAccessor.SetValueObjectObject">
            <summary>Establecer el stub de IMemberAccessor.SetValue(Object destination, Object value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMemberAccessor.am::AutoMapper#IMemberGetter#MemberInfo">
            <summary>Establecer el stub de IMemberGetter.get_MemberInfo()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMemberAccessor.am::AutoMapper#IMemberResolver#MemberType">
            <summary>Establecer el stub de IMemberResolver.get_MemberType()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMemberAccessor.am::AutoMapper#IMemberGetter#Name">
            <summary>Establecer el stub de IMemberGetter.get_Name()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIMemberConfigurationExpression">
            <summary>Tipo stub de AutoMapper.IMemberConfigurationExpression</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression.#ctor">
            <summary>Inicializa una nueva instancia de type StubIMemberConfigurationExpression</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression.am::AutoMapper#IMemberConfigurationExpression#Ignore">
            <summary>Establecer el stub de IMemberConfigurationExpression.Ignore()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression.am::AutoMapper#IMemberConfigurationExpression#MapFrom(System.String)">
            <summary>Establecer el stub de IMemberConfigurationExpression.MapFrom(String sourceMember)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression.am::AutoMapper#IMemberConfigurationExpression#ResolveUsing(AutoMapper.IValueResolver)">
            <summary>Establecer el stub de IMemberConfigurationExpression.ResolveUsing(IValueResolver valueResolver)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression.am::AutoMapper#IMemberConfigurationExpression#ResolveUsing``1">
            <summary>Establecer el stub de IMemberConfigurationExpression.ResolveUsing()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression.am::AutoMapper#IMemberConfigurationExpression#ResolveUsing(System.Type)">
            <summary>Establecer el stub de IMemberConfigurationExpression.ResolveUsing(Type valueResolverType)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression.am::AutoMapper#IMemberConfigurationExpression#UseDestinationValue">
            <summary>Establecer el stub de IMemberConfigurationExpression.UseDestinationValue()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression.Ignore">
            <summary>Establecer el stub de IMemberConfigurationExpression.Ignore()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression.MapFromString">
            <summary>Establecer el stub de IMemberConfigurationExpression.MapFrom(String sourceMember)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression.ResolveUsingIValueResolver">
            <summary>Establecer el stub de IMemberConfigurationExpression.ResolveUsing(IValueResolver valueResolver)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression.ResolveUsingOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IResolverConfigurationExpression})">
            <summary>Establecer stubs de ResolveUsing()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression.ResolveUsingType">
            <summary>Establecer el stub de IMemberConfigurationExpression.ResolveUsing(Type valueResolverType)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression.UseDestinationValue">
            <summary>Establecer el stub de IMemberConfigurationExpression.UseDestinationValue()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIMemberConfigurationExpression`1">
            <summary>Tipo stub de AutoMapper.IMemberConfigurationExpression`1</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.#ctor">
            <summary>Inicializa una nueva instancia de type StubIMemberConfigurationExpression</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#Condition(System.Func{AutoMapper.ResolutionContext,System.Boolean})">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.Condition(Func`2&lt;ResolutionContext,Boolean&gt; condition)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#Condition(System.Func{`0,System.Boolean})">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.Condition(Func`2&lt;!0,Boolean&gt; condition)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#DoNotUseDestinationValue">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.DoNotUseDestinationValue()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#ExplicitExpansion">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.ExplicitExpansion()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#Ignore">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.Ignore()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#MapFrom``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.MapFrom(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; sourceMember)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#MapFrom``1(System.String)">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.MapFrom(String property)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#NullSubstitute(System.Object)">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.NullSubstitute(Object nullSubstitute)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#PreCondition(System.Func{AutoMapper.ResolutionContext,System.Boolean})">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.PreCondition(Func`2&lt;ResolutionContext,Boolean&gt; condition)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#PreCondition(System.Func{`0,System.Boolean})">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.PreCondition(Func`2&lt;!0,Boolean&gt; condition)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#ResolveUsing(AutoMapper.IValueResolver)">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.ResolveUsing(IValueResolver valueResolver)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#ResolveUsing(System.Type)">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.ResolveUsing(Type valueResolverType)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#ResolveUsing(System.Func{`0,System.Object})">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.ResolveUsing(Func`2&lt;!0,Object&gt; resolver)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#ResolveUsing``1">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.ResolveUsing()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#ResolveUsing(System.Func{AutoMapper.ResolutionResult,System.Object})">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.ResolveUsing(Func`2&lt;ResolutionResult,Object&gt; resolver)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#SetMappingOrder(System.Int32)">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.SetMappingOrder(Int32 mappingOrder)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#UseDestinationValue">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.UseDestinationValue()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#UseValue(System.Object)">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.UseValue(Object value)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#UseValue``1(``0)">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.UseValue(!!0 value)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.ConditionFuncOfResolutionContextBoolean">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.Condition(Func`2&lt;ResolutionContext,Boolean&gt; condition)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.ConditionFuncOfT0Boolean">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.Condition(Func`2&lt;!0,Boolean&gt; condition)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.DoNotUseDestinationValue">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.DoNotUseDestinationValue()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.ExplicitExpansion">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.ExplicitExpansion()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.Ignore">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.Ignore()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.MapFromOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Linq.Expressions.Expression{System.Func{`0,``0}}})">
            <summary>Establecer stubs de MapFrom(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; sourceMember)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.MapFromOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String})">
            <summary>Establecer stubs de MapFrom(String property)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.NullSubstituteObject">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.NullSubstitute(Object nullSubstitute)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.PreConditionFuncOfResolutionContextBoolean">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.PreCondition(Func`2&lt;ResolutionContext,Boolean&gt; condition)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.PreConditionFuncOfT0Boolean">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.PreCondition(Func`2&lt;!0,Boolean&gt; condition)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.ResolveUsingFuncOfResolutionResultObject">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.ResolveUsing(Func`2&lt;ResolutionResult,Object&gt; resolver)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.ResolveUsingFuncOfT0Object">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.ResolveUsing(Func`2&lt;!0,Object&gt; resolver)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.ResolveUsingIValueResolver">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.ResolveUsing(IValueResolver valueResolver)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.ResolveUsingOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IResolverConfigurationExpression{`0,``0}})">
            <summary>Establecer stubs de ResolveUsing()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.ResolveUsingType">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.ResolveUsing(Type valueResolverType)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.SetMappingOrderInt32">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.SetMappingOrder(Int32 mappingOrder)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.UseDestinationValue">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.UseDestinationValue()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.UseValueObject">
            <summary>Establecer el stub de IMemberConfigurationExpression`1.UseValue(Object value)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.UseValueOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>Establecer stubs de UseValue(!!0 value)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIMemberGetter">
            <summary>Tipo stub de AutoMapper.IMemberGetter</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberGetter.#ctor">
            <summary>Inicializa una nueva instancia de type StubIMemberGetter</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberGetter.am::AutoMapper#IMemberGetter#GetValue(System.Object)">
            <summary>Establecer el stub de IMemberGetter.GetValue(Object source)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberGetter.am::AutoMapper#IValueResolver#Resolve(AutoMapper.ResolutionResult)">
            <summary>Establecer el stub de IValueResolver.Resolve(ResolutionResult source)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberGetter.GetValueObject">
            <summary>Establecer el stub de IMemberGetter.GetValue(Object source)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberGetter.MemberInfoGet">
            <summary>Establecer el stub de IMemberGetter.get_MemberInfo()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberGetter.MemberTypeGet">
            <summary>Establecer el stub de IMemberResolver.get_MemberType()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberGetter.NameGet">
            <summary>Establecer el stub de IMemberGetter.get_Name()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberGetter.ResolveResolutionResult">
            <summary>Establecer el stub de IValueResolver.Resolve(ResolutionResult source)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMemberGetter.am::AutoMapper#IMemberGetter#MemberInfo">
            <summary>Establecer el stub de IMemberGetter.get_MemberInfo()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMemberGetter.am::AutoMapper#IMemberResolver#MemberType">
            <summary>Establecer el stub de IMemberResolver.get_MemberType()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMemberGetter.am::AutoMapper#IMemberGetter#Name">
            <summary>Establecer el stub de IMemberGetter.get_Name()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIMemberResolver">
            <summary>Tipo stub de AutoMapper.IMemberResolver</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberResolver.#ctor">
            <summary>Inicializa una nueva instancia de type StubIMemberResolver</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberResolver.am::AutoMapper#IValueResolver#Resolve(AutoMapper.ResolutionResult)">
            <summary>Establecer el stub de IValueResolver.Resolve(ResolutionResult source)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberResolver.MemberTypeGet">
            <summary>Establecer el stub de IMemberResolver.get_MemberType()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberResolver.ResolveResolutionResult">
            <summary>Establecer el stub de IValueResolver.Resolve(ResolutionResult source)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMemberResolver.am::AutoMapper#IMemberResolver#MemberType">
            <summary>Establecer el stub de IMemberResolver.get_MemberType()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubINamingConvention">
            <summary>Tipo stub de AutoMapper.INamingConvention</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubINamingConvention.#ctor">
            <summary>Inicializa una nueva instancia de type StubINamingConvention</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubINamingConvention.SeparatorCharacterGet">
            <summary>Establecer el stub de INamingConvention.get_SeparatorCharacter()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubINamingConvention.SplittingExpressionGet">
            <summary>Establecer el stub de INamingConvention.get_SplittingExpression()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubINamingConvention.am::AutoMapper#INamingConvention#SeparatorCharacter">
            <summary>Establecer el stub de INamingConvention.get_SeparatorCharacter()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubINamingConvention.am::AutoMapper#INamingConvention#SplittingExpression">
            <summary>Establecer el stub de INamingConvention.get_SplittingExpression()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIObjectMapper">
            <summary>Tipo stub de AutoMapper.IObjectMapper</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIObjectMapper.#ctor">
            <summary>Inicializa una nueva instancia de type StubIObjectMapper</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIObjectMapper.am::AutoMapper#IObjectMapper#IsMatch(AutoMapper.ResolutionContext)">
            <summary>Establecer el stub de IObjectMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIObjectMapper.am::AutoMapper#IObjectMapper#Map(AutoMapper.ResolutionContext,AutoMapper.IMappingEngineRunner)">
            <summary>Establecer el stub de IObjectMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIObjectMapper.IsMatchResolutionContext">
            <summary>Establecer el stub de IObjectMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIObjectMapper.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el stub de IObjectMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIProfileConfiguration">
            <summary>Tipo stub de AutoMapper.IProfileConfiguration</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileConfiguration.#ctor">
            <summary>Inicializa una nueva instancia de type StubIProfileConfiguration</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileConfiguration.MapNullSourceCollectionsAsNullGet">
            <summary>Establecer el stub de IProfileConfiguration.get_MapNullSourceCollectionsAsNull()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileConfiguration.MapNullSourceValuesAsNullGet">
            <summary>Establecer el stub de IProfileConfiguration.get_MapNullSourceValuesAsNull()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIProfileConfiguration.am::AutoMapper#IProfileConfiguration#MapNullSourceCollectionsAsNull">
            <summary>Establecer el stub de IProfileConfiguration.get_MapNullSourceCollectionsAsNull()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIProfileConfiguration.am::AutoMapper#IProfileConfiguration#MapNullSourceValuesAsNull">
            <summary>Establecer el stub de IProfileConfiguration.get_MapNullSourceValuesAsNull()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIProfileExpression">
            <summary>Tipo stub de AutoMapper.IProfileExpression</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.#ctor">
            <summary>Inicializa una nueva instancia de type StubIProfileExpression</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.AddGlobalIgnoreString">
            <summary>Establecer el stub de IProfileExpression.AddGlobalIgnore(String propertyNameStartingWith)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.AllowNullCollectionsGet">
            <summary>Establecer el stub de IProfileExpression.get_AllowNullCollections()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.AllowNullCollectionsSetBoolean">
            <summary>Establecer el stub de IProfileExpression.set_AllowNullCollections(Boolean value)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.AllowNullDestinationValuesGet">
            <summary>Establecer el stub de IProfileExpression.get_AllowNullDestinationValues()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.AllowNullDestinationValuesSetBoolean">
            <summary>Establecer el stub de IProfileExpression.set_AllowNullDestinationValues(Boolean value)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.AttachBackingFieldToAllowNullCollections">
            <summary>Asocia delegados para emular StubIProfileExpression.AllowNullCollections como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.AttachBackingFieldToAllowNullDestinationValues">
            <summary>Asocia delegados para emular StubIProfileExpression.AllowNullDestinationValues como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.AttachBackingFieldToDestinationMemberNamingConvention">
            <summary>Asocia delegados para emular StubIProfileExpression.DestinationMemberNamingConvention como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.AttachBackingFieldToShouldMapField">
            <summary>Asocia delegados para emular StubIProfileExpression.ShouldMapField como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.AttachBackingFieldToShouldMapProperty">
            <summary>Asocia delegados para emular StubIProfileExpression.ShouldMapProperty como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.AttachBackingFieldToSourceMemberNamingConvention">
            <summary>Asocia delegados para emular StubIProfileExpression.SourceMemberNamingConvention como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#AddGlobalIgnore(System.String)">
            <summary>Establecer el stub de IProfileExpression.AddGlobalIgnore(String propertyNameStartingWith)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#ClearPrefixes">
            <summary>Establecer el stub de IProfileExpression.ClearPrefixes()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#CreateMap(System.Type,System.Type)">
            <summary>Establecer el stub de IProfileExpression.CreateMap(Type sourceType, Type destinationType)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
            <summary>Establecer el stub de IProfileExpression.CreateMap(Type sourceType, Type destinationType, MemberList memberList)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#CreateMap``2">
            <summary>Establecer el stub de IProfileExpression.CreateMap()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#CreateMap``2(AutoMapper.MemberList)">
            <summary>Establecer el stub de IProfileExpression.CreateMap(MemberList memberList)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#IncludeSourceExtensionMethods(System.Reflection.Assembly)">
            <summary>Establecer el stub de IProfileExpression.IncludeSourceExtensionMethods(Assembly assembly)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#RecognizeAlias(System.String,System.String)">
            <summary>Establecer el stub de IProfileExpression.RecognizeAlias(String original, String alias)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#RecognizeDestinationPostfixes(System.String[])">
            <summary>Establecer el stub de IProfileExpression.RecognizeDestinationPostfixes(String[] postfixes)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#RecognizeDestinationPrefixes(System.String[])">
            <summary>Establecer el stub de IProfileExpression.RecognizeDestinationPrefixes(String[] prefixes)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#RecognizePostfixes(System.String[])">
            <summary>Establecer el stub de IProfileExpression.RecognizePostfixes(String[] postfixes)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#RecognizePrefixes(System.String[])">
            <summary>Establecer el stub de IProfileExpression.RecognizePrefixes(String[] prefixes)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#ReplaceMemberName(System.String,System.String)">
            <summary>Establecer el stub de IProfileExpression.ReplaceMemberName(String original, String newValue)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.ClearPrefixes">
            <summary>Establecer el stub de IProfileExpression.ClearPrefixes()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.CreateMapOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IMappingExpression{``0,``1}})">
            <summary>Establecer stubs de CreateMap()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.CreateMapOf2MemberList``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MemberList,AutoMapper.IMappingExpression{``0,``1}})">
            <summary>Establecer stubs de CreateMap(MemberList memberList)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.CreateMapTypeType">
            <summary>Establecer el stub de IProfileExpression.CreateMap(Type sourceType, Type destinationType)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.CreateMapTypeTypeMemberList">
            <summary>Establecer el stub de IProfileExpression.CreateMap(Type sourceType, Type destinationType, MemberList memberList)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.DestinationMemberNamingConventionGet">
            <summary>Establecer el stub de IProfileExpression.get_DestinationMemberNamingConvention()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.DestinationMemberNamingConventionSetINamingConvention">
            <summary>Establecer el stub de IProfileExpression.set_DestinationMemberNamingConvention(INamingConvention value)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.IncludeSourceExtensionMethodsAssembly">
            <summary>Establecer el stub de IProfileExpression.IncludeSourceExtensionMethods(Assembly assembly)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.RecognizeAliasStringString">
            <summary>Establecer el stub de IProfileExpression.RecognizeAlias(String original, String alias)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.RecognizeDestinationPostfixesStringArray">
            <summary>Establecer el stub de IProfileExpression.RecognizeDestinationPostfixes(String[] postfixes)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.RecognizeDestinationPrefixesStringArray">
            <summary>Establecer el stub de IProfileExpression.RecognizeDestinationPrefixes(String[] prefixes)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.RecognizePostfixesStringArray">
            <summary>Establecer el stub de IProfileExpression.RecognizePostfixes(String[] postfixes)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.RecognizePrefixesStringArray">
            <summary>Establecer el stub de IProfileExpression.RecognizePrefixes(String[] prefixes)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.ReplaceMemberNameStringString">
            <summary>Establecer el stub de IProfileExpression.ReplaceMemberName(String original, String newValue)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.ShouldMapFieldGet">
            <summary>Establecer el stub de IProfileExpression.get_ShouldMapField()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.ShouldMapFieldSetFuncOfFieldInfoBoolean">
            <summary>Establecer el stub de IProfileExpression.set_ShouldMapField(Func`2&lt;FieldInfo,Boolean&gt; value)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.ShouldMapPropertyGet">
            <summary>Establecer el stub de IProfileExpression.get_ShouldMapProperty()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.ShouldMapPropertySetFuncOfPropertyInfoBoolean">
            <summary>Establecer el stub de IProfileExpression.set_ShouldMapProperty(Func`2&lt;PropertyInfo,Boolean&gt; value)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.SourceMemberNamingConventionGet">
            <summary>Establecer el stub de IProfileExpression.get_SourceMemberNamingConvention()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.SourceMemberNamingConventionSetINamingConvention">
            <summary>Establecer el stub de IProfileExpression.set_SourceMemberNamingConvention(INamingConvention value)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#AllowNullCollections">
            <summary>Establecer el stub de IProfileExpression.get_AllowNullCollections()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#AllowNullDestinationValues">
            <summary>Establecer el stub de IProfileExpression.get_AllowNullDestinationValues()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#DestinationMemberNamingConvention">
            <summary>Establecer el stub de IProfileExpression.get_DestinationMemberNamingConvention()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#ShouldMapField">
            <summary>Establecer el stub de IProfileExpression.get_ShouldMapField()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#ShouldMapProperty">
            <summary>Establecer el stub de IProfileExpression.get_ShouldMapProperty()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#SourceMemberNamingConvention">
            <summary>Establecer el stub de IProfileExpression.get_SourceMemberNamingConvention()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIResolutionExpression">
            <summary>Tipo stub de AutoMapper.IResolutionExpression</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolutionExpression.#ctor">
            <summary>Inicializa una nueva instancia de type StubIResolutionExpression</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolutionExpression.am::AutoMapper#IResolutionExpression#FromMember(System.String)">
            <summary>Establecer el stub de IResolutionExpression.FromMember(String sourcePropertyName)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIResolutionExpression.FromMemberString">
            <summary>Establecer el stub de IResolutionExpression.FromMember(String sourcePropertyName)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIResolutionExpression`1">
            <summary>Tipo stub de AutoMapper.IResolutionExpression`1</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolutionExpression`1.#ctor">
            <summary>Inicializa una nueva instancia de type StubIResolutionExpression</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolutionExpression`1.am::AutoMapper#IResolutionExpression#FromMember(System.String)">
            <summary>Establecer el stub de IResolutionExpression.FromMember(String sourcePropertyName)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolutionExpression`1.am::AutoMapper#IResolutionExpression{TSource}#FromMember(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Establecer el stub de IResolutionExpression`1.FromMember(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; sourceMember)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIResolutionExpression`1.FromMemberExpressionOfFuncOfT0Object">
            <summary>Establecer el stub de IResolutionExpression`1.FromMember(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; sourceMember)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIResolutionExpression`1.FromMemberString">
            <summary>Establecer el stub de IResolutionExpression.FromMember(String sourcePropertyName)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIResolverConfigurationExpression">
            <summary>Tipo stub de AutoMapper.IResolverConfigurationExpression</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolverConfigurationExpression.#ctor">
            <summary>Inicializa una nueva instancia de type StubIResolverConfigurationExpression</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolverConfigurationExpression.am::AutoMapper#IResolutionExpression#FromMember(System.String)">
            <summary>Establecer el stub de IResolutionExpression.FromMember(String sourcePropertyName)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolverConfigurationExpression.am::AutoMapper#IResolverConfigurationExpression#ConstructedBy(System.Func{AutoMapper.IValueResolver})">
            <summary>Establecer el stub de IResolverConfigurationExpression.ConstructedBy(Func`1&lt;IValueResolver&gt; constructor)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIResolverConfigurationExpression.ConstructedByFuncOfIValueResolver">
            <summary>Establecer el stub de IResolverConfigurationExpression.ConstructedBy(Func`1&lt;IValueResolver&gt; constructor)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIResolverConfigurationExpression.FromMemberString">
            <summary>Establecer el stub de IResolutionExpression.FromMember(String sourcePropertyName)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIResolverConfigurationExpression`1">
            <summary>Tipo stub de AutoMapper.IResolverConfigurationExpression`1</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolverConfigurationExpression`1.#ctor">
            <summary>Inicializa una nueva instancia de type StubIResolverConfigurationExpression</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolverConfigurationExpression`1.am::AutoMapper#IResolutionExpression#FromMember(System.String)">
            <summary>Establecer el stub de IResolutionExpression.FromMember(String sourcePropertyName)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolverConfigurationExpression`1.am::AutoMapper#IResolutionExpression{TSource}#FromMember(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Establecer el stub de IResolutionExpression`1.FromMember(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; sourceMember)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolverConfigurationExpression`1.am::AutoMapper#IResolverConfigurationExpression{TSource}#ConstructedBy(System.Func{AutoMapper.IValueResolver})">
            <summary>Establecer el stub de IResolverConfigurationExpression`1.ConstructedBy(Func`1&lt;IValueResolver&gt; constructor)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIResolverConfigurationExpression`1.ConstructedByFuncOfIValueResolver">
            <summary>Establecer el stub de IResolverConfigurationExpression`1.ConstructedBy(Func`1&lt;IValueResolver&gt; constructor)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIResolverConfigurationExpression`1.FromMemberExpressionOfFuncOfT0Object">
            <summary>Establecer el stub de IResolutionExpression`1.FromMember(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; sourceMember)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIResolverConfigurationExpression`1.FromMemberString">
            <summary>Establecer el stub de IResolutionExpression.FromMember(String sourcePropertyName)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIResolverConfigurationExpression`2">
            <summary>Tipo stub de AutoMapper.IResolverConfigurationExpression`2</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolverConfigurationExpression`2.#ctor">
            <summary>Inicializa una nueva instancia de type StubIResolverConfigurationExpression</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolverConfigurationExpression`2.am::AutoMapper#IResolverConfigurationExpression{TSource@TValueResolver}#ConstructedBy(System.Func{`1})">
            <summary>Establecer el stub de IResolverConfigurationExpression`2.ConstructedBy(Func`1&lt;!1&gt; constructor)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolverConfigurationExpression`2.am::AutoMapper#IResolverConfigurationExpression{TSource@TValueResolver}#FromMember(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Establecer el stub de IResolverConfigurationExpression`2.FromMember(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; sourceMember)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolverConfigurationExpression`2.am::AutoMapper#IResolverConfigurationExpression{TSource@TValueResolver}#FromMember(System.String)">
            <summary>Establecer el stub de IResolverConfigurationExpression`2.FromMember(String sourcePropertyName)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIResolverConfigurationExpression`2.ConstructedByFuncOfT1">
            <summary>Establecer el stub de IResolverConfigurationExpression`2.ConstructedBy(Func`1&lt;!1&gt; constructor)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIResolverConfigurationExpression`2.FromMemberExpressionOfFuncOfT0Object">
            <summary>Establecer el stub de IResolverConfigurationExpression`2.FromMember(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; sourceMember)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIResolverConfigurationExpression`2.FromMemberString">
            <summary>Establecer el stub de IResolverConfigurationExpression`2.FromMember(String sourcePropertyName)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubISourceMemberConfigurationExpression">
            <summary>Tipo stub de AutoMapper.ISourceMemberConfigurationExpression</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubISourceMemberConfigurationExpression.#ctor">
            <summary>Inicializa una nueva instancia de type StubISourceMemberConfigurationExpression</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubISourceMemberConfigurationExpression.am::AutoMapper#ISourceMemberConfigurationExpression#Ignore">
            <summary>Establecer el stub de ISourceMemberConfigurationExpression.Ignore()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubISourceMemberConfigurationExpression.Ignore">
            <summary>Establecer el stub de ISourceMemberConfigurationExpression.Ignore()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubISourceMemberConfigurationExpression`1">
            <summary>Tipo stub de AutoMapper.ISourceMemberConfigurationExpression`1</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubISourceMemberConfigurationExpression`1.#ctor">
            <summary>Inicializa una nueva instancia de type StubISourceMemberConfigurationExpression</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubISourceMemberConfigurationExpression`1.am::AutoMapper#ISourceMemberConfigurationExpression#Ignore">
            <summary>Establecer el stub de ISourceMemberConfigurationExpression.Ignore()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubISourceMemberConfigurationExpression`1.Ignore">
            <summary>Establecer el stub de ISourceMemberConfigurationExpression.Ignore()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubITypeConverter`2">
            <summary>Tipo stub de AutoMapper.ITypeConverter`2</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubITypeConverter`2.#ctor">
            <summary>Inicializa una nueva instancia de type StubITypeConverter</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubITypeConverter`2.am::AutoMapper#ITypeConverter{TSource@TDestination}#Convert(AutoMapper.ResolutionContext)">
            <summary>Establecer el stub de ITypeConverter`2.Convert(ResolutionContext context)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubITypeConverter`2.ConvertResolutionContext">
            <summary>Establecer el stub de ITypeConverter`2.Convert(ResolutionContext context)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubITypeMapFactory">
            <summary>Tipo stub de AutoMapper.ITypeMapFactory</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubITypeMapFactory.#ctor">
            <summary>Inicializa una nueva instancia de type StubITypeMapFactory</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubITypeMapFactory.am::AutoMapper#ITypeMapFactory#CreateTypeMap(System.Type,System.Type,AutoMapper.IMappingOptions,AutoMapper.MemberList)">
            <summary>Establecer el stub de ITypeMapFactory.CreateTypeMap(Type sourceType, Type destinationType, IMappingOptions mappingOptions, MemberList memberList)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubITypeMapFactory.CreateTypeMapTypeTypeIMappingOptionsMemberList">
            <summary>Establecer el stub de ITypeMapFactory.CreateTypeMap(Type sourceType, Type destinationType, IMappingOptions mappingOptions, MemberList memberList)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIValueResolver">
            <summary>Tipo stub de AutoMapper.IValueResolver</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIValueResolver.#ctor">
            <summary>Inicializa una nueva instancia de type StubIValueResolver</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIValueResolver.am::AutoMapper#IValueResolver#Resolve(AutoMapper.ResolutionResult)">
            <summary>Establecer el stub de IValueResolver.Resolve(ResolutionResult source)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIValueResolver.ResolveResolutionResult">
            <summary>Establecer el stub de IValueResolver.Resolve(ResolutionResult source)</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIgnoreMapAttribute">
            <summary>Tipo stub de AutoMapper.IgnoreMapAttribute</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIgnoreMapAttribute.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIgnoreMapAttribute.Equals(System.Object)">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIgnoreMapAttribute.EqualsObject">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIgnoreMapAttribute.GetHashCode">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIgnoreMapAttribute.GetHashCode01">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIgnoreMapAttribute.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubIgnoreMapAttribute</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIgnoreMapAttribute.IsDefaultAttribute">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIgnoreMapAttribute.IsDefaultAttribute01">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIgnoreMapAttribute.Match(System.Object)">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIgnoreMapAttribute.MatchObject">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIgnoreMapAttribute.TypeIdGet">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIgnoreMapAttribute.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIgnoreMapAttribute.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIgnoreMapAttribute.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIgnoreMapAttribute.TypeId">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubLowerUnderscoreNamingConvention">
            <summary>Tipo stub de AutoMapper.LowerUnderscoreNamingConvention</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubLowerUnderscoreNamingConvention.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubLowerUnderscoreNamingConvention.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubLowerUnderscoreNamingConvention</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubLowerUnderscoreNamingConvention.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubLowerUnderscoreNamingConvention.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubLowerUnderscoreNamingConvention.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubMappingEngine">
            <summary>Tipo stub de AutoMapper.MappingEngine</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubMappingEngine.#ctor(AutoMapper.IConfigurationProvider)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubMappingEngine.#ctor(AutoMapper.IConfigurationProvider,AutoMapper.Internal.IDictionary{AutoMapper.Impl.TypePair,AutoMapper.IObjectMapper},AutoMapper.Internal.IDictionary{AutoMapper.QueryableExtensions.ExpressionRequest,System.Linq.Expressions.LambdaExpression},System.Func{System.Type,System.Object})">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubMappingEngine.Dispose(System.Boolean)">
            <summary>Establecer el stub de MappingEngine.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubMappingEngine.DisposeBoolean">
            <summary>Establecer el stub de MappingEngine.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubMappingEngine.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMappingEngine</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubMappingEngine.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubMappingEngine.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubMappingEngine.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubMappingOperationOptions">
            <summary>Tipo stub de AutoMapper.MappingOperationOptions</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubMappingOperationOptions.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubMappingOperationOptions.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMappingOperationOptions</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubMappingOperationOptions.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubMappingOperationOptions.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubMappingOperationOptions.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubMappingOperationOptions`2">
            <summary>Tipo stub de AutoMapper.MappingOperationOptions`2</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubMappingOperationOptions`2.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubMappingOperationOptions`2.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMappingOperationOptions</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubMappingOperationOptions`2.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubMappingOperationOptions`2.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubMappingOperationOptions`2.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubNullReferenceExceptionSwallowingResolver">
            <summary>Tipo stub de AutoMapper.NullReferenceExceptionSwallowingResolver</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubNullReferenceExceptionSwallowingResolver.#ctor(AutoMapper.IMemberResolver)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubNullReferenceExceptionSwallowingResolver.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubNullReferenceExceptionSwallowingResolver</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubNullReferenceExceptionSwallowingResolver.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubNullReferenceExceptionSwallowingResolver.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubNullReferenceExceptionSwallowingResolver.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubPascalCaseNamingConvention">
            <summary>Tipo stub de AutoMapper.PascalCaseNamingConvention</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubPascalCaseNamingConvention.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubPascalCaseNamingConvention.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPascalCaseNamingConvention</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubPascalCaseNamingConvention.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubPascalCaseNamingConvention.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubPascalCaseNamingConvention.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubProfile">
            <summary>Tipo stub de AutoMapper.Profile</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubProfile.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubProfile.Configure">
            <summary>Establecer el stub de Profile.Configure()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubProfile.Configure01">
            <summary>Establecer el stub de Profile.Configure()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubProfile.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubProfile</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubProfile.ProfileNameGet">
            <summary>Establecer el stub de Profile.get_ProfileName()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubProfile.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubProfile.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubProfile.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubProfile.ProfileName">
            <summary>Establecer el stub de Profile.get_ProfileName()</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubPropertyMap">
            <summary>Tipo stub de AutoMapper.PropertyMap</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubPropertyMap.#ctor(AutoMapper.IMemberAccessor)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubPropertyMap.#ctor(AutoMapper.PropertyMap)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubPropertyMap.Equals(System.Object)">
            <summary>Establecer el stub de PropertyMap.Equals(Object obj)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubPropertyMap.EqualsObject">
            <summary>Establecer el stub de PropertyMap.Equals(Object obj)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubPropertyMap.GetHashCode">
            <summary>Establecer el stub de PropertyMap.GetHashCode()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubPropertyMap.GetHashCode01">
            <summary>Establecer el stub de PropertyMap.GetHashCode()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubPropertyMap.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPropertyMap</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubPropertyMap.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubPropertyMap.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubPropertyMap.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubResolutionContext">
            <summary>Tipo stub de AutoMapper.ResolutionContext</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubResolutionContext.#ctor(AutoMapper.TypeMap,System.Object,System.Type,System.Type,AutoMapper.MappingOperationOptions,AutoMapper.IMappingEngine)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubResolutionContext.#ctor(AutoMapper.TypeMap,System.Object,System.Object,System.Type,System.Type,AutoMapper.MappingOperationOptions,AutoMapper.IMappingEngine)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubResolutionContext.Equals(System.Object)">
            <summary>Establecer el stub de ResolutionContext.Equals(Object obj)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubResolutionContext.EqualsObject">
            <summary>Establecer el stub de ResolutionContext.Equals(Object obj)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubResolutionContext.GetHashCode">
            <summary>Establecer el stub de ResolutionContext.GetHashCode()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubResolutionContext.GetHashCode01">
            <summary>Establecer el stub de ResolutionContext.GetHashCode()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubResolutionContext.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubResolutionContext</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubResolutionContext.ToString">
            <summary>Establecer el stub de ResolutionContext.ToString()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubResolutionContext.ToString01">
            <summary>Establecer el stub de ResolutionContext.ToString()</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubResolutionContext.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubResolutionContext.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubResolutionContext.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubResolutionResult">
            <summary>Tipo stub de AutoMapper.ResolutionResult</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubResolutionResult.#ctor(AutoMapper.ResolutionContext)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubResolutionResult.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubResolutionResult</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubResolutionResult.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubResolutionResult.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubResolutionResult.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubSourceMemberConfig">
            <summary>Tipo stub de AutoMapper.SourceMemberConfig</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubSourceMemberConfig.#ctor(System.Reflection.MemberInfo)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubSourceMemberConfig.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSourceMemberConfig</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubSourceMemberConfig.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubSourceMemberConfig.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubSourceMemberConfig.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubThreadSafeList`1">
            <summary>Tipo stub de AutoMapper.ThreadSafeList`1</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubThreadSafeList`1.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubThreadSafeList`1.Dispose(System.Boolean)">
            <summary>Establecer el stub de ThreadSafeList`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubThreadSafeList`1.DisposeBoolean">
            <summary>Establecer el stub de ThreadSafeList`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubThreadSafeList`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubThreadSafeList</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubThreadSafeList`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubThreadSafeList`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubThreadSafeList`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubTypeConverter`2">
            <summary>Tipo stub de AutoMapper.TypeConverter`2</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubTypeConverter`2.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubTypeConverter`2.ConvertCore(`0)">
            <summary>Establecer el stub de TypeConverter`2.ConvertCore(!0 source)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubTypeConverter`2.ConvertCoreT0">
            <summary>Establecer el stub de TypeConverter`2.ConvertCore(!0 source)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubTypeConverter`2.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubTypeConverter</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubTypeConverter`2.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubTypeConverter`2.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubTypeConverter`2.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubTypeInfo">
            <summary>Tipo stub de AutoMapper.TypeInfo</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubTypeInfo.#ctor(System.Type,System.Func{System.Reflection.PropertyInfo,System.Boolean},System.Func{System.Reflection.FieldInfo,System.Boolean})">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubTypeInfo.#ctor(System.Type,System.Func{System.Reflection.PropertyInfo,System.Boolean},System.Func{System.Reflection.FieldInfo,System.Boolean},System.Collections.Generic.IEnumerable{System.Reflection.MethodInfo})">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubTypeInfo.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubTypeInfo</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubTypeInfo.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubTypeInfo.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubTypeInfo.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubTypeMap">
            <summary>Tipo stub de AutoMapper.TypeMap</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubTypeMap.#ctor(AutoMapper.TypeInfo,AutoMapper.TypeInfo,AutoMapper.MemberList)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubTypeMap.Equals(System.Object)">
            <summary>Establecer el stub de TypeMap.Equals(Object obj)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubTypeMap.EqualsObject">
            <summary>Establecer el stub de TypeMap.Equals(Object obj)</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubTypeMap.GetHashCode">
            <summary>Establecer el stub de TypeMap.GetHashCode()</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubTypeMap.GetHashCode01">
            <summary>Establecer el stub de TypeMap.GetHashCode()</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubTypeMap.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubTypeMap</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubTypeMap.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubTypeMap.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubTypeMap.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubTypeMapCreatedEventArgs">
            <summary>Tipo stub de AutoMapper.TypeMapCreatedEventArgs</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubTypeMapCreatedEventArgs.#ctor(AutoMapper.TypeMap)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubTypeMapCreatedEventArgs.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubTypeMapCreatedEventArgs</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubTypeMapCreatedEventArgs.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubTypeMapCreatedEventArgs.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubTypeMapCreatedEventArgs.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubTypeMapFactory">
            <summary>Tipo stub de AutoMapper.TypeMapFactory</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubTypeMapFactory.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubTypeMapFactory.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubTypeMapFactory</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubTypeMapFactory.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubTypeMapFactory.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubTypeMapFactory.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubValueResolver`2">
            <summary>Tipo stub de AutoMapper.ValueResolver`2</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubValueResolver`2.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubValueResolver`2.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubValueResolver</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubValueResolver`2.ResolveCore(`0)">
            <summary>Establecer el stub de ValueResolver`2.ResolveCore(!0 source)</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubValueResolver`2.ResolveCoreT0">
            <summary>Establecer el stub de ValueResolver`2.ResolveCore(!0 source)</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubValueResolver`2.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubValueResolver`2.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubValueResolver`2.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.ShimTypePair">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Impl.TypePair</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimTypePair.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimTypePair.#ctor(AutoMapper.Impl.TypePair)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimTypePair.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimTypePair.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimTypePair.Bind(System.IEquatable{AutoMapper.Impl.TypePair})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimTypePair.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimTypePair.ConstructorTypeType">
            <summary>Establecer el shim de TypePair.TypePair(Type sourceType, Type destinationType)</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimTypePair.DestinationTypeGet">
            <summary>Establecer el shim de TypePair.get_DestinationType()</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimTypePair.EqualsObject">
            <summary>Establecer el shim de TypePair.Equals(Object obj)</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimTypePair.EqualsTypePair">
            <summary>Establecer el shim de TypePair.Equals(TypePair other)</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimTypePair.GetHashCode">
            <summary>Establecer el shim de TypePair.GetHashCode()</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimTypePair.SourceTypeGet">
            <summary>Establecer el shim de TypePair.get_SourceType()</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.ShimTypePair.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimTypePair.AllInstances.DestinationTypeGet">
            <summary>Establecer el shim de TypePair.get_DestinationType()</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimTypePair.AllInstances.EqualsObject">
            <summary>Establecer el shim de TypePair.Equals(Object obj)</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimTypePair.AllInstances.EqualsTypePair">
            <summary>Establecer el shim de TypePair.Equals(TypePair other)</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimTypePair.AllInstances.GetHashCode01">
            <summary>Establecer el shim de TypePair.GetHashCode()</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimTypePair.AllInstances.SourceTypeGet">
            <summary>Establecer el shim de TypePair.get_SourceType()</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.StubTypePair">
            <summary>Tipo stub de AutoMapper.Impl.TypePair</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubTypePair.#ctor(System.Type,System.Type)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubTypePair.Equals(System.Object)">
            <summary>Establecer el stub de TypePair.Equals(Object obj)</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubTypePair.EqualsObject">
            <summary>Establecer el stub de TypePair.Equals(Object obj)</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubTypePair.GetHashCode">
            <summary>Establecer el stub de TypePair.GetHashCode()</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubTypePair.GetHashCode01">
            <summary>Establecer el stub de TypePair.GetHashCode()</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubTypePair.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubTypePair</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubTypePair.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubTypePair.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubTypePair.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimDefaultResolver">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.DefaultResolver</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDefaultResolver.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDefaultResolver.#ctor(AutoMapper.Internal.DefaultResolver)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDefaultResolver.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDefaultResolver.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDefaultResolver.Bind(AutoMapper.IValueResolver)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDefaultResolver.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDefaultResolver.Constructor">
            <summary>Establecer el shim de DefaultResolver.DefaultResolver()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDefaultResolver.ResolveResolutionResult">
            <summary>Establecer el shim de DefaultResolver.Resolve(ResolutionResult source)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimDefaultResolver.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDefaultResolver.AllInstances.ResolveResolutionResult">
            <summary>Establecer el shim de DefaultResolver.Resolve(ResolutionResult source)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedConverter">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.DeferredInstantiatedConverter</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedConverter.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedConverter.#ctor(AutoMapper.Internal.DeferredInstantiatedConverter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedConverter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedConverter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedConverter.Bind(AutoMapper.ITypeConverter{System.Object,System.Object})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedConverter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedConverter.ConstructorTypeFuncOfResolutionContextObject">
            <summary>Establecer el shim de DeferredInstantiatedConverter.DeferredInstantiatedConverter(Type typeConverterType, Func`2&lt;ResolutionContext,Object&gt; instantiator)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedConverter.ConvertResolutionContext">
            <summary>Establecer el shim de DeferredInstantiatedConverter.Convert(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedConverter.GetClosedConvertMethodResolutionContext">
            <summary>Establecer el shim de DeferredInstantiatedConverter.GetClosedConvertMethod(ResolutionContext context)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedConverter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedConverter.AllInstances.ConvertResolutionContext">
            <summary>Establecer el shim de DeferredInstantiatedConverter.Convert(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedConverter.AllInstances.GetClosedConvertMethodResolutionContext">
            <summary>Establecer el shim de DeferredInstantiatedConverter.GetClosedConvertMethod(ResolutionContext context)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedConverter`2">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.DeferredInstantiatedConverter`2</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedConverter`2.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedConverter`2.#ctor(AutoMapper.Internal.DeferredInstantiatedConverter{`0,`1})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedConverter`2.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedConverter`2.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedConverter`2.Bind(AutoMapper.ITypeConverter{`0,`1})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedConverter`2.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedConverter`2.ConstructorFuncOfResolutionContextITypeConverterOfT0T1">
            <summary>Establecer el shim de DeferredInstantiatedConverter`2.DeferredInstantiatedConverter`2(Func`2&lt;ResolutionContext,ITypeConverter`2&lt;!0,!1&gt;&gt; instantiator)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedConverter`2.ConvertResolutionContext">
            <summary>Establecer el shim de DeferredInstantiatedConverter`2.Convert(ResolutionContext context)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedConverter`2.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedConverter`2.AllInstances.ConvertResolutionContext">
            <summary>Establecer el shim de DeferredInstantiatedConverter`2.Convert(ResolutionContext context)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedResolver">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.DeferredInstantiatedResolver</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedResolver.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedResolver.#ctor(AutoMapper.Internal.DeferredInstantiatedResolver)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedResolver.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedResolver.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedResolver.Bind(AutoMapper.IValueResolver)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedResolver.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedResolver.ConstructorFuncOfResolutionContextIValueResolver">
            <summary>Establecer el shim de DeferredInstantiatedResolver.DeferredInstantiatedResolver(Func`2&lt;ResolutionContext,IValueResolver&gt; constructor)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedResolver.ResolveResolutionResult">
            <summary>Establecer el shim de DeferredInstantiatedResolver.Resolve(ResolutionResult source)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedResolver.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDeferredInstantiatedResolver.AllInstances.ResolveResolutionResult">
            <summary>Establecer el shim de DeferredInstantiatedResolver.Resolve(ResolutionResult source)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimDelegateBasedResolver`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.DelegateBasedResolver`1</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDelegateBasedResolver`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDelegateBasedResolver`1.#ctor(AutoMapper.Internal.DelegateBasedResolver{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDelegateBasedResolver`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDelegateBasedResolver`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDelegateBasedResolver`1.Bind(AutoMapper.IValueResolver)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDelegateBasedResolver`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDelegateBasedResolver`1.ConstructorFuncOfResolutionResultObject">
            <summary>Establecer el shim de DelegateBasedResolver`1.DelegateBasedResolver`1(Func`2&lt;ResolutionResult,Object&gt; method)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDelegateBasedResolver`1.ResolveResolutionResult">
            <summary>Establecer el shim de DelegateBasedResolver`1.Resolve(ResolutionResult source)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimDelegateBasedResolver`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDelegateBasedResolver`1.AllInstances.ResolveResolutionResult">
            <summary>Establecer el shim de DelegateBasedResolver`1.Resolve(ResolutionResult source)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimDelegateBasedResolver`2">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.DelegateBasedResolver`2</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDelegateBasedResolver`2.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDelegateBasedResolver`2.#ctor(AutoMapper.Internal.DelegateBasedResolver{`0,`1})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDelegateBasedResolver`2.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDelegateBasedResolver`2.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDelegateBasedResolver`2.Bind(AutoMapper.IMemberResolver)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDelegateBasedResolver`2.Bind(AutoMapper.IValueResolver)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDelegateBasedResolver`2.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDelegateBasedResolver`2.ConstructorFuncOfT0T1">
            <summary>Establecer el shim de DelegateBasedResolver`2.DelegateBasedResolver`2(Func`2&lt;!0,!1&gt; method)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDelegateBasedResolver`2.MemberTypeGet">
            <summary>Establecer el shim de DelegateBasedResolver`2.get_MemberType()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDelegateBasedResolver`2.ResolveResolutionResult">
            <summary>Establecer el shim de DelegateBasedResolver`2.Resolve(ResolutionResult source)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimDelegateBasedResolver`2.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDelegateBasedResolver`2.AllInstances.MemberTypeGet">
            <summary>Establecer el shim de DelegateBasedResolver`2.get_MemberType()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDelegateBasedResolver`2.AllInstances.ResolveResolutionResult">
            <summary>Establecer el shim de DelegateBasedResolver`2.Resolve(ResolutionResult source)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimDelegateFactory">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.DelegateFactory</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDelegateFactory.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDelegateFactory.#ctor(AutoMapper.Internal.DelegateFactory)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDelegateFactory.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDelegateFactory.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDelegateFactory.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDelegateFactory.Constructor">
            <summary>Establecer el shim de DelegateFactory.DelegateFactory()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDelegateFactory.CreateCtorConstructorInfoIEnumerableOfConstructorParameterMap">
            <summary>Establecer el shim de DelegateFactory.CreateCtor(ConstructorInfo constructorInfo, IEnumerable`1&lt;ConstructorParameterMap&gt; ctorParams)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDelegateFactory.CreateCtorType">
            <summary>Establecer el shim de DelegateFactory.CreateCtor(Type type)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDelegateFactory.CreateGetFieldInfo">
            <summary>Establecer el shim de DelegateFactory.CreateGet(FieldInfo field)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDelegateFactory.CreateGetMethodInfo">
            <summary>Establecer el shim de DelegateFactory.CreateGet(MethodInfo method)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDelegateFactory.CreateGetPropertyInfo">
            <summary>Establecer el shim de DelegateFactory.CreateGet(PropertyInfo property)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDelegateFactory.CreateParameterExpressionsMethodInfoExpressionExpression">
            <summary>Establecer el shim de DelegateFactory.CreateParameterExpressions(MethodInfo method, Expression instanceParameter, Expression argumentsParameter)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDelegateFactory.CreateSetFieldInfo">
            <summary>Establecer el shim de DelegateFactory.CreateSet(FieldInfo field)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDelegateFactory.CreateSetPropertyInfo">
            <summary>Establecer el shim de DelegateFactory.CreateSet(PropertyInfo property)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDelegateFactory.StaticConstructor">
            <summary>Establecer el shim de DelegateFactory.DelegateFactory()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimDelegateFactory.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDelegateFactory.AllInstances.CreateCtorConstructorInfoIEnumerableOfConstructorParameterMap">
            <summary>Establecer el shim de DelegateFactory.CreateCtor(ConstructorInfo constructorInfo, IEnumerable`1&lt;ConstructorParameterMap&gt; ctorParams)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDelegateFactory.AllInstances.CreateCtorType">
            <summary>Establecer el shim de DelegateFactory.CreateCtor(Type type)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDelegateFactory.AllInstances.CreateGetFieldInfo">
            <summary>Establecer el shim de DelegateFactory.CreateGet(FieldInfo field)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDelegateFactory.AllInstances.CreateGetMethodInfo">
            <summary>Establecer el shim de DelegateFactory.CreateGet(MethodInfo method)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDelegateFactory.AllInstances.CreateGetPropertyInfo">
            <summary>Establecer el shim de DelegateFactory.CreateGet(PropertyInfo property)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDelegateFactory.AllInstances.CreateSetFieldInfo">
            <summary>Establecer el shim de DelegateFactory.CreateSet(FieldInfo field)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDelegateFactory.AllInstances.CreateSetPropertyInfo">
            <summary>Establecer el shim de DelegateFactory.CreateSet(PropertyInfo property)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimDictionaryFactory">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.DictionaryFactory</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDictionaryFactory.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDictionaryFactory.#ctor(AutoMapper.Internal.DictionaryFactory)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDictionaryFactory.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDictionaryFactory.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDictionaryFactory.Bind(AutoMapper.Internal.IDictionaryFactory)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDictionaryFactory.CreateDictionaryOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.Internal.IDictionary{``0,``1}})">
            <summary>Establecer el shim de DictionaryFactory.CreateDictionary()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDictionaryFactory.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDictionaryFactory.Constructor">
            <summary>Establecer el shim de DictionaryFactory.DictionaryFactory()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimDictionaryFactory.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDictionaryFactory.AllInstances.CreateDictionaryOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.Internal.DictionaryFactory,AutoMapper.Internal.IDictionary{``0,``1}})">
            <summary>Establecer el shim de DictionaryFactory.CreateDictionary()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimEnumNameValueMapperFactory">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.EnumNameValueMapperFactory</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimEnumNameValueMapperFactory.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimEnumNameValueMapperFactory.#ctor(AutoMapper.Internal.EnumNameValueMapperFactory)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimEnumNameValueMapperFactory.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimEnumNameValueMapperFactory.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimEnumNameValueMapperFactory.Bind(AutoMapper.Internal.IEnumNameValueMapperFactory)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimEnumNameValueMapperFactory.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimEnumNameValueMapperFactory.Constructor">
            <summary>Establecer el shim de EnumNameValueMapperFactory.EnumNameValueMapperFactory()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimEnumNameValueMapperFactory.Create">
            <summary>Establecer el shim de EnumNameValueMapperFactory.Create()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimEnumNameValueMapperFactory.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimEnumNameValueMapperFactory.AllInstances.Create">
            <summary>Establecer el shim de EnumNameValueMapperFactory.Create()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimEnumerableExtensions">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.EnumerableExtensions</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimEnumerableExtensions.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimEnumerableExtensions.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimEnumerableExtensions.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimEnumerableExtensions.EachOf1IEnumerableOfM0ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.IEnumerable{``0},System.Action{``0}})">
            <summary>Establecer el shim de EnumerableExtensions.Each(IEnumerable`1&lt;!!0&gt; items, Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimEnumerableExtensions.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimFeatureDetector">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.FeatureDetector</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimFeatureDetector.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimFeatureDetector.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimFeatureDetector.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFeatureDetector.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFeatureDetector.IsEnumGetNamesSupportedGet">
            <summary>Establecer el shim de FeatureDetector.get_IsEnumGetNamesSupported()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFeatureDetector.ResolveIsEnumGetNamesSupported">
            <summary>Establecer el shim de FeatureDetector.ResolveIsEnumGetNamesSupported()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFeatureDetector.StaticConstructor">
            <summary>Establecer el shim de FeatureDetector.FeatureDetector()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimFieldAccessor">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.FieldAccessor</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimFieldAccessor.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimFieldAccessor.#ctor(AutoMapper.Internal.FieldAccessor)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimFieldAccessor.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimFieldAccessor.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimFieldAccessor.Bind(AutoMapper.IMemberAccessor)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimFieldAccessor.Bind(AutoMapper.IMemberGetter)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimFieldAccessor.Bind(AutoMapper.IMemberResolver)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimFieldAccessor.Bind(AutoMapper.IValueResolver)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFieldAccessor.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFieldAccessor.ConstructorFieldInfo">
            <summary>Establecer el shim de FieldAccessor.FieldAccessor(FieldInfo fieldInfo)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFieldAccessor.SetValueObjectObject">
            <summary>Establecer el shim de FieldAccessor.SetValue(Object destination, Object value)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimFieldAccessor.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFieldAccessor.AllInstances.SetValueObjectObject">
            <summary>Establecer el shim de FieldAccessor.SetValue(Object destination, Object value)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimFieldGetter">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.FieldGetter</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimFieldGetter.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimFieldGetter.#ctor(AutoMapper.Internal.FieldGetter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimFieldGetter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimFieldGetter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimFieldGetter.Bind(AutoMapper.IMemberGetter)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimFieldGetter.Bind(AutoMapper.IMemberResolver)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimFieldGetter.Bind(AutoMapper.IValueResolver)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFieldGetter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFieldGetter.ConstructorFieldInfo">
            <summary>Establecer el shim de FieldGetter.FieldGetter(FieldInfo fieldInfo)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFieldGetter.EqualsFieldGetter">
            <summary>Establecer el shim de FieldGetter.Equals(FieldGetter other)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFieldGetter.EqualsObject">
            <summary>Establecer el shim de FieldGetter.Equals(Object obj)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFieldGetter.GetCustomAttributesBoolean">
            <summary>Establecer el shim de FieldGetter.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFieldGetter.GetCustomAttributesTypeBoolean">
            <summary>Establecer el shim de FieldGetter.GetCustomAttributes(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFieldGetter.GetHashCode">
            <summary>Establecer el shim de FieldGetter.GetHashCode()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFieldGetter.GetValueObject">
            <summary>Establecer el shim de FieldGetter.GetValue(Object source)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFieldGetter.IsDefinedTypeBoolean">
            <summary>Establecer el shim de FieldGetter.IsDefined(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFieldGetter.MemberInfoGet">
            <summary>Establecer el shim de FieldGetter.get_MemberInfo()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFieldGetter.MemberTypeGet">
            <summary>Establecer el shim de FieldGetter.get_MemberType()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFieldGetter.NameGet">
            <summary>Establecer el shim de FieldGetter.get_Name()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimFieldGetter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFieldGetter.AllInstances.EqualsFieldGetter">
            <summary>Establecer el shim de FieldGetter.Equals(FieldGetter other)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFieldGetter.AllInstances.EqualsObject">
            <summary>Establecer el shim de FieldGetter.Equals(Object obj)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFieldGetter.AllInstances.GetCustomAttributesBoolean">
            <summary>Establecer el shim de FieldGetter.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFieldGetter.AllInstances.GetCustomAttributesTypeBoolean">
            <summary>Establecer el shim de FieldGetter.GetCustomAttributes(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFieldGetter.AllInstances.GetHashCode01">
            <summary>Establecer el shim de FieldGetter.GetHashCode()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFieldGetter.AllInstances.GetValueObject">
            <summary>Establecer el shim de FieldGetter.GetValue(Object source)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFieldGetter.AllInstances.IsDefinedTypeBoolean">
            <summary>Establecer el shim de FieldGetter.IsDefined(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFieldGetter.AllInstances.MemberInfoGet">
            <summary>Establecer el shim de FieldGetter.get_MemberInfo()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFieldGetter.AllInstances.MemberTypeGet">
            <summary>Establecer el shim de FieldGetter.get_MemberType()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFieldGetter.AllInstances.NameGet">
            <summary>Establecer el shim de FieldGetter.get_Name()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimLazyFactory">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.LazyFactory</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimLazyFactory.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimLazyFactory.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimLazyFactory.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimLazyFactory.CreateOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0},AutoMapper.Internal.ILazy{``0}})">
            <summary>Establecer el shim de LazyFactory.Create(Func`1&lt;!!0&gt; valueFactory)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimLazyFactory.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimMappingExpression">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.MappingExpression</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression.#ctor(AutoMapper.Internal.MappingExpression)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression.Bind(AutoMapper.IMappingExpression)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression.Bind(AutoMapper.IMemberConfigurationExpression)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression.BuildCtorOf1Type``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type,System.Func{AutoMapper.ResolutionContext,``0}})">
            <summary>Establecer el shim de MappingExpression.BuildCtor(Type type)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression.ConvertUsingOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Establecer el shim de MappingExpression.ConvertUsing()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression.ResolveUsingOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IResolverConfigurationExpression})">
            <summary>Establecer el shim de MappingExpression.ResolveUsing()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression.AsType">
            <summary>Establecer el shim de MappingExpression.As(Type typeOverride)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression.ConstructorTypeMapFuncOfTypeObject">
            <summary>Establecer el shim de MappingExpression.MappingExpression(TypeMap typeMap, Func`2&lt;Type,Object&gt; typeConverterCtor)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression.ConvertUsingType">
            <summary>Establecer el shim de MappingExpression.ConvertUsing(Type typeConverterType)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression.ForDestinationMemberIMemberAccessorActionOfIMemberConfigurationExpression">
            <summary>Establecer el shim de MappingExpression.ForDestinationMember(IMemberAccessor destinationProperty, Action`1&lt;IMemberConfigurationExpression&gt; memberOptions)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression.ForMemberStringActionOfIMemberConfigurationExpression">
            <summary>Establecer el shim de MappingExpression.ForMember(String name, Action`1&lt;IMemberConfigurationExpression&gt; memberOptions)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression.ForSourceMemberStringActionOfISourceMemberConfigurationExpression">
            <summary>Establecer el shim de MappingExpression.ForSourceMember(String sourceMemberName, Action`1&lt;ISourceMemberConfigurationExpression&gt; memberOptions)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression.Ignore">
            <summary>Establecer el shim de MappingExpression.Ignore()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression.MapFromString">
            <summary>Establecer el shim de MappingExpression.MapFrom(String sourceMember)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression.ResolveUsingIValueResolver">
            <summary>Establecer el shim de MappingExpression.ResolveUsing(IValueResolver valueResolver)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression.ResolveUsingType">
            <summary>Establecer el shim de MappingExpression.ResolveUsing(Type valueResolverType)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression.UseDestinationValue">
            <summary>Establecer el shim de MappingExpression.UseDestinationValue()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression.WithProfileString">
            <summary>Establecer el shim de MappingExpression.WithProfile(String profileName)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimMappingExpression.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression.AllInstances.BuildCtorOf1Type``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.Internal.MappingExpression,System.Type,System.Func{AutoMapper.ResolutionContext,``0}})">
            <summary>Establecer el shim de MappingExpression.BuildCtor(Type type)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression.AllInstances.ConvertUsingOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.Internal.MappingExpression})">
            <summary>Establecer el shim de MappingExpression.ConvertUsing()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression.AllInstances.ResolveUsingOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.Internal.MappingExpression,AutoMapper.IResolverConfigurationExpression})">
            <summary>Establecer el shim de MappingExpression.ResolveUsing()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression.AllInstances.AsType">
            <summary>Establecer el shim de MappingExpression.As(Type typeOverride)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression.AllInstances.ConvertUsingType">
            <summary>Establecer el shim de MappingExpression.ConvertUsing(Type typeConverterType)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression.AllInstances.ForDestinationMemberIMemberAccessorActionOfIMemberConfigurationExpression">
            <summary>Establecer el shim de MappingExpression.ForDestinationMember(IMemberAccessor destinationProperty, Action`1&lt;IMemberConfigurationExpression&gt; memberOptions)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression.AllInstances.ForMemberStringActionOfIMemberConfigurationExpression">
            <summary>Establecer el shim de MappingExpression.ForMember(String name, Action`1&lt;IMemberConfigurationExpression&gt; memberOptions)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression.AllInstances.ForSourceMemberStringActionOfISourceMemberConfigurationExpression">
            <summary>Establecer el shim de MappingExpression.ForSourceMember(String sourceMemberName, Action`1&lt;ISourceMemberConfigurationExpression&gt; memberOptions)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression.AllInstances.Ignore">
            <summary>Establecer el shim de MappingExpression.Ignore()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression.AllInstances.MapFromString">
            <summary>Establecer el shim de MappingExpression.MapFrom(String sourceMember)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression.AllInstances.ResolveUsingIValueResolver">
            <summary>Establecer el shim de MappingExpression.ResolveUsing(IValueResolver valueResolver)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression.AllInstances.ResolveUsingType">
            <summary>Establecer el shim de MappingExpression.ResolveUsing(Type valueResolverType)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression.AllInstances.UseDestinationValue">
            <summary>Establecer el shim de MappingExpression.UseDestinationValue()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression.AllInstances.WithProfileString">
            <summary>Establecer el shim de MappingExpression.WithProfile(String profileName)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimMappingExpression`2">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.MappingExpression`2</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2.#ctor(AutoMapper.Internal.MappingExpression{`0,`1})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AfterMapOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IMappingExpression{`0,`1}})">
            <summary>Establecer el shim de MappingExpression`2.AfterMap()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Establecer el shim de MappingExpression`2.As()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2.BeforeMapOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IMappingExpression{`0,`1}})">
            <summary>Establecer el shim de MappingExpression`2.BeforeMap()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2.Bind(AutoMapper.IMemberConfigurationExpression{`0})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2.Bind(AutoMapper.IMappingExpression{`0,`1})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2.BuildCtorOf1Type``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type,System.Func{AutoMapper.ResolutionContext,``0}})">
            <summary>Establecer el shim de MappingExpression`2.BuildCtor(Type type)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2.ConvertUsingOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Establecer el shim de MappingExpression`2.ConvertUsing()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2.IncludeBaseOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IMappingExpression{`0,`1}})">
            <summary>Establecer el shim de MappingExpression`2.IncludeBase()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2.IncludeOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IMappingExpression{`0,`1}})">
            <summary>Establecer el shim de MappingExpression`2.Include()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2.MapFromOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Linq.Expressions.Expression{System.Func{`0,``0}}})">
            <summary>Establecer el shim de MappingExpression`2.MapFrom(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; sourceMember)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2.MapFromOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String})">
            <summary>Establecer el shim de MappingExpression`2.MapFrom(String property)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2.ResolveUsingOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IResolverConfigurationExpression{`0,``0}})">
            <summary>Establecer el shim de MappingExpression`2.ResolveUsing()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2.UseValueOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>Establecer el shim de MappingExpression`2.UseValue(!!0 value)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2._AfterMapb__51_0Of1T0T1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{`0,`1})">
            <summary>Establecer el shim de MappingExpression`2.&lt;AfterMap&gt;b__51_0(!0 src, !1 dest)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2._BeforeMapb__49_0Of1T0T1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{`0,`1})">
            <summary>Establecer el shim de MappingExpression`2.&lt;BeforeMap&gt;b__49_0(!0 src, !1 dest)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AfterMapActionOfT0T1">
            <summary>Establecer el shim de MappingExpression`2.AfterMap(Action`2&lt;!0,!1&gt; afterFunction)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.BeforeMapActionOfT0T1">
            <summary>Establecer el shim de MappingExpression`2.BeforeMap(Action`2&lt;!0,!1&gt; beforeFunction)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.ConditionFuncOfResolutionContextBoolean">
            <summary>Establecer el shim de MappingExpression`2.Condition(Func`2&lt;ResolutionContext,Boolean&gt; condition)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.ConditionFuncOfT0Boolean">
            <summary>Establecer el shim de MappingExpression`2.Condition(Func`2&lt;!0,Boolean&gt; condition)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.ConstructProjectionUsingExpressionOfFuncOfT0T1">
            <summary>Establecer el shim de MappingExpression`2.ConstructProjectionUsing(Expression`1&lt;Func`2&lt;!0,!1&gt;&gt; ctor)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.ConstructUsingFuncOfResolutionContextT1">
            <summary>Establecer el shim de MappingExpression`2.ConstructUsing(Func`2&lt;ResolutionContext,!1&gt; ctor)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.ConstructUsingFuncOfT0T1">
            <summary>Establecer el shim de MappingExpression`2.ConstructUsing(Func`2&lt;!0,!1&gt; ctor)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.ConstructUsingServiceLocator">
            <summary>Establecer el shim de MappingExpression`2.ConstructUsingServiceLocator()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.ConstructorTypeMapFuncOfTypeObjectIProfileExpression">
            <summary>Establecer el shim de MappingExpression`2.MappingExpression`2(TypeMap typeMap, Func`2&lt;Type,Object&gt; serviceCtor, IProfileExpression configurationContainer)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.ConvertUsingFuncOfResolutionContextT0T1">
            <summary>Establecer el shim de MappingExpression`2.ConvertUsing(Func`3&lt;ResolutionContext,!0,!1&gt; mappingFunction)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.ConvertUsingFuncOfResolutionContextT1">
            <summary>Establecer el shim de MappingExpression`2.ConvertUsing(Func`2&lt;ResolutionContext,!1&gt; mappingFunction)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.ConvertUsingFuncOfT0T1">
            <summary>Establecer el shim de MappingExpression`2.ConvertUsing(Func`2&lt;!0,!1&gt; mappingFunction)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.ConvertUsingITypeConverterOfT0T1">
            <summary>Establecer el shim de MappingExpression`2.ConvertUsing(ITypeConverter`2&lt;!0,!1&gt; converter)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.DoNotUseDestinationValue">
            <summary>Establecer el shim de MappingExpression`2.DoNotUseDestinationValue()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.ExplicitExpansion">
            <summary>Establecer el shim de MappingExpression`2.ExplicitExpansion()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.ForAllMembersActionOfIMemberConfigurationExpressionOfT0">
            <summary>Establecer el shim de MappingExpression`2.ForAllMembers(Action`1&lt;IMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.ForCtorParamStringActionOfICtorParamConfigurationExpressionOfT0">
            <summary>Establecer el shim de MappingExpression`2.ForCtorParam(String ctorParamName, Action`1&lt;ICtorParamConfigurationExpression`1&lt;!0&gt;&gt; paramOptions)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.ForDestinationMemberIMemberAccessorActionOfIMemberConfigurationExpressionOfT0">
            <summary>Establecer el shim de MappingExpression`2.ForDestinationMember(IMemberAccessor destinationProperty, Action`1&lt;IMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.ForMemberExpressionOfFuncOfT1ObjectActionOfIMemberConfigurationExpressionOfT0">
            <summary>Establecer el shim de MappingExpression`2.ForMember(Expression`1&lt;Func`2&lt;!1,Object&gt;&gt; destinationMember, Action`1&lt;IMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.ForMemberStringActionOfIMemberConfigurationExpressionOfT0">
            <summary>Establecer el shim de MappingExpression`2.ForMember(String name, Action`1&lt;IMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.ForSourceMemberExpressionOfFuncOfT0ObjectActionOfISourceMemberConfigurationExpressionOfT0">
            <summary>Establecer el shim de MappingExpression`2.ForSourceMember(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; sourceMember, Action`1&lt;ISourceMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.ForSourceMemberStringActionOfISourceMemberConfigurationExpressionOfT0">
            <summary>Establecer el shim de MappingExpression`2.ForSourceMember(String sourceMemberName, Action`1&lt;ISourceMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.HasAnInaccessibleSetterPropertyInfo">
            <summary>Establecer el shim de MappingExpression`2.HasAnInaccessibleSetter(PropertyInfo property)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.Ignore">
            <summary>Establecer el shim de MappingExpression`2.Ignore()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.IgnoreAllPropertiesWithAnInaccessibleSetter">
            <summary>Establecer el shim de MappingExpression`2.IgnoreAllPropertiesWithAnInaccessibleSetter()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.IgnoreAllSourcePropertiesWithAnInaccessibleSetter">
            <summary>Establecer el shim de MappingExpression`2.IgnoreAllSourcePropertiesWithAnInaccessibleSetter()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.IncludeTypeType">
            <summary>Establecer el shim de MappingExpression`2.Include(Type otherSourceType, Type otherDestinationType)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.MaxDepthInt32">
            <summary>Establecer el shim de MappingExpression`2.MaxDepth(Int32 depth)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.NullSubstituteObject">
            <summary>Establecer el shim de MappingExpression`2.NullSubstitute(Object nullSubstitute)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.PreConditionFuncOfResolutionContextBoolean">
            <summary>Establecer el shim de MappingExpression`2.PreCondition(Func`2&lt;ResolutionContext,Boolean&gt; condition)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.PreConditionFuncOfT0Boolean">
            <summary>Establecer el shim de MappingExpression`2.PreCondition(Func`2&lt;!0,Boolean&gt; condition)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.ProjectUsingExpressionOfFuncOfT0T1">
            <summary>Establecer el shim de MappingExpression`2.ProjectUsing(Expression`1&lt;Func`2&lt;!0,!1&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.ResolveUsingFuncOfResolutionResultObject">
            <summary>Establecer el shim de MappingExpression`2.ResolveUsing(Func`2&lt;ResolutionResult,Object&gt; resolver)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.ResolveUsingFuncOfT0Object">
            <summary>Establecer el shim de MappingExpression`2.ResolveUsing(Func`2&lt;!0,Object&gt; resolver)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.ResolveUsingIValueResolver">
            <summary>Establecer el shim de MappingExpression`2.ResolveUsing(IValueResolver valueResolver)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.ResolveUsingType">
            <summary>Establecer el shim de MappingExpression`2.ResolveUsing(Type valueResolverType)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.ReverseMap">
            <summary>Establecer el shim de MappingExpression`2.ReverseMap()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.SetMappingOrderInt32">
            <summary>Establecer el shim de MappingExpression`2.SetMappingOrder(Int32 mappingOrder)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.SubstituteFuncOfT0Object">
            <summary>Establecer el shim de MappingExpression`2.Substitute(Func`2&lt;!0,Object&gt; substituteFunc)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.TypeMapGet">
            <summary>Establecer el shim de MappingExpression`2.get_TypeMap()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.UseDestinationValue">
            <summary>Establecer el shim de MappingExpression`2.UseDestinationValue()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.UseValueObject">
            <summary>Establecer el shim de MappingExpression`2.UseValue(Object value)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.WithProfileString">
            <summary>Establecer el shim de MappingExpression`2.WithProfile(String profileName)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.AfterMapOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.Internal.MappingExpression{`0,`1},AutoMapper.IMappingExpression{`0,`1}})">
            <summary>Establecer el shim de MappingExpression`2.AfterMap()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.AsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.Internal.MappingExpression{`0,`1}})">
            <summary>Establecer el shim de MappingExpression`2.As()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.BeforeMapOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.Internal.MappingExpression{`0,`1},AutoMapper.IMappingExpression{`0,`1}})">
            <summary>Establecer el shim de MappingExpression`2.BeforeMap()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.BuildCtorOf1Type``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.Internal.MappingExpression{`0,`1},System.Type,System.Func{AutoMapper.ResolutionContext,``0}})">
            <summary>Establecer el shim de MappingExpression`2.BuildCtor(Type type)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.ConvertUsingOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.Internal.MappingExpression{`0,`1}})">
            <summary>Establecer el shim de MappingExpression`2.ConvertUsing()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.IncludeBaseOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.Internal.MappingExpression{`0,`1},AutoMapper.IMappingExpression{`0,`1}})">
            <summary>Establecer el shim de MappingExpression`2.IncludeBase()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.IncludeOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.Internal.MappingExpression{`0,`1},AutoMapper.IMappingExpression{`0,`1}})">
            <summary>Establecer el shim de MappingExpression`2.Include()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.MapFromOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.Internal.MappingExpression{`0,`1},System.Linq.Expressions.Expression{System.Func{`0,``0}}})">
            <summary>Establecer el shim de MappingExpression`2.MapFrom(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; sourceMember)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.MapFromOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.Internal.MappingExpression{`0,`1},System.String})">
            <summary>Establecer el shim de MappingExpression`2.MapFrom(String property)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.ResolveUsingOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.Internal.MappingExpression{`0,`1},AutoMapper.IResolverConfigurationExpression{`0,``0}})">
            <summary>Establecer el shim de MappingExpression`2.ResolveUsing()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.UseValueOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.Internal.MappingExpression{`0,`1},``0})">
            <summary>Establecer el shim de MappingExpression`2.UseValue(!!0 value)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances._AfterMapb__51_0Of1T0T1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.Internal.MappingExpression{`0,`1},`0,`1})">
            <summary>Establecer el shim de MappingExpression`2.&lt;AfterMap&gt;b__51_0(!0 src, !1 dest)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances._BeforeMapb__49_0Of1T0T1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.Internal.MappingExpression{`0,`1},`0,`1})">
            <summary>Establecer el shim de MappingExpression`2.&lt;BeforeMap&gt;b__49_0(!0 src, !1 dest)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.AfterMapActionOfT0T1">
            <summary>Establecer el shim de MappingExpression`2.AfterMap(Action`2&lt;!0,!1&gt; afterFunction)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.BeforeMapActionOfT0T1">
            <summary>Establecer el shim de MappingExpression`2.BeforeMap(Action`2&lt;!0,!1&gt; beforeFunction)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.ConditionFuncOfResolutionContextBoolean">
            <summary>Establecer el shim de MappingExpression`2.Condition(Func`2&lt;ResolutionContext,Boolean&gt; condition)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.ConditionFuncOfT0Boolean">
            <summary>Establecer el shim de MappingExpression`2.Condition(Func`2&lt;!0,Boolean&gt; condition)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.ConstructProjectionUsingExpressionOfFuncOfT0T1">
            <summary>Establecer el shim de MappingExpression`2.ConstructProjectionUsing(Expression`1&lt;Func`2&lt;!0,!1&gt;&gt; ctor)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.ConstructUsingFuncOfResolutionContextT1">
            <summary>Establecer el shim de MappingExpression`2.ConstructUsing(Func`2&lt;ResolutionContext,!1&gt; ctor)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.ConstructUsingFuncOfT0T1">
            <summary>Establecer el shim de MappingExpression`2.ConstructUsing(Func`2&lt;!0,!1&gt; ctor)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.ConstructUsingServiceLocator">
            <summary>Establecer el shim de MappingExpression`2.ConstructUsingServiceLocator()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.ConvertUsingFuncOfResolutionContextT0T1">
            <summary>Establecer el shim de MappingExpression`2.ConvertUsing(Func`3&lt;ResolutionContext,!0,!1&gt; mappingFunction)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.ConvertUsingFuncOfResolutionContextT1">
            <summary>Establecer el shim de MappingExpression`2.ConvertUsing(Func`2&lt;ResolutionContext,!1&gt; mappingFunction)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.ConvertUsingFuncOfT0T1">
            <summary>Establecer el shim de MappingExpression`2.ConvertUsing(Func`2&lt;!0,!1&gt; mappingFunction)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.ConvertUsingITypeConverterOfT0T1">
            <summary>Establecer el shim de MappingExpression`2.ConvertUsing(ITypeConverter`2&lt;!0,!1&gt; converter)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.DoNotUseDestinationValue">
            <summary>Establecer el shim de MappingExpression`2.DoNotUseDestinationValue()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.ExplicitExpansion">
            <summary>Establecer el shim de MappingExpression`2.ExplicitExpansion()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.ForAllMembersActionOfIMemberConfigurationExpressionOfT0">
            <summary>Establecer el shim de MappingExpression`2.ForAllMembers(Action`1&lt;IMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.ForCtorParamStringActionOfICtorParamConfigurationExpressionOfT0">
            <summary>Establecer el shim de MappingExpression`2.ForCtorParam(String ctorParamName, Action`1&lt;ICtorParamConfigurationExpression`1&lt;!0&gt;&gt; paramOptions)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.ForDestinationMemberIMemberAccessorActionOfIMemberConfigurationExpressionOfT0">
            <summary>Establecer el shim de MappingExpression`2.ForDestinationMember(IMemberAccessor destinationProperty, Action`1&lt;IMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.ForMemberExpressionOfFuncOfT1ObjectActionOfIMemberConfigurationExpressionOfT0">
            <summary>Establecer el shim de MappingExpression`2.ForMember(Expression`1&lt;Func`2&lt;!1,Object&gt;&gt; destinationMember, Action`1&lt;IMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.ForMemberStringActionOfIMemberConfigurationExpressionOfT0">
            <summary>Establecer el shim de MappingExpression`2.ForMember(String name, Action`1&lt;IMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.ForSourceMemberExpressionOfFuncOfT0ObjectActionOfISourceMemberConfigurationExpressionOfT0">
            <summary>Establecer el shim de MappingExpression`2.ForSourceMember(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; sourceMember, Action`1&lt;ISourceMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.ForSourceMemberStringActionOfISourceMemberConfigurationExpressionOfT0">
            <summary>Establecer el shim de MappingExpression`2.ForSourceMember(String sourceMemberName, Action`1&lt;ISourceMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.HasAnInaccessibleSetterPropertyInfo">
            <summary>Establecer el shim de MappingExpression`2.HasAnInaccessibleSetter(PropertyInfo property)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.Ignore">
            <summary>Establecer el shim de MappingExpression`2.Ignore()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.IgnoreAllPropertiesWithAnInaccessibleSetter">
            <summary>Establecer el shim de MappingExpression`2.IgnoreAllPropertiesWithAnInaccessibleSetter()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.IgnoreAllSourcePropertiesWithAnInaccessibleSetter">
            <summary>Establecer el shim de MappingExpression`2.IgnoreAllSourcePropertiesWithAnInaccessibleSetter()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.IncludeTypeType">
            <summary>Establecer el shim de MappingExpression`2.Include(Type otherSourceType, Type otherDestinationType)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.MaxDepthInt32">
            <summary>Establecer el shim de MappingExpression`2.MaxDepth(Int32 depth)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.NullSubstituteObject">
            <summary>Establecer el shim de MappingExpression`2.NullSubstitute(Object nullSubstitute)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.PreConditionFuncOfResolutionContextBoolean">
            <summary>Establecer el shim de MappingExpression`2.PreCondition(Func`2&lt;ResolutionContext,Boolean&gt; condition)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.PreConditionFuncOfT0Boolean">
            <summary>Establecer el shim de MappingExpression`2.PreCondition(Func`2&lt;!0,Boolean&gt; condition)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.ProjectUsingExpressionOfFuncOfT0T1">
            <summary>Establecer el shim de MappingExpression`2.ProjectUsing(Expression`1&lt;Func`2&lt;!0,!1&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.ResolveUsingFuncOfResolutionResultObject">
            <summary>Establecer el shim de MappingExpression`2.ResolveUsing(Func`2&lt;ResolutionResult,Object&gt; resolver)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.ResolveUsingFuncOfT0Object">
            <summary>Establecer el shim de MappingExpression`2.ResolveUsing(Func`2&lt;!0,Object&gt; resolver)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.ResolveUsingIValueResolver">
            <summary>Establecer el shim de MappingExpression`2.ResolveUsing(IValueResolver valueResolver)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.ResolveUsingType">
            <summary>Establecer el shim de MappingExpression`2.ResolveUsing(Type valueResolverType)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.ReverseMap">
            <summary>Establecer el shim de MappingExpression`2.ReverseMap()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.SetMappingOrderInt32">
            <summary>Establecer el shim de MappingExpression`2.SetMappingOrder(Int32 mappingOrder)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.SubstituteFuncOfT0Object">
            <summary>Establecer el shim de MappingExpression`2.Substitute(Func`2&lt;!0,Object&gt; substituteFunc)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.TypeMapGet">
            <summary>Establecer el shim de MappingExpression`2.get_TypeMap()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.UseDestinationValue">
            <summary>Establecer el shim de MappingExpression`2.UseDestinationValue()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.UseValueObject">
            <summary>Establecer el shim de MappingExpression`2.UseValue(Object value)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMappingExpression`2.AllInstances.WithProfileString">
            <summary>Establecer el shim de MappingExpression`2.WithProfile(String profileName)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimMemberGetter">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.MemberGetter</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMemberGetter.#ctor(AutoMapper.Internal.MemberGetter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMemberGetter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMemberGetter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMemberGetter.Bind(AutoMapper.IMemberGetter)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMemberGetter.Bind(AutoMapper.IMemberResolver)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMemberGetter.Bind(AutoMapper.IValueResolver)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMemberGetter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMemberGetter.Constructor">
            <summary>Establecer el shim de MemberGetter.MemberGetter()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMemberGetter.ResolveResolutionResult">
            <summary>Establecer el shim de MemberGetter.Resolve(ResolutionResult source)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMemberGetter.StaticConstructor">
            <summary>Establecer el shim de MemberGetter.MemberGetter()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimMemberGetter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMemberGetter.AllInstances.ResolveResolutionResult">
            <summary>Establecer el shim de MemberGetter.Resolve(ResolutionResult source)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimMemberNameReplacer">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.MemberNameReplacer</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMemberNameReplacer.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMemberNameReplacer.#ctor(AutoMapper.Internal.MemberNameReplacer)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMemberNameReplacer.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMemberNameReplacer.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMemberNameReplacer.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMemberNameReplacer.ConstructorStringString">
            <summary>Establecer el shim de MemberNameReplacer.MemberNameReplacer(String originalValue, String newValue)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMemberNameReplacer.NewValueGet">
            <summary>Establecer el shim de MemberNameReplacer.get_NewValue()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMemberNameReplacer.NewValueSetString">
            <summary>Establecer el shim de MemberNameReplacer.set_NewValue(String value)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMemberNameReplacer.OriginalValueGet">
            <summary>Establecer el shim de MemberNameReplacer.get_OriginalValue()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMemberNameReplacer.OriginalValueSetString">
            <summary>Establecer el shim de MemberNameReplacer.set_OriginalValue(String value)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimMemberNameReplacer.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMemberNameReplacer.AllInstances.NewValueGet">
            <summary>Establecer el shim de MemberNameReplacer.get_NewValue()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMemberNameReplacer.AllInstances.NewValueSetString">
            <summary>Establecer el shim de MemberNameReplacer.set_NewValue(String value)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMemberNameReplacer.AllInstances.OriginalValueGet">
            <summary>Establecer el shim de MemberNameReplacer.get_OriginalValue()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMemberNameReplacer.AllInstances.OriginalValueSetString">
            <summary>Establecer el shim de MemberNameReplacer.set_OriginalValue(String value)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimMethodGetter">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.MethodGetter</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMethodGetter.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMethodGetter.#ctor(AutoMapper.Internal.MethodGetter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMethodGetter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMethodGetter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMethodGetter.Bind(AutoMapper.IMemberGetter)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMethodGetter.Bind(AutoMapper.IMemberResolver)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimMethodGetter.Bind(AutoMapper.IValueResolver)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMethodGetter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMethodGetter.ConstructorMethodInfo">
            <summary>Establecer el shim de MethodGetter.MethodGetter(MethodInfo methodInfo)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMethodGetter.EqualsMethodGetter">
            <summary>Establecer el shim de MethodGetter.Equals(MethodGetter other)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMethodGetter.EqualsObject">
            <summary>Establecer el shim de MethodGetter.Equals(Object obj)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMethodGetter.GetCustomAttributesBoolean">
            <summary>Establecer el shim de MethodGetter.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMethodGetter.GetCustomAttributesTypeBoolean">
            <summary>Establecer el shim de MethodGetter.GetCustomAttributes(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMethodGetter.GetHashCode">
            <summary>Establecer el shim de MethodGetter.GetHashCode()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMethodGetter.GetValueObject">
            <summary>Establecer el shim de MethodGetter.GetValue(Object source)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMethodGetter.IsDefinedTypeBoolean">
            <summary>Establecer el shim de MethodGetter.IsDefined(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMethodGetter.MemberInfoGet">
            <summary>Establecer el shim de MethodGetter.get_MemberInfo()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMethodGetter.MemberTypeGet">
            <summary>Establecer el shim de MethodGetter.get_MemberType()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMethodGetter.NameGet">
            <summary>Establecer el shim de MethodGetter.get_Name()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimMethodGetter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMethodGetter.AllInstances.EqualsMethodGetter">
            <summary>Establecer el shim de MethodGetter.Equals(MethodGetter other)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMethodGetter.AllInstances.EqualsObject">
            <summary>Establecer el shim de MethodGetter.Equals(Object obj)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMethodGetter.AllInstances.GetCustomAttributesBoolean">
            <summary>Establecer el shim de MethodGetter.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMethodGetter.AllInstances.GetCustomAttributesTypeBoolean">
            <summary>Establecer el shim de MethodGetter.GetCustomAttributes(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMethodGetter.AllInstances.GetHashCode01">
            <summary>Establecer el shim de MethodGetter.GetHashCode()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMethodGetter.AllInstances.GetValueObject">
            <summary>Establecer el shim de MethodGetter.GetValue(Object source)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMethodGetter.AllInstances.IsDefinedTypeBoolean">
            <summary>Establecer el shim de MethodGetter.IsDefined(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMethodGetter.AllInstances.MemberInfoGet">
            <summary>Establecer el shim de MethodGetter.get_MemberInfo()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMethodGetter.AllInstances.MemberTypeGet">
            <summary>Establecer el shim de MethodGetter.get_MemberType()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimMethodGetter.AllInstances.NameGet">
            <summary>Establecer el shim de MethodGetter.get_Name()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimNullReplacementMethod">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.NullReplacementMethod</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimNullReplacementMethod.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimNullReplacementMethod.#ctor(AutoMapper.Internal.NullReplacementMethod)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimNullReplacementMethod.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimNullReplacementMethod.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimNullReplacementMethod.Bind(AutoMapper.IValueResolver)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimNullReplacementMethod.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimNullReplacementMethod.ConstructorObject">
            <summary>Establecer el shim de NullReplacementMethod.NullReplacementMethod(Object nullSubstitute)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimNullReplacementMethod.ResolveResolutionResult">
            <summary>Establecer el shim de NullReplacementMethod.Resolve(ResolutionResult source)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimNullReplacementMethod.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimNullReplacementMethod.AllInstances.ResolveResolutionResult">
            <summary>Establecer el shim de NullReplacementMethod.Resolve(ResolutionResult source)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimNullableConverterFactory">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.NullableConverterFactory</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimNullableConverterFactory.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimNullableConverterFactory.#ctor(AutoMapper.Internal.NullableConverterFactory)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimNullableConverterFactory.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimNullableConverterFactory.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimNullableConverterFactory.Bind(AutoMapper.Internal.INullableConverterFactory)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimNullableConverterFactory.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimNullableConverterFactory.Constructor">
            <summary>Establecer el shim de NullableConverterFactory.NullableConverterFactory()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimNullableConverterFactory.CreateType">
            <summary>Establecer el shim de NullableConverterFactory.Create(Type nullableType)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimNullableConverterFactory.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimNullableConverterFactory.AllInstances.CreateType">
            <summary>Establecer el shim de NullableConverterFactory.Create(Type nullableType)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimPlatformAdapter">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.PlatformAdapter</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPlatformAdapter.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPlatformAdapter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPlatformAdapter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPlatformAdapter.ResolveOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Establecer el shim de PlatformAdapter.Resolve()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPlatformAdapter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPlatformAdapter.StaticConstructor">
            <summary>Establecer el shim de PlatformAdapter.PlatformAdapter()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.PrimitiveExtensions</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions.GetOrDefaultOf2IDictionaryOfM0M1M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.Internal.IDictionary{``0,``1},``0,``1})">
            <summary>Establecer el shim de PrimitiveExtensions.GetOrDefault(IDictionary`2&lt;!!0,!!1&gt; dictionary, !!0 key)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions.GetDictionaryTypeType">
            <summary>Establecer el shim de PrimitiveExtensions.GetDictionaryType(Type type)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions.GetGenericElementTypeType">
            <summary>Establecer el shim de PrimitiveExtensions.GetGenericElementType(Type type)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions.GetTypeOfNullableType">
            <summary>Establecer el shim de PrimitiveExtensions.GetTypeOfNullable(Type type)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions.IsCollectionTypeType">
            <summary>Establecer el shim de PrimitiveExtensions.IsCollectionType(Type type)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions.IsDictionaryTypeType">
            <summary>Establecer el shim de PrimitiveExtensions.IsDictionaryType(Type type)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions.IsEnumerableTypeType">
            <summary>Establecer el shim de PrimitiveExtensions.IsEnumerableType(Type type)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions.IsListOrDictionaryTypeType">
            <summary>Establecer el shim de PrimitiveExtensions.IsListOrDictionaryType(Type type)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions.IsListTypeType">
            <summary>Establecer el shim de PrimitiveExtensions.IsListType(Type type)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions.IsNullableTypeType">
            <summary>Establecer el shim de PrimitiveExtensions.IsNullableType(Type type)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions.IsQueryableTypeType">
            <summary>Establecer el shim de PrimitiveExtensions.IsQueryableType(Type type)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimProfileConfiguration">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.ProfileConfiguration</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimProfileConfiguration.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimProfileConfiguration.#ctor(AutoMapper.Internal.ProfileConfiguration)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimProfileConfiguration.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimProfileConfiguration.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimProfileConfiguration.Bind(AutoMapper.IMappingOptions)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimProfileConfiguration.Bind(AutoMapper.IProfileConfiguration)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AliasesGet">
            <summary>Establecer el shim de ProfileConfiguration.get_Aliases()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllowNullCollectionsGet">
            <summary>Establecer el shim de ProfileConfiguration.get_AllowNullCollections()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllowNullCollectionsSetBoolean">
            <summary>Establecer el shim de ProfileConfiguration.set_AllowNullCollections(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllowNullDestinationValuesGet">
            <summary>Establecer el shim de ProfileConfiguration.get_AllowNullDestinationValues()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllowNullDestinationValuesSetBoolean">
            <summary>Establecer el shim de ProfileConfiguration.set_AllowNullDestinationValues(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.ClearPrefixes">
            <summary>Establecer el shim de ProfileConfiguration.ClearPrefixes()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.Constructor">
            <summary>Establecer el shim de ProfileConfiguration.ProfileConfiguration()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.ConstructorMappingEnabledGet">
            <summary>Establecer el shim de ProfileConfiguration.get_ConstructorMappingEnabled()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.ConstructorMappingEnabledSetBoolean">
            <summary>Establecer el shim de ProfileConfiguration.set_ConstructorMappingEnabled(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.DataReaderMapperYieldReturnEnabledGet">
            <summary>Establecer el shim de ProfileConfiguration.get_DataReaderMapperYieldReturnEnabled()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.DataReaderMapperYieldReturnEnabledSetBoolean">
            <summary>Establecer el shim de ProfileConfiguration.set_DataReaderMapperYieldReturnEnabled(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.DestinationMemberNamingConventionGet">
            <summary>Establecer el shim de ProfileConfiguration.get_DestinationMemberNamingConvention()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.DestinationMemberNamingConventionSetINamingConvention">
            <summary>Establecer el shim de ProfileConfiguration.set_DestinationMemberNamingConvention(INamingConvention value)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.DestinationPostfixesGet">
            <summary>Establecer el shim de ProfileConfiguration.get_DestinationPostfixes()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.DestinationPrefixesGet">
            <summary>Establecer el shim de ProfileConfiguration.get_DestinationPrefixes()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.IncludeSourceExtensionMethodsAssembly">
            <summary>Establecer el shim de ProfileConfiguration.IncludeSourceExtensionMethods(Assembly assembly)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.MapNullSourceCollectionsAsNullGet">
            <summary>Establecer el shim de ProfileConfiguration.get_MapNullSourceCollectionsAsNull()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.MapNullSourceValuesAsNullGet">
            <summary>Establecer el shim de ProfileConfiguration.get_MapNullSourceValuesAsNull()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.MemberNameReplacersGet">
            <summary>Establecer el shim de ProfileConfiguration.get_MemberNameReplacers()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.PostfixesGet">
            <summary>Establecer el shim de ProfileConfiguration.get_Postfixes()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.PrefixesGet">
            <summary>Establecer el shim de ProfileConfiguration.get_Prefixes()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.RecognizeAliasStringString">
            <summary>Establecer el shim de ProfileConfiguration.RecognizeAlias(String original, String alias)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.RecognizeDestinationPostfixesStringArray">
            <summary>Establecer el shim de ProfileConfiguration.RecognizeDestinationPostfixes(String[] postfixes)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.RecognizeDestinationPrefixesStringArray">
            <summary>Establecer el shim de ProfileConfiguration.RecognizeDestinationPrefixes(String[] prefixes)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.RecognizePostfixesStringArray">
            <summary>Establecer el shim de ProfileConfiguration.RecognizePostfixes(String[] postfixes)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.RecognizePrefixesStringArray">
            <summary>Establecer el shim de ProfileConfiguration.RecognizePrefixes(String[] prefixes)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.ReplaceMemberNameStringString">
            <summary>Establecer el shim de ProfileConfiguration.ReplaceMemberName(String original, String newValue)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.ShouldMapFieldGet">
            <summary>Establecer el shim de ProfileConfiguration.get_ShouldMapField()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.ShouldMapFieldSetFuncOfFieldInfoBoolean">
            <summary>Establecer el shim de ProfileConfiguration.set_ShouldMapField(Func`2&lt;FieldInfo,Boolean&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.ShouldMapPropertyGet">
            <summary>Establecer el shim de ProfileConfiguration.get_ShouldMapProperty()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.ShouldMapPropertySetFuncOfPropertyInfoBoolean">
            <summary>Establecer el shim de ProfileConfiguration.set_ShouldMapProperty(Func`2&lt;PropertyInfo,Boolean&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.SourceExtensionMethodsGet">
            <summary>Establecer el shim de ProfileConfiguration.get_SourceExtensionMethods()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.SourceMemberNamingConventionGet">
            <summary>Establecer el shim de ProfileConfiguration.get_SourceMemberNamingConvention()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.SourceMemberNamingConventionSetINamingConvention">
            <summary>Establecer el shim de ProfileConfiguration.set_SourceMemberNamingConvention(INamingConvention value)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.AliasesGet">
            <summary>Establecer el shim de ProfileConfiguration.get_Aliases()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.AllowNullCollectionsGet">
            <summary>Establecer el shim de ProfileConfiguration.get_AllowNullCollections()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.AllowNullCollectionsSetBoolean">
            <summary>Establecer el shim de ProfileConfiguration.set_AllowNullCollections(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.AllowNullDestinationValuesGet">
            <summary>Establecer el shim de ProfileConfiguration.get_AllowNullDestinationValues()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.AllowNullDestinationValuesSetBoolean">
            <summary>Establecer el shim de ProfileConfiguration.set_AllowNullDestinationValues(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.ClearPrefixes">
            <summary>Establecer el shim de ProfileConfiguration.ClearPrefixes()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.ConstructorMappingEnabledGet">
            <summary>Establecer el shim de ProfileConfiguration.get_ConstructorMappingEnabled()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.ConstructorMappingEnabledSetBoolean">
            <summary>Establecer el shim de ProfileConfiguration.set_ConstructorMappingEnabled(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.DataReaderMapperYieldReturnEnabledGet">
            <summary>Establecer el shim de ProfileConfiguration.get_DataReaderMapperYieldReturnEnabled()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.DataReaderMapperYieldReturnEnabledSetBoolean">
            <summary>Establecer el shim de ProfileConfiguration.set_DataReaderMapperYieldReturnEnabled(Boolean value)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.DestinationMemberNamingConventionGet">
            <summary>Establecer el shim de ProfileConfiguration.get_DestinationMemberNamingConvention()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.DestinationMemberNamingConventionSetINamingConvention">
            <summary>Establecer el shim de ProfileConfiguration.set_DestinationMemberNamingConvention(INamingConvention value)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.DestinationPostfixesGet">
            <summary>Establecer el shim de ProfileConfiguration.get_DestinationPostfixes()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.DestinationPrefixesGet">
            <summary>Establecer el shim de ProfileConfiguration.get_DestinationPrefixes()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.IncludeSourceExtensionMethodsAssembly">
            <summary>Establecer el shim de ProfileConfiguration.IncludeSourceExtensionMethods(Assembly assembly)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.MapNullSourceCollectionsAsNullGet">
            <summary>Establecer el shim de ProfileConfiguration.get_MapNullSourceCollectionsAsNull()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.MapNullSourceValuesAsNullGet">
            <summary>Establecer el shim de ProfileConfiguration.get_MapNullSourceValuesAsNull()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.MemberNameReplacersGet">
            <summary>Establecer el shim de ProfileConfiguration.get_MemberNameReplacers()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.PostfixesGet">
            <summary>Establecer el shim de ProfileConfiguration.get_Postfixes()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.PrefixesGet">
            <summary>Establecer el shim de ProfileConfiguration.get_Prefixes()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.RecognizeAliasStringString">
            <summary>Establecer el shim de ProfileConfiguration.RecognizeAlias(String original, String alias)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.RecognizeDestinationPostfixesStringArray">
            <summary>Establecer el shim de ProfileConfiguration.RecognizeDestinationPostfixes(String[] postfixes)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.RecognizeDestinationPrefixesStringArray">
            <summary>Establecer el shim de ProfileConfiguration.RecognizeDestinationPrefixes(String[] prefixes)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.RecognizePostfixesStringArray">
            <summary>Establecer el shim de ProfileConfiguration.RecognizePostfixes(String[] postfixes)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.RecognizePrefixesStringArray">
            <summary>Establecer el shim de ProfileConfiguration.RecognizePrefixes(String[] prefixes)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.ReplaceMemberNameStringString">
            <summary>Establecer el shim de ProfileConfiguration.ReplaceMemberName(String original, String newValue)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.ShouldMapFieldGet">
            <summary>Establecer el shim de ProfileConfiguration.get_ShouldMapField()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.ShouldMapFieldSetFuncOfFieldInfoBoolean">
            <summary>Establecer el shim de ProfileConfiguration.set_ShouldMapField(Func`2&lt;FieldInfo,Boolean&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.ShouldMapPropertyGet">
            <summary>Establecer el shim de ProfileConfiguration.get_ShouldMapProperty()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.ShouldMapPropertySetFuncOfPropertyInfoBoolean">
            <summary>Establecer el shim de ProfileConfiguration.set_ShouldMapProperty(Func`2&lt;PropertyInfo,Boolean&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.SourceExtensionMethodsGet">
            <summary>Establecer el shim de ProfileConfiguration.get_SourceExtensionMethods()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.SourceMemberNamingConventionGet">
            <summary>Establecer el shim de ProfileConfiguration.get_SourceMemberNamingConvention()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProfileConfiguration.AllInstances.SourceMemberNamingConventionSetINamingConvention">
            <summary>Establecer el shim de ProfileConfiguration.set_SourceMemberNamingConvention(INamingConvention value)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimPropertyAccessor">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.PropertyAccessor</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPropertyAccessor.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPropertyAccessor.#ctor(AutoMapper.Internal.PropertyAccessor)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPropertyAccessor.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPropertyAccessor.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPropertyAccessor.Bind(AutoMapper.IMemberAccessor)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPropertyAccessor.Bind(AutoMapper.IMemberGetter)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPropertyAccessor.Bind(AutoMapper.IMemberResolver)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPropertyAccessor.Bind(AutoMapper.IValueResolver)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyAccessor.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyAccessor.ConstructorPropertyInfo">
            <summary>Establecer el shim de PropertyAccessor.PropertyAccessor(PropertyInfo propertyInfo)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyAccessor.HasSetterGet">
            <summary>Establecer el shim de PropertyAccessor.get_HasSetter()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyAccessor.SetValueObjectObject">
            <summary>Establecer el shim de PropertyAccessor.SetValue(Object destination, Object value)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimPropertyAccessor.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyAccessor.AllInstances.HasSetterGet">
            <summary>Establecer el shim de PropertyAccessor.get_HasSetter()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyAccessor.AllInstances.SetValueObjectObject">
            <summary>Establecer el shim de PropertyAccessor.SetValue(Object destination, Object value)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimPropertyGetter">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.PropertyGetter</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPropertyGetter.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPropertyGetter.#ctor(AutoMapper.Internal.PropertyGetter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPropertyGetter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPropertyGetter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPropertyGetter.Bind(AutoMapper.IMemberGetter)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPropertyGetter.Bind(AutoMapper.IMemberResolver)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPropertyGetter.Bind(AutoMapper.IValueResolver)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyGetter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyGetter.ConstructorPropertyInfo">
            <summary>Establecer el shim de PropertyGetter.PropertyGetter(PropertyInfo propertyInfo)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyGetter.EqualsObject">
            <summary>Establecer el shim de PropertyGetter.Equals(Object obj)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyGetter.EqualsPropertyGetter">
            <summary>Establecer el shim de PropertyGetter.Equals(PropertyGetter other)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyGetter.GetCustomAttributesBoolean">
            <summary>Establecer el shim de PropertyGetter.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyGetter.GetCustomAttributesTypeBoolean">
            <summary>Establecer el shim de PropertyGetter.GetCustomAttributes(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyGetter.GetHashCode">
            <summary>Establecer el shim de PropertyGetter.GetHashCode()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyGetter.GetValueObject">
            <summary>Establecer el shim de PropertyGetter.GetValue(Object source)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyGetter.IsDefinedTypeBoolean">
            <summary>Establecer el shim de PropertyGetter.IsDefined(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyGetter.MemberInfoGet">
            <summary>Establecer el shim de PropertyGetter.get_MemberInfo()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyGetter.MemberTypeGet">
            <summary>Establecer el shim de PropertyGetter.get_MemberType()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyGetter.NameGet">
            <summary>Establecer el shim de PropertyGetter.get_Name()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimPropertyGetter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyGetter.AllInstances.EqualsObject">
            <summary>Establecer el shim de PropertyGetter.Equals(Object obj)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyGetter.AllInstances.EqualsPropertyGetter">
            <summary>Establecer el shim de PropertyGetter.Equals(PropertyGetter other)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyGetter.AllInstances.GetCustomAttributesBoolean">
            <summary>Establecer el shim de PropertyGetter.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyGetter.AllInstances.GetCustomAttributesTypeBoolean">
            <summary>Establecer el shim de PropertyGetter.GetCustomAttributes(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyGetter.AllInstances.GetHashCode01">
            <summary>Establecer el shim de PropertyGetter.GetHashCode()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyGetter.AllInstances.GetValueObject">
            <summary>Establecer el shim de PropertyGetter.GetValue(Object source)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyGetter.AllInstances.IsDefinedTypeBoolean">
            <summary>Establecer el shim de PropertyGetter.IsDefined(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyGetter.AllInstances.MemberInfoGet">
            <summary>Establecer el shim de PropertyGetter.get_MemberInfo()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyGetter.AllInstances.MemberTypeGet">
            <summary>Establecer el shim de PropertyGetter.get_MemberType()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyGetter.AllInstances.NameGet">
            <summary>Establecer el shim de PropertyGetter.get_Name()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimPropertyNameResolver">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.PropertyNameResolver</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPropertyNameResolver.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPropertyNameResolver.#ctor(AutoMapper.Internal.PropertyNameResolver)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPropertyNameResolver.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPropertyNameResolver.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPropertyNameResolver.Bind(AutoMapper.IValueResolver)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyNameResolver.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyNameResolver.ConstructorTypeString">
            <summary>Establecer el shim de PropertyNameResolver.PropertyNameResolver(Type sourceType, String propertyName)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyNameResolver.ResolveResolutionResult">
            <summary>Establecer el shim de PropertyNameResolver.Resolve(ResolutionResult source)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimPropertyNameResolver.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPropertyNameResolver.AllInstances.ResolveResolutionResult">
            <summary>Establecer el shim de PropertyNameResolver.Resolve(ResolutionResult source)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimProxyBase">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.ProxyBase</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimProxyBase.#ctor(AutoMapper.Internal.ProxyBase)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimProxyBase.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimProxyBase.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProxyBase.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProxyBase.Constructor">
            <summary>Establecer el shim de ProxyBase.ProxyBase()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProxyBase.NotifyPropertyChangedPropertyChangedEventHandlerString">
            <summary>Establecer el shim de ProxyBase.NotifyPropertyChanged(PropertyChangedEventHandler handler, String method)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimProxyBase.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProxyBase.AllInstances.NotifyPropertyChangedPropertyChangedEventHandlerString">
            <summary>Establecer el shim de ProxyBase.NotifyPropertyChanged(PropertyChangedEventHandler handler, String method)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.ProxyGeneratorFactory</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.#ctor(AutoMapper.Internal.ProxyGeneratorFactory)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.Bind(AutoMapper.Internal.IProxyGeneratorFactory)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.Constructor">
            <summary>Establecer el shim de ProxyGeneratorFactory.ProxyGeneratorFactory()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.Create">
            <summary>Establecer el shim de ProxyGeneratorFactory.Create()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.AllInstances.Create">
            <summary>Establecer el shim de ProxyGeneratorFactory.Create()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.ShimNotSupportedProxyGenerator">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.ProxyGeneratorFactory+NotSupportedProxyGenerator</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.ShimNotSupportedProxyGenerator.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.ShimNotSupportedProxyGenerator.#ctor(AutoMapper.Internal.ProxyGeneratorFactory.NotSupportedProxyGenerator)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.ShimNotSupportedProxyGenerator.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.ShimNotSupportedProxyGenerator.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.ShimNotSupportedProxyGenerator.Bind(AutoMapper.Internal.IProxyGenerator)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.ShimNotSupportedProxyGenerator.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.ShimNotSupportedProxyGenerator.Constructor">
            <summary>Establecer el shim de NotSupportedProxyGenerator.NotSupportedProxyGenerator()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.ShimNotSupportedProxyGenerator.GetProxyTypeType">
            <summary>Establecer el shim de NotSupportedProxyGenerator.GetProxyType(Type interfaceType)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.ShimNotSupportedProxyGenerator.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.ShimNotSupportedProxyGenerator.AllInstances.GetProxyTypeType">
            <summary>Establecer el shim de NotSupportedProxyGenerator.GetProxyType(Type interfaceType)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.ReaderWriterLockSlimFactory</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.#ctor(AutoMapper.Internal.ReaderWriterLockSlimFactory)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.Bind(AutoMapper.Internal.IReaderWriterLockSlimFactory)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.Constructor">
            <summary>Establecer el shim de ReaderWriterLockSlimFactory.ReaderWriterLockSlimFactory()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.Create">
            <summary>Establecer el shim de ReaderWriterLockSlimFactory.Create()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.AllInstances.Create">
            <summary>Establecer el shim de ReaderWriterLockSlimFactory.Create()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.ReaderWriterLockSlimFactory+NoOpReaderWriterLock</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.#ctor(AutoMapper.Internal.ReaderWriterLockSlimFactory.NoOpReaderWriterLock)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.Bind(AutoMapper.Internal.IReaderWriterLockSlim)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.Bind(System.IDisposable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.Constructor">
            <summary>Establecer el shim de NoOpReaderWriterLock.NoOpReaderWriterLock()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.Dispose">
            <summary>Establecer el shim de NoOpReaderWriterLock.Dispose()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.EnterReadLock">
            <summary>Establecer el shim de NoOpReaderWriterLock.EnterReadLock()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.EnterUpgradeableReadLock">
            <summary>Establecer el shim de NoOpReaderWriterLock.EnterUpgradeableReadLock()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.EnterWriteLock">
            <summary>Establecer el shim de NoOpReaderWriterLock.EnterWriteLock()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.ExitReadLock">
            <summary>Establecer el shim de NoOpReaderWriterLock.ExitReadLock()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.ExitUpgradeableReadLock">
            <summary>Establecer el shim de NoOpReaderWriterLock.ExitUpgradeableReadLock()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.ExitWriteLock">
            <summary>Establecer el shim de NoOpReaderWriterLock.ExitWriteLock()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.AllInstances.Dispose">
            <summary>Establecer el shim de NoOpReaderWriterLock.Dispose()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.AllInstances.EnterReadLock">
            <summary>Establecer el shim de NoOpReaderWriterLock.EnterReadLock()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.AllInstances.EnterUpgradeableReadLock">
            <summary>Establecer el shim de NoOpReaderWriterLock.EnterUpgradeableReadLock()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.AllInstances.EnterWriteLock">
            <summary>Establecer el shim de NoOpReaderWriterLock.EnterWriteLock()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.AllInstances.ExitReadLock">
            <summary>Establecer el shim de NoOpReaderWriterLock.ExitReadLock()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.AllInstances.ExitUpgradeableReadLock">
            <summary>Establecer el shim de NoOpReaderWriterLock.ExitUpgradeableReadLock()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.AllInstances.ExitWriteLock">
            <summary>Establecer el shim de NoOpReaderWriterLock.ExitWriteLock()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimReflectionHelper">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.ReflectionHelper</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimReflectionHelper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimReflectionHelper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimReflectionHelper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReflectionHelper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReflectionHelper.FindPropertyLambdaExpression">
            <summary>Establecer el shim de ReflectionHelper.FindProperty(LambdaExpression lambdaExpression)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReflectionHelper.GetMemberTypeMemberInfo">
            <summary>Establecer el shim de ReflectionHelper.GetMemberType(MemberInfo memberInfo)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReflectionHelper.GetPropertyNameLambdaExpression">
            <summary>Establecer el shim de ReflectionHelper.GetPropertyName(LambdaExpression expression)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReflectionHelper.ReplaceItemTypeTypeTypeType">
            <summary>Establecer el shim de ReflectionHelper.ReplaceItemType(Type targetType, Type oldType, Type newType)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReflectionHelper.ToMemberAccessorMemberInfo">
            <summary>Establecer el shim de ReflectionHelper.ToMemberAccessor(MemberInfo accessorCandidate)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReflectionHelper.ToMemberGetterMemberInfo">
            <summary>Establecer el shim de ReflectionHelper.ToMemberGetter(MemberInfo accessorCandidate)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimResolutionExpression">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.ResolutionExpression</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimResolutionExpression.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimResolutionExpression.#ctor(AutoMapper.Internal.ResolutionExpression)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimResolutionExpression.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimResolutionExpression.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimResolutionExpression.Bind(AutoMapper.IResolutionExpression)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimResolutionExpression.Bind(AutoMapper.IResolverConfigurationExpression)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimResolutionExpression.Bind(AutoMapper.IResolutionExpression{System.Object})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimResolutionExpression.Bind(AutoMapper.IResolverConfigurationExpression{System.Object})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimResolutionExpression.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimResolutionExpression.ConstructorTypePropertyMap">
            <summary>Establecer el shim de ResolutionExpression.ResolutionExpression(Type sourceType, PropertyMap propertyMap)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimResolutionExpression.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimResolutionExpression`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.ResolutionExpression`1</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimResolutionExpression`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimResolutionExpression`1.#ctor(AutoMapper.Internal.ResolutionExpression{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimResolutionExpression`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimResolutionExpression`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimResolutionExpression`1.Bind(AutoMapper.IResolutionExpression)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimResolutionExpression`1.Bind(AutoMapper.IResolverConfigurationExpression)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimResolutionExpression`1.Bind(AutoMapper.IResolutionExpression{`0})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimResolutionExpression`1.Bind(AutoMapper.IResolverConfigurationExpression{`0})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimResolutionExpression`1.AutoMapperIResolverConfigurationExpressionConstructedByFuncOfIValueResolver">
            <summary>Establecer el shim de ResolutionExpression`1.AutoMapper.IResolverConfigurationExpression.ConstructedBy(Func`1&lt;IValueResolver&gt; constructor)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimResolutionExpression`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimResolutionExpression`1.ConstructedByFuncOfIValueResolver">
            <summary>Establecer el shim de ResolutionExpression`1.ConstructedBy(Func`1&lt;IValueResolver&gt; constructor)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimResolutionExpression`1.ConstructorPropertyMap">
            <summary>Establecer el shim de ResolutionExpression`1.ResolutionExpression`1(PropertyMap propertyMap)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimResolutionExpression`1.ConstructorTypePropertyMap">
            <summary>Establecer el shim de ResolutionExpression`1.ResolutionExpression`1(Type sourceType, PropertyMap propertyMap)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimResolutionExpression`1.FromMemberExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de ResolutionExpression`1.FromMember(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; sourceMember)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimResolutionExpression`1.FromMemberString">
            <summary>Establecer el shim de ResolutionExpression`1.FromMember(String sourcePropertyName)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimResolutionExpression`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimResolutionExpression`1.AllInstances.AutoMapperIResolverConfigurationExpressionConstructedByFuncOfIValueResolver">
            <summary>Establecer el shim de ResolutionExpression`1.AutoMapper.IResolverConfigurationExpression.ConstructedBy(Func`1&lt;IValueResolver&gt; constructor)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimResolutionExpression`1.AllInstances.ConstructedByFuncOfIValueResolver">
            <summary>Establecer el shim de ResolutionExpression`1.ConstructedBy(Func`1&lt;IValueResolver&gt; constructor)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimResolutionExpression`1.AllInstances.FromMemberExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de ResolutionExpression`1.FromMember(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; sourceMember)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimResolutionExpression`1.AllInstances.FromMemberString">
            <summary>Establecer el shim de ResolutionExpression`1.FromMember(String sourcePropertyName)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimResolutionExpression`2">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.ResolutionExpression`2</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimResolutionExpression`2.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimResolutionExpression`2.#ctor(AutoMapper.Internal.ResolutionExpression{`0,`1})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimResolutionExpression`2.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimResolutionExpression`2.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimResolutionExpression`2.Bind(AutoMapper.IResolverConfigurationExpression{`0,`1})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimResolutionExpression`2.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimResolutionExpression`2.ConstructedByFuncOfT1">
            <summary>Establecer el shim de ResolutionExpression`2.ConstructedBy(Func`1&lt;!1&gt; constructor)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimResolutionExpression`2.ConstructorPropertyMap">
            <summary>Establecer el shim de ResolutionExpression`2.ResolutionExpression`2(PropertyMap propertyMap)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimResolutionExpression`2.FromMemberExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de ResolutionExpression`2.FromMember(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; sourceMember)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimResolutionExpression`2.FromMemberString">
            <summary>Establecer el shim de ResolutionExpression`2.FromMember(String sourcePropertyName)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimResolutionExpression`2.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimResolutionExpression`2.AllInstances.ConstructedByFuncOfT1">
            <summary>Establecer el shim de ResolutionExpression`2.ConstructedBy(Func`1&lt;!1&gt; constructor)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimResolutionExpression`2.AllInstances.FromMemberExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de ResolutionExpression`2.FromMember(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; sourceMember)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimResolutionExpression`2.AllInstances.FromMemberString">
            <summary>Establecer el shim de ResolutionExpression`2.FromMember(String sourcePropertyName)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimValueTypeFieldAccessor">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.ValueTypeFieldAccessor</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimValueTypeFieldAccessor.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimValueTypeFieldAccessor.#ctor(AutoMapper.Internal.ValueTypeFieldAccessor)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimValueTypeFieldAccessor.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimValueTypeFieldAccessor.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimValueTypeFieldAccessor.Bind(AutoMapper.IMemberAccessor)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimValueTypeFieldAccessor.Bind(AutoMapper.IMemberGetter)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimValueTypeFieldAccessor.Bind(AutoMapper.IMemberResolver)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimValueTypeFieldAccessor.Bind(AutoMapper.IValueResolver)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimValueTypeFieldAccessor.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimValueTypeFieldAccessor.ConstructorFieldInfo">
            <summary>Establecer el shim de ValueTypeFieldAccessor.ValueTypeFieldAccessor(FieldInfo fieldInfo)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimValueTypeFieldAccessor.SetValueObjectObject">
            <summary>Establecer el shim de ValueTypeFieldAccessor.SetValue(Object destination, Object value)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimValueTypeFieldAccessor.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimValueTypeFieldAccessor.AllInstances.SetValueObjectObject">
            <summary>Establecer el shim de ValueTypeFieldAccessor.SetValue(Object destination, Object value)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimValueTypePropertyAccessor">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Internal.ValueTypePropertyAccessor</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimValueTypePropertyAccessor.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimValueTypePropertyAccessor.#ctor(AutoMapper.Internal.ValueTypePropertyAccessor)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimValueTypePropertyAccessor.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimValueTypePropertyAccessor.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimValueTypePropertyAccessor.Bind(AutoMapper.IMemberAccessor)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimValueTypePropertyAccessor.Bind(AutoMapper.IMemberGetter)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimValueTypePropertyAccessor.Bind(AutoMapper.IMemberResolver)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimValueTypePropertyAccessor.Bind(AutoMapper.IValueResolver)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimValueTypePropertyAccessor.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimValueTypePropertyAccessor.ConstructorPropertyInfo">
            <summary>Establecer el shim de ValueTypePropertyAccessor.ValueTypePropertyAccessor(PropertyInfo propertyInfo)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimValueTypePropertyAccessor.HasSetterGet">
            <summary>Establecer el shim de ValueTypePropertyAccessor.get_HasSetter()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimValueTypePropertyAccessor.SetValueObjectObject">
            <summary>Establecer el shim de ValueTypePropertyAccessor.SetValue(Object destination, Object value)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimValueTypePropertyAccessor.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimValueTypePropertyAccessor.AllInstances.HasSetterGet">
            <summary>Establecer el shim de ValueTypePropertyAccessor.get_HasSetter()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimValueTypePropertyAccessor.AllInstances.SetValueObjectObject">
            <summary>Establecer el shim de ValueTypePropertyAccessor.SetValue(Object destination, Object value)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubDefaultResolver">
            <summary>Tipo stub de AutoMapper.Internal.DefaultResolver</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubDefaultResolver.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubDefaultResolver.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubDefaultResolver</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubDefaultResolver.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubDefaultResolver.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubDefaultResolver.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubDeferredInstantiatedConverter">
            <summary>Tipo stub de AutoMapper.Internal.DeferredInstantiatedConverter</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubDeferredInstantiatedConverter.#ctor(System.Type,System.Func{AutoMapper.ResolutionContext,System.Object})">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubDeferredInstantiatedConverter.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubDeferredInstantiatedConverter</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubDeferredInstantiatedConverter.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubDeferredInstantiatedConverter.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubDeferredInstantiatedConverter.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubDeferredInstantiatedConverter`2">
            <summary>Tipo stub de AutoMapper.Internal.DeferredInstantiatedConverter`2</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubDeferredInstantiatedConverter`2.#ctor(System.Func{AutoMapper.ResolutionContext,AutoMapper.ITypeConverter{`0,`1}})">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubDeferredInstantiatedConverter`2.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubDeferredInstantiatedConverter</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubDeferredInstantiatedConverter`2.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubDeferredInstantiatedConverter`2.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubDeferredInstantiatedConverter`2.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubDeferredInstantiatedResolver">
            <summary>Tipo stub de AutoMapper.Internal.DeferredInstantiatedResolver</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubDeferredInstantiatedResolver.#ctor(System.Func{AutoMapper.ResolutionContext,AutoMapper.IValueResolver})">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubDeferredInstantiatedResolver.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubDeferredInstantiatedResolver</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubDeferredInstantiatedResolver.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubDeferredInstantiatedResolver.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubDeferredInstantiatedResolver.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubDelegateBasedResolver`1">
            <summary>Tipo stub de AutoMapper.Internal.DelegateBasedResolver`1</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubDelegateBasedResolver`1.#ctor(System.Func{AutoMapper.ResolutionResult,System.Object})">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubDelegateBasedResolver`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubDelegateBasedResolver</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubDelegateBasedResolver`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubDelegateBasedResolver`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubDelegateBasedResolver`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubDelegateBasedResolver`2">
            <summary>Tipo stub de AutoMapper.Internal.DelegateBasedResolver`2</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubDelegateBasedResolver`2.#ctor(System.Func{`0,`1})">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubDelegateBasedResolver`2.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubDelegateBasedResolver</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubDelegateBasedResolver`2.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubDelegateBasedResolver`2.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubDelegateBasedResolver`2.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubDelegateFactory">
            <summary>Tipo stub de AutoMapper.Internal.DelegateFactory</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubDelegateFactory.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubDelegateFactory.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubDelegateFactory</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubDelegateFactory.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubDelegateFactory.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubDelegateFactory.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubDictionaryFactory">
            <summary>Tipo stub de AutoMapper.Internal.DictionaryFactory</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubDictionaryFactory.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubDictionaryFactory.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubDictionaryFactory</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubDictionaryFactory.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubDictionaryFactory.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubDictionaryFactory.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubEnumNameValueMapperFactory">
            <summary>Tipo stub de AutoMapper.Internal.EnumNameValueMapperFactory</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubEnumNameValueMapperFactory.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubEnumNameValueMapperFactory.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubEnumNameValueMapperFactory</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubEnumNameValueMapperFactory.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubEnumNameValueMapperFactory.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubEnumNameValueMapperFactory.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubFieldAccessor">
            <summary>Tipo stub de AutoMapper.Internal.FieldAccessor</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubFieldAccessor.#ctor(System.Reflection.FieldInfo)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubFieldAccessor.Equals(System.Object)">
            <summary>Establecer el stub de FieldGetter.Equals(Object obj)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubFieldAccessor.EqualsObject">
            <summary>Establecer el stub de FieldGetter.Equals(Object obj)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubFieldAccessor.GetCustomAttributes(System.Boolean)">
            <summary>Establecer el stub de FieldGetter.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubFieldAccessor.GetCustomAttributes(System.Type,System.Boolean)">
            <summary>Establecer el stub de FieldGetter.GetCustomAttributes(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubFieldAccessor.GetCustomAttributesBoolean">
            <summary>Establecer el stub de FieldGetter.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubFieldAccessor.GetCustomAttributesTypeBoolean">
            <summary>Establecer el stub de FieldGetter.GetCustomAttributes(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubFieldAccessor.GetHashCode">
            <summary>Establecer el stub de FieldGetter.GetHashCode()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubFieldAccessor.GetHashCode01">
            <summary>Establecer el stub de FieldGetter.GetHashCode()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubFieldAccessor.GetValue(System.Object)">
            <summary>Establecer el stub de FieldGetter.GetValue(Object source)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubFieldAccessor.GetValueObject">
            <summary>Establecer el stub de FieldGetter.GetValue(Object source)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubFieldAccessor.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubFieldAccessor</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubFieldAccessor.IsDefined(System.Type,System.Boolean)">
            <summary>Establecer el stub de FieldGetter.IsDefined(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubFieldAccessor.IsDefinedTypeBoolean">
            <summary>Establecer el stub de FieldGetter.IsDefined(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubFieldAccessor.MemberInfoGet">
            <summary>Establecer el stub de FieldGetter.get_MemberInfo()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubFieldAccessor.MemberTypeGet">
            <summary>Establecer el stub de FieldGetter.get_MemberType()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubFieldAccessor.NameGet">
            <summary>Establecer el stub de FieldGetter.get_Name()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubFieldAccessor.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubFieldAccessor.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubFieldAccessor.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubFieldAccessor.MemberInfo">
            <summary>Establecer el stub de FieldGetter.get_MemberInfo()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubFieldAccessor.MemberType">
            <summary>Establecer el stub de FieldGetter.get_MemberType()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubFieldAccessor.Name">
            <summary>Establecer el stub de FieldGetter.get_Name()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubFieldGetter">
            <summary>Tipo stub de AutoMapper.Internal.FieldGetter</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubFieldGetter.#ctor(System.Reflection.FieldInfo)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubFieldGetter.Equals(System.Object)">
            <summary>Establecer el stub de FieldGetter.Equals(Object obj)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubFieldGetter.EqualsObject">
            <summary>Establecer el stub de FieldGetter.Equals(Object obj)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubFieldGetter.GetCustomAttributes(System.Boolean)">
            <summary>Establecer el stub de FieldGetter.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubFieldGetter.GetCustomAttributes(System.Type,System.Boolean)">
            <summary>Establecer el stub de FieldGetter.GetCustomAttributes(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubFieldGetter.GetCustomAttributesBoolean">
            <summary>Establecer el stub de FieldGetter.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubFieldGetter.GetCustomAttributesTypeBoolean">
            <summary>Establecer el stub de FieldGetter.GetCustomAttributes(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubFieldGetter.GetHashCode">
            <summary>Establecer el stub de FieldGetter.GetHashCode()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubFieldGetter.GetHashCode01">
            <summary>Establecer el stub de FieldGetter.GetHashCode()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubFieldGetter.GetValue(System.Object)">
            <summary>Establecer el stub de FieldGetter.GetValue(Object source)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubFieldGetter.GetValueObject">
            <summary>Establecer el stub de FieldGetter.GetValue(Object source)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubFieldGetter.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubFieldGetter</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubFieldGetter.IsDefined(System.Type,System.Boolean)">
            <summary>Establecer el stub de FieldGetter.IsDefined(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubFieldGetter.IsDefinedTypeBoolean">
            <summary>Establecer el stub de FieldGetter.IsDefined(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubFieldGetter.MemberInfoGet">
            <summary>Establecer el stub de FieldGetter.get_MemberInfo()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubFieldGetter.MemberTypeGet">
            <summary>Establecer el stub de FieldGetter.get_MemberType()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubFieldGetter.NameGet">
            <summary>Establecer el stub de FieldGetter.get_Name()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubFieldGetter.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubFieldGetter.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubFieldGetter.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubFieldGetter.MemberInfo">
            <summary>Establecer el stub de FieldGetter.get_MemberInfo()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubFieldGetter.MemberType">
            <summary>Establecer el stub de FieldGetter.get_MemberType()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubFieldGetter.Name">
            <summary>Establecer el stub de FieldGetter.get_Name()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubIDictionary`2">
            <summary>Tipo stub de AutoMapper.Internal.IDictionary`2</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIDictionary`2.#ctor">
            <summary>Inicializa una nueva instancia de type StubIDictionary</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIDictionary`2.AddOrUpdateT0T1FuncOfT0T1T1">
            <summary>Establecer el stub de IDictionary`2.AddOrUpdate(!0 key, !1 addValue, Func`3&lt;!0,!1,!1&gt; updateValueFactory)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIDictionary`2.am::AutoMapper#Internal#IDictionary{TKey@TValue}#AddOrUpdate(`0,`1,System.Func{`0,`1,`1})">
            <summary>Establecer el stub de IDictionary`2.AddOrUpdate(!0 key, !1 addValue, Func`3&lt;!0,!1,!1&gt; updateValueFactory)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIDictionary`2.am::AutoMapper#Internal#IDictionary{TKey@TValue}#Clear">
            <summary>Establecer el stub de IDictionary`2.Clear()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIDictionary`2.am::AutoMapper#Internal#IDictionary{TKey@TValue}#ContainsKey(`0)">
            <summary>Establecer el stub de IDictionary`2.ContainsKey(!0 key)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIDictionary`2.am::AutoMapper#Internal#IDictionary{TKey@TValue}#GetOrAdd(`0,System.Func{`0,`1})">
            <summary>Establecer el stub de IDictionary`2.GetOrAdd(!0 key, Func`2&lt;!0,!1&gt; valueFactory)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIDictionary`2.am::AutoMapper#Internal#IDictionary{TKey@TValue}#TryGetValue(`0,`1@)">
            <summary>Establecer el stub de IDictionary`2.TryGetValue(!0 key, !1&amp; value)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIDictionary`2.am::AutoMapper#Internal#IDictionary{TKey@TValue}#TryRemove(`0,`1@)">
            <summary>Establecer el stub de IDictionary`2.TryRemove(!0 key, !1&amp; value)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIDictionary`2.Clear">
            <summary>Establecer el stub de IDictionary`2.Clear()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIDictionary`2.ContainsKeyT0">
            <summary>Establecer el stub de IDictionary`2.ContainsKey(!0 key)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIDictionary`2.GetOrAddT0FuncOfT0T1">
            <summary>Establecer el stub de IDictionary`2.GetOrAdd(!0 key, Func`2&lt;!0,!1&gt; valueFactory)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIDictionary`2.ItemGetT0">
            <summary>Establecer el stub de IDictionary`2.get_Item(!0 key)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIDictionary`2.ItemSetT0T1">
            <summary>Establecer el stub de IDictionary`2.set_Item(!0 key, !1 value)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIDictionary`2.KeysGet">
            <summary>Establecer el stub de IDictionary`2.get_Keys()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIDictionary`2.TryGetValueT0T1Out">
            <summary>Establecer el stub de IDictionary`2.TryGetValue(!0 key, !1&amp; value)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIDictionary`2.TryRemoveT0T1Out">
            <summary>Establecer el stub de IDictionary`2.TryRemove(!0 key, !1&amp; value)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIDictionary`2.ValuesGet">
            <summary>Establecer el stub de IDictionary`2.get_Values()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubIDictionary`2.AutoMapper#Internal#IDictionary{TKey@TValue}#Item(`0)">
            <summary>Establecer el stub de IDictionary`2.get_Item(!0 key)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubIDictionary`2.am::AutoMapper#Internal#IDictionary{TKey@TValue}#Keys">
            <summary>Establecer el stub de IDictionary`2.get_Keys()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubIDictionary`2.am::AutoMapper#Internal#IDictionary{TKey@TValue}#Values">
            <summary>Establecer el stub de IDictionary`2.get_Values()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubIDictionaryFactory">
            <summary>Tipo stub de AutoMapper.Internal.IDictionaryFactory</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIDictionaryFactory.#ctor">
            <summary>Inicializa una nueva instancia de type StubIDictionaryFactory</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIDictionaryFactory.am::AutoMapper#Internal#IDictionaryFactory#CreateDictionary``2">
            <summary>Establecer el stub de IDictionaryFactory.CreateDictionary()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIDictionaryFactory.CreateDictionaryOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.Internal.IDictionary{``0,``1}})">
            <summary>Establecer stubs de CreateDictionary()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubIEnumNameValueMapper">
            <summary>Tipo stub de AutoMapper.Internal.IEnumNameValueMapper</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIEnumNameValueMapper.#ctor">
            <summary>Inicializa una nueva instancia de type StubIEnumNameValueMapper</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIEnumNameValueMapper.am::AutoMapper#Internal#IEnumNameValueMapper#Convert(System.Type,System.Type,AutoMapper.ResolutionContext)">
            <summary>Establecer el stub de IEnumNameValueMapper.Convert(Type enumSourceType, Type enumDestinationType, ResolutionContext context)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIEnumNameValueMapper.am::AutoMapper#Internal#IEnumNameValueMapper#IsMatch(System.Type,System.String)">
            <summary>Establecer el stub de IEnumNameValueMapper.IsMatch(Type enumDestinationType, String sourceValue)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIEnumNameValueMapper.ConvertTypeTypeResolutionContext">
            <summary>Establecer el stub de IEnumNameValueMapper.Convert(Type enumSourceType, Type enumDestinationType, ResolutionContext context)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIEnumNameValueMapper.IsMatchTypeString">
            <summary>Establecer el stub de IEnumNameValueMapper.IsMatch(Type enumDestinationType, String sourceValue)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubIEnumNameValueMapperFactory">
            <summary>Tipo stub de AutoMapper.Internal.IEnumNameValueMapperFactory</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIEnumNameValueMapperFactory.#ctor">
            <summary>Inicializa una nueva instancia de type StubIEnumNameValueMapperFactory</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIEnumNameValueMapperFactory.am::AutoMapper#Internal#IEnumNameValueMapperFactory#Create">
            <summary>Establecer el stub de IEnumNameValueMapperFactory.Create()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIEnumNameValueMapperFactory.Create">
            <summary>Establecer el stub de IEnumNameValueMapperFactory.Create()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubILazy`1">
            <summary>Tipo stub de AutoMapper.Internal.ILazy`1</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubILazy`1.#ctor">
            <summary>Inicializa una nueva instancia de type StubILazy</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubILazy`1.ValueGet">
            <summary>Establecer el stub de ILazy`1.get_Value()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubILazy`1.am::AutoMapper#Internal#ILazy{T}#Value">
            <summary>Establecer el stub de ILazy`1.get_Value()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubINullableConverter">
            <summary>Tipo stub de AutoMapper.Internal.INullableConverter</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubINullableConverter.#ctor">
            <summary>Inicializa una nueva instancia de type StubINullableConverter</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubINullableConverter.am::AutoMapper#Internal#INullableConverter#ConvertFrom(System.Object)">
            <summary>Establecer el stub de INullableConverter.ConvertFrom(Object value)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubINullableConverter.ConvertFromObject">
            <summary>Establecer el stub de INullableConverter.ConvertFrom(Object value)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubINullableConverter.UnderlyingTypeGet">
            <summary>Establecer el stub de INullableConverter.get_UnderlyingType()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubINullableConverter.am::AutoMapper#Internal#INullableConverter#UnderlyingType">
            <summary>Establecer el stub de INullableConverter.get_UnderlyingType()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubINullableConverterFactory">
            <summary>Tipo stub de AutoMapper.Internal.INullableConverterFactory</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubINullableConverterFactory.#ctor">
            <summary>Inicializa una nueva instancia de type StubINullableConverterFactory</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubINullableConverterFactory.am::AutoMapper#Internal#INullableConverterFactory#Create(System.Type)">
            <summary>Establecer el stub de INullableConverterFactory.Create(Type nullableType)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubINullableConverterFactory.CreateType">
            <summary>Establecer el stub de INullableConverterFactory.Create(Type nullableType)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubIProxyGenerator">
            <summary>Tipo stub de AutoMapper.Internal.IProxyGenerator</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIProxyGenerator.#ctor">
            <summary>Inicializa una nueva instancia de type StubIProxyGenerator</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIProxyGenerator.am::AutoMapper#Internal#IProxyGenerator#GetProxyType(System.Type)">
            <summary>Establecer el stub de IProxyGenerator.GetProxyType(Type interfaceType)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIProxyGenerator.GetProxyTypeType">
            <summary>Establecer el stub de IProxyGenerator.GetProxyType(Type interfaceType)</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubIProxyGeneratorFactory">
            <summary>Tipo stub de AutoMapper.Internal.IProxyGeneratorFactory</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIProxyGeneratorFactory.#ctor">
            <summary>Inicializa una nueva instancia de type StubIProxyGeneratorFactory</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIProxyGeneratorFactory.am::AutoMapper#Internal#IProxyGeneratorFactory#Create">
            <summary>Establecer el stub de IProxyGeneratorFactory.Create()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIProxyGeneratorFactory.Create">
            <summary>Establecer el stub de IProxyGeneratorFactory.Create()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim">
            <summary>Tipo stub de AutoMapper.Internal.IReaderWriterLockSlim</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim.#ctor">
            <summary>Inicializa una nueva instancia de type StubIReaderWriterLockSlim</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim.am::AutoMapper#Internal#IReaderWriterLockSlim#EnterReadLock">
            <summary>Establecer el stub de IReaderWriterLockSlim.EnterReadLock()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim.am::AutoMapper#Internal#IReaderWriterLockSlim#EnterUpgradeableReadLock">
            <summary>Establecer el stub de IReaderWriterLockSlim.EnterUpgradeableReadLock()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim.am::AutoMapper#Internal#IReaderWriterLockSlim#EnterWriteLock">
            <summary>Establecer el stub de IReaderWriterLockSlim.EnterWriteLock()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim.am::AutoMapper#Internal#IReaderWriterLockSlim#ExitReadLock">
            <summary>Establecer el stub de IReaderWriterLockSlim.ExitReadLock()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim.am::AutoMapper#Internal#IReaderWriterLockSlim#ExitUpgradeableReadLock">
            <summary>Establecer el stub de IReaderWriterLockSlim.ExitUpgradeableReadLock()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim.am::AutoMapper#Internal#IReaderWriterLockSlim#ExitWriteLock">
            <summary>Establecer el stub de IReaderWriterLockSlim.ExitWriteLock()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim.Dispose">
            <summary>Establecer el stub de IDisposable.Dispose()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim.EnterReadLock">
            <summary>Establecer el stub de IReaderWriterLockSlim.EnterReadLock()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim.EnterUpgradeableReadLock">
            <summary>Establecer el stub de IReaderWriterLockSlim.EnterUpgradeableReadLock()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim.EnterWriteLock">
            <summary>Establecer el stub de IReaderWriterLockSlim.EnterWriteLock()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim.ExitReadLock">
            <summary>Establecer el stub de IReaderWriterLockSlim.ExitReadLock()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim.ExitUpgradeableReadLock">
            <summary>Establecer el stub de IReaderWriterLockSlim.ExitUpgradeableReadLock()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim.ExitWriteLock">
            <summary>Establecer el stub de IReaderWriterLockSlim.ExitWriteLock()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim.global::System#IDisposable#Dispose">
            <summary>Establecer el stub de IDisposable.Dispose()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlimFactory">
            <summary>Tipo stub de AutoMapper.Internal.IReaderWriterLockSlimFactory</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlimFactory.#ctor">
            <summary>Inicializa una nueva instancia de type StubIReaderWriterLockSlimFactory</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlimFactory.am::AutoMapper#Internal#IReaderWriterLockSlimFactory#Create">
            <summary>Establecer el stub de IReaderWriterLockSlimFactory.Create()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlimFactory.Create">
            <summary>Establecer el stub de IReaderWriterLockSlimFactory.Create()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubMappingExpression">
            <summary>Tipo stub de AutoMapper.Internal.MappingExpression</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubMappingExpression.#ctor(AutoMapper.TypeMap,System.Func{System.Type,System.Object})">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubMappingExpression.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMappingExpression</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubMappingExpression.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubMappingExpression.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubMappingExpression.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubMappingExpression`2">
            <summary>Tipo stub de AutoMapper.Internal.MappingExpression`2</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubMappingExpression`2.#ctor(AutoMapper.TypeMap,System.Func{System.Type,System.Object},AutoMapper.IProfileExpression)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubMappingExpression`2.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMappingExpression</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubMappingExpression`2.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubMappingExpression`2.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubMappingExpression`2.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubMemberGetter">
            <summary>Tipo stub de AutoMapper.Internal.MemberGetter</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubMemberGetter.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubMemberGetter.GetCustomAttributes(System.Boolean)">
            <summary>Establecer el stub de MemberGetter.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubMemberGetter.GetCustomAttributes(System.Type,System.Boolean)">
            <summary>Establecer el stub de MemberGetter.GetCustomAttributes(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubMemberGetter.GetCustomAttributesBoolean">
            <summary>Establecer el stub de MemberGetter.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubMemberGetter.GetCustomAttributesTypeBoolean">
            <summary>Establecer el stub de MemberGetter.GetCustomAttributes(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubMemberGetter.GetValue(System.Object)">
            <summary>Establecer el stub de MemberGetter.GetValue(Object source)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubMemberGetter.GetValueObject">
            <summary>Establecer el stub de MemberGetter.GetValue(Object source)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubMemberGetter.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMemberGetter</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubMemberGetter.IsDefined(System.Type,System.Boolean)">
            <summary>Establecer el stub de MemberGetter.IsDefined(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubMemberGetter.IsDefinedTypeBoolean">
            <summary>Establecer el stub de MemberGetter.IsDefined(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubMemberGetter.MemberInfoGet">
            <summary>Establecer el stub de MemberGetter.get_MemberInfo()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubMemberGetter.MemberTypeGet">
            <summary>Establecer el stub de MemberGetter.get_MemberType()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubMemberGetter.NameGet">
            <summary>Establecer el stub de MemberGetter.get_Name()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubMemberGetter.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubMemberGetter.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubMemberGetter.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubMemberGetter.MemberInfo">
            <summary>Establecer el stub de MemberGetter.get_MemberInfo()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubMemberGetter.MemberType">
            <summary>Establecer el stub de MemberGetter.get_MemberType()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubMemberGetter.Name">
            <summary>Establecer el stub de MemberGetter.get_Name()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubMemberNameReplacer">
            <summary>Tipo stub de AutoMapper.Internal.MemberNameReplacer</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubMemberNameReplacer.#ctor(System.String,System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubMemberNameReplacer.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMemberNameReplacer</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubMemberNameReplacer.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubMemberNameReplacer.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubMemberNameReplacer.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubMethodGetter">
            <summary>Tipo stub de AutoMapper.Internal.MethodGetter</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubMethodGetter.#ctor(System.Reflection.MethodInfo)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubMethodGetter.Equals(System.Object)">
            <summary>Establecer el stub de MethodGetter.Equals(Object obj)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubMethodGetter.EqualsObject">
            <summary>Establecer el stub de MethodGetter.Equals(Object obj)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubMethodGetter.GetCustomAttributes(System.Boolean)">
            <summary>Establecer el stub de MethodGetter.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubMethodGetter.GetCustomAttributes(System.Type,System.Boolean)">
            <summary>Establecer el stub de MethodGetter.GetCustomAttributes(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubMethodGetter.GetCustomAttributesBoolean">
            <summary>Establecer el stub de MethodGetter.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubMethodGetter.GetCustomAttributesTypeBoolean">
            <summary>Establecer el stub de MethodGetter.GetCustomAttributes(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubMethodGetter.GetHashCode">
            <summary>Establecer el stub de MethodGetter.GetHashCode()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubMethodGetter.GetHashCode01">
            <summary>Establecer el stub de MethodGetter.GetHashCode()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubMethodGetter.GetValue(System.Object)">
            <summary>Establecer el stub de MethodGetter.GetValue(Object source)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubMethodGetter.GetValueObject">
            <summary>Establecer el stub de MethodGetter.GetValue(Object source)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubMethodGetter.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMethodGetter</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubMethodGetter.IsDefined(System.Type,System.Boolean)">
            <summary>Establecer el stub de MethodGetter.IsDefined(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubMethodGetter.IsDefinedTypeBoolean">
            <summary>Establecer el stub de MethodGetter.IsDefined(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubMethodGetter.MemberInfoGet">
            <summary>Establecer el stub de MethodGetter.get_MemberInfo()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubMethodGetter.MemberTypeGet">
            <summary>Establecer el stub de MethodGetter.get_MemberType()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubMethodGetter.NameGet">
            <summary>Establecer el stub de MethodGetter.get_Name()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubMethodGetter.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubMethodGetter.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubMethodGetter.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubMethodGetter.MemberInfo">
            <summary>Establecer el stub de MethodGetter.get_MemberInfo()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubMethodGetter.MemberType">
            <summary>Establecer el stub de MethodGetter.get_MemberType()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubMethodGetter.Name">
            <summary>Establecer el stub de MethodGetter.get_Name()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubNullReplacementMethod">
            <summary>Tipo stub de AutoMapper.Internal.NullReplacementMethod</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubNullReplacementMethod.#ctor(System.Object)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubNullReplacementMethod.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubNullReplacementMethod</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubNullReplacementMethod.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubNullReplacementMethod.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubNullReplacementMethod.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubNullableConverterFactory">
            <summary>Tipo stub de AutoMapper.Internal.NullableConverterFactory</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubNullableConverterFactory.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubNullableConverterFactory.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubNullableConverterFactory</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubNullableConverterFactory.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubNullableConverterFactory.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubNullableConverterFactory.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubProfileConfiguration">
            <summary>Tipo stub de AutoMapper.Internal.ProfileConfiguration</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubProfileConfiguration.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubProfileConfiguration.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubProfileConfiguration</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubProfileConfiguration.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubProfileConfiguration.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubProfileConfiguration.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubPropertyAccessor">
            <summary>Tipo stub de AutoMapper.Internal.PropertyAccessor</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubPropertyAccessor.#ctor(System.Reflection.PropertyInfo)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubPropertyAccessor.Equals(System.Object)">
            <summary>Establecer el stub de PropertyGetter.Equals(Object obj)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubPropertyAccessor.EqualsObject">
            <summary>Establecer el stub de PropertyGetter.Equals(Object obj)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubPropertyAccessor.GetCustomAttributes(System.Boolean)">
            <summary>Establecer el stub de PropertyGetter.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubPropertyAccessor.GetCustomAttributes(System.Type,System.Boolean)">
            <summary>Establecer el stub de PropertyGetter.GetCustomAttributes(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubPropertyAccessor.GetCustomAttributesBoolean">
            <summary>Establecer el stub de PropertyGetter.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubPropertyAccessor.GetCustomAttributesTypeBoolean">
            <summary>Establecer el stub de PropertyGetter.GetCustomAttributes(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubPropertyAccessor.GetHashCode">
            <summary>Establecer el stub de PropertyGetter.GetHashCode()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubPropertyAccessor.GetHashCode01">
            <summary>Establecer el stub de PropertyGetter.GetHashCode()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubPropertyAccessor.GetValue(System.Object)">
            <summary>Establecer el stub de PropertyGetter.GetValue(Object source)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubPropertyAccessor.GetValueObject">
            <summary>Establecer el stub de PropertyGetter.GetValue(Object source)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubPropertyAccessor.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPropertyAccessor</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubPropertyAccessor.IsDefined(System.Type,System.Boolean)">
            <summary>Establecer el stub de PropertyGetter.IsDefined(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubPropertyAccessor.IsDefinedTypeBoolean">
            <summary>Establecer el stub de PropertyGetter.IsDefined(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubPropertyAccessor.MemberInfoGet">
            <summary>Establecer el stub de PropertyGetter.get_MemberInfo()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubPropertyAccessor.MemberTypeGet">
            <summary>Establecer el stub de PropertyGetter.get_MemberType()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubPropertyAccessor.NameGet">
            <summary>Establecer el stub de PropertyGetter.get_Name()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubPropertyAccessor.SetValue(System.Object,System.Object)">
            <summary>Establecer el stub de PropertyAccessor.SetValue(Object destination, Object value)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubPropertyAccessor.SetValueObjectObject">
            <summary>Establecer el stub de PropertyAccessor.SetValue(Object destination, Object value)</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubPropertyAccessor.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubPropertyAccessor.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubPropertyAccessor.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubPropertyAccessor.MemberInfo">
            <summary>Establecer el stub de PropertyGetter.get_MemberInfo()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubPropertyAccessor.MemberType">
            <summary>Establecer el stub de PropertyGetter.get_MemberType()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubPropertyAccessor.Name">
            <summary>Establecer el stub de PropertyGetter.get_Name()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubPropertyGetter">
            <summary>Tipo stub de AutoMapper.Internal.PropertyGetter</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubPropertyGetter.#ctor(System.Reflection.PropertyInfo)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubPropertyGetter.Equals(System.Object)">
            <summary>Establecer el stub de PropertyGetter.Equals(Object obj)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubPropertyGetter.EqualsObject">
            <summary>Establecer el stub de PropertyGetter.Equals(Object obj)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubPropertyGetter.GetCustomAttributes(System.Boolean)">
            <summary>Establecer el stub de PropertyGetter.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubPropertyGetter.GetCustomAttributes(System.Type,System.Boolean)">
            <summary>Establecer el stub de PropertyGetter.GetCustomAttributes(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubPropertyGetter.GetCustomAttributesBoolean">
            <summary>Establecer el stub de PropertyGetter.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubPropertyGetter.GetCustomAttributesTypeBoolean">
            <summary>Establecer el stub de PropertyGetter.GetCustomAttributes(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubPropertyGetter.GetHashCode">
            <summary>Establecer el stub de PropertyGetter.GetHashCode()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubPropertyGetter.GetHashCode01">
            <summary>Establecer el stub de PropertyGetter.GetHashCode()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubPropertyGetter.GetValue(System.Object)">
            <summary>Establecer el stub de PropertyGetter.GetValue(Object source)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubPropertyGetter.GetValueObject">
            <summary>Establecer el stub de PropertyGetter.GetValue(Object source)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubPropertyGetter.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPropertyGetter</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubPropertyGetter.IsDefined(System.Type,System.Boolean)">
            <summary>Establecer el stub de PropertyGetter.IsDefined(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubPropertyGetter.IsDefinedTypeBoolean">
            <summary>Establecer el stub de PropertyGetter.IsDefined(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubPropertyGetter.MemberInfoGet">
            <summary>Establecer el stub de PropertyGetter.get_MemberInfo()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubPropertyGetter.MemberTypeGet">
            <summary>Establecer el stub de PropertyGetter.get_MemberType()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubPropertyGetter.NameGet">
            <summary>Establecer el stub de PropertyGetter.get_Name()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubPropertyGetter.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubPropertyGetter.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubPropertyGetter.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubPropertyGetter.MemberInfo">
            <summary>Establecer el stub de PropertyGetter.get_MemberInfo()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubPropertyGetter.MemberType">
            <summary>Establecer el stub de PropertyGetter.get_MemberType()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubPropertyGetter.Name">
            <summary>Establecer el stub de PropertyGetter.get_Name()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubPropertyNameResolver">
            <summary>Tipo stub de AutoMapper.Internal.PropertyNameResolver</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubPropertyNameResolver.#ctor(System.Type,System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubPropertyNameResolver.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPropertyNameResolver</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubPropertyNameResolver.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubPropertyNameResolver.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubPropertyNameResolver.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubProxyBase">
            <summary>Tipo stub de AutoMapper.Internal.ProxyBase</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubProxyBase.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubProxyBase.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubProxyBase</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubProxyBase.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubProxyBase.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubProxyBase.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubProxyGeneratorFactory">
            <summary>Tipo stub de AutoMapper.Internal.ProxyGeneratorFactory</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubProxyGeneratorFactory.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubProxyGeneratorFactory.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubProxyGeneratorFactory</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubProxyGeneratorFactory.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubProxyGeneratorFactory.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubProxyGeneratorFactory.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubReaderWriterLockSlimFactory">
            <summary>Tipo stub de AutoMapper.Internal.ReaderWriterLockSlimFactory</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubReaderWriterLockSlimFactory.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubReaderWriterLockSlimFactory.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubReaderWriterLockSlimFactory</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubReaderWriterLockSlimFactory.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubReaderWriterLockSlimFactory.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubReaderWriterLockSlimFactory.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubResolutionExpression">
            <summary>Tipo stub de AutoMapper.Internal.ResolutionExpression</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubResolutionExpression.#ctor(System.Type,AutoMapper.PropertyMap)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubResolutionExpression.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubResolutionExpression</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubResolutionExpression.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubResolutionExpression.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubResolutionExpression.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubResolutionExpression`1">
            <summary>Tipo stub de AutoMapper.Internal.ResolutionExpression`1</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubResolutionExpression`1.#ctor(AutoMapper.PropertyMap)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubResolutionExpression`1.#ctor(System.Type,AutoMapper.PropertyMap)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubResolutionExpression`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubResolutionExpression</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubResolutionExpression`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubResolutionExpression`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubResolutionExpression`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubResolutionExpression`2">
            <summary>Tipo stub de AutoMapper.Internal.ResolutionExpression`2</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubResolutionExpression`2.#ctor(AutoMapper.PropertyMap)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubResolutionExpression`2.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubResolutionExpression</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubResolutionExpression`2.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubResolutionExpression`2.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubResolutionExpression`2.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubValueTypeFieldAccessor">
            <summary>Tipo stub de AutoMapper.Internal.ValueTypeFieldAccessor</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubValueTypeFieldAccessor.#ctor(System.Reflection.FieldInfo)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubValueTypeFieldAccessor.Equals(System.Object)">
            <summary>Establecer el stub de FieldGetter.Equals(Object obj)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubValueTypeFieldAccessor.EqualsObject">
            <summary>Establecer el stub de FieldGetter.Equals(Object obj)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubValueTypeFieldAccessor.GetCustomAttributes(System.Boolean)">
            <summary>Establecer el stub de FieldGetter.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubValueTypeFieldAccessor.GetCustomAttributes(System.Type,System.Boolean)">
            <summary>Establecer el stub de FieldGetter.GetCustomAttributes(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubValueTypeFieldAccessor.GetCustomAttributesBoolean">
            <summary>Establecer el stub de FieldGetter.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubValueTypeFieldAccessor.GetCustomAttributesTypeBoolean">
            <summary>Establecer el stub de FieldGetter.GetCustomAttributes(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubValueTypeFieldAccessor.GetHashCode">
            <summary>Establecer el stub de FieldGetter.GetHashCode()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubValueTypeFieldAccessor.GetHashCode01">
            <summary>Establecer el stub de FieldGetter.GetHashCode()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubValueTypeFieldAccessor.GetValue(System.Object)">
            <summary>Establecer el stub de FieldGetter.GetValue(Object source)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubValueTypeFieldAccessor.GetValueObject">
            <summary>Establecer el stub de FieldGetter.GetValue(Object source)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubValueTypeFieldAccessor.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubValueTypeFieldAccessor</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubValueTypeFieldAccessor.IsDefined(System.Type,System.Boolean)">
            <summary>Establecer el stub de FieldGetter.IsDefined(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubValueTypeFieldAccessor.IsDefinedTypeBoolean">
            <summary>Establecer el stub de FieldGetter.IsDefined(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubValueTypeFieldAccessor.MemberInfoGet">
            <summary>Establecer el stub de FieldGetter.get_MemberInfo()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubValueTypeFieldAccessor.MemberTypeGet">
            <summary>Establecer el stub de FieldGetter.get_MemberType()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubValueTypeFieldAccessor.NameGet">
            <summary>Establecer el stub de FieldGetter.get_Name()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubValueTypeFieldAccessor.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubValueTypeFieldAccessor.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubValueTypeFieldAccessor.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubValueTypeFieldAccessor.MemberInfo">
            <summary>Establecer el stub de FieldGetter.get_MemberInfo()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubValueTypeFieldAccessor.MemberType">
            <summary>Establecer el stub de FieldGetter.get_MemberType()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubValueTypeFieldAccessor.Name">
            <summary>Establecer el stub de FieldGetter.get_Name()</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubValueTypePropertyAccessor">
            <summary>Tipo stub de AutoMapper.Internal.ValueTypePropertyAccessor</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubValueTypePropertyAccessor.#ctor(System.Reflection.PropertyInfo)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubValueTypePropertyAccessor.Equals(System.Object)">
            <summary>Establecer el stub de PropertyGetter.Equals(Object obj)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubValueTypePropertyAccessor.EqualsObject">
            <summary>Establecer el stub de PropertyGetter.Equals(Object obj)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubValueTypePropertyAccessor.GetCustomAttributes(System.Boolean)">
            <summary>Establecer el stub de PropertyGetter.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubValueTypePropertyAccessor.GetCustomAttributes(System.Type,System.Boolean)">
            <summary>Establecer el stub de PropertyGetter.GetCustomAttributes(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubValueTypePropertyAccessor.GetCustomAttributesBoolean">
            <summary>Establecer el stub de PropertyGetter.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubValueTypePropertyAccessor.GetCustomAttributesTypeBoolean">
            <summary>Establecer el stub de PropertyGetter.GetCustomAttributes(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubValueTypePropertyAccessor.GetHashCode">
            <summary>Establecer el stub de PropertyGetter.GetHashCode()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubValueTypePropertyAccessor.GetHashCode01">
            <summary>Establecer el stub de PropertyGetter.GetHashCode()</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubValueTypePropertyAccessor.GetValue(System.Object)">
            <summary>Establecer el stub de PropertyGetter.GetValue(Object source)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubValueTypePropertyAccessor.GetValueObject">
            <summary>Establecer el stub de PropertyGetter.GetValue(Object source)</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubValueTypePropertyAccessor.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubValueTypePropertyAccessor</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubValueTypePropertyAccessor.IsDefined(System.Type,System.Boolean)">
            <summary>Establecer el stub de PropertyGetter.IsDefined(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubValueTypePropertyAccessor.IsDefinedTypeBoolean">
            <summary>Establecer el stub de PropertyGetter.IsDefined(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubValueTypePropertyAccessor.MemberInfoGet">
            <summary>Establecer el stub de PropertyGetter.get_MemberInfo()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubValueTypePropertyAccessor.MemberTypeGet">
            <summary>Establecer el stub de PropertyGetter.get_MemberType()</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubValueTypePropertyAccessor.NameGet">
            <summary>Establecer el stub de PropertyGetter.get_Name()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubValueTypePropertyAccessor.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubValueTypePropertyAccessor.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubValueTypePropertyAccessor.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubValueTypePropertyAccessor.MemberInfo">
            <summary>Establecer el stub de PropertyGetter.get_MemberInfo()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubValueTypePropertyAccessor.MemberType">
            <summary>Establecer el stub de PropertyGetter.get_MemberType()</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubValueTypePropertyAccessor.Name">
            <summary>Establecer el stub de PropertyGetter.get_Name()</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimArrayMapper">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Mappers.ArrayMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimArrayMapper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimArrayMapper.#ctor(AutoMapper.Mappers.ArrayMapper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimArrayMapper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimArrayMapper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimArrayMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimArrayMapper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimArrayMapper.ClearEnumerableArray">
            <summary>Establecer el shim de ArrayMapper.ClearEnumerable(Array enumerable)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimArrayMapper.Constructor">
            <summary>Establecer el shim de ArrayMapper.ArrayMapper()</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimArrayMapper.CreateDestinationObjectBaseTypeInt32">
            <summary>Establecer el shim de ArrayMapper.CreateDestinationObjectBase(Type destElementType, Int32 sourceLength)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimArrayMapper.GetOrCreateDestinationObjectResolutionContextIMappingEngineRunnerTypeInt32">
            <summary>Establecer el shim de ArrayMapper.GetOrCreateDestinationObject(ResolutionContext context, IMappingEngineRunner mapper, Type destElementType, Int32 sourceLength)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimArrayMapper.IsMatchResolutionContext">
            <summary>Establecer el shim de ArrayMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimArrayMapper.SetElementValueArrayObjectInt32">
            <summary>Establecer el shim de ArrayMapper.SetElementValue(Array destination, Object mappedValue, Int32 index)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimArrayMapper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimArrayMapper.AllInstances.ClearEnumerableArray">
            <summary>Establecer el shim de ArrayMapper.ClearEnumerable(Array enumerable)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimArrayMapper.AllInstances.CreateDestinationObjectBaseTypeInt32">
            <summary>Establecer el shim de ArrayMapper.CreateDestinationObjectBase(Type destElementType, Int32 sourceLength)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimArrayMapper.AllInstances.GetOrCreateDestinationObjectResolutionContextIMappingEngineRunnerTypeInt32">
            <summary>Establecer el shim de ArrayMapper.GetOrCreateDestinationObject(ResolutionContext context, IMappingEngineRunner mapper, Type destElementType, Int32 sourceLength)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimArrayMapper.AllInstances.IsMatchResolutionContext">
            <summary>Establecer el shim de ArrayMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimArrayMapper.AllInstances.SetElementValueArrayObjectInt32">
            <summary>Establecer el shim de ArrayMapper.SetElementValue(Array destination, Object mappedValue, Int32 index)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimAssignableArrayMapper">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Mappers.AssignableArrayMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimAssignableArrayMapper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimAssignableArrayMapper.#ctor(AutoMapper.Mappers.AssignableArrayMapper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimAssignableArrayMapper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimAssignableArrayMapper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimAssignableArrayMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimAssignableArrayMapper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimAssignableArrayMapper.Constructor">
            <summary>Establecer el shim de AssignableArrayMapper.AssignableArrayMapper()</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimAssignableArrayMapper.ElementsExplicitlyMappedResolutionContext">
            <summary>Establecer el shim de AssignableArrayMapper.ElementsExplicitlyMapped(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimAssignableArrayMapper.IsMatchResolutionContext">
            <summary>Establecer el shim de AssignableArrayMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimAssignableArrayMapper.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de AssignableArrayMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimAssignableArrayMapper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimAssignableArrayMapper.AllInstances.ElementsExplicitlyMappedResolutionContext">
            <summary>Establecer el shim de AssignableArrayMapper.ElementsExplicitlyMapped(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimAssignableArrayMapper.AllInstances.IsMatchResolutionContext">
            <summary>Establecer el shim de AssignableArrayMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimAssignableArrayMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de AssignableArrayMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimAssignableMapper">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Mappers.AssignableMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimAssignableMapper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimAssignableMapper.#ctor(AutoMapper.Mappers.AssignableMapper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimAssignableMapper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimAssignableMapper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimAssignableMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimAssignableMapper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimAssignableMapper.Constructor">
            <summary>Establecer el shim de AssignableMapper.AssignableMapper()</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimAssignableMapper.IsMatchResolutionContext">
            <summary>Establecer el shim de AssignableMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimAssignableMapper.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de AssignableMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimAssignableMapper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimAssignableMapper.AllInstances.IsMatchResolutionContext">
            <summary>Establecer el shim de AssignableMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimAssignableMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de AssignableMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimCollectionMapper">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Mappers.CollectionMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimCollectionMapper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimCollectionMapper.#ctor(AutoMapper.Mappers.CollectionMapper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimCollectionMapper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimCollectionMapper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimCollectionMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimCollectionMapper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimCollectionMapper.Constructor">
            <summary>Establecer el shim de CollectionMapper.CollectionMapper()</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimCollectionMapper.IsMatchResolutionContext">
            <summary>Establecer el shim de CollectionMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimCollectionMapper.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de CollectionMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimCollectionMapper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimCollectionMapper.AllInstances.IsMatchResolutionContext">
            <summary>Establecer el shim de CollectionMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimCollectionMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de CollectionMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimDictionaryMapper">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Mappers.DictionaryMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimDictionaryMapper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimDictionaryMapper.#ctor(AutoMapper.Mappers.DictionaryMapper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimDictionaryMapper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimDictionaryMapper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimDictionaryMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimDictionaryMapper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimDictionaryMapper.Constructor">
            <summary>Establecer el shim de DictionaryMapper.DictionaryMapper()</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimDictionaryMapper.IsMatchResolutionContext">
            <summary>Establecer el shim de DictionaryMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimDictionaryMapper.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de DictionaryMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimDictionaryMapper.StaticConstructor">
            <summary>Establecer el shim de DictionaryMapper.DictionaryMapper()</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimDictionaryMapper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimDictionaryMapper.AllInstances.IsMatchResolutionContext">
            <summary>Establecer el shim de DictionaryMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimDictionaryMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de DictionaryMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimEnumMapper">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Mappers.EnumMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumMapper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumMapper.#ctor(AutoMapper.Mappers.EnumMapper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumMapper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumMapper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumMapper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumMapper.Constructor">
            <summary>Establecer el shim de EnumMapper.EnumMapper()</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumMapper.ConvertEnumToNullableTypeResolutionContext">
            <summary>Establecer el shim de EnumMapper.ConvertEnumToNullableType(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumMapper.EnumToEnumMappingResolutionContext">
            <summary>Establecer el shim de EnumMapper.EnumToEnumMapping(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumMapper.EnumToNullableTypeMappingResolutionContext">
            <summary>Establecer el shim de EnumMapper.EnumToNullableTypeMapping(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumMapper.EnumToStringMappingResolutionContextBooleanRef">
            <summary>Establecer el shim de EnumMapper.EnumToStringMapping(ResolutionContext context, Boolean&amp; toEnum)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumMapper.EnumToUnderlyingTypeMappingResolutionContextBooleanRef">
            <summary>Establecer el shim de EnumMapper.EnumToUnderlyingTypeMapping(ResolutionContext context, Boolean&amp; toEnum)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumMapper.IsMatchResolutionContext">
            <summary>Establecer el shim de EnumMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumMapper.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de EnumMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumMapper.StaticConstructor">
            <summary>Establecer el shim de EnumMapper.EnumMapper()</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimEnumMapper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumMapper.AllInstances.IsMatchResolutionContext">
            <summary>Establecer el shim de EnumMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de EnumMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimEnumerableMapper">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Mappers.EnumerableMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.#ctor(AutoMapper.Mappers.EnumerableMapper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.ClearEnumerableIList">
            <summary>Establecer el shim de EnumerableMapper.ClearEnumerable(IList enumerable)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.Constructor">
            <summary>Establecer el shim de EnumerableMapper.EnumerableMapper()</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.CreateDestinationObjectBaseTypeInt32">
            <summary>Establecer el shim de EnumerableMapper.CreateDestinationObjectBase(Type destElementType, Int32 sourceLength)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.DestinationIListTypedAsIEnumerableResolutionContext">
            <summary>Establecer el shim de EnumerableMapper.DestinationIListTypedAsIEnumerable(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.IsMatchResolutionContext">
            <summary>Establecer el shim de EnumerableMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.SetElementValueIListObjectInt32">
            <summary>Establecer el shim de EnumerableMapper.SetElementValue(IList destination, Object mappedValue, Int32 index)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.AllInstances.ClearEnumerableIList">
            <summary>Establecer el shim de EnumerableMapper.ClearEnumerable(IList enumerable)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.AllInstances.CreateDestinationObjectBaseTypeInt32">
            <summary>Establecer el shim de EnumerableMapper.CreateDestinationObjectBase(Type destElementType, Int32 sourceLength)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.AllInstances.IsMatchResolutionContext">
            <summary>Establecer el shim de EnumerableMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.AllInstances.SetElementValueIListObjectInt32">
            <summary>Establecer el shim de EnumerableMapper.SetElementValue(IList destination, Object mappedValue, Int32 index)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Mappers.EnumerableMapperBase`1</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.#ctor(AutoMapper.Mappers.EnumerableMapperBase{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.Bind(AutoMapper.IObjectMapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.ClearEnumerableT0">
            <summary>Establecer el shim de EnumerableMapperBase`1.ClearEnumerable(!0 enumerable)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.Constructor">
            <summary>Establecer el shim de EnumerableMapperBase`1.EnumerableMapperBase`1()</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.CreateDestinationObjectResolutionContextTypeInt32IMappingEngineRunner">
            <summary>Establecer el shim de EnumerableMapperBase`1.CreateDestinationObject(ResolutionContext context, Type destinationElementType, Int32 count, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.GetEnumerableForObject">
            <summary>Establecer el shim de EnumerableMapperBase`1.GetEnumerableFor(Object destination)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.GetOrCreateDestinationObjectResolutionContextIMappingEngineRunnerTypeInt32">
            <summary>Establecer el shim de EnumerableMapperBase`1.GetOrCreateDestinationObject(ResolutionContext context, IMappingEngineRunner mapper, Type destElementType, Int32 sourceLength)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de EnumerableMapperBase`1.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.AllInstances.ClearEnumerableT0">
            <summary>Establecer el shim de EnumerableMapperBase`1.ClearEnumerable(!0 enumerable)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.AllInstances.CreateDestinationObjectResolutionContextTypeInt32IMappingEngineRunner">
            <summary>Establecer el shim de EnumerableMapperBase`1.CreateDestinationObject(ResolutionContext context, Type destinationElementType, Int32 count, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.AllInstances.GetEnumerableForObject">
            <summary>Establecer el shim de EnumerableMapperBase`1.GetEnumerableFor(Object destination)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.AllInstances.GetOrCreateDestinationObjectResolutionContextIMappingEngineRunnerTypeInt32">
            <summary>Establecer el shim de EnumerableMapperBase`1.GetOrCreateDestinationObject(ResolutionContext context, IMappingEngineRunner mapper, Type destElementType, Int32 sourceLength)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de EnumerableMapperBase`1.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimEnumerableToDictionaryMapper">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Mappers.EnumerableToDictionaryMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumerableToDictionaryMapper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumerableToDictionaryMapper.#ctor(AutoMapper.Mappers.EnumerableToDictionaryMapper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumerableToDictionaryMapper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumerableToDictionaryMapper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumerableToDictionaryMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableToDictionaryMapper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableToDictionaryMapper.Constructor">
            <summary>Establecer el shim de EnumerableToDictionaryMapper.EnumerableToDictionaryMapper()</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableToDictionaryMapper.IsMatchResolutionContext">
            <summary>Establecer el shim de EnumerableToDictionaryMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableToDictionaryMapper.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de EnumerableToDictionaryMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableToDictionaryMapper.StaticConstructor">
            <summary>Establecer el shim de EnumerableToDictionaryMapper.EnumerableToDictionaryMapper()</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimEnumerableToDictionaryMapper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableToDictionaryMapper.AllInstances.IsMatchResolutionContext">
            <summary>Establecer el shim de EnumerableToDictionaryMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableToDictionaryMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de EnumerableToDictionaryMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimExplicitConversionOperatorMapper">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Mappers.ExplicitConversionOperatorMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimExplicitConversionOperatorMapper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimExplicitConversionOperatorMapper.#ctor(AutoMapper.Mappers.ExplicitConversionOperatorMapper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimExplicitConversionOperatorMapper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimExplicitConversionOperatorMapper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimExplicitConversionOperatorMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimExplicitConversionOperatorMapper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimExplicitConversionOperatorMapper.Constructor">
            <summary>Establecer el shim de ExplicitConversionOperatorMapper.ExplicitConversionOperatorMapper()</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimExplicitConversionOperatorMapper.GetExplicitConversionOperatorResolutionContext">
            <summary>Establecer el shim de ExplicitConversionOperatorMapper.GetExplicitConversionOperator(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimExplicitConversionOperatorMapper.IsMatchResolutionContext">
            <summary>Establecer el shim de ExplicitConversionOperatorMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimExplicitConversionOperatorMapper.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de ExplicitConversionOperatorMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimExplicitConversionOperatorMapper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimExplicitConversionOperatorMapper.AllInstances.IsMatchResolutionContext">
            <summary>Establecer el shim de ExplicitConversionOperatorMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimExplicitConversionOperatorMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de ExplicitConversionOperatorMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimExpressionMapper">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Mappers.ExpressionMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimExpressionMapper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimExpressionMapper.#ctor(AutoMapper.Mappers.ExpressionMapper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimExpressionMapper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimExpressionMapper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimExpressionMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimExpressionMapper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimExpressionMapper.Constructor">
            <summary>Establecer el shim de ExpressionMapper.ExpressionMapper()</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimExpressionMapper.IsMatchResolutionContext">
            <summary>Establecer el shim de ExpressionMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimExpressionMapper.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de ExpressionMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimExpressionMapper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimExpressionMapper.AllInstances.IsMatchResolutionContext">
            <summary>Establecer el shim de ExpressionMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimExpressionMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de ExpressionMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimFlagsEnumMapper">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Mappers.FlagsEnumMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimFlagsEnumMapper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimFlagsEnumMapper.#ctor(AutoMapper.Mappers.FlagsEnumMapper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimFlagsEnumMapper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimFlagsEnumMapper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimFlagsEnumMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimFlagsEnumMapper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimFlagsEnumMapper.Constructor">
            <summary>Establecer el shim de FlagsEnumMapper.FlagsEnumMapper()</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimFlagsEnumMapper.IsMatchResolutionContext">
            <summary>Establecer el shim de FlagsEnumMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimFlagsEnumMapper.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de FlagsEnumMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimFlagsEnumMapper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimFlagsEnumMapper.AllInstances.IsMatchResolutionContext">
            <summary>Establecer el shim de FlagsEnumMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimFlagsEnumMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de FlagsEnumMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimHashSetMapper">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Mappers.HashSetMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimHashSetMapper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimHashSetMapper.#ctor(AutoMapper.Mappers.HashSetMapper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimHashSetMapper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimHashSetMapper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimHashSetMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimHashSetMapper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimHashSetMapper.Constructor">
            <summary>Establecer el shim de HashSetMapper.HashSetMapper()</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimHashSetMapper.IsMatchResolutionContext">
            <summary>Establecer el shim de HashSetMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimHashSetMapper.IsSetTypeType">
            <summary>Establecer el shim de HashSetMapper.IsSetType(Type type)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimHashSetMapper.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de HashSetMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimHashSetMapper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimHashSetMapper.AllInstances.IsMatchResolutionContext">
            <summary>Establecer el shim de HashSetMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimHashSetMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de HashSetMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimImplicitConversionOperatorMapper">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Mappers.ImplicitConversionOperatorMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimImplicitConversionOperatorMapper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimImplicitConversionOperatorMapper.#ctor(AutoMapper.Mappers.ImplicitConversionOperatorMapper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimImplicitConversionOperatorMapper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimImplicitConversionOperatorMapper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimImplicitConversionOperatorMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimImplicitConversionOperatorMapper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimImplicitConversionOperatorMapper.Constructor">
            <summary>Establecer el shim de ImplicitConversionOperatorMapper.ImplicitConversionOperatorMapper()</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimImplicitConversionOperatorMapper.GetImplicitConversionOperatorResolutionContext">
            <summary>Establecer el shim de ImplicitConversionOperatorMapper.GetImplicitConversionOperator(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimImplicitConversionOperatorMapper.IsMatchResolutionContext">
            <summary>Establecer el shim de ImplicitConversionOperatorMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimImplicitConversionOperatorMapper.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de ImplicitConversionOperatorMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimImplicitConversionOperatorMapper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimImplicitConversionOperatorMapper.AllInstances.IsMatchResolutionContext">
            <summary>Establecer el shim de ImplicitConversionOperatorMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimImplicitConversionOperatorMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de ImplicitConversionOperatorMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimMapperRegistry">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Mappers.MapperRegistry</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimMapperRegistry.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimMapperRegistry.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimMapperRegistry.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimMapperRegistry.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimMapperRegistry.MappersGet">
            <summary>Establecer el shim de MapperRegistry.get_Mappers()</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimMapperRegistry.Reset">
            <summary>Establecer el shim de MapperRegistry.Reset()</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimMapperRegistry.StaticConstructor">
            <summary>Establecer el shim de MapperRegistry.MapperRegistry()</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimMultidimensionalArrayFiller">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Mappers.MultidimensionalArrayFiller</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimMultidimensionalArrayFiller.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimMultidimensionalArrayFiller.#ctor(AutoMapper.Mappers.MultidimensionalArrayFiller)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimMultidimensionalArrayFiller.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimMultidimensionalArrayFiller.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimMultidimensionalArrayFiller.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimMultidimensionalArrayFiller.ConstructorArray">
            <summary>Establecer el shim de MultidimensionalArrayFiller.MultidimensionalArrayFiller(Array destination)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimMultidimensionalArrayFiller.NewValueObject">
            <summary>Establecer el shim de MultidimensionalArrayFiller.NewValue(Object value)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimMultidimensionalArrayFiller.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimMultidimensionalArrayFiller.AllInstances.NewValueObject">
            <summary>Establecer el shim de MultidimensionalArrayFiller.NewValue(Object value)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimMultidimensionalArrayMapper">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Mappers.MultidimensionalArrayMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimMultidimensionalArrayMapper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimMultidimensionalArrayMapper.#ctor(AutoMapper.Mappers.MultidimensionalArrayMapper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimMultidimensionalArrayMapper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimMultidimensionalArrayMapper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimMultidimensionalArrayMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimMultidimensionalArrayMapper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimMultidimensionalArrayMapper.ClearEnumerableArray">
            <summary>Establecer el shim de MultidimensionalArrayMapper.ClearEnumerable(Array enumerable)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimMultidimensionalArrayMapper.Constructor">
            <summary>Establecer el shim de MultidimensionalArrayMapper.MultidimensionalArrayMapper()</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimMultidimensionalArrayMapper.CreateDestinationObjectBaseTypeInt32">
            <summary>Establecer el shim de MultidimensionalArrayMapper.CreateDestinationObjectBase(Type destElementType, Int32 sourceLength)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimMultidimensionalArrayMapper.GetOrCreateDestinationObjectResolutionContextIMappingEngineRunnerTypeInt32">
            <summary>Establecer el shim de MultidimensionalArrayMapper.GetOrCreateDestinationObject(ResolutionContext context, IMappingEngineRunner mapper, Type destElementType, Int32 sourceLength)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimMultidimensionalArrayMapper.IsMatchResolutionContext">
            <summary>Establecer el shim de MultidimensionalArrayMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimMultidimensionalArrayMapper.SetElementValueArrayObjectInt32">
            <summary>Establecer el shim de MultidimensionalArrayMapper.SetElementValue(Array destination, Object mappedValue, Int32 index)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimMultidimensionalArrayMapper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimMultidimensionalArrayMapper.AllInstances.ClearEnumerableArray">
            <summary>Establecer el shim de MultidimensionalArrayMapper.ClearEnumerable(Array enumerable)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimMultidimensionalArrayMapper.AllInstances.CreateDestinationObjectBaseTypeInt32">
            <summary>Establecer el shim de MultidimensionalArrayMapper.CreateDestinationObjectBase(Type destElementType, Int32 sourceLength)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimMultidimensionalArrayMapper.AllInstances.GetOrCreateDestinationObjectResolutionContextIMappingEngineRunnerTypeInt32">
            <summary>Establecer el shim de MultidimensionalArrayMapper.GetOrCreateDestinationObject(ResolutionContext context, IMappingEngineRunner mapper, Type destElementType, Int32 sourceLength)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimMultidimensionalArrayMapper.AllInstances.IsMatchResolutionContext">
            <summary>Establecer el shim de MultidimensionalArrayMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimMultidimensionalArrayMapper.AllInstances.SetElementValueArrayObjectInt32">
            <summary>Establecer el shim de MultidimensionalArrayMapper.SetElementValue(Array destination, Object mappedValue, Int32 index)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimNullableMapper">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Mappers.NullableMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimNullableMapper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimNullableMapper.#ctor(AutoMapper.Mappers.NullableMapper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimNullableMapper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimNullableMapper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimNullableMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimNullableMapper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimNullableMapper.Constructor">
            <summary>Establecer el shim de NullableMapper.NullableMapper()</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimNullableMapper.IsMatchResolutionContext">
            <summary>Establecer el shim de NullableMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimNullableMapper.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de NullableMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimNullableMapper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimNullableMapper.AllInstances.IsMatchResolutionContext">
            <summary>Establecer el shim de NullableMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimNullableMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de NullableMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimNullableSourceMapper">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Mappers.NullableSourceMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimNullableSourceMapper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimNullableSourceMapper.#ctor(AutoMapper.Mappers.NullableSourceMapper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimNullableSourceMapper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimNullableSourceMapper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimNullableSourceMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimNullableSourceMapper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimNullableSourceMapper.Constructor">
            <summary>Establecer el shim de NullableSourceMapper.NullableSourceMapper()</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimNullableSourceMapper.IsMatchResolutionContext">
            <summary>Establecer el shim de NullableSourceMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimNullableSourceMapper.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de NullableSourceMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimNullableSourceMapper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimNullableSourceMapper.AllInstances.IsMatchResolutionContext">
            <summary>Establecer el shim de NullableSourceMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimNullableSourceMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de NullableSourceMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimObjectCreator">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Mappers.ObjectCreator</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimObjectCreator.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimObjectCreator.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimObjectCreator.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimObjectCreator.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimObjectCreator.CreateArrayTypeArray">
            <summary>Establecer el shim de ObjectCreator.CreateArray(Type elementType, Array sourceArray)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimObjectCreator.CreateArrayTypeInt32">
            <summary>Establecer el shim de ObjectCreator.CreateArray(Type elementType, Int32 length)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimObjectCreator.CreateDefaultValueType">
            <summary>Establecer el shim de ObjectCreator.CreateDefaultValue(Type type)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimObjectCreator.CreateDictionaryTypeTypeType">
            <summary>Establecer el shim de ObjectCreator.CreateDictionary(Type dictionaryType, Type keyType, Type valueType)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimObjectCreator.CreateListType">
            <summary>Establecer el shim de ObjectCreator.CreateList(Type elementType)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimObjectCreator.CreateNonNullValueType">
            <summary>Establecer el shim de ObjectCreator.CreateNonNullValue(Type type)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimObjectCreator.CreateObjectType">
            <summary>Establecer el shim de ObjectCreator.CreateObject(Type type)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimObjectCreator.StaticConstructor">
            <summary>Establecer el shim de ObjectCreator.ObjectCreator()</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimOpenGenericMapper">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Mappers.OpenGenericMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimOpenGenericMapper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimOpenGenericMapper.#ctor(AutoMapper.Mappers.OpenGenericMapper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimOpenGenericMapper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimOpenGenericMapper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimOpenGenericMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimOpenGenericMapper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimOpenGenericMapper.Constructor">
            <summary>Establecer el shim de OpenGenericMapper.OpenGenericMapper()</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimOpenGenericMapper.IsMatchResolutionContext">
            <summary>Establecer el shim de OpenGenericMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimOpenGenericMapper.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de OpenGenericMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimOpenGenericMapper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimOpenGenericMapper.AllInstances.IsMatchResolutionContext">
            <summary>Establecer el shim de OpenGenericMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimOpenGenericMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de OpenGenericMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimPrimitiveArrayMapper">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Mappers.PrimitiveArrayMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimPrimitiveArrayMapper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimPrimitiveArrayMapper.#ctor(AutoMapper.Mappers.PrimitiveArrayMapper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimPrimitiveArrayMapper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimPrimitiveArrayMapper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimPrimitiveArrayMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimPrimitiveArrayMapper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimPrimitiveArrayMapper.Constructor">
            <summary>Establecer el shim de PrimitiveArrayMapper.PrimitiveArrayMapper()</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimPrimitiveArrayMapper.IsMatchResolutionContext">
            <summary>Establecer el shim de PrimitiveArrayMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimPrimitiveArrayMapper.IsPrimitiveArrayTypeType">
            <summary>Establecer el shim de PrimitiveArrayMapper.IsPrimitiveArrayType(Type type)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimPrimitiveArrayMapper.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de PrimitiveArrayMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimPrimitiveArrayMapper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimPrimitiveArrayMapper.AllInstances.IsMatchResolutionContext">
            <summary>Establecer el shim de PrimitiveArrayMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimPrimitiveArrayMapper.AllInstances.IsPrimitiveArrayTypeType">
            <summary>Establecer el shim de PrimitiveArrayMapper.IsPrimitiveArrayType(Type type)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimPrimitiveArrayMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de PrimitiveArrayMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimReadOnlyCollectionMapper">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Mappers.ReadOnlyCollectionMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimReadOnlyCollectionMapper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimReadOnlyCollectionMapper.#ctor(AutoMapper.Mappers.ReadOnlyCollectionMapper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimReadOnlyCollectionMapper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimReadOnlyCollectionMapper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimReadOnlyCollectionMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimReadOnlyCollectionMapper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimReadOnlyCollectionMapper.Constructor">
            <summary>Establecer el shim de ReadOnlyCollectionMapper.ReadOnlyCollectionMapper()</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimReadOnlyCollectionMapper.IsMatchResolutionContext">
            <summary>Establecer el shim de ReadOnlyCollectionMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimReadOnlyCollectionMapper.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de ReadOnlyCollectionMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimReadOnlyCollectionMapper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimReadOnlyCollectionMapper.AllInstances.IsMatchResolutionContext">
            <summary>Establecer el shim de ReadOnlyCollectionMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimReadOnlyCollectionMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de ReadOnlyCollectionMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimStringMapper">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Mappers.StringMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimStringMapper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimStringMapper.#ctor(AutoMapper.Mappers.StringMapper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimStringMapper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimStringMapper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimStringMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimStringMapper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimStringMapper.Constructor">
            <summary>Establecer el shim de StringMapper.StringMapper()</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimStringMapper.IsMatchResolutionContext">
            <summary>Establecer el shim de StringMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimStringMapper.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de StringMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimStringMapper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimStringMapper.AllInstances.IsMatchResolutionContext">
            <summary>Establecer el shim de StringMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimStringMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de StringMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimTypeHelper">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Mappers.TypeHelper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimTypeHelper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimTypeHelper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimTypeHelper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimTypeHelper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimTypeHelper.GetElementTypeType">
            <summary>Establecer el shim de TypeHelper.GetElementType(Type enumerableType)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimTypeHelper.GetElementTypeTypeIEnumerable">
            <summary>Establecer el shim de TypeHelper.GetElementType(Type enumerableType, IEnumerable enumerable)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimTypeHelper.GetEnumerationTypeType">
            <summary>Establecer el shim de TypeHelper.GetEnumerationType(Type enumType)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimTypeHelper.GetIEnumerableTypeType">
            <summary>Establecer el shim de TypeHelper.GetIEnumerableType(Type enumerableType)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimTypeMapMapper">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Mappers.TypeMapMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimTypeMapMapper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimTypeMapMapper.#ctor(AutoMapper.Mappers.TypeMapMapper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimTypeMapMapper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimTypeMapMapper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimTypeMapMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimTypeMapMapper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimTypeMapMapper.ConstructorIEnumerableOfITypeMapObjectMapper">
            <summary>Establecer el shim de TypeMapMapper.TypeMapMapper(IEnumerable`1&lt;ITypeMapObjectMapper&gt; mappers)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimTypeMapMapper.IsMatchResolutionContext">
            <summary>Establecer el shim de TypeMapMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimTypeMapMapper.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de TypeMapMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimTypeMapMapper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimTypeMapMapper.AllInstances.IsMatchResolutionContext">
            <summary>Establecer el shim de TypeMapMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimTypeMapMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el shim de TypeMapMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimTypeMapObjectMapperRegistry">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.Mappers.TypeMapObjectMapperRegistry</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimTypeMapObjectMapperRegistry.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimTypeMapObjectMapperRegistry.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimTypeMapObjectMapperRegistry.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimTypeMapObjectMapperRegistry.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimTypeMapObjectMapperRegistry.MappersGet">
            <summary>Establecer el shim de TypeMapObjectMapperRegistry.get_Mappers()</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimTypeMapObjectMapperRegistry.StaticConstructor">
            <summary>Establecer el shim de TypeMapObjectMapperRegistry.TypeMapObjectMapperRegistry()</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubArrayMapper">
            <summary>Tipo stub de AutoMapper.Mappers.ArrayMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubArrayMapper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubArrayMapper.ClearEnumerable(System.Array)">
            <summary>Establecer el stub de ArrayMapper.ClearEnumerable(Array enumerable)</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubArrayMapper.ClearEnumerableArray">
            <summary>Establecer el stub de ArrayMapper.ClearEnumerable(Array enumerable)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubArrayMapper.CreateDestinationObject(AutoMapper.ResolutionContext,System.Type,System.Int32,AutoMapper.IMappingEngineRunner)">
            <summary>Establecer el stub de EnumerableMapperBase`1.CreateDestinationObject(ResolutionContext context, Type destinationElementType, Int32 count, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubArrayMapper.CreateDestinationObjectBase(System.Type,System.Int32)">
            <summary>Establecer el stub de ArrayMapper.CreateDestinationObjectBase(Type destElementType, Int32 sourceLength)</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubArrayMapper.CreateDestinationObjectBaseTypeInt32">
            <summary>Establecer el stub de ArrayMapper.CreateDestinationObjectBase(Type destElementType, Int32 sourceLength)</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubArrayMapper.CreateDestinationObjectResolutionContextTypeInt32IMappingEngineRunner">
            <summary>Establecer el stub de EnumerableMapperBase`1.CreateDestinationObject(ResolutionContext context, Type destinationElementType, Int32 count, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubArrayMapper.GetEnumerableFor(System.Object)">
            <summary>Establecer el stub de EnumerableMapperBase`1.GetEnumerableFor(Object destination)</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubArrayMapper.GetEnumerableForObject">
            <summary>Establecer el stub de EnumerableMapperBase`1.GetEnumerableFor(Object destination)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubArrayMapper.GetOrCreateDestinationObject(AutoMapper.ResolutionContext,AutoMapper.IMappingEngineRunner,System.Type,System.Int32)">
            <summary>Establecer el stub de ArrayMapper.GetOrCreateDestinationObject(ResolutionContext context, IMappingEngineRunner mapper, Type destElementType, Int32 sourceLength)</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubArrayMapper.GetOrCreateDestinationObjectResolutionContextIMappingEngineRunnerTypeInt32">
            <summary>Establecer el stub de ArrayMapper.GetOrCreateDestinationObject(ResolutionContext context, IMappingEngineRunner mapper, Type destElementType, Int32 sourceLength)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubArrayMapper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubArrayMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubArrayMapper.IsMatch(AutoMapper.ResolutionContext)">
            <summary>Establecer el stub de ArrayMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubArrayMapper.IsMatchResolutionContext">
            <summary>Establecer el stub de ArrayMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubArrayMapper.SetElementValue(System.Array,System.Object,System.Int32)">
            <summary>Establecer el stub de ArrayMapper.SetElementValue(Array destination, Object mappedValue, Int32 index)</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubArrayMapper.SetElementValueArrayObjectInt32">
            <summary>Establecer el stub de ArrayMapper.SetElementValue(Array destination, Object mappedValue, Int32 index)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubArrayMapper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubArrayMapper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubArrayMapper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubAssignableArrayMapper">
            <summary>Tipo stub de AutoMapper.Mappers.AssignableArrayMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubAssignableArrayMapper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubAssignableArrayMapper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubAssignableArrayMapper</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubAssignableArrayMapper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubAssignableArrayMapper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubAssignableArrayMapper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubAssignableMapper">
            <summary>Tipo stub de AutoMapper.Mappers.AssignableMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubAssignableMapper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubAssignableMapper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubAssignableMapper</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubAssignableMapper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubAssignableMapper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubAssignableMapper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubCollectionMapper">
            <summary>Tipo stub de AutoMapper.Mappers.CollectionMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubCollectionMapper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubCollectionMapper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubCollectionMapper</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubCollectionMapper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubCollectionMapper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubCollectionMapper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubDictionaryMapper">
            <summary>Tipo stub de AutoMapper.Mappers.DictionaryMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubDictionaryMapper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubDictionaryMapper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubDictionaryMapper</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubDictionaryMapper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubDictionaryMapper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubDictionaryMapper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubEnumMapper">
            <summary>Tipo stub de AutoMapper.Mappers.EnumMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumMapper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumMapper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubEnumMapper</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubEnumMapper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubEnumMapper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubEnumMapper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubEnumerableMapper">
            <summary>Tipo stub de AutoMapper.Mappers.EnumerableMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapper.ClearEnumerable(System.Collections.IList)">
            <summary>Establecer el stub de EnumerableMapper.ClearEnumerable(IList enumerable)</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubEnumerableMapper.ClearEnumerableIList">
            <summary>Establecer el stub de EnumerableMapper.ClearEnumerable(IList enumerable)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapper.CreateDestinationObject(AutoMapper.ResolutionContext,System.Type,System.Int32,AutoMapper.IMappingEngineRunner)">
            <summary>Establecer el stub de EnumerableMapperBase`1.CreateDestinationObject(ResolutionContext context, Type destinationElementType, Int32 count, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapper.CreateDestinationObjectBase(System.Type,System.Int32)">
            <summary>Establecer el stub de EnumerableMapper.CreateDestinationObjectBase(Type destElementType, Int32 sourceLength)</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubEnumerableMapper.CreateDestinationObjectBaseTypeInt32">
            <summary>Establecer el stub de EnumerableMapper.CreateDestinationObjectBase(Type destElementType, Int32 sourceLength)</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubEnumerableMapper.CreateDestinationObjectResolutionContextTypeInt32IMappingEngineRunner">
            <summary>Establecer el stub de EnumerableMapperBase`1.CreateDestinationObject(ResolutionContext context, Type destinationElementType, Int32 count, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapper.GetEnumerableFor(System.Object)">
            <summary>Establecer el stub de EnumerableMapperBase`1.GetEnumerableFor(Object destination)</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubEnumerableMapper.GetEnumerableForObject">
            <summary>Establecer el stub de EnumerableMapperBase`1.GetEnumerableFor(Object destination)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapper.GetOrCreateDestinationObject(AutoMapper.ResolutionContext,AutoMapper.IMappingEngineRunner,System.Type,System.Int32)">
            <summary>Establecer el stub de EnumerableMapperBase`1.GetOrCreateDestinationObject(ResolutionContext context, IMappingEngineRunner mapper, Type destElementType, Int32 sourceLength)</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubEnumerableMapper.GetOrCreateDestinationObjectResolutionContextIMappingEngineRunnerTypeInt32">
            <summary>Establecer el stub de EnumerableMapperBase`1.GetOrCreateDestinationObject(ResolutionContext context, IMappingEngineRunner mapper, Type destElementType, Int32 sourceLength)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubEnumerableMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapper.IsMatch(AutoMapper.ResolutionContext)">
            <summary>Establecer el stub de EnumerableMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubEnumerableMapper.IsMatchResolutionContext">
            <summary>Establecer el stub de EnumerableMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapper.SetElementValue(System.Collections.IList,System.Object,System.Int32)">
            <summary>Establecer el stub de EnumerableMapper.SetElementValue(IList destination, Object mappedValue, Int32 index)</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubEnumerableMapper.SetElementValueIListObjectInt32">
            <summary>Establecer el stub de EnumerableMapper.SetElementValue(IList destination, Object mappedValue, Int32 index)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubEnumerableMapper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubEnumerableMapper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubEnumerableMapper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1">
            <summary>Tipo stub de AutoMapper.Mappers.EnumerableMapperBase`1</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.ClearEnumerable(`0)">
            <summary>Establecer el stub de EnumerableMapperBase`1.ClearEnumerable(!0 enumerable)</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.ClearEnumerableT0">
            <summary>Establecer el stub de EnumerableMapperBase`1.ClearEnumerable(!0 enumerable)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.CreateDestinationObject(AutoMapper.ResolutionContext,System.Type,System.Int32,AutoMapper.IMappingEngineRunner)">
            <summary>Establecer el stub de EnumerableMapperBase`1.CreateDestinationObject(ResolutionContext context, Type destinationElementType, Int32 count, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.CreateDestinationObjectBase(System.Type,System.Int32)">
            <summary>Establecer el stub de EnumerableMapperBase`1.CreateDestinationObjectBase(Type destElementType, Int32 sourceLength)</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.CreateDestinationObjectBaseTypeInt32">
            <summary>Establecer el stub de EnumerableMapperBase`1.CreateDestinationObjectBase(Type destElementType, Int32 sourceLength)</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.CreateDestinationObjectResolutionContextTypeInt32IMappingEngineRunner">
            <summary>Establecer el stub de EnumerableMapperBase`1.CreateDestinationObject(ResolutionContext context, Type destinationElementType, Int32 count, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.GetEnumerableFor(System.Object)">
            <summary>Establecer el stub de EnumerableMapperBase`1.GetEnumerableFor(Object destination)</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.GetEnumerableForObject">
            <summary>Establecer el stub de EnumerableMapperBase`1.GetEnumerableFor(Object destination)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.GetOrCreateDestinationObject(AutoMapper.ResolutionContext,AutoMapper.IMappingEngineRunner,System.Type,System.Int32)">
            <summary>Establecer el stub de EnumerableMapperBase`1.GetOrCreateDestinationObject(ResolutionContext context, IMappingEngineRunner mapper, Type destElementType, Int32 sourceLength)</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.GetOrCreateDestinationObjectResolutionContextIMappingEngineRunnerTypeInt32">
            <summary>Establecer el stub de EnumerableMapperBase`1.GetOrCreateDestinationObject(ResolutionContext context, IMappingEngineRunner mapper, Type destElementType, Int32 sourceLength)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubEnumerableMapperBase</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.IsMatch(AutoMapper.ResolutionContext)">
            <summary>Establecer el stub de EnumerableMapperBase`1.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.IsMatchResolutionContext">
            <summary>Establecer el stub de EnumerableMapperBase`1.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.SetElementValue(`0,System.Object,System.Int32)">
            <summary>Establecer el stub de EnumerableMapperBase`1.SetElementValue(!0 destination, Object mappedValue, Int32 index)</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.SetElementValueT0ObjectInt32">
            <summary>Establecer el stub de EnumerableMapperBase`1.SetElementValue(!0 destination, Object mappedValue, Int32 index)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubEnumerableToDictionaryMapper">
            <summary>Tipo stub de AutoMapper.Mappers.EnumerableToDictionaryMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableToDictionaryMapper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableToDictionaryMapper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubEnumerableToDictionaryMapper</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubEnumerableToDictionaryMapper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubEnumerableToDictionaryMapper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubEnumerableToDictionaryMapper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubExplicitConversionOperatorMapper">
            <summary>Tipo stub de AutoMapper.Mappers.ExplicitConversionOperatorMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubExplicitConversionOperatorMapper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubExplicitConversionOperatorMapper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubExplicitConversionOperatorMapper</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubExplicitConversionOperatorMapper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubExplicitConversionOperatorMapper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubExplicitConversionOperatorMapper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubExpressionMapper">
            <summary>Tipo stub de AutoMapper.Mappers.ExpressionMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubExpressionMapper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubExpressionMapper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubExpressionMapper</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubExpressionMapper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubExpressionMapper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubExpressionMapper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubFlagsEnumMapper">
            <summary>Tipo stub de AutoMapper.Mappers.FlagsEnumMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubFlagsEnumMapper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubFlagsEnumMapper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubFlagsEnumMapper</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubFlagsEnumMapper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubFlagsEnumMapper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubFlagsEnumMapper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubHashSetMapper">
            <summary>Tipo stub de AutoMapper.Mappers.HashSetMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubHashSetMapper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubHashSetMapper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubHashSetMapper</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubHashSetMapper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubHashSetMapper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubHashSetMapper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubITypeMapObjectMapper">
            <summary>Tipo stub de AutoMapper.Mappers.ITypeMapObjectMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubITypeMapObjectMapper.#ctor">
            <summary>Inicializa una nueva instancia de type StubITypeMapObjectMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubITypeMapObjectMapper.am::AutoMapper#Mappers#ITypeMapObjectMapper#IsMatch(AutoMapper.ResolutionContext,AutoMapper.IMappingEngineRunner)">
            <summary>Establecer el stub de ITypeMapObjectMapper.IsMatch(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubITypeMapObjectMapper.am::AutoMapper#Mappers#ITypeMapObjectMapper#Map(AutoMapper.ResolutionContext,AutoMapper.IMappingEngineRunner)">
            <summary>Establecer el stub de ITypeMapObjectMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubITypeMapObjectMapper.IsMatchResolutionContextIMappingEngineRunner">
            <summary>Establecer el stub de ITypeMapObjectMapper.IsMatch(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubITypeMapObjectMapper.MapResolutionContextIMappingEngineRunner">
            <summary>Establecer el stub de ITypeMapObjectMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubImplicitConversionOperatorMapper">
            <summary>Tipo stub de AutoMapper.Mappers.ImplicitConversionOperatorMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubImplicitConversionOperatorMapper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubImplicitConversionOperatorMapper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubImplicitConversionOperatorMapper</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubImplicitConversionOperatorMapper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubImplicitConversionOperatorMapper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubImplicitConversionOperatorMapper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubMultidimensionalArrayFiller">
            <summary>Tipo stub de AutoMapper.Mappers.MultidimensionalArrayFiller</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubMultidimensionalArrayFiller.#ctor(System.Array)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubMultidimensionalArrayFiller.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMultidimensionalArrayFiller</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubMultidimensionalArrayFiller.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubMultidimensionalArrayFiller.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubMultidimensionalArrayFiller.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubMultidimensionalArrayMapper">
            <summary>Tipo stub de AutoMapper.Mappers.MultidimensionalArrayMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubMultidimensionalArrayMapper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubMultidimensionalArrayMapper.ClearEnumerable(System.Array)">
            <summary>Establecer el stub de MultidimensionalArrayMapper.ClearEnumerable(Array enumerable)</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubMultidimensionalArrayMapper.ClearEnumerableArray">
            <summary>Establecer el stub de MultidimensionalArrayMapper.ClearEnumerable(Array enumerable)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubMultidimensionalArrayMapper.CreateDestinationObject(AutoMapper.ResolutionContext,System.Type,System.Int32,AutoMapper.IMappingEngineRunner)">
            <summary>Establecer el stub de EnumerableMapperBase`1.CreateDestinationObject(ResolutionContext context, Type destinationElementType, Int32 count, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubMultidimensionalArrayMapper.CreateDestinationObjectBase(System.Type,System.Int32)">
            <summary>Establecer el stub de MultidimensionalArrayMapper.CreateDestinationObjectBase(Type destElementType, Int32 sourceLength)</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubMultidimensionalArrayMapper.CreateDestinationObjectBaseTypeInt32">
            <summary>Establecer el stub de MultidimensionalArrayMapper.CreateDestinationObjectBase(Type destElementType, Int32 sourceLength)</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubMultidimensionalArrayMapper.CreateDestinationObjectResolutionContextTypeInt32IMappingEngineRunner">
            <summary>Establecer el stub de EnumerableMapperBase`1.CreateDestinationObject(ResolutionContext context, Type destinationElementType, Int32 count, IMappingEngineRunner mapper)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubMultidimensionalArrayMapper.GetEnumerableFor(System.Object)">
            <summary>Establecer el stub de EnumerableMapperBase`1.GetEnumerableFor(Object destination)</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubMultidimensionalArrayMapper.GetEnumerableForObject">
            <summary>Establecer el stub de EnumerableMapperBase`1.GetEnumerableFor(Object destination)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubMultidimensionalArrayMapper.GetOrCreateDestinationObject(AutoMapper.ResolutionContext,AutoMapper.IMappingEngineRunner,System.Type,System.Int32)">
            <summary>Establecer el stub de MultidimensionalArrayMapper.GetOrCreateDestinationObject(ResolutionContext context, IMappingEngineRunner mapper, Type destElementType, Int32 sourceLength)</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubMultidimensionalArrayMapper.GetOrCreateDestinationObjectResolutionContextIMappingEngineRunnerTypeInt32">
            <summary>Establecer el stub de MultidimensionalArrayMapper.GetOrCreateDestinationObject(ResolutionContext context, IMappingEngineRunner mapper, Type destElementType, Int32 sourceLength)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubMultidimensionalArrayMapper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMultidimensionalArrayMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubMultidimensionalArrayMapper.IsMatch(AutoMapper.ResolutionContext)">
            <summary>Establecer el stub de MultidimensionalArrayMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubMultidimensionalArrayMapper.IsMatchResolutionContext">
            <summary>Establecer el stub de MultidimensionalArrayMapper.IsMatch(ResolutionContext context)</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubMultidimensionalArrayMapper.SetElementValue(System.Array,System.Object,System.Int32)">
            <summary>Establecer el stub de MultidimensionalArrayMapper.SetElementValue(Array destination, Object mappedValue, Int32 index)</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubMultidimensionalArrayMapper.SetElementValueArrayObjectInt32">
            <summary>Establecer el stub de MultidimensionalArrayMapper.SetElementValue(Array destination, Object mappedValue, Int32 index)</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubMultidimensionalArrayMapper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubMultidimensionalArrayMapper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubMultidimensionalArrayMapper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubNullableMapper">
            <summary>Tipo stub de AutoMapper.Mappers.NullableMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubNullableMapper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubNullableMapper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubNullableMapper</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubNullableMapper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubNullableMapper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubNullableMapper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubNullableSourceMapper">
            <summary>Tipo stub de AutoMapper.Mappers.NullableSourceMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubNullableSourceMapper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubNullableSourceMapper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubNullableSourceMapper</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubNullableSourceMapper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubNullableSourceMapper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubNullableSourceMapper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubOpenGenericMapper">
            <summary>Tipo stub de AutoMapper.Mappers.OpenGenericMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubOpenGenericMapper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubOpenGenericMapper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubOpenGenericMapper</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubOpenGenericMapper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubOpenGenericMapper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubOpenGenericMapper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubPrimitiveArrayMapper">
            <summary>Tipo stub de AutoMapper.Mappers.PrimitiveArrayMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubPrimitiveArrayMapper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubPrimitiveArrayMapper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPrimitiveArrayMapper</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubPrimitiveArrayMapper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubPrimitiveArrayMapper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubPrimitiveArrayMapper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubReadOnlyCollectionMapper">
            <summary>Tipo stub de AutoMapper.Mappers.ReadOnlyCollectionMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubReadOnlyCollectionMapper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubReadOnlyCollectionMapper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubReadOnlyCollectionMapper</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubReadOnlyCollectionMapper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubReadOnlyCollectionMapper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubReadOnlyCollectionMapper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubStringMapper">
            <summary>Tipo stub de AutoMapper.Mappers.StringMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubStringMapper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubStringMapper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubStringMapper</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubStringMapper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubStringMapper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubStringMapper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubTypeMapMapper">
            <summary>Tipo stub de AutoMapper.Mappers.TypeMapMapper</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubTypeMapMapper.#ctor(System.Collections.Generic.IEnumerable{AutoMapper.Mappers.ITypeMapObjectMapper})">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubTypeMapMapper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubTypeMapMapper</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubTypeMapMapper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubTypeMapMapper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubTypeMapMapper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Fakes.ShimExpressionRequest">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.QueryableExtensions.ExpressionRequest</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExpressionRequest.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExpressionRequest.#ctor(AutoMapper.QueryableExtensions.ExpressionRequest)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExpressionRequest.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExpressionRequest.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExpressionRequest.Bind(System.IEquatable{AutoMapper.QueryableExtensions.ExpressionRequest})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExpressionRequest.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExpressionRequest.ConstructorTypeTypeStringArray">
            <summary>Establecer el shim de ExpressionRequest.ExpressionRequest(Type sourceType, Type destinationType, String[] includedMembers)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExpressionRequest.DestinationTypeGet">
            <summary>Establecer el shim de ExpressionRequest.get_DestinationType()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExpressionRequest.EqualityOpExpressionRequestExpressionRequest">
            <summary>Establecer el shim de ExpressionRequest.op_Equality(ExpressionRequest left, ExpressionRequest right)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExpressionRequest.EqualsExpressionRequest">
            <summary>Establecer el shim de ExpressionRequest.Equals(ExpressionRequest other)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExpressionRequest.EqualsObject">
            <summary>Establecer el shim de ExpressionRequest.Equals(Object obj)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExpressionRequest.GetHashCode">
            <summary>Establecer el shim de ExpressionRequest.GetHashCode()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExpressionRequest.IncludedMembersGet">
            <summary>Establecer el shim de ExpressionRequest.get_IncludedMembers()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExpressionRequest.IncludedMembersSetStringArray">
            <summary>Establecer el shim de ExpressionRequest.set_IncludedMembers(String[] value)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExpressionRequest.InequalityOpExpressionRequestExpressionRequest">
            <summary>Establecer el shim de ExpressionRequest.op_Inequality(ExpressionRequest left, ExpressionRequest right)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExpressionRequest.SourceTypeGet">
            <summary>Establecer el shim de ExpressionRequest.get_SourceType()</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Fakes.ShimExpressionRequest.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExpressionRequest.AllInstances.DestinationTypeGet">
            <summary>Establecer el shim de ExpressionRequest.get_DestinationType()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExpressionRequest.AllInstances.EqualsExpressionRequest">
            <summary>Establecer el shim de ExpressionRequest.Equals(ExpressionRequest other)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExpressionRequest.AllInstances.EqualsObject">
            <summary>Establecer el shim de ExpressionRequest.Equals(Object obj)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExpressionRequest.AllInstances.GetHashCode01">
            <summary>Establecer el shim de ExpressionRequest.GetHashCode()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExpressionRequest.AllInstances.IncludedMembersGet">
            <summary>Establecer el shim de ExpressionRequest.get_IncludedMembers()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExpressionRequest.AllInstances.IncludedMembersSetStringArray">
            <summary>Establecer el shim de ExpressionRequest.set_IncludedMembers(String[] value)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExpressionRequest.AllInstances.SourceTypeGet">
            <summary>Establecer el shim de ExpressionRequest.get_SourceType()</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Fakes.ShimExpressionResolutionResult">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.QueryableExtensions.ExpressionResolutionResult</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExpressionResolutionResult.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExpressionResolutionResult.#ctor(AutoMapper.QueryableExtensions.ExpressionResolutionResult)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExpressionResolutionResult.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExpressionResolutionResult.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExpressionResolutionResult.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExpressionResolutionResult.ConstructorExpressionType">
            <summary>Establecer el shim de ExpressionResolutionResult.ExpressionResolutionResult(Expression resolutionExpression, Type type)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExpressionResolutionResult.ResolutionExpressionGet">
            <summary>Establecer el shim de ExpressionResolutionResult.get_ResolutionExpression()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExpressionResolutionResult.ResolutionExpressionSetExpression">
            <summary>Establecer el shim de ExpressionResolutionResult.set_ResolutionExpression(Expression value)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExpressionResolutionResult.TypeGet">
            <summary>Establecer el shim de ExpressionResolutionResult.get_Type()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExpressionResolutionResult.TypeSetType">
            <summary>Establecer el shim de ExpressionResolutionResult.set_Type(Type value)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Fakes.ShimExpressionResolutionResult.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExpressionResolutionResult.AllInstances.ResolutionExpressionGet">
            <summary>Establecer el shim de ExpressionResolutionResult.get_ResolutionExpression()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExpressionResolutionResult.AllInstances.ResolutionExpressionSetExpression">
            <summary>Establecer el shim de ExpressionResolutionResult.set_ResolutionExpression(Expression value)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExpressionResolutionResult.AllInstances.TypeGet">
            <summary>Establecer el shim de ExpressionResolutionResult.get_Type()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExpressionResolutionResult.AllInstances.TypeSetType">
            <summary>Establecer el shim de ExpressionResolutionResult.set_Type(Type value)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Fakes.ShimExtensions">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.QueryableExtensions.Extensions</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.CreateMapExpressionOf2IMappingEngineIDictionaryOfStringObjectStringArray``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IMappingEngine,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[],System.Linq.Expressions.Expression{System.Func{``0,``1}}})">
            <summary>Establecer el shim de Extensions.CreateMapExpression(IMappingEngine mappingEngine, IDictionary`2&lt;String,Object&gt; parameters, String[] membersToExpand)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.MapOf2IQueryableOfM0IQueryableOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{``1},System.Linq.IQueryable{``1}})">
            <summary>Establecer el shim de Extensions.Map(IQueryable`1&lt;!!0&gt; sourceQuery, IQueryable`1&lt;!!1&gt; destQuery)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.MapOf2IQueryableOfM0IQueryableOfM1IMappingEngine``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{``1},AutoMapper.IMappingEngine,System.Linq.IQueryable{``1}})">
            <summary>Establecer el shim de Extensions.Map(IQueryable`1&lt;!!0&gt; sourceQuery, IQueryable`1&lt;!!1&gt; destQuery, IMappingEngine mappingEngine)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.ProjectOf1IQueryableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},AutoMapper.QueryableExtensions.IProjectionExpression})">
            <summary>Establecer el shim de Extensions.Project(IQueryable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.ProjectOf1IQueryableOfM0IMappingEngine``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},AutoMapper.IMappingEngine,AutoMapper.QueryableExtensions.IProjectionExpression})">
            <summary>Establecer el shim de Extensions.Project(IQueryable`1&lt;!!0&gt; source, IMappingEngine mappingEngine)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.ProjectToOf1IQueryable``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable,System.Linq.IQueryable{``0}})">
            <summary>Establecer el shim de Extensions.ProjectTo(IQueryable source)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.ProjectToOf1IQueryableIMappingEngine``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable,AutoMapper.IMappingEngine,System.Linq.IQueryable{``0}})">
            <summary>Establecer el shim de Extensions.ProjectTo(IQueryable source, IMappingEngine mappingEngine)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.UseAsDataSourceOf1IQueryableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},AutoMapper.QueryableExtensions.Impl.IQueryDataSourceInjection{``0}})">
            <summary>Establecer el shim de Extensions.UseAsDataSource(IQueryable`1&lt;!!0&gt; dataSource)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.UseAsDataSourceOf1IQueryableOfM0IMappingEngine``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},AutoMapper.IMappingEngine,AutoMapper.QueryableExtensions.Impl.IQueryDataSourceInjection{``0}})">
            <summary>Establecer el shim de Extensions.UseAsDataSource(IQueryable`1&lt;!!0&gt; dataSource, IMappingEngine mappingEngine)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.CreateMapExpressionIMappingEngineTypeTypeIDictionaryOfStringObjectStringArray">
            <summary>Establecer el shim de Extensions.CreateMapExpression(IMappingEngine mappingEngine, Type sourceType, Type destinationType, IDictionary`2&lt;String,Object&gt; parameters, String[] membersToExpand)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.QueryableExtensions.ProjectionExpression</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression.#ctor(AutoMapper.QueryableExtensions.ProjectionExpression)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression.Bind(AutoMapper.QueryableExtensions.IProjectionExpression)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression.GetMemberNamesOf1ExpressionOfFuncOfM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[]})">
            <summary>Establecer el shim de ProjectionExpression.GetMemberNames(Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt;[] membersToExpand)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression.ToOf1IDictionaryOfStringObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Linq.IQueryable{``0}})">
            <summary>Establecer el shim de ProjectionExpression.To(IDictionary`2&lt;String,Object&gt; parameters)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression.ToOf1IDictionaryOfStringObjectExpressionOfFuncOfM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Linq.IQueryable{``0}})">
            <summary>Establecer el shim de ProjectionExpression.To(IDictionary`2&lt;String,Object&gt; parameters, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt;[] membersToExpand)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression.ToOf1IDictionaryOfStringObjectStringArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.String[],System.Linq.IQueryable{``0}})">
            <summary>Establecer el shim de ProjectionExpression.To(IDictionary`2&lt;String,Object&gt; parameters, String[] membersToExpand)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression.ToOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Linq.IQueryable{``0}})">
            <summary>Establecer el shim de ProjectionExpression.To(Object parameters)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression.ToOf1ObjectExpressionOfFuncOfM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Linq.IQueryable{``0}})">
            <summary>Establecer el shim de ProjectionExpression.To(Object parameters, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt;[] membersToExpand)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression.ToOf1ObjectStringArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.String[],System.Linq.IQueryable{``0}})">
            <summary>Establecer el shim de ProjectionExpression.To(Object parameters, String[] membersToExpand)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression.ConstructorIQueryableIMappingEngine">
            <summary>Establecer el shim de ProjectionExpression.ProjectionExpression(IQueryable source, IMappingEngine mappingEngine)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression.FindQueryableSelectMethod">
            <summary>Establecer el shim de ProjectionExpression.FindQueryableSelectMethod()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression.StaticConstructor">
            <summary>Establecer el shim de ProjectionExpression.ProjectionExpression()</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression.AllInstances.GetMemberNamesOf1ExpressionOfFuncOfM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.QueryableExtensions.ProjectionExpression,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[]})">
            <summary>Establecer el shim de ProjectionExpression.GetMemberNames(Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt;[] membersToExpand)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression.AllInstances.ToOf1IDictionaryOfStringObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.QueryableExtensions.ProjectionExpression,System.Collections.Generic.IDictionary{System.String,System.Object},System.Linq.IQueryable{``0}})">
            <summary>Establecer el shim de ProjectionExpression.To(IDictionary`2&lt;String,Object&gt; parameters)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression.AllInstances.ToOf1IDictionaryOfStringObjectExpressionOfFuncOfM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.QueryableExtensions.ProjectionExpression,System.Collections.Generic.IDictionary{System.String,System.Object},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Linq.IQueryable{``0}})">
            <summary>Establecer el shim de ProjectionExpression.To(IDictionary`2&lt;String,Object&gt; parameters, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt;[] membersToExpand)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression.AllInstances.ToOf1IDictionaryOfStringObjectStringArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.QueryableExtensions.ProjectionExpression,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[],System.Linq.IQueryable{``0}})">
            <summary>Establecer el shim de ProjectionExpression.To(IDictionary`2&lt;String,Object&gt; parameters, String[] membersToExpand)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression.AllInstances.ToOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.QueryableExtensions.ProjectionExpression,System.Object,System.Linq.IQueryable{``0}})">
            <summary>Establecer el shim de ProjectionExpression.To(Object parameters)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression.AllInstances.ToOf1ObjectExpressionOfFuncOfM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.QueryableExtensions.ProjectionExpression,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Linq.IQueryable{``0}})">
            <summary>Establecer el shim de ProjectionExpression.To(Object parameters, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt;[] membersToExpand)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression.AllInstances.ToOf1ObjectStringArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.QueryableExtensions.ProjectionExpression,System.Object,System.String[],System.Linq.IQueryable{``0}})">
            <summary>Establecer el shim de ProjectionExpression.To(Object parameters, String[] membersToExpand)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Fakes.StubExpressionRequest">
            <summary>Tipo stub de AutoMapper.QueryableExtensions.ExpressionRequest</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubExpressionRequest.#ctor(System.Type,System.Type,System.String[])">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubExpressionRequest.Equals(System.Object)">
            <summary>Establecer el stub de ExpressionRequest.Equals(Object obj)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Fakes.StubExpressionRequest.EqualsObject">
            <summary>Establecer el stub de ExpressionRequest.Equals(Object obj)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubExpressionRequest.GetHashCode">
            <summary>Establecer el stub de ExpressionRequest.GetHashCode()</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Fakes.StubExpressionRequest.GetHashCode01">
            <summary>Establecer el stub de ExpressionRequest.GetHashCode()</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubExpressionRequest.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubExpressionRequest</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.StubExpressionRequest.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.StubExpressionRequest.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.StubExpressionRequest.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Fakes.StubExpressionResolutionResult">
            <summary>Tipo stub de AutoMapper.QueryableExtensions.ExpressionResolutionResult</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubExpressionResolutionResult.#ctor(System.Linq.Expressions.Expression,System.Type)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubExpressionResolutionResult.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubExpressionResolutionResult</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.StubExpressionResolutionResult.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.StubExpressionResolutionResult.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.StubExpressionResolutionResult.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Fakes.StubIExpressionBinder">
            <summary>Tipo stub de AutoMapper.QueryableExtensions.IExpressionBinder</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubIExpressionBinder.#ctor">
            <summary>Inicializa una nueva instancia de type StubIExpressionBinder</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubIExpressionBinder.am::AutoMapper#QueryableExtensions#IExpressionBinder#Build(AutoMapper.IMappingEngine,AutoMapper.PropertyMap,AutoMapper.TypeMap,AutoMapper.QueryableExtensions.ExpressionRequest,AutoMapper.QueryableExtensions.ExpressionResolutionResult,AutoMapper.Internal.IDictionary{AutoMapper.QueryableExtensions.ExpressionRequest,System.Int32})">
            <summary>Establecer el stub de IExpressionBinder.Build(IMappingEngine mappingEngine, PropertyMap propertyMap, TypeMap propertyTypeMap, ExpressionRequest request, ExpressionResolutionResult result, IDictionary`2&lt;ExpressionRequest,Int32&gt; typePairCount)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubIExpressionBinder.am::AutoMapper#QueryableExtensions#IExpressionBinder#IsMatch(AutoMapper.PropertyMap,AutoMapper.TypeMap,AutoMapper.QueryableExtensions.ExpressionResolutionResult)">
            <summary>Establecer el stub de IExpressionBinder.IsMatch(PropertyMap propertyMap, TypeMap propertyTypeMap, ExpressionResolutionResult result)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Fakes.StubIExpressionBinder.BuildIMappingEnginePropertyMapTypeMapExpressionRequestExpressionResolutionResultIDictionaryOfExpressionRequestInt32">
            <summary>Establecer el stub de IExpressionBinder.Build(IMappingEngine mappingEngine, PropertyMap propertyMap, TypeMap propertyTypeMap, ExpressionRequest request, ExpressionResolutionResult result, IDictionary`2&lt;ExpressionRequest,Int32&gt; typePairCount)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Fakes.StubIExpressionBinder.IsMatchPropertyMapTypeMapExpressionResolutionResult">
            <summary>Establecer el stub de IExpressionBinder.IsMatch(PropertyMap propertyMap, TypeMap propertyTypeMap, ExpressionResolutionResult result)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Fakes.StubIExpressionResultConverter">
            <summary>Tipo stub de AutoMapper.QueryableExtensions.IExpressionResultConverter</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubIExpressionResultConverter.#ctor">
            <summary>Inicializa una nueva instancia de type StubIExpressionResultConverter</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubIExpressionResultConverter.am::AutoMapper#QueryableExtensions#IExpressionResultConverter#CanGetExpressionResolutionResult(AutoMapper.QueryableExtensions.ExpressionResolutionResult,AutoMapper.IValueResolver)">
            <summary>Establecer el stub de IExpressionResultConverter.CanGetExpressionResolutionResult(ExpressionResolutionResult expressionResolutionResult, IValueResolver valueResolver)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubIExpressionResultConverter.am::AutoMapper#QueryableExtensions#IExpressionResultConverter#GetExpressionResolutionResult(AutoMapper.QueryableExtensions.ExpressionResolutionResult,AutoMapper.PropertyMap,AutoMapper.IValueResolver)">
            <summary>Establecer el stub de IExpressionResultConverter.GetExpressionResolutionResult(ExpressionResolutionResult expressionResolutionResult, PropertyMap propertyMap, IValueResolver valueResolver)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Fakes.StubIExpressionResultConverter.CanGetExpressionResolutionResultExpressionResolutionResultIValueResolver">
            <summary>Establecer el stub de IExpressionResultConverter.CanGetExpressionResolutionResult(ExpressionResolutionResult expressionResolutionResult, IValueResolver valueResolver)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Fakes.StubIExpressionResultConverter.GetExpressionResolutionResultExpressionResolutionResultPropertyMapIValueResolver">
            <summary>Establecer el stub de IExpressionResultConverter.GetExpressionResolutionResult(ExpressionResolutionResult expressionResolutionResult, PropertyMap propertyMap, IValueResolver valueResolver)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Fakes.StubIProjectionExpression">
            <summary>Tipo stub de AutoMapper.QueryableExtensions.IProjectionExpression</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubIProjectionExpression.#ctor">
            <summary>Inicializa una nueva instancia de type StubIProjectionExpression</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubIProjectionExpression.am::AutoMapper#QueryableExtensions#IProjectionExpression#To``1(System.Object)">
            <summary>Establecer el stub de IProjectionExpression.To(Object parameters)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubIProjectionExpression.am::AutoMapper#QueryableExtensions#IProjectionExpression#To``1(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Establecer el stub de IProjectionExpression.To(IDictionary`2&lt;String,Object&gt; parameters)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubIProjectionExpression.am::AutoMapper#QueryableExtensions#IProjectionExpression#To``1(System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>Establecer el stub de IProjectionExpression.To(Object parameters, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt;[] membersToExpand)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubIProjectionExpression.am::AutoMapper#QueryableExtensions#IProjectionExpression#To``1(System.Object,System.String[])">
            <summary>Establecer el stub de IProjectionExpression.To(Object parameters, String[] membersToExpand)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubIProjectionExpression.am::AutoMapper#QueryableExtensions#IProjectionExpression#To``1(System.Collections.Generic.IDictionary{System.String,System.Object},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>Establecer el stub de IProjectionExpression.To(IDictionary`2&lt;String,Object&gt; parameters, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt;[] membersToExpand)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubIProjectionExpression.am::AutoMapper#QueryableExtensions#IProjectionExpression#To``1(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])">
            <summary>Establecer el stub de IProjectionExpression.To(IDictionary`2&lt;String,Object&gt; parameters, String[] membersToExpand)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubIProjectionExpression.ToOf1IDictionaryOfStringObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Linq.IQueryable{``0}})">
            <summary>Establecer stubs de To(IDictionary`2&lt;String,Object&gt; parameters)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubIProjectionExpression.ToOf1IDictionaryOfStringObjectExpressionOfFuncOfM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Linq.IQueryable{``0}})">
            <summary>Establecer stubs de To(IDictionary`2&lt;String,Object&gt; parameters, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt;[] membersToExpand)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubIProjectionExpression.ToOf1IDictionaryOfStringObjectStringArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.String[],System.Linq.IQueryable{``0}})">
            <summary>Establecer stubs de To(IDictionary`2&lt;String,Object&gt; parameters, String[] membersToExpand)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubIProjectionExpression.ToOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Linq.IQueryable{``0}})">
            <summary>Establecer stubs de To(Object parameters)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubIProjectionExpression.ToOf1ObjectExpressionOfFuncOfM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Linq.IQueryable{``0}})">
            <summary>Establecer stubs de To(Object parameters, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt;[] membersToExpand)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubIProjectionExpression.ToOf1ObjectStringArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.String[],System.Linq.IQueryable{``0}})">
            <summary>Establecer stubs de To(Object parameters, String[] membersToExpand)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Fakes.StubProjectionExpression">
            <summary>Tipo stub de AutoMapper.QueryableExtensions.ProjectionExpression</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubProjectionExpression.#ctor(System.Linq.IQueryable,AutoMapper.IMappingEngine)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubProjectionExpression.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubProjectionExpression</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.StubProjectionExpression.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.StubProjectionExpression.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.StubProjectionExpression.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimAssignableExpressionBinder">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.QueryableExtensions.Impl.AssignableExpressionBinder</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimAssignableExpressionBinder.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimAssignableExpressionBinder.#ctor(AutoMapper.QueryableExtensions.Impl.AssignableExpressionBinder)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimAssignableExpressionBinder.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimAssignableExpressionBinder.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimAssignableExpressionBinder.Bind(AutoMapper.QueryableExtensions.IExpressionBinder)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimAssignableExpressionBinder.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimAssignableExpressionBinder.BindAssignableExpressionPropertyMapExpressionResolutionResult">
            <summary>Establecer el shim de AssignableExpressionBinder.BindAssignableExpression(PropertyMap propertyMap, ExpressionResolutionResult result)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimAssignableExpressionBinder.BuildIMappingEnginePropertyMapTypeMapExpressionRequestExpressionResolutionResultIDictionaryOfExpressionRequestInt32">
            <summary>Establecer el shim de AssignableExpressionBinder.Build(IMappingEngine mappingEngine, PropertyMap propertyMap, TypeMap propertyTypeMap, ExpressionRequest request, ExpressionResolutionResult result, IDictionary`2&lt;ExpressionRequest,Int32&gt; typePairCount)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimAssignableExpressionBinder.Constructor">
            <summary>Establecer el shim de AssignableExpressionBinder.AssignableExpressionBinder()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimAssignableExpressionBinder.IsMatchPropertyMapTypeMapExpressionResolutionResult">
            <summary>Establecer el shim de AssignableExpressionBinder.IsMatch(PropertyMap propertyMap, TypeMap propertyTypeMap, ExpressionResolutionResult result)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimAssignableExpressionBinder.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimAssignableExpressionBinder.AllInstances.BuildIMappingEnginePropertyMapTypeMapExpressionRequestExpressionResolutionResultIDictionaryOfExpressionRequestInt32">
            <summary>Establecer el shim de AssignableExpressionBinder.Build(IMappingEngine mappingEngine, PropertyMap propertyMap, TypeMap propertyTypeMap, ExpressionRequest request, ExpressionResolutionResult result, IDictionary`2&lt;ExpressionRequest,Int32&gt; typePairCount)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimAssignableExpressionBinder.AllInstances.IsMatchPropertyMapTypeMapExpressionResolutionResult">
            <summary>Establecer el shim de AssignableExpressionBinder.IsMatch(PropertyMap propertyMap, TypeMap propertyTypeMap, ExpressionResolutionResult result)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimCustomProjectionExpressionBinder">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.QueryableExtensions.Impl.CustomProjectionExpressionBinder</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimCustomProjectionExpressionBinder.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimCustomProjectionExpressionBinder.#ctor(AutoMapper.QueryableExtensions.Impl.CustomProjectionExpressionBinder)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimCustomProjectionExpressionBinder.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimCustomProjectionExpressionBinder.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimCustomProjectionExpressionBinder.Bind(AutoMapper.QueryableExtensions.IExpressionBinder)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimCustomProjectionExpressionBinder.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimCustomProjectionExpressionBinder.BindCustomProjectionExpressionPropertyMapTypeMapExpressionResolutionResult">
            <summary>Establecer el shim de CustomProjectionExpressionBinder.BindCustomProjectionExpression(PropertyMap propertyMap, TypeMap propertyTypeMap, ExpressionResolutionResult result)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimCustomProjectionExpressionBinder.BuildIMappingEnginePropertyMapTypeMapExpressionRequestExpressionResolutionResultIDictionaryOfExpressionRequestInt32">
            <summary>Establecer el shim de CustomProjectionExpressionBinder.Build(IMappingEngine mappingEngine, PropertyMap propertyMap, TypeMap propertyTypeMap, ExpressionRequest request, ExpressionResolutionResult result, IDictionary`2&lt;ExpressionRequest,Int32&gt; typePairCount)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimCustomProjectionExpressionBinder.Constructor">
            <summary>Establecer el shim de CustomProjectionExpressionBinder.CustomProjectionExpressionBinder()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimCustomProjectionExpressionBinder.IsMatchPropertyMapTypeMapExpressionResolutionResult">
            <summary>Establecer el shim de CustomProjectionExpressionBinder.IsMatch(PropertyMap propertyMap, TypeMap propertyTypeMap, ExpressionResolutionResult result)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimCustomProjectionExpressionBinder.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimCustomProjectionExpressionBinder.AllInstances.BuildIMappingEnginePropertyMapTypeMapExpressionRequestExpressionResolutionResultIDictionaryOfExpressionRequestInt32">
            <summary>Establecer el shim de CustomProjectionExpressionBinder.Build(IMappingEngine mappingEngine, PropertyMap propertyMap, TypeMap propertyTypeMap, ExpressionRequest request, ExpressionResolutionResult result, IDictionary`2&lt;ExpressionRequest,Int32&gt; typePairCount)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimCustomProjectionExpressionBinder.AllInstances.IsMatchPropertyMapTypeMapExpressionResolutionResult">
            <summary>Establecer el shim de CustomProjectionExpressionBinder.IsMatch(PropertyMap propertyMap, TypeMap propertyTypeMap, ExpressionResolutionResult result)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimEnumerableExpressionBinder">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.QueryableExtensions.Impl.EnumerableExpressionBinder</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimEnumerableExpressionBinder.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimEnumerableExpressionBinder.#ctor(AutoMapper.QueryableExtensions.Impl.EnumerableExpressionBinder)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimEnumerableExpressionBinder.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimEnumerableExpressionBinder.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimEnumerableExpressionBinder.Bind(AutoMapper.QueryableExtensions.IExpressionBinder)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimEnumerableExpressionBinder.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimEnumerableExpressionBinder.BindEnumerableExpressionIMappingEnginePropertyMapExpressionRequestExpressionResolutionResultIDictionaryOfExpressionRequestInt32">
            <summary>Establecer el shim de EnumerableExpressionBinder.BindEnumerableExpression(IMappingEngine mappingEngine, PropertyMap propertyMap, ExpressionRequest request, ExpressionResolutionResult result, IDictionary`2&lt;ExpressionRequest,Int32&gt; typePairCount)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimEnumerableExpressionBinder.BuildIMappingEnginePropertyMapTypeMapExpressionRequestExpressionResolutionResultIDictionaryOfExpressionRequestInt32">
            <summary>Establecer el shim de EnumerableExpressionBinder.Build(IMappingEngine mappingEngine, PropertyMap propertyMap, TypeMap propertyTypeMap, ExpressionRequest request, ExpressionResolutionResult result, IDictionary`2&lt;ExpressionRequest,Int32&gt; typePairCount)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimEnumerableExpressionBinder.Constructor">
            <summary>Establecer el shim de EnumerableExpressionBinder.EnumerableExpressionBinder()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimEnumerableExpressionBinder.GetDestinationListTypeForPropertyMap">
            <summary>Establecer el shim de EnumerableExpressionBinder.GetDestinationListTypeFor(PropertyMap propertyMap)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimEnumerableExpressionBinder.GetToListCallExpressionPropertyMapTypeExpression">
            <summary>Establecer el shim de EnumerableExpressionBinder.GetToListCallExpression(PropertyMap propertyMap, Type destinationListType, Expression selectExpression)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimEnumerableExpressionBinder.IsMatchPropertyMapTypeMapExpressionResolutionResult">
            <summary>Establecer el shim de EnumerableExpressionBinder.IsMatch(PropertyMap propertyMap, TypeMap propertyTypeMap, ExpressionResolutionResult result)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimEnumerableExpressionBinder.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimEnumerableExpressionBinder.AllInstances.BuildIMappingEnginePropertyMapTypeMapExpressionRequestExpressionResolutionResultIDictionaryOfExpressionRequestInt32">
            <summary>Establecer el shim de EnumerableExpressionBinder.Build(IMappingEngine mappingEngine, PropertyMap propertyMap, TypeMap propertyTypeMap, ExpressionRequest request, ExpressionResolutionResult result, IDictionary`2&lt;ExpressionRequest,Int32&gt; typePairCount)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimEnumerableExpressionBinder.AllInstances.IsMatchPropertyMapTypeMapExpressionResolutionResult">
            <summary>Establecer el shim de EnumerableExpressionBinder.IsMatch(PropertyMap propertyMap, TypeMap propertyTypeMap, ExpressionResolutionResult result)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMappedTypeExpressionBinder">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.QueryableExtensions.Impl.MappedTypeExpressionBinder</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMappedTypeExpressionBinder.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMappedTypeExpressionBinder.#ctor(AutoMapper.QueryableExtensions.Impl.MappedTypeExpressionBinder)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMappedTypeExpressionBinder.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMappedTypeExpressionBinder.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMappedTypeExpressionBinder.Bind(AutoMapper.QueryableExtensions.IExpressionBinder)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMappedTypeExpressionBinder.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMappedTypeExpressionBinder.BindMappedTypeExpressionIMappingEnginePropertyMapExpressionRequestExpressionResolutionResultIDictionaryOfExpressionRequestInt32">
            <summary>Establecer el shim de MappedTypeExpressionBinder.BindMappedTypeExpression(IMappingEngine mappingEngine, PropertyMap propertyMap, ExpressionRequest request, ExpressionResolutionResult result, IDictionary`2&lt;ExpressionRequest,Int32&gt; typePairCount)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMappedTypeExpressionBinder.BuildIMappingEnginePropertyMapTypeMapExpressionRequestExpressionResolutionResultIDictionaryOfExpressionRequestInt32">
            <summary>Establecer el shim de MappedTypeExpressionBinder.Build(IMappingEngine mappingEngine, PropertyMap propertyMap, TypeMap propertyTypeMap, ExpressionRequest request, ExpressionResolutionResult result, IDictionary`2&lt;ExpressionRequest,Int32&gt; typePairCount)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMappedTypeExpressionBinder.Constructor">
            <summary>Establecer el shim de MappedTypeExpressionBinder.MappedTypeExpressionBinder()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMappedTypeExpressionBinder.IsMatchPropertyMapTypeMapExpressionResolutionResult">
            <summary>Establecer el shim de MappedTypeExpressionBinder.IsMatch(PropertyMap propertyMap, TypeMap propertyTypeMap, ExpressionResolutionResult result)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMappedTypeExpressionBinder.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMappedTypeExpressionBinder.AllInstances.BuildIMappingEnginePropertyMapTypeMapExpressionRequestExpressionResolutionResultIDictionaryOfExpressionRequestInt32">
            <summary>Establecer el shim de MappedTypeExpressionBinder.Build(IMappingEngine mappingEngine, PropertyMap propertyMap, TypeMap propertyTypeMap, ExpressionRequest request, ExpressionResolutionResult result, IDictionary`2&lt;ExpressionRequest,Int32&gt; typePairCount)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMappedTypeExpressionBinder.AllInstances.IsMatchPropertyMapTypeMapExpressionResolutionResult">
            <summary>Establecer el shim de MappedTypeExpressionBinder.IsMatch(PropertyMap propertyMap, TypeMap propertyTypeMap, ExpressionResolutionResult result)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberAccessQueryMapperVisitor">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.QueryableExtensions.Impl.MemberAccessQueryMapperVisitor</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberAccessQueryMapperVisitor.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberAccessQueryMapperVisitor.#ctor(AutoMapper.QueryableExtensions.Impl.MemberAccessQueryMapperVisitor)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberAccessQueryMapperVisitor.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberAccessQueryMapperVisitor.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberAccessQueryMapperVisitor.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberAccessQueryMapperVisitor.ConstructorExpressionVisitorIMappingEngine">
            <summary>Establecer el shim de MemberAccessQueryMapperVisitor.MemberAccessQueryMapperVisitor(ExpressionVisitor rootVisitor, IMappingEngine mappingEngine)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberAccessQueryMapperVisitor.VisitMemberMemberExpression">
            <summary>Establecer el shim de MemberAccessQueryMapperVisitor.VisitMember(MemberExpression node)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberAccessQueryMapperVisitor.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberAccessQueryMapperVisitor.AllInstances.VisitMemberMemberExpression">
            <summary>Establecer el shim de MemberAccessQueryMapperVisitor.VisitMember(MemberExpression node)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberGetterExpressionResultConverter">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.QueryableExtensions.Impl.MemberGetterExpressionResultConverter</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberGetterExpressionResultConverter.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberGetterExpressionResultConverter.#ctor(AutoMapper.QueryableExtensions.Impl.MemberGetterExpressionResultConverter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberGetterExpressionResultConverter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberGetterExpressionResultConverter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberGetterExpressionResultConverter.Bind(AutoMapper.QueryableExtensions.IExpressionResultConverter)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberGetterExpressionResultConverter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberGetterExpressionResultConverter.CanGetExpressionResolutionResultExpressionResolutionResultIValueResolver">
            <summary>Establecer el shim de MemberGetterExpressionResultConverter.CanGetExpressionResolutionResult(ExpressionResolutionResult expressionResolutionResult, IValueResolver valueResolver)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberGetterExpressionResultConverter.Constructor">
            <summary>Establecer el shim de MemberGetterExpressionResultConverter.MemberGetterExpressionResultConverter()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberGetterExpressionResultConverter.GetExpressionResolutionResultExpressionResolutionResultPropertyMapIValueResolver">
            <summary>Establecer el shim de MemberGetterExpressionResultConverter.GetExpressionResolutionResult(ExpressionResolutionResult expressionResolutionResult, PropertyMap propertyMap, IValueResolver valueResolver)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberGetterExpressionResultConverter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberGetterExpressionResultConverter.AllInstances.CanGetExpressionResolutionResultExpressionResolutionResultIValueResolver">
            <summary>Establecer el shim de MemberGetterExpressionResultConverter.CanGetExpressionResolutionResult(ExpressionResolutionResult expressionResolutionResult, IValueResolver valueResolver)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberGetterExpressionResultConverter.AllInstances.GetExpressionResolutionResultExpressionResolutionResultPropertyMapIValueResolver">
            <summary>Establecer el shim de MemberGetterExpressionResultConverter.GetExpressionResolutionResult(ExpressionResolutionResult expressionResolutionResult, PropertyMap propertyMap, IValueResolver valueResolver)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberResolverExpressionResultConverter">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.QueryableExtensions.Impl.MemberResolverExpressionResultConverter</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberResolverExpressionResultConverter.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberResolverExpressionResultConverter.#ctor(AutoMapper.QueryableExtensions.Impl.MemberResolverExpressionResultConverter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberResolverExpressionResultConverter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberResolverExpressionResultConverter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberResolverExpressionResultConverter.Bind(AutoMapper.QueryableExtensions.IExpressionResultConverter)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberResolverExpressionResultConverter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberResolverExpressionResultConverter.CanGetExpressionResolutionResultExpressionResolutionResultIValueResolver">
            <summary>Establecer el shim de MemberResolverExpressionResultConverter.CanGetExpressionResolutionResult(ExpressionResolutionResult expressionResolutionResult, IValueResolver valueResolver)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberResolverExpressionResultConverter.Constructor">
            <summary>Establecer el shim de MemberResolverExpressionResultConverter.MemberResolverExpressionResultConverter()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberResolverExpressionResultConverter.GetExpressionResolutionResultExpressionResolutionResultPropertyMapIValueResolver">
            <summary>Establecer el shim de MemberResolverExpressionResultConverter.GetExpressionResolutionResult(ExpressionResolutionResult expressionResolutionResult, PropertyMap propertyMap, IValueResolver valueResolver)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberResolverExpressionResultConverter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberResolverExpressionResultConverter.AllInstances.CanGetExpressionResolutionResultExpressionResolutionResultIValueResolver">
            <summary>Establecer el shim de MemberResolverExpressionResultConverter.CanGetExpressionResolutionResult(ExpressionResolutionResult expressionResolutionResult, IValueResolver valueResolver)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimMemberResolverExpressionResultConverter.AllInstances.GetExpressionResolutionResultExpressionResolutionResultPropertyMapIValueResolver">
            <summary>Establecer el shim de MemberResolverExpressionResultConverter.GetExpressionResolutionResult(ExpressionResolutionResult expressionResolutionResult, PropertyMap propertyMap, IValueResolver valueResolver)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimNullSubstitutionExpressionResultConverter">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.QueryableExtensions.Impl.NullSubstitutionExpressionResultConverter</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimNullSubstitutionExpressionResultConverter.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimNullSubstitutionExpressionResultConverter.#ctor(AutoMapper.QueryableExtensions.Impl.NullSubstitutionExpressionResultConverter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimNullSubstitutionExpressionResultConverter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimNullSubstitutionExpressionResultConverter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimNullSubstitutionExpressionResultConverter.Bind(AutoMapper.QueryableExtensions.IExpressionResultConverter)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimNullSubstitutionExpressionResultConverter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimNullSubstitutionExpressionResultConverter.CanGetExpressionResolutionResultExpressionResolutionResultIValueResolver">
            <summary>Establecer el shim de NullSubstitutionExpressionResultConverter.CanGetExpressionResolutionResult(ExpressionResolutionResult expressionResolutionResult, IValueResolver valueResolver)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimNullSubstitutionExpressionResultConverter.Constructor">
            <summary>Establecer el shim de NullSubstitutionExpressionResultConverter.NullSubstitutionExpressionResultConverter()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimNullSubstitutionExpressionResultConverter.GetExpressionResolutionResultExpressionResolutionResultPropertyMapIValueResolver">
            <summary>Establecer el shim de NullSubstitutionExpressionResultConverter.GetExpressionResolutionResult(ExpressionResolutionResult expressionResolutionResult, PropertyMap propertyMap, IValueResolver valueResolver)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimNullSubstitutionExpressionResultConverter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimNullSubstitutionExpressionResultConverter.AllInstances.CanGetExpressionResolutionResultExpressionResolutionResultIValueResolver">
            <summary>Establecer el shim de NullSubstitutionExpressionResultConverter.CanGetExpressionResolutionResult(ExpressionResolutionResult expressionResolutionResult, IValueResolver valueResolver)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimNullSubstitutionExpressionResultConverter.AllInstances.GetExpressionResolutionResultExpressionResolutionResultPropertyMapIValueResolver">
            <summary>Establecer el shim de NullSubstitutionExpressionResultConverter.GetExpressionResolutionResult(ExpressionResolutionResult expressionResolutionResult, PropertyMap propertyMap, IValueResolver valueResolver)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimNullableExpressionBinder">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.QueryableExtensions.Impl.NullableExpressionBinder</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimNullableExpressionBinder.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimNullableExpressionBinder.#ctor(AutoMapper.QueryableExtensions.Impl.NullableExpressionBinder)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimNullableExpressionBinder.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimNullableExpressionBinder.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimNullableExpressionBinder.Bind(AutoMapper.QueryableExtensions.IExpressionBinder)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimNullableExpressionBinder.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimNullableExpressionBinder.BindNullableExpressionPropertyMapExpressionResolutionResult">
            <summary>Establecer el shim de NullableExpressionBinder.BindNullableExpression(PropertyMap propertyMap, ExpressionResolutionResult result)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimNullableExpressionBinder.BuildIMappingEnginePropertyMapTypeMapExpressionRequestExpressionResolutionResultIDictionaryOfExpressionRequestInt32">
            <summary>Establecer el shim de NullableExpressionBinder.Build(IMappingEngine mappingEngine, PropertyMap propertyMap, TypeMap propertyTypeMap, ExpressionRequest request, ExpressionResolutionResult result, IDictionary`2&lt;ExpressionRequest,Int32&gt; typePairCount)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimNullableExpressionBinder.Constructor">
            <summary>Establecer el shim de NullableExpressionBinder.NullableExpressionBinder()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimNullableExpressionBinder.IsMatchPropertyMapTypeMapExpressionResolutionResult">
            <summary>Establecer el shim de NullableExpressionBinder.IsMatch(PropertyMap propertyMap, TypeMap propertyTypeMap, ExpressionResolutionResult result)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimNullableExpressionBinder.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimNullableExpressionBinder.AllInstances.BuildIMappingEnginePropertyMapTypeMapExpressionRequestExpressionResolutionResultIDictionaryOfExpressionRequestInt32">
            <summary>Establecer el shim de NullableExpressionBinder.Build(IMappingEngine mappingEngine, PropertyMap propertyMap, TypeMap propertyTypeMap, ExpressionRequest request, ExpressionResolutionResult result, IDictionary`2&lt;ExpressionRequest,Int32&gt; typePairCount)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimNullableExpressionBinder.AllInstances.IsMatchPropertyMapTypeMapExpressionResolutionResult">
            <summary>Establecer el shim de NullableExpressionBinder.IsMatch(PropertyMap propertyMap, TypeMap propertyTypeMap, ExpressionResolutionResult result)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimParameterReplacementVisitor">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.QueryableExtensions.Impl.ParameterReplacementVisitor</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimParameterReplacementVisitor.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimParameterReplacementVisitor.#ctor(AutoMapper.QueryableExtensions.Impl.ParameterReplacementVisitor)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimParameterReplacementVisitor.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimParameterReplacementVisitor.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimParameterReplacementVisitor.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimParameterReplacementVisitor.ConstructorExpression">
            <summary>Establecer el shim de ParameterReplacementVisitor.ParameterReplacementVisitor(Expression memberExpression)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimParameterReplacementVisitor.VisitParameterParameterExpression">
            <summary>Establecer el shim de ParameterReplacementVisitor.VisitParameter(ParameterExpression node)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimParameterReplacementVisitor.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimParameterReplacementVisitor.AllInstances.VisitParameterParameterExpression">
            <summary>Establecer el shim de ParameterReplacementVisitor.VisitParameter(ParameterExpression node)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryDataSourceInjection`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.QueryableExtensions.Impl.QueryDataSourceInjection`1</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryDataSourceInjection`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryDataSourceInjection`1.#ctor(AutoMapper.QueryableExtensions.Impl.QueryDataSourceInjection{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryDataSourceInjection`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryDataSourceInjection`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryDataSourceInjection`1.Bind(AutoMapper.QueryableExtensions.Impl.IQueryDataSourceInjection{`0})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryDataSourceInjection`1.ForOf1SourceInjectedQueryInspector``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.QueryableExtensions.Impl.SourceInjectedQueryInspector,System.Linq.IQueryable{``0}})">
            <summary>Establecer el shim de QueryDataSourceInjection`1.For(SourceInjectedQueryInspector inspector)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryDataSourceInjection`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryDataSourceInjection`1.ConstructorIQueryableOfT0IMappingEngine">
            <summary>Establecer el shim de QueryDataSourceInjection`1.QueryDataSourceInjection`1(IQueryable`1&lt;!0&gt; dataSource, IMappingEngine mappingEngine)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryDataSourceInjection`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryDataSourceInjection`1.AllInstances.ForOf1SourceInjectedQueryInspector``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.QueryableExtensions.Impl.QueryDataSourceInjection{`0},AutoMapper.QueryableExtensions.Impl.SourceInjectedQueryInspector,System.Linq.IQueryable{``0}})">
            <summary>Establecer el shim de QueryDataSourceInjection`1.For(SourceInjectedQueryInspector inspector)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperHelper">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.QueryableExtensions.Impl.QueryMapperHelper</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperHelper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperHelper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperHelper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperHelper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperHelper.GetPropertyMapIMappingEngineMemberInfoType">
            <summary>Establecer el shim de QueryMapperHelper.GetPropertyMap(IMappingEngine mappingEngine, MemberInfo sourceMemberInfo, Type destinationMemberType)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.QueryableExtensions.Impl.QueryMapperVisitor</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.#ctor(AutoMapper.QueryableExtensions.Impl.QueryMapperVisitor)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.MapOf2IQueryableOfM0IQueryableOfM1IMappingEngine``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{``1},AutoMapper.IMappingEngine,System.Linq.IQueryable{``1}})">
            <summary>Establecer el shim de QueryMapperVisitor.Map(IQueryable`1&lt;!!0&gt; sourceQuery, IQueryable`1&lt;!!1&gt; destQuery, IMappingEngine map)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.VisitLambdaOf1ExpressionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{``0},System.Linq.Expressions.Expression})">
            <summary>Establecer el shim de QueryMapperVisitor.VisitLambda(Expression`1&lt;!!0&gt; node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor._VisitLambdab__13_0Of1ParameterExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.ParameterExpression})">
            <summary>Establecer el shim de QueryMapperVisitor.&lt;VisitLambda&gt;b__13_0(ParameterExpression p)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.ChangeLambdaArgTypeFormSourceToDestTypeType">
            <summary>Establecer el shim de QueryMapperVisitor.ChangeLambdaArgTypeFormSourceToDest(Type lambdaType, Type returnType)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.ChangeMethodArgTypeFormSourceToDestMethodInfo">
            <summary>Establecer el shim de QueryMapperVisitor.ChangeMethodArgTypeFormSourceToDest(MethodInfo mi)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.ConstructorTypeTypeIQueryableIMappingEngine">
            <summary>Establecer el shim de QueryMapperVisitor.QueryMapperVisitor(Type sourceType, Type destinationType, IQueryable destQuery, IMappingEngine mappingEngine)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.VisitBinaryBinaryExpression">
            <summary>Establecer el shim de QueryMapperVisitor.VisitBinary(BinaryExpression node)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.VisitConstantConstantExpression">
            <summary>Establecer el shim de QueryMapperVisitor.VisitConstant(ConstantExpression node)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.VisitExpression">
            <summary>Establecer el shim de QueryMapperVisitor.Visit(Expression node)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.VisitMemberMemberExpression">
            <summary>Establecer el shim de QueryMapperVisitor.VisitMember(MemberExpression node)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.VisitMethodCallMethodCallExpression">
            <summary>Establecer el shim de QueryMapperVisitor.VisitMethodCall(MethodCallExpression node)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.VisitOrderByMethodCallExpression">
            <summary>Establecer el shim de QueryMapperVisitor.VisitOrderBy(MethodCallExpression node)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.VisitParameterParameterExpression">
            <summary>Establecer el shim de QueryMapperVisitor.VisitParameter(ParameterExpression node)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor._ChangeLambdaArgTypeFormSourceToDestb__18_0Type">
            <summary>Establecer el shim de QueryMapperVisitor.&lt;ChangeLambdaArgTypeFormSourceToDest&gt;b__18_0(Type t)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor._ChangeMethodArgTypeFormSourceToDestb__17_0Type">
            <summary>Establecer el shim de QueryMapperVisitor.&lt;ChangeMethodArgTypeFormSourceToDest&gt;b__17_0(Type t)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.AllInstances.VisitLambdaOf1ExpressionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.QueryableExtensions.Impl.QueryMapperVisitor,System.Linq.Expressions.Expression{``0},System.Linq.Expressions.Expression})">
            <summary>Establecer el shim de QueryMapperVisitor.VisitLambda(Expression`1&lt;!!0&gt; node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.AllInstances._VisitLambdab__13_0Of1ParameterExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.QueryableExtensions.Impl.QueryMapperVisitor,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.ParameterExpression})">
            <summary>Establecer el shim de QueryMapperVisitor.&lt;VisitLambda&gt;b__13_0(ParameterExpression p)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.AllInstances.ChangeLambdaArgTypeFormSourceToDestTypeType">
            <summary>Establecer el shim de QueryMapperVisitor.ChangeLambdaArgTypeFormSourceToDest(Type lambdaType, Type returnType)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.AllInstances.ChangeMethodArgTypeFormSourceToDestMethodInfo">
            <summary>Establecer el shim de QueryMapperVisitor.ChangeMethodArgTypeFormSourceToDest(MethodInfo mi)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.AllInstances.VisitBinaryBinaryExpression">
            <summary>Establecer el shim de QueryMapperVisitor.VisitBinary(BinaryExpression node)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.AllInstances.VisitConstantConstantExpression">
            <summary>Establecer el shim de QueryMapperVisitor.VisitConstant(ConstantExpression node)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.AllInstances.VisitExpression">
            <summary>Establecer el shim de QueryMapperVisitor.Visit(Expression node)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.AllInstances.VisitMemberMemberExpression">
            <summary>Establecer el shim de QueryMapperVisitor.VisitMember(MemberExpression node)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.AllInstances.VisitMethodCallMethodCallExpression">
            <summary>Establecer el shim de QueryMapperVisitor.VisitMethodCall(MethodCallExpression node)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.AllInstances.VisitOrderByMethodCallExpression">
            <summary>Establecer el shim de QueryMapperVisitor.VisitOrderBy(MethodCallExpression node)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.AllInstances.VisitParameterParameterExpression">
            <summary>Establecer el shim de QueryMapperVisitor.VisitParameter(ParameterExpression node)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.AllInstances._ChangeLambdaArgTypeFormSourceToDestb__18_0Type">
            <summary>Establecer el shim de QueryMapperVisitor.&lt;ChangeLambdaArgTypeFormSourceToDest&gt;b__18_0(Type t)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimQueryMapperVisitor.AllInstances._ChangeMethodArgTypeFormSourceToDestb__17_0Type">
            <summary>Establecer el shim de QueryMapperVisitor.&lt;ChangeMethodArgTypeFormSourceToDest&gt;b__17_0(Type t)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQuery`2">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.QueryableExtensions.Impl.SourceInjectedQuery`2</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQuery`2.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQuery`2.#ctor(AutoMapper.QueryableExtensions.Impl.SourceInjectedQuery{`0,`1})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQuery`2.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQuery`2.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQuery`2.Bind(System.Linq.IOrderedQueryable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQuery`2.Bind(System.Linq.IQueryable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQuery`2.Bind(System.Linq.IOrderedQueryable{`1})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQuery`2.Bind(System.Linq.IQueryable{`1})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQuery`2.Bind(System.Collections.IEnumerable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQuery`2.Bind(System.Collections.Generic.IEnumerable{`1})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQuery`2.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQuery`2.ConstructorIQueryProviderExpression">
            <summary>Establecer el shim de SourceInjectedQuery`2.SourceInjectedQuery`2(IQueryProvider provider, Expression expression)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQuery`2.ConstructorIQueryableOfT0IQueryableOfT1IMappingEngineSourceInjectedQueryInspector">
            <summary>Establecer el shim de SourceInjectedQuery`2.SourceInjectedQuery`2(IQueryable`1&lt;!0&gt; dataSource, IQueryable`1&lt;!1&gt; destQuery, IMappingEngine mappingEngine, SourceInjectedQueryInspector inspector)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQuery`2.ElementTypeGet">
            <summary>Establecer el shim de SourceInjectedQuery`2.get_ElementType()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQuery`2.ExpressionGet">
            <summary>Establecer el shim de SourceInjectedQuery`2.get_Expression()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQuery`2.GetEnumerator">
            <summary>Establecer el shim de SourceInjectedQuery`2.GetEnumerator()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQuery`2.ProviderGet">
            <summary>Establecer el shim de SourceInjectedQuery`2.get_Provider()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQuery`2.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Establecer el shim de SourceInjectedQuery`2.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQuery`2.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQuery`2.AllInstances.ElementTypeGet">
            <summary>Establecer el shim de SourceInjectedQuery`2.get_ElementType()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQuery`2.AllInstances.ExpressionGet">
            <summary>Establecer el shim de SourceInjectedQuery`2.get_Expression()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQuery`2.AllInstances.GetEnumerator">
            <summary>Establecer el shim de SourceInjectedQuery`2.GetEnumerator()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQuery`2.AllInstances.ProviderGet">
            <summary>Establecer el shim de SourceInjectedQuery`2.get_Provider()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQuery`2.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Establecer el shim de SourceInjectedQuery`2.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryInspector">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.QueryableExtensions.Impl.SourceInjectedQueryInspector</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryInspector.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryInspector.#ctor(AutoMapper.QueryableExtensions.Impl.SourceInjectedQueryInspector)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryInspector.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryInspector.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryInspector.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryInspector.Constructor">
            <summary>Establecer el shim de SourceInjectedQueryInspector.SourceInjectedQueryInspector()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryInspector.DestResultGet">
            <summary>Establecer el shim de SourceInjectedQueryInspector.get_DestResult()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryInspector.DestResultSetActionOfObject">
            <summary>Establecer el shim de SourceInjectedQueryInspector.set_DestResult(Action`1&lt;Object&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryInspector.SourceResultGet">
            <summary>Establecer el shim de SourceInjectedQueryInspector.get_SourceResult()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryInspector.SourceResultSetActionOfExpressionObject">
            <summary>Establecer el shim de SourceInjectedQueryInspector.set_SourceResult(Action`2&lt;Expression,Object&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryInspector.StartQueryExecuteInterceptorGet">
            <summary>Establecer el shim de SourceInjectedQueryInspector.get_StartQueryExecuteInterceptor()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryInspector.StartQueryExecuteInterceptorSetActionOfTypeExpression">
            <summary>Establecer el shim de SourceInjectedQueryInspector.set_StartQueryExecuteInterceptor(Action`2&lt;Type,Expression&gt; value)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryInspector.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryInspector.AllInstances.DestResultGet">
            <summary>Establecer el shim de SourceInjectedQueryInspector.get_DestResult()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryInspector.AllInstances.DestResultSetActionOfObject">
            <summary>Establecer el shim de SourceInjectedQueryInspector.set_DestResult(Action`1&lt;Object&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryInspector.AllInstances.SourceResultGet">
            <summary>Establecer el shim de SourceInjectedQueryInspector.get_SourceResult()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryInspector.AllInstances.SourceResultSetActionOfExpressionObject">
            <summary>Establecer el shim de SourceInjectedQueryInspector.set_SourceResult(Action`2&lt;Expression,Object&gt; value)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryInspector.AllInstances.StartQueryExecuteInterceptorGet">
            <summary>Establecer el shim de SourceInjectedQueryInspector.get_StartQueryExecuteInterceptor()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryInspector.AllInstances.StartQueryExecuteInterceptorSetActionOfTypeExpression">
            <summary>Establecer el shim de SourceInjectedQueryInspector.set_StartQueryExecuteInterceptor(Action`2&lt;Type,Expression&gt; value)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryProvider`2">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.QueryableExtensions.Impl.SourceInjectedQueryProvider`2</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryProvider`2.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryProvider`2.#ctor(AutoMapper.QueryableExtensions.Impl.SourceInjectedQueryProvider{`0,`1})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryProvider`2.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryProvider`2.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryProvider`2.Bind(System.Linq.IQueryProvider)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryProvider`2.CreateQueryOf1Expression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression,System.Linq.IQueryable{``0}})">
            <summary>Establecer el shim de SourceInjectedQueryProvider`2.CreateQuery(Expression expression)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryProvider`2.ExecuteOf1Expression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression,``0})">
            <summary>Establecer el shim de SourceInjectedQueryProvider`2.Execute(Expression expression)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryProvider`2.IsProjectionOf1Type``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type,System.Boolean})">
            <summary>Establecer el shim de SourceInjectedQueryProvider`2.IsProjection(Type resultType)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryProvider`2.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryProvider`2.ConstructorIMappingEngineIQueryableOfT0IQueryableOfT1">
            <summary>Establecer el shim de SourceInjectedQueryProvider`2.SourceInjectedQueryProvider`2(IMappingEngine mappingEngine, IQueryable`1&lt;!0&gt; dataSource, IQueryable`1&lt;!1&gt; destQuery)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryProvider`2.ConvertDestinationExpressionToSourceExpressionExpression">
            <summary>Establecer el shim de SourceInjectedQueryProvider`2.ConvertDestinationExpressionToSourceExpression(Expression expression)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryProvider`2.CreateQueryExpression">
            <summary>Establecer el shim de SourceInjectedQueryProvider`2.CreateQuery(Expression expression)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryProvider`2.CreateSourceResultTypeType">
            <summary>Establecer el shim de SourceInjectedQueryProvider`2.CreateSourceResultType(Type destResultType)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryProvider`2.ExecuteExpression">
            <summary>Establecer el shim de SourceInjectedQueryProvider`2.Execute(Expression expression)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryProvider`2.InspectorGet">
            <summary>Establecer el shim de SourceInjectedQueryProvider`2.get_Inspector()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryProvider`2.InspectorSetSourceInjectedQueryInspector">
            <summary>Establecer el shim de SourceInjectedQueryProvider`2.set_Inspector(SourceInjectedQueryInspector value)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryProvider`2.InvokeSourceQueryTypeExpression">
            <summary>Establecer el shim de SourceInjectedQueryProvider`2.InvokeSourceQuery(Type sourceResultType, Expression sourceExpression)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryProvider`2.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryProvider`2.AllInstances.CreateQueryOf1Expression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.QueryableExtensions.Impl.SourceInjectedQueryProvider{`0,`1},System.Linq.Expressions.Expression,System.Linq.IQueryable{``0}})">
            <summary>Establecer el shim de SourceInjectedQueryProvider`2.CreateQuery(Expression expression)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryProvider`2.AllInstances.ExecuteOf1Expression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.QueryableExtensions.Impl.SourceInjectedQueryProvider{`0,`1},System.Linq.Expressions.Expression,``0})">
            <summary>Establecer el shim de SourceInjectedQueryProvider`2.Execute(Expression expression)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryProvider`2.AllInstances.ConvertDestinationExpressionToSourceExpressionExpression">
            <summary>Establecer el shim de SourceInjectedQueryProvider`2.ConvertDestinationExpressionToSourceExpression(Expression expression)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryProvider`2.AllInstances.CreateQueryExpression">
            <summary>Establecer el shim de SourceInjectedQueryProvider`2.CreateQuery(Expression expression)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryProvider`2.AllInstances.ExecuteExpression">
            <summary>Establecer el shim de SourceInjectedQueryProvider`2.Execute(Expression expression)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryProvider`2.AllInstances.InspectorGet">
            <summary>Establecer el shim de SourceInjectedQueryProvider`2.get_Inspector()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryProvider`2.AllInstances.InspectorSetSourceInjectedQueryInspector">
            <summary>Establecer el shim de SourceInjectedQueryProvider`2.set_Inspector(SourceInjectedQueryInspector value)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimSourceInjectedQueryProvider`2.AllInstances.InvokeSourceQueryTypeExpression">
            <summary>Establecer el shim de SourceInjectedQueryProvider`2.InvokeSourceQuery(Type sourceResultType, Expression sourceExpression)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimStringExpressionBinder">
            <summary>Tipo de correcciones de compatibilidad (shim) de AutoMapper.QueryableExtensions.Impl.StringExpressionBinder</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimStringExpressionBinder.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimStringExpressionBinder.#ctor(AutoMapper.QueryableExtensions.Impl.StringExpressionBinder)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimStringExpressionBinder.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimStringExpressionBinder.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.ShimStringExpressionBinder.Bind(AutoMapper.QueryableExtensions.IExpressionBinder)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimStringExpressionBinder.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimStringExpressionBinder.BindStringExpressionPropertyMapExpressionResolutionResult">
            <summary>Establecer el shim de StringExpressionBinder.BindStringExpression(PropertyMap propertyMap, ExpressionResolutionResult result)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimStringExpressionBinder.BuildIMappingEnginePropertyMapTypeMapExpressionRequestExpressionResolutionResultIDictionaryOfExpressionRequestInt32">
            <summary>Establecer el shim de StringExpressionBinder.Build(IMappingEngine mappingEngine, PropertyMap propertyMap, TypeMap propertyTypeMap, ExpressionRequest request, ExpressionResolutionResult result, IDictionary`2&lt;ExpressionRequest,Int32&gt; typePairCount)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimStringExpressionBinder.Constructor">
            <summary>Establecer el shim de StringExpressionBinder.StringExpressionBinder()</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimStringExpressionBinder.IsMatchPropertyMapTypeMapExpressionResolutionResult">
            <summary>Establecer el shim de StringExpressionBinder.IsMatch(PropertyMap propertyMap, TypeMap propertyTypeMap, ExpressionResolutionResult result)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.ShimStringExpressionBinder.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimStringExpressionBinder.AllInstances.BuildIMappingEnginePropertyMapTypeMapExpressionRequestExpressionResolutionResultIDictionaryOfExpressionRequestInt32">
            <summary>Establecer el shim de StringExpressionBinder.Build(IMappingEngine mappingEngine, PropertyMap propertyMap, TypeMap propertyTypeMap, ExpressionRequest request, ExpressionResolutionResult result, IDictionary`2&lt;ExpressionRequest,Int32&gt; typePairCount)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.ShimStringExpressionBinder.AllInstances.IsMatchPropertyMapTypeMapExpressionResolutionResult">
            <summary>Establecer el shim de StringExpressionBinder.IsMatch(PropertyMap propertyMap, TypeMap propertyTypeMap, ExpressionResolutionResult result)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.StubAssignableExpressionBinder">
            <summary>Tipo stub de AutoMapper.QueryableExtensions.Impl.AssignableExpressionBinder</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubAssignableExpressionBinder.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubAssignableExpressionBinder.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubAssignableExpressionBinder</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubAssignableExpressionBinder.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubAssignableExpressionBinder.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubAssignableExpressionBinder.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.StubCustomProjectionExpressionBinder">
            <summary>Tipo stub de AutoMapper.QueryableExtensions.Impl.CustomProjectionExpressionBinder</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubCustomProjectionExpressionBinder.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubCustomProjectionExpressionBinder.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubCustomProjectionExpressionBinder</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubCustomProjectionExpressionBinder.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubCustomProjectionExpressionBinder.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubCustomProjectionExpressionBinder.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.StubEnumerableExpressionBinder">
            <summary>Tipo stub de AutoMapper.QueryableExtensions.Impl.EnumerableExpressionBinder</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubEnumerableExpressionBinder.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubEnumerableExpressionBinder.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubEnumerableExpressionBinder</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubEnumerableExpressionBinder.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubEnumerableExpressionBinder.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubEnumerableExpressionBinder.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.StubIQueryDataSourceInjection`1">
            <summary>Tipo stub de AutoMapper.QueryableExtensions.Impl.IQueryDataSourceInjection`1</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubIQueryDataSourceInjection`1.#ctor">
            <summary>Inicializa una nueva instancia de type StubIQueryDataSourceInjection</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubIQueryDataSourceInjection`1.am::AutoMapper#QueryableExtensions#Impl#IQueryDataSourceInjection{TSource}#For``1(AutoMapper.QueryableExtensions.Impl.SourceInjectedQueryInspector)">
            <summary>Establecer el stub de IQueryDataSourceInjection`1.For(SourceInjectedQueryInspector inspector)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubIQueryDataSourceInjection`1.ForOf1SourceInjectedQueryInspector``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.QueryableExtensions.Impl.SourceInjectedQueryInspector,System.Linq.IQueryable{``0}})">
            <summary>Establecer stubs de For(SourceInjectedQueryInspector inspector)</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.StubMappedTypeExpressionBinder">
            <summary>Tipo stub de AutoMapper.QueryableExtensions.Impl.MappedTypeExpressionBinder</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMappedTypeExpressionBinder.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMappedTypeExpressionBinder.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMappedTypeExpressionBinder</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubMappedTypeExpressionBinder.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubMappedTypeExpressionBinder.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubMappedTypeExpressionBinder.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor">
            <summary>Tipo stub de AutoMapper.QueryableExtensions.Impl.MemberAccessQueryMapperVisitor</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.#ctor(System.Linq.Expressions.ExpressionVisitor,AutoMapper.IMappingEngine)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMemberAccessQueryMapperVisitor</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitBinary(BinaryExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitBinaryBinaryExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitBinary(BinaryExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitBlock(BlockExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitBlockBlockExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitBlock(BlockExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)">
            <summary>Establecer el stub de ExpressionVisitor.VisitCatchBlock(CatchBlock node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitCatchBlockCatchBlock">
            <summary>Establecer el stub de ExpressionVisitor.VisitCatchBlock(CatchBlock node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitConditional(ConditionalExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitConditionalConditionalExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitConditional(ConditionalExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitConstant(ConstantExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitConstantConstantExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitConstant(ConstantExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitDebugInfo(DebugInfoExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitDebugInfoDebugInfoExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitDebugInfo(DebugInfoExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitDefault(DefaultExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitDefaultDefaultExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitDefault(DefaultExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitDynamic(DynamicExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitDynamicDynamicExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitDynamic(DynamicExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)">
            <summary>Establecer el stub de ExpressionVisitor.VisitElementInit(ElementInit node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitElementInitElementInit">
            <summary>Establecer el stub de ExpressionVisitor.VisitElementInit(ElementInit node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitExtension(System.Linq.Expressions.Expression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitExtension(Expression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitExtensionExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitExtension(Expression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitGoto(GotoExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitGotoGotoExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitGoto(GotoExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitIndex(IndexExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitIndexIndexExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitIndex(IndexExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitInvocation(InvocationExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitInvocationInvocationExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitInvocation(InvocationExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitLabel(LabelExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitLabelLabelExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitLabel(LabelExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)">
            <summary>Establecer el stub de ExpressionVisitor.VisitLabelTarget(LabelTarget node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitLabelTargetLabelTarget">
            <summary>Establecer el stub de ExpressionVisitor.VisitLabelTarget(LabelTarget node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})">
            <summary>Establecer el stub de ExpressionVisitor.VisitLambda(Expression`1&lt;!!0&gt; node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitLambdaOf1ExpressionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{``0},System.Linq.Expressions.Expression})">
            <summary>Establecer stubs de VisitLambda(Expression`1&lt;!!0&gt; node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitListInit(ListInitExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitListInitListInitExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitListInit(ListInitExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitLoop(LoopExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitLoopLoopExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitLoop(LoopExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitMember(System.Linq.Expressions.MemberExpression)">
            <summary>Establecer el stub de MemberAccessQueryMapperVisitor.VisitMember(MemberExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberAssignment(MemberAssignment node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitMemberAssignmentMemberAssignment">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberAssignment(MemberAssignment node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberBinding(MemberBinding node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitMemberBindingMemberBinding">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberBinding(MemberBinding node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberInit(MemberInitExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitMemberInitMemberInitExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberInit(MemberInitExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberListBinding(MemberListBinding node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitMemberListBindingMemberListBinding">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberListBinding(MemberListBinding node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitMemberMemberBindingMemberMemberBinding">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitMemberMemberExpression">
            <summary>Establecer el stub de MemberAccessQueryMapperVisitor.VisitMember(MemberExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitMethodCall(MethodCallExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitMethodCallMethodCallExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitMethodCall(MethodCallExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitNew(NewExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitNewArray(NewArrayExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitNewArrayNewArrayExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitNewArray(NewArrayExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitNewNewExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitNew(NewExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitParameter(ParameterExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitParameterParameterExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitParameter(ParameterExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitRuntimeVariables(RuntimeVariablesExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitRuntimeVariablesRuntimeVariablesExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitRuntimeVariables(RuntimeVariablesExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitSwitch(SwitchExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)">
            <summary>Establecer el stub de ExpressionVisitor.VisitSwitchCase(SwitchCase node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitSwitchCaseSwitchCase">
            <summary>Establecer el stub de ExpressionVisitor.VisitSwitchCase(SwitchCase node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitSwitchSwitchExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitSwitch(SwitchExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitTry(System.Linq.Expressions.TryExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitTry(TryExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitTryTryExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitTry(TryExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitTypeBinary(TypeBinaryExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitTypeBinaryTypeBinaryExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitTypeBinary(TypeBinaryExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitUnary(UnaryExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.VisitUnaryUnaryExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitUnary(UnaryExpression node)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberAccessQueryMapperVisitor.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberGetterExpressionResultConverter">
            <summary>Tipo stub de AutoMapper.QueryableExtensions.Impl.MemberGetterExpressionResultConverter</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberGetterExpressionResultConverter.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberGetterExpressionResultConverter.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMemberGetterExpressionResultConverter</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberGetterExpressionResultConverter.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberGetterExpressionResultConverter.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberGetterExpressionResultConverter.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberResolverExpressionResultConverter">
            <summary>Tipo stub de AutoMapper.QueryableExtensions.Impl.MemberResolverExpressionResultConverter</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberResolverExpressionResultConverter.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberResolverExpressionResultConverter.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMemberResolverExpressionResultConverter</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberResolverExpressionResultConverter.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberResolverExpressionResultConverter.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubMemberResolverExpressionResultConverter.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.StubNullSubstitutionExpressionResultConverter">
            <summary>Tipo stub de AutoMapper.QueryableExtensions.Impl.NullSubstitutionExpressionResultConverter</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubNullSubstitutionExpressionResultConverter.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubNullSubstitutionExpressionResultConverter.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubNullSubstitutionExpressionResultConverter</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubNullSubstitutionExpressionResultConverter.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubNullSubstitutionExpressionResultConverter.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubNullSubstitutionExpressionResultConverter.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.StubNullableExpressionBinder">
            <summary>Tipo stub de AutoMapper.QueryableExtensions.Impl.NullableExpressionBinder</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubNullableExpressionBinder.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubNullableExpressionBinder.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubNullableExpressionBinder</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubNullableExpressionBinder.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubNullableExpressionBinder.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubNullableExpressionBinder.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor">
            <summary>Tipo stub de AutoMapper.QueryableExtensions.Impl.ParameterReplacementVisitor</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.#ctor(System.Linq.Expressions.Expression)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubParameterReplacementVisitor</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitBinary(BinaryExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitBinaryBinaryExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitBinary(BinaryExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitBlock(BlockExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitBlockBlockExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitBlock(BlockExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)">
            <summary>Establecer el stub de ExpressionVisitor.VisitCatchBlock(CatchBlock node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitCatchBlockCatchBlock">
            <summary>Establecer el stub de ExpressionVisitor.VisitCatchBlock(CatchBlock node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitConditional(ConditionalExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitConditionalConditionalExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitConditional(ConditionalExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitConstant(ConstantExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitConstantConstantExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitConstant(ConstantExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitDebugInfo(DebugInfoExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitDebugInfoDebugInfoExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitDebugInfo(DebugInfoExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitDefault(DefaultExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitDefaultDefaultExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitDefault(DefaultExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitDynamic(DynamicExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitDynamicDynamicExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitDynamic(DynamicExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)">
            <summary>Establecer el stub de ExpressionVisitor.VisitElementInit(ElementInit node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitElementInitElementInit">
            <summary>Establecer el stub de ExpressionVisitor.VisitElementInit(ElementInit node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitExtension(System.Linq.Expressions.Expression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitExtension(Expression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitExtensionExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitExtension(Expression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitGoto(GotoExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitGotoGotoExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitGoto(GotoExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitIndex(IndexExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitIndexIndexExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitIndex(IndexExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitInvocation(InvocationExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitInvocationInvocationExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitInvocation(InvocationExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitLabel(LabelExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitLabelLabelExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitLabel(LabelExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)">
            <summary>Establecer el stub de ExpressionVisitor.VisitLabelTarget(LabelTarget node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitLabelTargetLabelTarget">
            <summary>Establecer el stub de ExpressionVisitor.VisitLabelTarget(LabelTarget node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})">
            <summary>Establecer el stub de ExpressionVisitor.VisitLambda(Expression`1&lt;!!0&gt; node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitLambdaOf1ExpressionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{``0},System.Linq.Expressions.Expression})">
            <summary>Establecer stubs de VisitLambda(Expression`1&lt;!!0&gt; node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitListInit(ListInitExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitListInitListInitExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitListInit(ListInitExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitLoop(LoopExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitLoopLoopExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitLoop(LoopExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitMember(System.Linq.Expressions.MemberExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitMember(MemberExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberAssignment(MemberAssignment node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitMemberAssignmentMemberAssignment">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberAssignment(MemberAssignment node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberBinding(MemberBinding node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitMemberBindingMemberBinding">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberBinding(MemberBinding node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberInit(MemberInitExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitMemberInitMemberInitExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberInit(MemberInitExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberListBinding(MemberListBinding node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitMemberListBindingMemberListBinding">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberListBinding(MemberListBinding node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitMemberMemberBindingMemberMemberBinding">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitMemberMemberExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitMember(MemberExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitMethodCall(MethodCallExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitMethodCallMethodCallExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitMethodCall(MethodCallExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitNew(NewExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitNewArray(NewArrayExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitNewArrayNewArrayExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitNewArray(NewArrayExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitNewNewExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitNew(NewExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>Establecer el stub de ParameterReplacementVisitor.VisitParameter(ParameterExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitParameterParameterExpression">
            <summary>Establecer el stub de ParameterReplacementVisitor.VisitParameter(ParameterExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitRuntimeVariables(RuntimeVariablesExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitRuntimeVariablesRuntimeVariablesExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitRuntimeVariables(RuntimeVariablesExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitSwitch(SwitchExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)">
            <summary>Establecer el stub de ExpressionVisitor.VisitSwitchCase(SwitchCase node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitSwitchCaseSwitchCase">
            <summary>Establecer el stub de ExpressionVisitor.VisitSwitchCase(SwitchCase node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitSwitchSwitchExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitSwitch(SwitchExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitTry(System.Linq.Expressions.TryExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitTry(TryExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitTryTryExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitTry(TryExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitTypeBinary(TypeBinaryExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitTypeBinaryTypeBinaryExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitTypeBinary(TypeBinaryExpression node)</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitUnary(UnaryExpression node)</summary>
        </member>
        <member name="F:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.VisitUnaryUnaryExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitUnary(UnaryExpression node)</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubParameterReplacementVisitor.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.StubQueryDataSourceInjection`1">
            <summary>Tipo stub de AutoMapper.QueryableExtensions.Impl.QueryDataSourceInjection`1</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubQueryDataSourceInjection`1.#ctor(System.Linq.IQueryable{`0},AutoMapper.IMappingEngine)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubQueryDataSourceInjection`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubQueryDataSourceInjection</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubQueryDataSourceInjection`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubQueryDataSourceInjection`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubQueryDataSourceInjection`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.StubSourceInjectedQuery`2">
            <summary>Tipo stub de AutoMapper.QueryableExtensions.Impl.SourceInjectedQuery`2</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubSourceInjectedQuery`2.#ctor(System.Linq.IQueryable{`0},System.Linq.IQueryable{`1},AutoMapper.IMappingEngine,AutoMapper.QueryableExtensions.Impl.SourceInjectedQueryInspector)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubSourceInjectedQuery`2.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSourceInjectedQuery</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubSourceInjectedQuery`2.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubSourceInjectedQuery`2.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubSourceInjectedQuery`2.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.StubSourceInjectedQueryInspector">
            <summary>Tipo stub de AutoMapper.QueryableExtensions.Impl.SourceInjectedQueryInspector</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubSourceInjectedQueryInspector.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubSourceInjectedQueryInspector.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSourceInjectedQueryInspector</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubSourceInjectedQueryInspector.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubSourceInjectedQueryInspector.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubSourceInjectedQueryInspector.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.StubSourceInjectedQueryProvider`2">
            <summary>Tipo stub de AutoMapper.QueryableExtensions.Impl.SourceInjectedQueryProvider`2</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubSourceInjectedQueryProvider`2.#ctor(AutoMapper.IMappingEngine,System.Linq.IQueryable{`0},System.Linq.IQueryable{`1})">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubSourceInjectedQueryProvider`2.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSourceInjectedQueryProvider</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubSourceInjectedQueryProvider`2.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubSourceInjectedQueryProvider`2.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubSourceInjectedQueryProvider`2.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Impl.Fakes.StubStringExpressionBinder">
            <summary>Tipo stub de AutoMapper.QueryableExtensions.Impl.StringExpressionBinder</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubStringExpressionBinder.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Impl.Fakes.StubStringExpressionBinder.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubStringExpressionBinder</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubStringExpressionBinder.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubStringExpressionBinder.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Impl.Fakes.StubStringExpressionBinder.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
    </members>
</doc>
