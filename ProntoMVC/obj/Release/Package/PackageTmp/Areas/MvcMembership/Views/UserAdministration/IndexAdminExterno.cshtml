@using PagedList.Mvc
@model ProntoMVC.Areas.MvcMembership.Models.UserAdministration.IndexViewModel
@{
    ViewBag.Title = "Administración";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href='@Url.Content("~/Content/MvcMembership.css")' rel="stylesheet" type="text/css" />
<link href='@Url.Content("~/Content/PagedList.css")' rel="stylesheet" type="text/css" />
@if (!Model.IsRolesEnabled)
{
    <p class="mvcMembership-warning">
        WARNING: Your Role Provider is currently disabled - any user may currently visit
        this page.<br />
        Change &lt;roleManager enabled="false"&gt; to &lt;roleManager enabled="true"&gt;
        in your web.config file.</p>
}
<div class="container-fluid">
    <legend>Administración de Usuarios Externos</legend>
    <div class="row-fluid">
        <div class="span2 lightblue">
            <button onclick="window.location.href='@Url.Action("CreateUser", new { id = -1 })'" class="btn btn-primary">
                Nuevo Usuario
            </button>
        </div>
        @ViewBag.Alerta
        @TempData["message"]
        @if (ViewBag.Alerta != null)
        {
            <div id="mensajeLocal" class="alert " style="display: none">
                <button type="button" class="close" data-dismiss="alert">
                    &times;</button>
                <strong>Alerta</strong> @ViewBag.Alerta
            </div>
        }
        @if (false)
        {
            <div class="span4 lightblue">
                <div class="input-append">
                    <input id="SuperBuscador2" type="text" class="pull-left" style="" placeholder="Buscar en usuarios">
                    @*class="search-query pull-left"*@
                    <button type="button" class="btn pull-left" style="">
                        <i class="icon-search"></i>
                    </button>
                </div>
            </div>
        }
        <h2 class="mvcMembership">
            @* User Administration*@</h2>
        @*  <h3 class="mvcMembership">
        Find a User
        @if (!string.IsNullOrWhiteSpace(Model.Search))
        { 
            <span>(@Html.ActionLink("Clear Search", "Index"))</span>
        }
    </h3>*@
        <form method="get" class="mvcMembership-searchForm">
        @*   <fieldset>
        <label>
             User Name or Email Address:
            <input type="text" name="search" value="@Model.Search" />
            <input type="submit" value="Search" />
        </label>
    </fieldset>*@
        </form>
        @*        Un SuperAdmin puede hacer lo que quiera, incluyendo crear otros SuperAdmin,
        <br />
        Un Admin solo puede otorgar los roles y las bases que él mismo tiene.
        <br />*@
        <br />
        <h3 class="mvcMembership">
            @*  Users (@Html.ActionLink("New User", "CreateUser", "UserAdministration"))*@</h3>
    </div>
    <div class="mvcMembership-allUsers">
        @if (Model.Users != null)
        {
            if (Model.Users.Count > 0)
            {
            
            <style>
                .cc
                {
                    /*
                    -moz-transform: rotate(320deg) !important;
                    -moz-transform-origin: bottom left !important;
                    -webkit-transform: rotate(320deg) !important;
                    -webkit-transform-origin: bottom left !important;
                    -o-transform: rotate(320deg) !important;
                    -o-transform-origin: bottom left !important;
                    */
                    vertical-align: middle;
                    text-align: center;
                    font-size: 10px;
                }
            </style>
            
            
            <br />            
            <ul class="mvcMembership mvcMembership-users">
                <div class="row-fluid">
                    <div class="span2 lightblue" style="cc">
                        Usuario
                    </div>
                    @*      <div class="span1 lightblue">
                        <div class="cc">
                            Superadmin 
                        </div>
                    </div>
                    <div class="span1 lightblue">
                        <div class="cc">
                            Administrador
                        </div>
                    </div>
                    <div class="span1 lightblue">
                        <div class="cc">
                            Comercial 
                            FacturaElect.
                        </div>
                        
                    </div>*@
                    <div class="span4 lightblue">
                        @* <div class="span1 lightblue">
                        </div>
                        <div class="span2 lightblue">
                            @if (Roles.IsUserInRole(ViewBag.NombreUsuario, "SuperAdmin"))
                            {
                                <div class="cc">
                                    SuperAdmin
                                </div>
                            }
                        </div>
                        <div class="span2 lightblue">
                            <div class="cc">
                                Administrador
                            </div>
                        </div>
                        <div class="span2 lightblue">
                            <div class="cc">
                                Comercial
                            </div>
                        </div>
                        <div class="span2 lightblue">
                            <div class="cc">
                                FacturaElect
                            </div>
                        </div>
                        <div class="span1 lightblue">
                            <div class="cc">
                                Requerimientos
                            </div>
                        </div>*@
                        <div class="span3 lightblue">
                            <div class="cc">
                                Admin Existrador @*AdminExterno*@
                            </div>
                        </div>
                        <div class="span3 lightblue">
                            <div class="cc">
                                Cotizaciones @* ExternoCotizaciones*@
                            </div>
                        </div>
                        <div class="span3 lightblue">
                            <div class="cc">
                                Listado de Ordenes de Pago Listas @* ExternoOrdenesPagoListas*@
                            </div>
                        </div>
                        <div class="span3 lightblue">
                            <div class="cc">
                                Mi cuenta corriente @*ExternoCuentaCorrienteProveedor*@
                            </div>
                        </div>
                        <div class="span2 lightblue">
                        </div>
                    </div>
                    @*    <div class="span4 lightblue" style="">
                        Base default
                    </div>
                    <div class="span4 lightblue" style="">
                        @*Correo
                    </div>*@
                </div>
                <script>

                    function ActualizarListaBasesDelUsuario(Userguid, jqdropdown) {
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("BasesPorUsuarioColeccionAAA")',
                            data: { IdCodigoIVA: $('#IdCodigoIva').val() },
                            success: function (data) {
                                var markup = '';
                                for (var x = 0; x < data.length; x++) {
                                    //markup += '<option value="' + data[x].id + '">' + data[x].value + '</option>';
                                    markup += '<option value="' + data[x].value + '">' + data[x].value + '</option>';
                                }
                                //$('#PuntoVenta').html(markup).show();
                                jqdropdown.html(markup).show();
                                var myDDL = jqdropdown; //$('#PuntoVenta');
                                myDDL[0].selectedIndex = 0;
                                ActualizarPuntoVenta();
                            }
                        })
                    }
            
                </script>
                @foreach (ProntoMVC.Areas.MvcMembership.Models.UserAdministration.UsuarioPronto usPronto in Model.UsuariosPronto)
                {

                    MembershipUser user = usPronto.user;

                    //     if (!Generales.EsUsuarioControlablePorAdmin(user.UserName, ViewBag.NombreUsuario)) { continue; }
                    
                    <div class="row-fluid">
                        <div class="span2 lightblue">
                            <span class="mvcMembership-username">@Html.ActionLink(user.UserName, "Details", new { id = user.ProviderUserKey })</span>
                        </div>
                        <div class="span4 lightblue cc">
                            <div class="span3 lightblue">
                                @if (Roles.IsUserInRole(ViewBag.NombreUsuario, "AdminExterno"))
                                {
                                    @Html.CheckBox("EsAdminExterno" + user.ProviderUserKey, Roles.IsUserInRole(user.UserName, "AdminExterno"))
                                }
                            </div>
                            <div class="span3 lightblue">
                                @if (Roles.IsUserInRole(ViewBag.NombreUsuario, "AdminExterno"))
                                {
                                    @Html.CheckBox("EsExterno" + user.ProviderUserKey, Roles.IsUserInRole(user.UserName, "Externo"))
                                }
                            </div>
                              <div class="span3 lightblue">
                                @if (Roles.IsUserInRole(ViewBag.NombreUsuario, "AdminExterno"))
                                {
                                    @Html.CheckBox("EsExternoOrdenesPagoListas" + user.ProviderUserKey, Roles.IsUserInRole(user.UserName, "ExternoOrdenesPagoListas"))
                                }
                            </div>
                              <div class="span3 lightblue">
                                @if (Roles.IsUserInRole(ViewBag.NombreUsuario, "AdminExterno"))
                                {
                                    @Html.CheckBox("EsExternoCuentaCorrienteProveedor" + user.ProviderUserKey, Roles.IsUserInRole(user.UserName, "ExternoCuentaCorrienteProveedor"))
                                }
                            </div>
                            <script language="javascript" type="text/javascript">

                                //   $("#ActualizarRenglon").click(function () { });

                                function Actualizar(id) {

                                    // alert('uy');

                                    var requestData = {
                                        id: id,

                                        EsAdminExterno: $("#EsAdminExterno" + id).attr('checked') == "checked",
                                        EsExterno: $("#EsExterno" + id).attr('checked') == "checked",
                                        EsExternoOrdenesPagoListas: $("#EsExternoOrdenesPagoListas" + id).attr('checked') == "checked",
                                        EsExternoCuentaCorrienteProveedor: $("#EsExternoCuentaCorrienteProveedor" + id).attr('checked') == "checked"

                                        //                                        EsSuperAdmin: $("#EsSuperAdmin" + id).attr('checked') == "checked",
                                        //                                        EsAdmin: $("#EsAdmin" + id).attr('checked') == "checked",
                                        //                                        EsComercial: $("#EsComercial" + id).attr('checked') == "checked",
                                        //                                        EsFacturaElec: $("#EsFacturaElectronica" + id).attr('checked') == "checked",
                                        //                                        EsRequerimientos: $("#EsRequerimientos" + id).attr('checked') == "checked",
                                        //                                        BaseDefault: $("#Bases" + id + " option:selected").text()
                                    };


                                    $.ajax({
                                        url: 'UserAdministration/ActualizarRenglonExterno',
                                        type: 'POST',
                                        data: JSON.stringify(requestData),
                                        dataType: 'json',
                                        contentType: 'application/json; charset=utf-8',
                                        success: function (result) {
                                            if (result) {
                                                alert('Actualizado');
                                                //                    grid1.trigger('reloadGrid');

                                                //                    $('html, body').css('cursor', 'auto');

                                                //                    //window.location.replace(ROOT + "Cliente/index");
                                                //                    window.location = (ROOT + "Factura/index");

                                            } else {
                                                // window.location.replace(ROOT + "Cliente/index");


                                                //                    alert('No se pudo grabar el comprobante.');
                                                //                    $('.loading').html('');

                                                //                    $('html, body').css('cursor', 'auto');
                                                //                    $('#grabar2').attr("disabled", false).val("Guardar");
                                            }


                                        },


                                        error: function (xhr) {
                                            //alert('Error: ' + xhr.statusText);
                                        },


                                        //                                        error: function (xhr, textStatus, exceptionThrown) {
                                        //                                            var errorData = $.parseJSON(xhr.responseText);
                                        //                                            var errorMessages = [];
                                        //                                            //this ugly loop is because List<> is serialized to an object instead of an array
                                        //                                            for (var key in errorData) {
                                        //                                                errorMessages.push(errorData[key]);
                                        //                                            }
                                        //                                            $('#result').html(errorMessages.join("<br />"));
                                        //                                            $('html, body').css('cursor', 'auto');
                                        //                                            $('#grabar2').attr("disabled", false).val("Guardar");
                                        //                                            alert(errorMessages.join("<br />"));


                                        //                                        },

                                        async: true,
                                        processData: false
                                    });
                                };
                            </script>
                        </div>
                        @*<div class="span3 lightblue">
                   @if (false)
                            {
                       
                            @Html.DropDownList("Bases" + user.ProviderUserKey, (IEnumerable<SelectListItem>)ViewData["Bases"], usPronto.EmpresaDefault ?? "")
         
                                @Html.ActionLink("crear base", "CrearBaseyAsignarEmpleado", new { id = user.ProviderUserKey, nombrebaseoriginal = "wDemoWilliams", nombrebasenueva = "" })
                            }
                        </div>*@
                        <div class="span1 lightblue">
                            <input type="button" class="btn " id="@user.ProviderUserKey"   value="actualizar" name="@user.ProviderUserKey"
                            onclick="Actualizar('@user.ProviderUserKey')"  
                             /></div>
                        <div class="span3 lightblue" style="font-size: 10px">
                            <span class="mvcMembership-email"><a href="mailto:@user.Email">@user.Email</a></span>
                            @if (user.IsOnline)
                            {
                                <span class="mvcMembership-isOnline">Online</span>
                            }
                            else
                            {
                                <span class="mvcMembership-isOffline">Offline por
                                    @{
                                var offlineSince = (DateTime.Now - user.LastActivityDate);
                                if (offlineSince.TotalSeconds <= 60)
                                {
                                        <text>1 minuto.</text>
                                }
                                else if (offlineSince.TotalMinutes < 60)
                                {
                                        <text>@Math.Floor(offlineSince.TotalMinutes) minutos.</text>
                                }
                                else if (offlineSince.TotalMinutes < 120)
                                {
                                        <text>1 hora</text>
                                }
                                else if (offlineSince.TotalHours < 24)
                                {
                                        <text>@Math.Floor(offlineSince.TotalHours) horas.</text>
                                }
                                else if (offlineSince.TotalHours < 48)
                                {
                                        <text>1 día.</text>
                                }
                                else
                                {
                                        <text>@Math.Floor(offlineSince.TotalDays) días.</text>
                                }
                                    }
                                </span>
                          
       
                            }
                            @if (@user.IsLockedOut)
                            { <text>Bloqueado!</text> }
                            @if (!string.IsNullOrEmpty(user.Comment))
                            {
                                <span class="mvcMembership-comment">@user.Comment</span>
                            }
                        </div>
                        @*notificacion (por usuario)*@
                    </div>
                   
                }
            </ul>
            
            
@*  @Html.PagedListPager(Model.Users, page => Url.Action("Index", new { page, search = Model.Search }))*@
            }
            else
            {
            <p>
                No users have registered.</p>
            }
        }
    </div>
    @if (Model.BasesPronto != null)
    {

        if (Roles.IsUserInRole("SuperAdmin"))
        {
        
        
            
        
@*  <h3 class="mvcMembership">
            Roles</h3>*@
        
                
        
        <div class="mvcMembership-allRoles">
            Conexion Bdlmaster
            @Html.TextBox("BDLmaster")
            @*         
"Data Source=MARIANO-PC;Initial Catalog=BDLMaster;user id=sa;password=3D1consultore5" providerName="System.Data.SqlClient"
"Data Source=tcp:m0lym24p49.database.windows.net,1433;Database=aspnetdb;User ID=Mariano@m0lym24p49;Password=tangalanga1234!;Trusted_Connection=False;Encrypt=True;Connection Timeout=30;MultipleActiveResultSets=True;"  providerName="System.Data.SqlClient"
"Data Source=192.168.66.6;Initial Catalog=BDLMaster;Uid=sa; PWD=3D1consultore5;" providerName="System.Data.SqlClient"

         Que el superadmin pueda cambiar la conexion de la bdlmaster*@
            <br />
            <br />
            <div style="">
                <div>
                    @* base default<br />*@ Bases crear base nueva, agregar conexion. Crear/ver reclamo.
                    Exportar scripts. Ver modificaciones.doc.
                    <br />
                    <br />
                    @*                    version de SP tablas y sp mas usados ultimo acceso<br />
                    notificacion (por base) agregar automaticamente todas las bases del servidor
*@
                    <div>
                        @for (int i = 0; i < Model.BasesPronto.Count(); i++)
                        {
                            <div class="row-fluid">
                                <div class="span2 lightblue">
                                    @Html.ActionLink(Model.BasesPronto[i].Descripcion, "Role", new { id = Model.BasesPronto[i].Descripcion })
                                </div>
                                <div class="span8 lightblue">
                                    @Html.TextBoxFor(m => m.BasesPronto[i].StringConection, new { @class = "span12" })
                                </div>
                                <div class="span2 lightblue">
                                    @using (Html.BeginForm("DeleteRole", "UserAdministration", new { id = Model.BasesPronto[i].Descripcion }))
                                    {
@* <input type="submit" value="Delete" class="btn " />*@
                                    }</div>
                            </div>
                        }
                    </div>
                </div>
                @if (false)
                {

                    if (Model.Roles.Count() > 0)
                    {
                    <ul class="mvcMembership">
                        @foreach (var role in Model.Roles)
                        {
                         
                            <div class="row-fluid">
                                <div class="span6 lightblue">
                                    @Html.ActionLink(role, "Role", new { id = role })
                                </div>
                                <div class="span6 lightblue">
                                    @*     @using (Html.BeginForm("DeleteRole", "UserAdministration", new { id = role }))
                                    {
                                        <input type="submit" value="Delete" class="btn " />
                                    }*@
                                </div>
                            </div>
                        }
                    </ul>
                    }
                    else
                    {
                    <p>
                        No roles have been created.</p>
                    }

                    using (Html.BeginForm("CreateRole", "UserAdministration"))
                    {
                    <fieldset>
                        <label for="id">
                            Role:</label>
                        @Html.TextBox("id")
                        <input type="submit" value="Create Role" />
                    </fieldset>
                    }
                }
            </div>
        </div>
        }
    }
</div>
<script>


    $(document).ready(function () {


        pageLayout.hide('east');

    });


</script>
