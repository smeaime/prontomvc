@model IEnumerable<ProntoMVC.Models.Presupuesto>
@{
    ViewBag.Title = "Cuenta Corriente Proveedor. Pendiente";
}
<div>
    <input id="FechaInicial" name="FechaInicial" type="hidden" value=@Request.QueryString["fechainicial"]></div>
<div>
    <input id="FechaFinal" name="FechaFinal" type="hidden" value=@Request.QueryString["fechafinal"]></div>
@*<br />*@ @*
<button onclick="window.location.href='@Url.Action("Edit", new { id = -1 })'" class="btn btn-primary">
    Nueva Solicitud de Cotizacion
</button>*@
<br />
<br />
<table id="Lista" class="scroll" cellpadding="0" cellspacing="0">
</table>
<div id="ListaPager" class="scroll" style="text-align: center;">
</div>
@*<iframe id="IFRAME1" src="http://192.168.66.6/Reports/Pages/Report.aspx?ItemPath=%2fSaldos+Proveedores"
    runat="server" height="1200px" width="100%" frameborder="0" />*@
@*<p>@Html.ActionLink("Nuevo Presupuesto", "Edit", new { id = -1 }, null)</p> *@
@*poner en un iframe el resultado del SSRS? Estimado CADAVID Me sumo a las respuestas
de Alberto y el tip muy bueno de Carf (lo tenia como iframe pero tienes razon con
obtener el HTML con jquery) Te comento mi experiencia: Tengo aplicaciones terminadas
y en curso con MVC y utilizo SSRS (no utilizamos mas en mi empresa Crystal por razones
de licenciamiento, escalabilidad, etc) TEngo aplicaciones MVC que utilizan OPCION1:
Algunas utilizan paginas webforms para el ReportViewer (si.. es la unica forma de
utilizar el control REportViewer que yo conozca) Aqui la utilizamos porque necesitabamos
armar nosotros mismos los filtros y pasarlos INcluso obtenemos el listado de objetos
de nuestra capa de negocios, y se la pasamos directamente al reporte para que renderice
OPCION 2: Utilizamos rendeirado por codigo en un ActionResult de MVC exportar a
PDF Aqui no utilizamos el webcontrol ReportViewer, sino que directamente por codigo
en el ActionResult renderizamos el reporte en PDF (como para descargarlo) Pero hacemos
lo mismo que la opcion 1, obtenemos de nuestra capa de negocios el listado (si es
para una grilla) o el objeto que necesitiamos (ejemplo: detalle de un cliente) y
se lo pasamos al reporte, y por supuesto como comente lo renderizamos como PDF,
excel, etc) OPCION 3: Incrustamos en iframe el reporte directamente Aqui es la forma
mas sencilla, pero que se lee directamente el reporte del servidor de reportes (idem
a lo que te comentan Alberto y Carf) Hay una opcjn 3.1, que es que se renderice
en el servidor pero se lee con el ReportViewer (idem al punto 1) mas que nada por
un tema de permisos (pero esto ya es otro tema) Te pregunto ahora yo Trabajaste
con Crystal Report (en alguna version)? Los reportes seran accesados por todo los
usuarios? o tendras niveles de visualizacion (algunos usuarios podran ver unos reportes
otros no) Los reportes deben desplegarse en diferentes formatos? Los reportes deben
ejecutarse en algun momento del dia para armarse (porque tardan tiempo en renderizar
por lo costoso de obtener los datos) Dale una mirada a los beneficios que te da
tenerlos en un servidor de reportes (SSRS) spero que te sirvan de ayuda o guia.
Jose. A Fernandez | blog: http://geeks.ms/blogs/fernandezja *@@*<rsweb:ReportViewer ID="ReportViewerRemoto" runat="server" Font-Names="Verdana" Font-Size="8pt"
                                Width="100%" Visible="true" ZoomMode="PageWidth" SizeToReportContent="false" 
                                Height="600px" ProcessingMode="Remote">
                            
                                <ServerReport   ReportPath="Pronto informes/Balance" ReportServerUrl="http://bdlconsultores.dyndns.org:81/ReportServer"   />
                            </rsweb:ReportViewer>
*@
<script type="text/javascript">
    $(document).ready(function () {
        var lastSelectedId;
        var inEdit;
        grid = $("#Lista");

        //Para que haga wrap en las celdas
        $('.ui-jqgrid .ui-jqgrid-htable th div').css('white-space', 'normal');

        $('#Lista').jqGrid({
            url: '@Url.Action("CuentaCorrienteAcreedorPendiente", "CuentaCorriente")',
            postData: { 'FechaInicial': function () { return $("#FechaInicial").val(); }, 'FechaFinal': function () { return $("#FechaFinal").val(); } },
            datatype: 'json',
            mtype: 'POST',
            colNames: [
                          '', 'IdCtaCte', 'IdImputacion', 'Comp', 'IdTipoComp', 'IdComprobante'
                        , 'Numero', 'Ref', 'Fecha.', 'Fecha vto.', 'Imp.orig.',
                        'Saldo Comp.', 'SaldoTrs', 'Fecha cmp.', 'IdImpu', 'Saldo'
                        , 'Cabeza', 'Mon.origen', 'Observaciones', 'IdProveedor', 'IdAux1'
                        , 'Pedidos'
                         ],

            colModel: [
                        { name: 'act', index: 'act', align: 'center', width: 80, sortable: false, editable: false, search: false, hidden: true }, //, formatter: 'showlink', formatoptions: { baseLinkUrl: '@Url.Action("Edit")'} },

                        {name: 'act', index: 'act', align: 'center', width: 80, sortable: false, editable: false, search: false, hidden: true }, //, formatter: 'showlink', formatoptions: { baseLinkUrl: '@Url.Action("Edit")'} },
                        {name: 'IdPresupuesto', index: 'IdPresupuesto', align: 'left', width: 100, editable: false, hidden: true },
                        { name: 'Numero', index: 'Numero', align: 'right', width: 50, editable: false, search: true, searchoptions: { sopt: ['eq']} },
                        { name: 'Orden', index: 'Orden', align: 'right', width: 50, editable: false, hidden: true, search: true, searchoptions: { sopt: ['eq']} },
                        { name: 'FechaIngreso', index: 'FechaIngreso', width: 75, align: 'center', sorttype: 'date', hidden: true, editable: false, formatoptions: { newformat: 'dd/mm/yy' }, datefmt: 'dd/mm/yy', search: false },

                        { name: 'Proveedor', index: 'Proveedor', align: 'left', width: 0, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Validez', index: 'Validez', align: 'left', width: 0, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Bonificacion', index: 'Bonificacion', align: 'right', width: 50, editable: false, search: true, searchoptions: { sopt: ['eq']} },
                        { name: 'PorcentajeIva1', index: 'PorcentajeIva1', align: 'right', width: 0, editable: false, hidden: false },
                        { name: 'Moneda', index: 'Moneda', align: 'center', width: 0, editable: false, search: true, searchoptions: { sopt: ['cn']} },

                        { name: 'Subtotal', index: 'Subtotal', align: 'right', width: 0, editable: false, search: true, searchoptions: { sopt: ['eq']} },
                        { name: 'ImporteBonificacion', index: 'ImporteBonificacion', align: 'right', width: 0, editable: false, search: true, searchoptions: { sopt: ['eq']} },
                        { name: 'ImporteIva1', index: 'ImporteIva1', align: 'right', width: 0, editable: false, search: true, searchoptions: { sopt: ['eq']} },
                        { name: 'ImporteTotal', index: 'ImporteTotal', align: 'right', width: 0, editable: false, hidden: false, search: true, searchoptions: { sopt: ['eq']} },
                        { name: 'PlazoEntrega', index: 'PlazoEntrega', align: 'left', width: 0, editable: false, search: true, searchoptions: { sopt: ['cn']} },

                        { name: 'CondicionCompra', index: 'CondicionCompra', align: 'left', width: 0, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Garantia', index: 'Garantia', align: 'left', width: 0, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'LugarEntrega', index: 'LugarEntrega', align: 'left', width: 0, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Comprador', index: 'Comprador', align: 'left', width: 0, hidden: true, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Aprobo', index: 'Aprobo', align: 'left', width: 0, editable: false, hidden: true, search: true, searchoptions: { sopt: ['cn']} },

                        { name: 'Observaciones', index: 'Observaciones', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                    ],
            onSelectRow: function (id) {
                if (id && id !== lastSelectedId) {
                    if (typeof lastSelectedId !== "undefined") {
                        grid.jqGrid('restoreRow', lastSelectedId);
                    }
                    lastSelectedId = id;
                }
            },
            pager: $('#ListaPager'),
            rowNum: 15,
            rowList: [50, 100],
            sortname: 'Numero',
            sortorder: 'asc',
            viewrecords: true,
            width: 'auto',
            height: '100%',
            altRows: false,
            footerrow: false,
            userDataOnFooter: true,
            caption: '<b>Cuenta Corriente Proveedor. Pendiente</b>'
        });
        jQuery("#Lista").jqGrid('navGrid', '#ListaPager', { refresh: true, add: false, edit: false, del: false }, {}, {}, {}, { sopt: ["cn"], width: 700, closeOnEscape: true, closeAfterSearch: true });
        jQuery("#Lista").jqGrid('gridResize', { minWidth: 350, maxWidth: 1500, minHeight: 80, maxHeight: 500 });
    });

</script>
