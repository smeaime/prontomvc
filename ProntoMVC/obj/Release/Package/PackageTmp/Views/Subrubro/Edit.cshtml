@model ProntoMVC.Models.Subrubro
@{
    ViewBag.Title = "Edit";
}
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)


    <div class="container-fluid">
        <form class="form-horizontal">
        <legend>Subrubro de notas de crédito y débito</legend>@*  <div>@Html.Hidden("IdSubrubro", Model.IdSubrubro)</div>*@
        @Html.HiddenFor(model => model.IdSubrubro)
        @*        <div>@Html.Hidden("Cumplido", Model.Cumplido)</div>
        <div>@Html.Hidden("FechaAnulacion", Model.FechaAnulacion)</div>
        <div>@Html.Hidden("UsuarioAnulacion", Model.UsuarioAnulacion)</div>
        <div>@Html.Hidden("MotivoAnulacion", Model.MotivoAnulacion)</div>
*@
        <div>
            <div class="row-fluid">
                <div class="span1 lightblue">
                    @Html.LabelFor(model => model.Descripcion, "Descripcion")
                    @Html.TextBoxFor(model => model.Descripcion)
                    @Html.ValidationMessageFor(model => model.Descripcion)
                </div>
                <!--/span-->
                <div class="span2 lightblue">
                    @*@Html.LabelFor(model => model.FechaRequerimiento, "Fecha")
                    @Html.TextBoxFor(model => model.FechaRequerimiento, new { @class = "span12" })*@
                    @*@Html.TextBoxFor(model => model.FechaRequerimiento, new Dictionary<string, object> { { "class", "span12" }, { "placeholder", "dd/mm/yyyy" } })*@
                    @*, { "type", "date" }, { "data-datepicker", "datepicker" }*@ @*@Html.ValidationMessageFor(model => model.FechaRequerimiento)*@
                </div>
                <!--/span-->
                <div class="span3 lightblue">
                    @*  @Html.LabelFor(model => model.IdObra, "Obra")
                    @Html.DropDownList("IdObra", String.Empty)
                    @Html.ValidationMessageFor(model => model.IdObra)*@
                </div>
                <!--/span-->
                <div class="span3 lightblue">
                </div>
                <!--/span-->
                <div class="span2 lightblue">
                </div>
                <!--/span-->
            </div>

           
            <br />
            <br />
            <input type="submit" id="Guardar" value="Aceptar" class="btn btn-primary" />
            &nbsp;&nbsp; @*<input type="button" id="Guardar" value="Borrar" class="butCancela" />*@
            @if (Model.IdSubrubro > 0)
            { @Html.ActionLink("Borrar", "DeleteConfirmedDirecto", new { id = Model.IdSubrubro }) 
            }
            &nbsp; &nbsp;
            @Html.ActionLink("Volver al listado", "Index")
            <div id="RManulada" class="row-fluid" style="display: none; font-weight: bold; background-color: red">
            </div>
            <br />
            @* <table id="Lista" class="scroll" cellpadding="0" cellspacing="0" style="visibility:hidden"></table>
            <div id="ListaPager" class="scroll"></div>
            <input type="button" id="addData" class="boton" value="Agregar item" />
            <input type="button" id="edtData" class="boton" value="Modificar item" />
            <input type="button" id="delData" class="boton" value="Borrar item" />
            <input type="button" id="anular" class="boton" value="Anular RM" />
            <input type="button" id="Guardar" class="boton" value="Grabar comprobante" />*@
            @*<div>@Html.ActionLink("Ir a lista de requerimientos", "Index")</div>*@ @*<input type="file" id="file-id" name="file_name" onchange="theimage()"/>
            <input type="text" name="file_path" id="file-path"/>*@
        </div>
        </form>
    </div>
    <!--/.fluid-container-->
    <script type="text/javascript">
//    function theimage(){
//     var filename = document.getElementById('file-id').value;
//     document.getElementById('file-path').value = filename;
//     var filename1 = $('#file-id').next().val();
//     alert(filename);
//    }

    $(document).ready(function () {
        var lastSelectedId;
        var inEdit
        var headerRow, rowHight, resizeSpanHeight;
        grid = $("#Lista")

        //Esto es para analizar los parametros de entrada via querystring
        var querystring = location.search.replace( '?', '' ).split( '&' );
        var queryObj = {};
        for ( var i=0; i<querystring.length; i++ ) {
              var name = querystring[i].split('=')[0];
              var value = querystring[i].split('=')[1];
              queryObj[name] = value;
        }
        if (queryObj[ "code" ] === "1") {
                $(":input").attr("disabled","disabled");
                $(".boton").hide();
        }

        initDateEdit = function (elem) {
            setTimeout(function () {
                $(elem).datepicker({
                    dateFormat: 'dd/mm/yy',
                    autoSize: true,
                    showOn: 'button', // it dosn't work in searching dialog
                    changeYear: true,
                    changeMonth: true,
                    showButtonPanel: true,
                    showWeek: true
                });
                $(elem).focus();
            }, 100);
        };

        $("#FechaRequerimiento").datepicker({
		    changeMonth: true,
		    changeYear: true
		    //numberOfMonths: 2,
	    });

        //Para que haga wrap en las celdas
        $('.ui-jqgrid .ui-jqgrid-htable th div').css('white-space', 'normal');
        //$.jgrid.formatter.integer.thousandsSeparator=',';

        $('#Lista').jqGrid({
            url: ROOT + 'Requerimiento/DetRequerimientos/',
            postData: { 'IdRequerimiento': function () { return $("#IdRequerimiento").val(); } },
            editurl: ROOT + 'Requerimiento/EditGridData/',
            datatype: 'json',
            mtype: 'POST',
            colNames: ['Acciones', 'IdDetalleRequerimiento', 'IdArticulo', 'IdUnidad', 'Item', 'Cant.', 'Un.', 'Codigo', 'Material', 'Fecha entrega', 'Observaciones', 
                       'Cump', 'Archivo adjunto 1'],
            colModel: [
                        { name: 'act', index: 'act', align: 'left', width: 60, hidden: true, sortable: false, editable: false },
                        { name: 'IdDetalleRequerimiento', index: 'IdDetalleRequerimiento', label:'TB', align: 'left', width: 85, editable: true, hidden: true, editoptions: { disabled: 'disabled' }, editrules: { edithidden: true, required: true} },
                        { name: 'IdArticulo', index: 'IdArticulo', label:'TB', align: 'left', width: 85, editable: true, hidden: true, editoptions: { disabled: 'disabled' }, editrules: { edithidden: true, required: true} },
                        { name: 'IdUnidad', index: 'IdUnidad', label:'TB', align: 'left', width: 85, editable: true, hidden: true, editoptions: { disabled: 'disabled' }, editrules: { edithidden: true, required: true} },
                        //{ name: 'Eliminado', index: 'Eliminado', label:'TB', align: 'left', width: 85, editable: true, hidden: true, editoptions: { disabled: 'disabled' }, editrules: { edithidden: true} },
                        { name: 'NumeroItem', index: 'NumeroItem', label:'TB', align: 'right', width: 40, editable: true, edittype: 'text', editrules: { required: true } },
                        { name: 'Cantidad', index: 'Cantidad', label:'TB', align: 'right', width: 60, editable: true, edittype: 'text', editoptions: { maxlength: 20 }, editrules: { required: true } }, //, unformat:numUnformat
                        { name: 'Unidad', index: 'Unidad', align: 'center', width: 35, editable: true, edittype: 'select', editrules: { required: true },
                            editoptions: { dataUrl: '@Url.Action("Unidades", "Articulo")',
                                dataEvents: [{ type: 'change', fn: function (e) { $('#IdUnidad').val(this.value); } }]
                            }
                        },
                        { name: 'Codigo', index: 'Codigo', align: 'left', width: 85, editable: true, edittype: 'text',
                            editoptions: {
                                dataInit: function (elem) {
                                    $(elem).autocomplete({ source: '@Url.Action("GetCodigosArticulosAutocomplete2", "Articulo")', minLength : 3, 
                                        select: function (event, ui) {
                                            $("#IdArticulo").val(ui.item.id);
                                            $("#Descripcion").val(ui.item.title);
                                        }
                                    })
                                    .data("ui-autocomplete")._renderItem = function (ul, item) {
                                        return $("<li></li>")
                                            .data("ui-autocomplete-item", item)
                                            .append("<a><span style='display:inline-block;width:500px;font-size:12px'><b>" + item.value + " " +  item.title + "</b></span></a>")
                                            .appendTo(ul);
                                    };
                                }
                            },
                            editrules: { required: true }
                        },
                        { name: 'Descripcion', index: 'Descripcion', align: 'left', width: 400, editable: true, edittype: 'text',
                            editoptions: {
                                dataInit: function (elem) {
                                    $(elem).autocomplete({ source: '@Url.Action("GetArticulosAutocomplete2", "Articulo")', minLength : 0, 
                                        select: function (event, ui) {
                                            $("#IdArticulo").val(ui.item.id);
                                            $("#Codigo").val(ui.item.codigo);
                                        }
                                    })
                                    .data("ui-autocomplete")._renderItem = function (ul, item) {
                                        return $("<li></li>")
                                            .data("ui-autocomplete-item", item)
                                            .append("<a><span style='display:inline-block;width:500px;font-size:12px'><b>" + item.value + " [" + item.codigo + "]</b></span></a>")
                                            .appendTo(ul);
                                    };
                                }
                            },
                            editrules: { required: true }
                        },
                        //{ name: 'Descripcion', index: 'Descripcion', align: 'left', width: 300, editable: true, edittype: 'select', editoptions: { dataUrl: '@Url.Action("Articulos")' }, editrules: { required: true} },
                        { name: 'FechaEntrega', index: 'FechaEntrega', label:'TB', width: 75, align: 'center', sorttype: 'date', editable: true,
                            formatoptions: { newformat: 'dd/mm/yy' }, datefmt: 'dd/mm/yy', editoptions: { size: 10, maxlengh: 10, dataInit: initDateEdit }, editrules: { required: true }
                        },
//                        { name: 'Adjunto', index: 'Adjunto', align: 'left', width: 67, align: 'center', formatter: 'checkbox', editable: true, edittype: 'checkbox', hidden: true, 
//                            editoptions: { value: "True:False", //value: 'Yes:No', defaultValue: 'Si', 
//                                            dataEvents: [{ type: 'change', fn: function (e) {
//                                                                var thisval=$(e.target).val();
//                                                                if( $(this).is(':checked')) {$("#ArchivoAdjunto1").show();}
//                                                                else {$("#ArchivoAdjunto1").hide();} 
//                                                                }
//                                                         }] 
//                                             }
//                        }, 
                        { name: 'Observaciones', index: 'Observaciones', label:'TB', align: 'left', width: 300, editable: true, edittype: 'textarea',
                            editoptions: { rows: '4', cols: '80'} //editoptions: { dataInit: function (elem) { $(elem).val(inEdit ? "Modificado" : "Nuevo"); }
                        },
                        { name: 'Cumplido', index: 'Cumplido', label:'TB', align: 'center', width: 50, sortable: false, editable: false },
                        { name: 'ArchivoAdjunto1', index: 'ArchivoAdjunto1', label:'TB', align: 'left', width: 100, editable: true, edittype: 'file', 
                            editoptions: { enctype: "multipart/form-data",dataEvents: [{ type: 'change', fn: function (e) {
                                                                var thisval=$(e.target).val();
                                                                //var filed=$('#ArchivoAdjunto1').attr('value');
                                                                if( $(this).val() != "") {
                                                                        $("#Adjunto").checked = true;
                                                                    }
                                                                else {
                                                                        $("#Adjunto").checked = false;
                                                                    } 
                                                                }
                                                         }] 
                                            } 
                        },

                    ],
            onSelectRow: function (id) {
                if (id && id !== lastSelectedId) {
                    if (typeof lastSelectedId !== "undefined") {
                        grid.jqGrid('restoreRow', lastSelectedId);
                    }
                    lastSelectedId = id;
                    calculateTotal();
                }
            },
            gridComplete: function () {
                var ids = jQuery("#Lista").jqGrid('getDataIDs');
                for (var i = 0; i < ids.length; i++) {
                    var cl = ids[i];
                    be = "<input style='height:22px;width:20px;' type='button' value='E' onclick=\"jQuery('#Lista').editRow('" + cl + "',true,pickdates);\"  />";
                    se = "<input style='height:22px;width:20px;' type='button' value='S' onclick=\"jQuery('#Lista').saveRow('" + cl + "');\"  />";
                    ce = "<input style='height:22px;width:20px;' type='button' value='C' onclick=\"jQuery('#Lista').restoreRow('" + cl + "');\" />";
                    jQuery("#Lista").jqGrid('setRowData', ids[i], { act: be + se + ce });
//                    jQuery("#Lista").jqGrid('editRow', ids[i], false);
                    calculateTotal();
                }
            },
            afterSaveCell: function (rowid, name, val, iRow, iCol) {
                calculateTotal();
            },
            pager: $('#ListaPager'),
            rowNum: 15,
            sortname: 'NumeroItem',
            sortorder: 'asc',
            viewrecords: true,
            width: 'auto',
            height: 'auto',
            altRows: false,
            footerrow: true,
            userDataOnFooter: true,
            loadonce: true,
            caption: '<b>ITEMS DEL REQUERIMIENTO</b>'
        });

        function numUnformat( cellvalue, options, rowObject ){
            return cellvalue.replace(",",".");
        }

        $("#addData").click(function () {
            jQuery("#Lista").jqGrid('editGridRow', "new", { addCaption: "Agregar item de requerimiento", bSubmit: "Aceptar", bCancel: "Cancelar", width: 800, reloadAfterSubmit: false, closeOnEscape: true, closeAfterAdd: true,
                recreateForm: true,
                beforeShowForm: function(form) {
                    var dlgDiv = $("#editmod" + grid[0].id);
                    dlgDiv[0].style.top = 0 //Math.round((parentHeight-dlgHeight)/2) + "px";
                    dlgDiv[0].style.left = 0 //Math.round((parentWidth-dlgWidth)/2) + "px";
                    $('#tr_IdDetalleRequerimiento', form).hide();
                    $('#tr_IdArticulo', form).hide();
                    $('#tr_IdUnidad', form).hide();
                },
                beforeInitData: function () {
                    inEdit = false;
                },
                onInitializeForm: function (form) {
                    $('#IdDetalleRequerimiento', form).val(0);
                    $('#NumeroItem', form).val(jQuery("#Lista").jqGrid('getGridParam', 'records')+1);
                },
            });
        });

        $("#edtData").click(function () {
            var gr = jQuery("#Lista").jqGrid('getGridParam', 'selrow');
            if (gr != null) jQuery("#Lista").jqGrid('editGridRow', gr, { editCaption: "Modificacion item de requerimiento", bSubmit: "Aceptar", bCancel: "Cancelar", width: 800, reloadAfterSubmit: false, closeOnEscape: true,
                closeAfterEdit: true, recreateForm: true, Top: 0, 
                beforeShowForm: function(form) {
                    var dlgDiv = $("#editmod" + grid[0].id);
                    var parentDiv = dlgDiv.parent(); // div#gbox_list
                    var dlgWidth = dlgDiv.width();
                    var parentWidth = parentDiv.width();
                    var dlgHeight = dlgDiv.height();
                    var parentHeight = parentDiv.height();
                    dlgDiv[0].style.top = 0 //Math.round((parentHeight-dlgHeight)/2) + "px";
                    dlgDiv[0].style.left = 0 //Math.round((parentWidth-dlgWidth)/2) + "px";
                    $('#tr_IdDetalleRequerimiento', form).hide();
                    $('#tr_IdArticulo', form).hide();
                    $('#tr_IdUnidad', form).hide();
                },
                beforeInitData: function () {
                    inEdit = true;
                }
            });
            else alert("Debe seleccionar un item!");
        });

        $("#delData").click(function () {
            var gr = jQuery("#Lista").jqGrid('getGridParam', 'selrow');
            if (gr != null) {
                    //jQuery("#Lista").jqGrid('setRowData',gr,{Eliminado:"true"});
                    //$("#"+gr).hide();  
                    jQuery("#Lista").jqGrid('delGridRow', gr, { caption: "Borrar", msg: "Elimina el registro seleccionado?", bSubmit: "Borrar", bCancel: "Cancelar", width: 300, closeOnEscape: true, reloadAfterSubmit: true });
                }
            else alert("Debe seleccionar un item!");
        });

//        $('#grabar').click(function() {
//            var colModel = jQuery("#Lista").jqGrid ('getGridParam', 'colModel');
//            var cabecera = {"IdRequerimiento":"", "NumeroRequerimiento":"","FechaRequerimiento":"","LugarEntrega":"","Observaciones":"","IdObra":"","IdSector":"","IdSolicito":"",
//                            "Aprobo":"","Detalle":"","Cumplido":"","FechaAnulacion":"","UsuarioAnulacion":"","MotivoAnulacion":"","DetalleRequerimientos":[] };

//            var cm, data1, data2, valor;

//            cabecera.IdRequerimiento = $("#IdRequerimiento").val();
//            cabecera.NumeroRequerimiento = $("#NumeroRequerimiento").val();
//            cabecera.FechaRequerimiento = $("#FechaRequerimiento").val();
//            cabecera.LugarEntrega = $("#LugarEntrega").val();
//            cabecera.Observaciones = $("#Observaciones").val();
//            cabecera.IdObra = $("#IdObra").val();
//            cabecera.IdSector = $("#IdSector").val();
//            cabecera.IdSolicito = $("#IdSolicito").val();
//            cabecera.Aprobo = $("#Aprobo").val();
//            cabecera.Detalle = $("#Detalle").val();
//            cabecera.Cumplido = $("#Cumplido").val();
//            cabecera.FechaAnulacion = $("#FechaAnulacion").val();
//            cabecera.UsuarioAnulacion = $("#UsuarioAnulacion").val();
//            cabecera.MotivoAnulacion = $("#MotivoAnulacion").val();

//            var dataIds = $('#Lista').jqGrid('getDataIDs');
//            for (var i = 0; i < dataIds.length; i++) {
//                try {
//	                $('#Lista').jqGrid('saveRow', dataIds[i], false, 'clientArray');
//                    var data = $('#Lista').jqGrid('getRowData', dataIds[i]);

//                    data1 = '{"IdRequerimiento":"' + $("#IdRequerimiento").val() + '",'
//                    for (var j = 0; j < colModel.length; j++) {
//                        cm = colModel[j]
//                        if (cm.label==='TB') {
//                            valor=data[cm.name];
//                            if (cm.name==='Cantidad') valor=valor.replace(".",",")
//                            if (cm.name==='Cumplido' && cabecera.Cumplido==='AN') valor='AN'
//                            data1 = data1 + '"' + cm.name + '":"' + valor + '",'; 
//                        }
//                    }
//                    data1 = data1.substring(0, data1.length-1) + '}';
//                    data1 = data1.replace(/(\r\n|\n|\r)/gm,"");
//                    data2 = JSON.parse(data1);  
//                    cabecera.DetalleRequerimientos.push(data2);
//                }
//                catch (ex) {
//                    $('#Lista').jqGrid('restoreRow', dataIds[i]);
//                    alert("No se pudo grabar el comprobante. " + ex);
//                    return;
//                }
//            }
//            $.ajax({
//                type: 'POST',
//                contentType: 'application/json; charset=utf-8',
//                url: '@Url.Action("BatchUpdate", "Requerimiento")',
//                dataType: 'json',
//                data: $.toJSON(cabecera),
//                success: function(result) {
//                    if (result) {
//                        $('#Lista').trigger('reloadGrid'); 
//                        window.location.replace( ROOT + "Requerimiento/index"); 
//                    } else {
//                        alert('No se pudo grabar el comprobante.');
//                    }
//                }
//            });
//        });

        jQuery("#Lista").jqGrid('gridResize', { minWidth: 350, maxWidth: 1500, minHeight: 80, maxHeight: 500 });

        // get the header row which contains
        headerRow = grid.closest("div.ui-jqgrid-view")
            .find("table.ui-jqgrid-htable>thead>tr.ui-jqgrid-labels");

        // increase the height of the resizing span
        resizeSpanHeight = 'height: ' + headerRow.height() + 'px !important; cursor: col-resize;';
        headerRow.find("span.ui-jqgrid-resize").each(function () {
            this.style.cssText = resizeSpanHeight;
        });

        // set position of the dive with the column header text to the middle
        rowHight = headerRow.height();
        headerRow.find("div.ui-jqgrid-sortable").each(function () {
            var ts = $(this);
            ts.css('top', (rowHight - ts.outerHeight()) / 2 + 'px');
        });

        $("#ListaDrag").jqGrid({
            url: '@Url.Action("ArticulosGridData2", "Articulo")',
            datatype: 'json',
            mtype: 'POST',
            cellEdit: true,
            colNames: ['IdArticulo', 'Codigo', 'Material', 'IdUnidad', 'Un.'],
            colModel: [
                        { name: 'IdArticulo', index: 'IdArticulo', align: 'left', width: 100, editable: false, hidden: true },
                        { name: 'Codigo', index: 'Codigo', width: 100, align: 'left', search: true, stype: 'text' },
                        { name: 'Descripcion', index: 'Descripcion', width: 400, align: 'left', search: true, stype: 'text', editable: true, edittype: 'text', editoptions: { maxlength: 250 }, editrules: { required: true} },
                        { name: 'IdUnidad', index: 'IdUnidad', align: 'left', width: 100, editable: false, hidden: true },
                        { name: 'Unidad', index: 'Unidad', width: 100, align: 'left', search: true, stype: 'text' },
            ],
            pager: $('#ListaDragPager'),
            rowNum: 15,
            rowList: [10, 20, 50],
            sortname: 'Descripcion',
            sortorder: "asc",
            viewrecords: true,
            width: 'auto',
            height: '100%',
            altRows: false,
            emptyrecords: 'No hay registros para mostrar',
            caption: '<b>MATERIALES</b>'
        })
        jQuery("#ListaDrag").jqGrid('navGrid', '#ListaDragPager', { refresh: true, add: false, edit: false, del: false }, {}, {}, {}, { sopt: ["cn"], width: 700, closeOnEscape: true, closeAfterSearch: true });
        jQuery("#ListaDrag").jqGrid('gridResize', { minWidth: 350, maxWidth: 1500, minHeight: 80, maxHeight: 500 });

        $("#ListaDrag2").jqGrid({
            url: '@Url.Action("Requerimientos", "Requerimiento")',
            postData: { 'FechaInicial': function () { return ""; }, 'FechaFinal': function () { return ""; }, 'IdObra': function () { return ""; } },
            datatype: 'json',
            mtype: 'POST',
            cellEdit: true,
            colNames: ['Acciones', 'IdRequerimiento', 'Numero', 'Fecha', 'Cump.', 'Recep.', 'Entreg.', 'Impresa', 'Detalle', 'Obra', 'Presupuestos', 'Comparativas',
                       'Pedidos', 'Recepciones', 'Salidas', 'Libero', 'Solicito', 'Sector', 'Usuario_anulo', 'Fecha_anulacion', 'Motivo_anulacion', 'Fechas_liberacion',
                       'Observaciones', 'Lugar de entrega', 'IdObra', 'IdSector'],
            colModel: [
                        { name: 'act', index: 'act', align: 'center', width: 80, sortable: false, editable: false, search: false, hidden: true }, //, formatter: 'showlink', formatoptions: { baseLinkUrl: '@Url.Action("Edit")'} },
                        { name: 'IdRequerimiento', index: 'IdRequerimiento', align: 'left', width: 100, editable: false, hidden: true },
                        { name: 'NumeroRequerimiento', index: 'NumeroRequerimiento', align: 'right', width: 50, editable: false, search: true, searchoptions: { sopt: ['eq']} },
                        { name: 'FechaRequerimiento', index: 'FechaRequerimiento', width: 75, align: 'center', sorttype: 'date', editable: false, formatoptions: { newformat: 'dd/mm/yy' }, datefmt: 'dd/mm/yy', search: false },
                        { name: 'Cumplido', index: 'Cumplido', align: 'center', width: 50, editable: false, search: true, searchoptions: { sopt: ['cn']}, hidden: true },
                        { name: 'Recepcionado', index: 'Recepcionado', align: 'center', width: 50, editable: false, search: true, searchoptions: { sopt: ['cn']}, hidden: true },
                        { name: 'Entregado', index: 'Entregado', align: 'center', width: 50, editable: false, search: true, searchoptions: { sopt: ['cn']}, hidden: true },
                        { name: 'Impresa', index: 'Impresa', align: 'center', width: 50, editable: false, search: true, searchoptions: { sopt: ['cn']}, hidden: true },
                        { name: 'Detalle', index: 'Detalle', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'NumeroObra', index: 'NumeroObra', align: 'left', width: 85, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Presupuestos', index: 'Presupuestos', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']}, hidden: true },
                        { name: 'Comparativas', index: 'Comparativas', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']}, hidden: true },
                        { name: 'Pedidos', index: 'Pedidos', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']}, hidden: true },
                        { name: 'Recepciones', index: 'Recepciones', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']}, hidden: true },
                        { name: 'Salidas', index: 'Salidas', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']}, hidden: true },
                        { name: 'Libero', index: 'Libero', align: 'left', width: 150, editable: false, search: true, searchoptions: { sopt: ['']}, hidden: true },
                        { name: 'Solicito', index: 'Solicito', align: 'left', width: 150, editable: false, search: true, searchoptions: { sopt: ['cn']}, hidden: true },
                        { name: 'Sector', index: 'Sector', align: 'left', width: 150, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Usuario_anulo', index: 'Usuario_anulo', align: 'left', width: 50, editable: false, search: true, searchoptions: { sopt: ['cn']}, hidden: true },
                        { name: 'Fecha_anulacion', index: 'Fecha_anulacion', align: 'center', width: 75, editable: false, search: true, searchoptions: { sopt: ['cn']}, hidden: true },
                        { name: 'Motivo_anulacion', index: 'Motivo_anulacion', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']}, hidden: true },
                        { name: 'Fechas_liberacion', index: 'Fechas_liberacion', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']}, hidden: true },
                        { name: 'Observaciones', index: 'Observaciones', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'LugarEntrega', index: 'LugarEntrega', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'IdObra', index: 'IdObra', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'IdSector', index: 'IdSector', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} }
                    ],
            pager: $('#ListaDragPager2'),
            rowNum: 15,
            rowList: [10, 20, 50],
            sortname: 'NumeroRequerimiento',
            sortorder: "desc",
            viewrecords: true,
            width: 'auto',
            height: '100%',
            altRows: false,
            emptyrecords: 'No hay registros para mostrar',
            caption: '<b>REQUERIMIENTOS</b>'
        })
        jQuery("#ListaDrag2").jqGrid('navGrid', '#ListaDragPager2', { refresh: true, add: false, edit: false, del: false }, {}, {}, {}, { sopt: ["cn"], width: 700, closeOnEscape: true, closeAfterSearch: true });
        jQuery("#ListaDrag2").jqGrid('gridResize', { minWidth: 350, maxWidth: 1500, minHeight: 80, maxHeight: 500 });

        // make grid2 sortable
        $("#Lista").jqGrid('sortableRows', {
            update: function () {
                resetAltRows.call(this.parentNode);
            }
        });

        $("#Aprobo").change(function() {
            var IdAprobo = $("#Aprobo > option:selected").attr("value");
            var Aprobo = $("#Aprobo > option:selected").html();
            $("#Aux1").val(IdAprobo);
            $("#Aux2").val(Aprobo);
            $("#Aux3").val("");
            $("#Aux10").val("");
            $('#dialog-password').data('Combo', 'Aprobo');
            $('#dialog-password').dialog('open'); 
        });

        $("#anular").click(function () {
            $("#Aux1").val("");
            $("#Aux2").val("");
            $("#Aux3").val("");
            $("#Aux10").val("anularRM");
            $('#dialog-password').dialog('open'); 
        });

        //DEFINICION DE PANEL ESTE PARA LISTAS DRAG DROP
        $('a#a_panel_este_tab1').text('Lista de materiales');
        $('a#a_panel_este_tab2').text('Historico de requerimientos');

        ConectarGrillas1();

        $('#a_panel_este_tab1').click(function(){ 
            ConectarGrillas1();
        });

        $('#a_panel_este_tab2').click(function(){ 
            ConectarGrillas2();
        });

    });

  
    Aprobado();

    function Aprobado() {
        if( $('#Aprobo').val() != "") {
            $("#chk0").attr('checked', true); 
            var Aprobo = $("#Aprobo > option:selected").html();
            $("#chk0").attr('title', Aprobo); 
        }
        else {
            $("#chk0").attr('checked', false);  
            $("#chk0").attr('title', ""); 
        }
    }

    function pickdates(id) {
        jQuery("#" + id + "_sdate", "#Lista").datepicker({ dateFormat: "yy-mm-dd" });
    }
    
    function formEdit() {
        $('input[name=rdEditApproach]').attr('disabled', true);
        $('#Lista').navGrid(
                '#Lista',
        //enabling buttons
                {add: true, del: true, edit: true, search: false },
        //edit option
                {width: 'auto' },
        //add options
                {width: 'auto', url: '/Home/AddProduct/' },
        //delete options
                {url: '/Home/DeleteProduct/' });
    };

    calculateTotal = function () {
        var totalCantidad = grid.jqGrid('getCol', 'Cantidad', false, 'sum')
        grid.jqGrid('footerData', 'set', { NumeroItem: 'TOTAL', Cantidad: totalCantidad });
    };

    getColumnIndexByName = function (grid, columnName) {
        var cm = grid.jqGrid('getGridParam', 'colModel'), i, l = cm.length;
        for (i = 0; i < l; i++) {
            if (cm[i].name === columnName) {
                return i; // return the index
            }
        }
        return -1;
    },

    // Para usar en la edicion de una fila afterSubmit:processAddEdit,
    function processAddEdit(response, postdata) {
        var success = true;
        var message = ""
        var json = eval('(' + response.responseText + ')');
        if (json.errors) {
            success = false;
            for (i = 0; i < json.errors.length; i++) {
                message += json.errors[i] + '<br/>';
            }
        }
        var new_id = "1";
        return [success, message, new_id];
    }

    if ($("#IdRequerimiento").val()<=0) {
        $("#anular").attr('disabled', 'disabled'); 
    }
    else {
    }

    if ($("#Cumplido").val() == "AN") {
        $(":input").attr("disabled","disabled");
        $("#RManulada").html("RM ANULADA el " + $("#FechaAnulacion").val() + ", Motivo : " + $("#MotivoAnulacion").val()+ ", Usuario : " + $("#UsuarioAnulacion").val()); 
        $("#RManulada").show();
    }

    function ConectarGrillas1() {
        // connect grid1 with grid2
        $("#ListaDrag").jqGrid('gridDnD', {
            connectWith: '#Lista',//drag_opts:{stop:null},
            onstart: function (ev, ui) {
                ui.helper.removeClass("ui-state-highlight myAltRowClass")
                        .addClass("ui-state-error ui-widget")
                        .css({ border: "5px ridge tomato" });
                $("#gbox_grid2").css("border", "3px solid #aaaaaa");
            },
            beforedrop: function (ev, ui, getdata, $source, $target) {
//                var names = $target.jqGrid('getCol', 'name2');
//                if ($.inArray(getdata.name2, names) >= 0) {
//                    // prevent data for dropping
//                    ui.helper.dropped = false;
//                    alert("The row is already in the destination grid");
//                }
            },
            ondrop: function (ev, ui, getdata) {
                var acceptId = $(ui.draggable).attr("id");
                var getdata = ui.draggable.parent().parent().jqGrid('getRowData',acceptId);
				var j =0, tmpdata = {}, dropname;
				var dropmodel = $("#"+this.id).jqGrid('getGridParam','colModel');
				try {
//					for (var key in getdata) {
//						if(getdata.hasOwnProperty(key) && dropmodel[j]) {
//							dropname = dropmodel[j].name;
//							tmpdata[dropname] = getdata[key];
//						}
//						j++;
//					}
					tmpdata['IdArticulo'] = getdata['IdArticulo'];
					tmpdata['Codigo'] = getdata['Codigo'];
					tmpdata['Descripcion'] = getdata['Descripcion'];
					tmpdata['IdUnidad'] = getdata['IdUnidad'];
					tmpdata['Unidad'] = getdata['Unidad'];
					tmpdata['IdDetalleRequerimiento'] = 0;
					tmpdata['Cantidad'] = 1;
					tmpdata['NumeroItem'] = jQuery("#Lista").jqGrid('getGridParam', 'records')+1;
					getdata = tmpdata;
				} catch (e) {}
                var grid;
				grid = Math.ceil(Math.random()*1000000);
				// SE CAMBIO EN EL COMPONENTE grid.jqueryui.js LA LINEA 435 (SE COMENTO LA INSTRUCCION addRowData)
				$("#"+this.id).jqGrid('addRowData',grid,getdata);
                //resetAltRows.call(this);
                $("#gbox_grid2").css("border", "1px solid #aaaaaa");
            }
        });
    }

    function ConectarGrillas2() {
        $("#ListaDrag2").jqGrid('gridDnD', {
            connectWith: '#Lista', 
            onstart: function (ev, ui) {
                ui.helper.removeClass("ui-state-highlight myAltRowClass")
                        .addClass("ui-state-error ui-widget")
                        .css({ border: "5px ridge tomato" });
                $("#gbox_grid2").css("border", "3px solid #aaaaaa");
            },
            ondrop: function (ev, ui, getdata) {
                var acceptId = $(ui.draggable).attr("id");
                var getdata = ui.draggable.parent().parent().jqGrid('getRowData',acceptId);
				var j =0, tmpdata = {}, dropname, IdRequerimiento;
				var dropmodel = $("#"+this.id).jqGrid('getGridParam','colModel');
                var grid;
				try {
                    $("#Observaciones").val(getdata['Observaciones']);
                    $("#LugarEntrega").val(getdata['LugarEntrega']);
                    $("#IdObra").val(getdata['IdObra']);
                    $("#IdSector").val(getdata['IdSector']);
                    
                    IdRequerimiento = getdata['IdRequerimiento'];
                    $.ajax({
                        type: "GET",
                        contentType: "application/json; charset=utf-8",
                        url: ROOT + 'Requerimiento/DetRequerimientosSinFormato/',
                        data: { IdRequerimiento: IdRequerimiento },
                        dataType: "Json",
                        success: function (data) {
                            var longitud = data.length;
                            for (var i = 0; i < data.length; i++) {
					            tmpdata['IdArticulo'] = data[i].IdArticulo;
					            tmpdata['Codigo'] = data[i].Codigo;
					            tmpdata['Descripcion'] = data[i].Descripcion;
					            tmpdata['IdUnidad'] = data[i].IdUnidad;
					            tmpdata['Unidad'] = data[i].Unidad;
					            tmpdata['IdDetalleRequerimiento'] = 0;
					            tmpdata['Cantidad'] = 1;
					            tmpdata['NumeroItem'] = jQuery("#Lista").jqGrid('getGridParam', 'records')+1;
            					getdata = tmpdata;
				                grid = Math.ceil(Math.random()*1000000);
				                $("#Lista").jqGrid('addRowData',grid,getdata);
                            }
                        }
                    });
				} catch (e) {}
                $("#gbox_grid2").css("border", "1px solid #aaaaaa");
            }
        });
    }

//    function supplierFormatter(cellvalue, options, rowObject) {
//        return "<a href='' onclick='showSupplierDialog(this, " + cellvalue.substr(1, cellvalue.indexOf(']') - 1) + "); return false;'>" + cellvalue.substr(cellvalue.indexOf(']') + 2) + "</a>";
//    };

//    function supplierUnFormatter(cellvalue, options, cellobject) {
//        return cellvalue;
//    }

//    function showSupplierDialog(linkElement, supplierId) {
//        //request json data
//        $.getJSON('/Home/SupplierData/', { supplierId: supplierId }, function (data) {
//            //set values in dialog
//            $('#sCompanyName').text(data.companyName);
//            $('#sAddress').text(data.address);
//            $('#sPostalCode').text(data.postalCode);
//            $('#sCity').text(data.city);
//            $('#sCountry').text(data.country);
//            $('#sPhone').text(data.phone);
//            $('#sHomePage').text(data.homePage);
//            //get link position
//            var linkPosition = $(linkElement).offset();
//            //set dialog position
//            $('#jqdlgSupplier').dialog('option', 'position', [linkPosition.left, linkPosition.top]);
//            //open dialog
//            $('#jqdlgSupplier').dialog('open');
//        });
//    };
    </script>
@*function getDataLine(grida, rowid){  //vykradeno z inineeditu a vohackovano

                    if(grida.lastIndexOf("#", 0) === 0){
                        grida = $(grida);
                    }else{
                        grida = $("#"+grida);
                    }

                    var nm, tmp={}, tmp2={}, tmp3= {}, editable, fr, cv, ind;

                    ind = grida.jqGrid("getInd",rowid,true);
                    if(ind === false) {return success;}
                    editable = $(ind).attr("editable");
                    if (editable==="1") {
                        var cm;
                        var colModel = grida.jqGrid("getGridParam","colModel") ;
                        $("td",ind).each(function(i) {
                            // cm = $('#mygrid').p.colModel[i];
                            cm = colModel[i];
                            nm = cm.name;
                            if ( nm != 'cb' && nm != 'subgrid' && cm.editable===true && nm != 'rn' && !$(this).hasClass('not-editable-cell')) {
                                switch (cm.edittype) {
                                    case "checkbox":
                                        var cbv = ["Yes","No"];
                                        if(cm.editoptions ) {
                                            cbv = cm.editoptions.value.split(":");
                                        }
                                        tmp[nm]=  $("input",this).is(":checked") ? cbv[0] : cbv[1]; 
                                        break;
                                    case 'text':
                                    case 'password':
                                    case 'textarea':
                                    case "button" :
                                        tmp[nm]=$("input, textarea",this).val();
                                        break;
                                    case 'select':
                                        if(!cm.editoptions.multiple) {
                                            tmp[nm] = $("select option:selected",this).val();
                                            tmp2[nm] = $("select option:selected", this).text();
                                        } else {
                                            var sel = $("select",this), selectedText = [];
                                            tmp[nm] = $(sel).val();
                                            if(tmp[nm]) { tmp[nm]= tmp[nm].join(","); } else { tmp[nm] =""; }
                                            $("select option:selected",this).each(
                                                function(i,selected){
                                                    selectedText[i] = $(selected).text();
                                                }
                                            );
                                            tmp2[nm] = selectedText.join(",");
                                        }
                                        if(cm.formatter && cm.formatter == 'select') { tmp2={}; }
                                        break;
                                }
                            }
                        });
                    }
                    return tmp;
                }*@
    
}