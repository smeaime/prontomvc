@model IEnumerable<ProntoMVC.Data.Models.BancoChequera>
@{
    ViewBag.Title = "Chequeras";
}

<br />
<div style="padding-left: 15px; padding-right: 15px;">
    <table id="Lista" class="scroll" cellpadding="0" cellspacing="0" style="font-size: 16px; "></table>
    <div id="ListaPager" class="scroll" style="text-align: center; background: ; height: 30px"></div>
</div>

<script type="text/javascript">

    var lastSelectedId;
    var lastSelectediCol;
    var lastSelectediRow;
    var lastSelectediCol2;
    var lastSelectediRow2;
    var inEdit;
    var selICol;
    var selIRow;
    var gridCellWasClicked = false;
    var grillaenfoco = false;
    var getColumnIndexByName = function (grid, columnName) {
        var cm = grid.jqGrid('getGridParam', 'colModel'), i, l = cm.length;
        for (i = 0; i < l; i++) {
            if (cm[i].name === columnName) {
                return i; // return the index
            }
        }
        return -1;
    };
    var saveIcon = '<span class="ui-state-default" style="border:0"><span class="ui-icon ui-icon-info" style="float: left; margin-right: .3em;"></span></span>'

    function GrabarFila(gridId) {
        var i, a, err = "";

        $('#Lista').jqGrid('setSelection', gridId);
        var iRow = $('#' + $.jgrid.jqID(gridId))[0].rowIndex;
        var dataFromTheRow = $('#Lista').jqGrid('getRowData', gridId)
        var colModel = $('#Lista').jqGrid('getGridParam', 'colModel');

        for (i = 0; i < colModel.length; i++) {
            if (colModel[i].editable) {
                a = dataFromTheRow[colModel[i].name];
                if (typeof a != "undefined") {
                    if (a.substring(0, 1) == "<") {
                        err = err + "Hay campos en modo edicion, confirmelos con enter antes de grabar.\n"
                    }
                }
            }
        }

        var datos = $("#formid").serializeObject();

        datos.IdBancoChequera = gridId;
        datos.IdBanco = dataFromTheRow.IdBanco;
        datos.IdCuentaBancaria = dataFromTheRow.IdCuentaBancaria;
        datos.NumeroChequera = dataFromTheRow.NumeroChequera;
        datos.Activa = dataFromTheRow.Activa;
        datos.ChequeraPagoDiferido = dataFromTheRow.ChequeraPagoDiferido;
        datos.Fecha = dataFromTheRow.Fecha;
        datos.DesdeCheque = dataFromTheRow.DesdeCheque;
        datos.HastaCheque = dataFromTheRow.HastaCheque;
        datos.ProximoNumeroCheque = dataFromTheRow.ProximoNumeroCheque;

        if (datos.NumeroChequera == "" || datos.NumeroChequera == undefined) err = err + "Falta definir el numero de chequera.\n"

        if (err != "") {
            alert('No se pudo grabar el registro.\n' + err);
        } else {
            //$('html, body').css('cursor', 'wait');
            $.ajax({
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                url: ROOT + 'BancoChequera/BatchUpdate',
                dataType: 'json',
                data: JSON.stringify(datos),
                success: function (result) {
                    if (result) {
                        $('#Lista').jqGrid('setRowData', gridId, { act: "" });
                        var rowid = $('#Lista').getGridParam('selrow');
                        var valor = result.IdBancoChequera;
                        if (valor == "") { valor = "0"; }
                        $('#Lista').jqGrid('setCell', rowid, 'IdBancoChequera', valor);
                    } else {
                        alert('No se pudo grabar el registro.');
                    }
                },
                error: function (xhr, textStatus, exceptionThrown) {
                    try {
                        var errorData = $.parseJSON(xhr.responseText);
                        var errorMessages = [];
                        for (var key in errorData) { errorMessages.push(errorData[key]); }
                        $('html, body').css('cursor', 'auto');
                        $('#grabar2').attr("disabled", false).val("Aceptar");
                        $("#textoMensajeAlerta").html(errorData.Errors.join("<br />"));
                        $("#mensajeAlerta").show();
                        alert(errorData.Errors.join("\n").replace(/<br\/>/g, '\n'));
                    } catch (e) {
                        $('html, body').css('cursor', 'auto');
                        $('#grabar2').attr("disabled", false).val("Aceptar");
                        $("#textoMensajeAlerta").html(xhr.responseText);
                        $("#mensajeAlerta").show();
                    }
                }
            });
        };
    };

    function EliminarFila(gridId) {
        var dataFromTheRow = $('#Lista').jqGrid('getRowData', gridId);
        var idprincipal = dataFromTheRow['IdBancoChequera'];
        if (idprincipal <= 0) {
            $('#Lista').jqGrid('delRowData', gridId);
        } else {
            $.ajax({
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                url: ROOT + 'BancoChequera/Delete',
                dataType: 'json',
                data: JSON.stringify({ id: idprincipal }),
                success: function (result) {
                    if (result) {
                        $('#Lista').jqGrid('delRowData', gridId);
                    } else {
                        alert('No se pudo eliminar el registro.');
                    }
                },
            });
        };
    };

    $(document).ready(function () {

        $('.ui-jqgrid .ui-jqgrid-htable th div').css('white-space', 'normal');

        $.extend($.jgrid.inlineEdit, {
            keys: true
        });

        function MarcarSeleccionadosParaEliminar(grid) {
            var selectedIds = grid.jqGrid('getGridParam', 'selarrrow');
            var i, Id;
            for (i = selectedIds.length - 1; i >= 0; i--) {
                Id = selectedIds[i];
                var se = "<input style='height:22px;width:20px;' type='button' value='B' onclick=\"EliminarFila('" + Id + "');\"  />";
                grid.jqGrid('setRowData', Id, { act: se });
                //grid.jqGrid('delRowData', selectedIds[i]);
            }
        };

        function AgregarItemVacio(grid) {
            var colModel = grid.jqGrid('getGridParam', 'colModel');
            var dataIds = grid.jqGrid('getDataIDs');
            var Id = (grid.jqGrid('getGridParam', 'records') + 1) * -1;
            var se = "<input style='height:22px;width:20px;' type='button' value='G' onclick=\"GrabarFila('" + Id + "');\"  />";
            var data, j, cm;

            data = '{';
            for (j = 1; j < colModel.length; j++) {
                cm = colModel[j];
                data = data + '"' + cm.index + '":' + '"",';
            }
            data = data.substring(0, data.length - 1) + '}';
            data = data.replace(/(\r\n|\n|\r)/gm, "");
            grid.jqGrid('addRowData', Id, data, "first");
            grid.jqGrid('setRowData', Id, { act: se });
        };

        var lastSelectedId;
        var inEdit;
        grid = $("#Lista");

        $('.ui-jqgrid .ui-jqgrid-htable th div').css('white-space', 'normal');

        $('#Lista').jqGrid({
            url: '@Url.Action("BancoChequeras_DynamicGridData", "BancoChequera")',
            datatype: 'json',
            mtype: 'POST',
            colNames: ['Acciones', 'IdBancoChequera', 'IdBanco', 'IdCuentaBancaria', 'Banco', 'Cuenta bancaria', 'Numero chequera', 'Activa', 'Chequera pago diferido', 'Fecha', 'Desde cheque', 
                       'Hasta cheque', 'Proximo cheque'],
            colModel: [
                        { name: 'act', index: 'act', align: 'center', width: 80, search: false, sortable: false, editable: false },
                        { name: 'IdBancoChequera', index: 'IdBancoChequera', align: 'left', width: 100, search: false, editable: false, hidden: true },
                        { name: 'IdBanco', index: 'IdBanco', align: 'left', width: 100, search: false, editable: false, hidden: true },
                        { name: 'IdCuentaBancaria', index: 'IdCuentaBancaria', align: 'left', width: 100, search: false, editable: false, hidden: true },
                        {
                            name: 'Banco', index: 'Banco', align: 'left', width: 300, search: true, editable: true, hidden: false, edittype: 'select', editrules: { required: false },
                            editoptions: {
                                dataUrl: ROOT + 'Banco/GetBancosPropios?TipoEntidad=10',
                                dataInit: function (elem) {
                                    $(elem).width(290);
                                },
                                dataEvents: [{
                                    type: 'change', fn: function (e) {
                                        var $this = $(e.target), $td;
                                        if ($this.hasClass("FormElement")) {
                                            // form editing
                                            $('#IdBanco').val(this.value);
                                        } else {
                                            $td = $this.closest("td");
                                            if ($td.hasClass("edit-cell")) {
                                                // cell editing
                                                var rowid = $('#Lista').getGridParam('selrow');
                                                var valor = this.value;
                                                if (valor == "") { valor = "0"; }
                                                $('#Lista').jqGrid('setCell', rowid, 'IdBanco', valor);
                                            } else {
                                                // inline editing
                                            }
                                        }
                                    }
                                }]
                            },
                        },
                        {
                            name: 'CuentaBancaria', index: 'CuentaBancaria', align: 'left', width: 350, search: true, editable: true, hidden: false, edittype: 'select', editrules: { required: false },
                            editoptions: {
                                dataUrl: ROOT + 'CuentaBancaria/GetCuentasBancariasPorIdBanco?IdBanco=0',
                                dataInit: function (elem) {
                                    $(elem).width(340);
                                },
                                dataEvents: [{
                                    type: 'change', fn: function (e) {
                                        var $this = $(e.target), $td;
                                        if ($this.hasClass("FormElement")) {
                                            // form editing
                                            $('#IdCuentaBancaria').val(this.value);
                                        } else {
                                            $td = $this.closest("td");
                                            if ($td.hasClass("edit-cell")) {
                                                // cell editing
                                                var rowid = $('#Lista').getGridParam('selrow');
                                                var valor = this.value;
                                                if (valor == "") { valor = "0"; }
                                                $('#Lista').jqGrid('setCell', rowid, 'IdCuentaBancaria', valor);
                                            } else {
                                                // inline editing
                                            }
                                        }
                                    }
                                }]
                            },
                        },
                        {
                            name: 'NumeroChequera', index: 'NumeroChequera', width: 100, align: 'center', search: true, editable: true, editrules: { required: false, number: true }, edittype: 'text', search: true, searchoptions: { clearSearch: true, searchOperators: true, sopt: ['eq'] }, 
                            editoptions: {
                                maxlength: 20, defaultValue: '0',
                                dataEvents: [
                                {
                                    type: 'keypress',
                                    fn: function (e) {
                                        var key = e.charCode || e.keyCode;
                                        if (key == 13) { setTimeout("jQuery('#Lista').editCell(" + selIRow + " + 1, " + selICol + ", true);", 100); }
                                        if ((key < 48 || key > 57) && key !== 46 && key !== 44 && key !== 8 && key !== 37 && key !== 39) { return false; }
                                    }
                                }]
                            }
                        },
                        { name: 'Activa', index: 'Activa', width: 50, align: 'left', search: true, editable: true, editrules: { required: false }, editoptions: { value: "SI:NO" }, edittype: 'checkbox' },
                        { name: 'ChequeraPagoDiferido', index: 'ChequeraPagoDiferido', width: 100, align: 'left', search: true, editable: true, editrules: { required: false }, editoptions: { value: "SI:NO" }, edittype: 'checkbox' },
                        {
                            name: 'Fecha', index: 'Fecha', width: 120, sortable: false, align: 'right', search: false, editable: true,
                            editoptions: {
                                size: 10,
                                maxlengh: 10,
                                dataInit: function (element) {
                                    $(element).datepicker({
                                        dateFormat: 'dd/mm/yy',
                                        constrainInput: false,
                                        showOn: 'button',
                                        buttonText: '...'
                                    });
                                }
                            },
                            formatoptions: { newformat: "dd/mm/yy" }, datefmt: 'dd/mm/yy'
                        },
                        {
                            name: 'DesdeCheque', index: 'DesdeCheque', width: 100, align: 'center', search: false, editable: true, editrules: { required: false, number: true }, edittype: 'text', label: 'TB',
                            editoptions: {
                                maxlength: 20, defaultValue: '0',
                                dataEvents: [
                                {
                                    type: 'keypress',
                                    fn: function (e) {
                                        var key = e.charCode || e.keyCode;
                                        if (key == 13) { setTimeout("jQuery('#Lista').editCell(" + selIRow + " + 1, " + selICol + ", true);", 100); }
                                        if ((key < 48 || key > 57) && key !== 46 && key !== 44 && key !== 8 && key !== 37 && key !== 39) { return false; }
                                    }
                                }]
                            }
                        },
                        {
                            name: 'HastaCheque', index: 'HastaCheque', width: 100, align: 'center', search: false, editable: true, editrules: { required: false, number: true }, edittype: 'text', label: 'TB',
                            editoptions: {
                                maxlength: 20, defaultValue: '0',
                                dataEvents: [
                                {
                                    type: 'keypress',
                                    fn: function (e) {
                                        var key = e.charCode || e.keyCode;
                                        if (key == 13) { setTimeout("jQuery('#Lista').editCell(" + selIRow + " + 1, " + selICol + ", true);", 100); }
                                        if ((key < 48 || key > 57) && key !== 46 && key !== 44 && key !== 8 && key !== 37 && key !== 39) { return false; }
                                    }
                                }]
                            }
                        },
                        {
                            name: 'ProximoNumeroCheque', index: 'ProximoNumeroCheque', width: 100, align: 'center', search: false, editable: true, editrules: { required: false, number: true }, edittype: 'text', label: 'TB',
                            editoptions: {
                                maxlength: 20, defaultValue: '0',
                                dataEvents: [
                                {
                                    type: 'keypress',
                                    fn: function (e) {
                                        var key = e.charCode || e.keyCode;
                                        if (key == 13) { setTimeout("jQuery('#Lista').editCell(" + selIRow + " + 1, " + selICol + ", true);", 100); }
                                        if ((key < 48 || key > 57) && key !== 46 && key !== 44 && key !== 8 && key !== 37 && key !== 39) { return false; }
                                    }
                                }]
                            }
                        }
            ],
            onSelectRow: function (id) {
                if (id && id !== lastSelectedId) {
                    if (typeof lastSelectedId !== "undefined") {
                        grid.jqGrid('restoreRow', lastSelectedId);
                    }
                    lastSelectedId = id;
                }
            },

            onCellSelect: function (rowid, iCol, cellcontent, e) {
                var $this = $(this);
                var iRow = $('#' + $.jgrid.jqID(rowid))[0].rowIndex;
                lastSelectedId = rowid;
                lastSelectediCol = iCol;
                lastSelectediRow = iRow;
            },
            afterEditCell: function (id, name, val, iRow, iCol) {
                var se = "<input style='height:22px;width:20px;' type='button' value='G' onclick=\"GrabarFila('" + id + "');\"  />";
                jQuery("#Lista").jqGrid('setRowData', id, { act: se });
            },

            pager: $('#ListaPager'),
            rowNum: 20,
            rowList: [10, 20, 50, 100],
            sortname: 'IdBancoChequera',
            sortorder: 'asc',
            multiselect: true,
            viewrecords: true,
            emptyrecords: 'No hay registros para mostrar',

            caption: '<b>CHEQUERAS</b>',

            width: 'auto', // 'auto',
            autowidth: true,
            shrinkToFit: false,

            height: $(window).height() - ALTOLISTADO, // '100%'
            altRows: false,
            footerrow: false, //true,
            userDataOnFooter: true,

            gridview: true,
            multiboxonly: true,
            multipleSearch: true,

            cellEdit: true,
            cellsubmit: 'clientArray',
            editurl: ROOT + 'Empleado/EditGridData/'
        });


        //  //jQuery("#Lista").jqGrid('navGrid', '#ListaPager', { refresh: true, add: false, edit: false, del: false }, {}, {}, {}, { sopt: ["cn"], width: 700, closeOnEscape: true, closeAfterSearch: true });
        //  jQuery("#Lista").jqGrid('gridResize', { minWidth: 350, maxWidth: 1500, minHeight: 80, maxHeight: 500 });
        //  jQuery("#Lista").jqGrid('navGrid', '#ListaPager',
        // { csv: true, refresh: true, add: false, edit: false, del: false }, {}, {}, {},
        // {
        //     //sopt: ["cn"]
        //     //sopt: ['eq', 'ne', 'lt', 'le', 'gt', 'ge', 'bw', 'bn', 'ew', 'en', 'cn', 'nc', 'nu', 'nn', 'in', 'ni'],
        //     width: 700, closeOnEscape: true, closeAfterSearch: true, multipleSearch: true, overlay: false
        // }
        //);

        jQuery("#Lista").jqGrid('navGrid', '#ListaPager',
             { csv: true, refresh: true, add: false, edit: false, del: false }, {}, {}, {},
             {
                 //sopt: ["cn"]
                 //sopt: ['eq', 'ne', 'lt', 'le', 'gt', 'ge', 'bw', 'bn', 'ew', 'en', 'cn', 'nc', 'nu', 'nn', 'in', 'ni'],
                 width: 700, closeOnEscape: true, closeAfterSearch: true, multipleSearch: true, overlay: false
             }
            );

        jQuery("#Lista").jqGrid('navButtonAdd', '#ListaPager', {
            caption: "",
            buttonicon: "ui-icon-calculator",
            title: "Choose columns",
            onClickButton: function () {
                $(this).jqGrid('columnChooser',
                    { width: 550, msel_opts: { dividerLocation: 0.5 }, modal: true });
                $("#colchooser_" + $.jgrid.jqID(this.id) + ' div.available>div.actions')
                    .prepend('<label style="float:left;position:relative;margin-left:0.6em;top:0.6em">Search:</label>');
            }
        });

        jQuery("#Lista").filterToolbar({
            stringResult: true, searchOnEnter: true,
            defaultSearch: 'cn',
            enableClear: false
        }); // si queres sacar el enableClear, definilo en las searchoptions de la columna específica http://www.trirand.com/blog/?page_id=393/help/clearing-the-clear-icon-in-a-filtertoolbar/
        //myGrid.filterToolbar({  });

        jQuery("#Lista").jqGrid('navButtonAdd', '#ListaPager',
                {
                    caption: "Filter", title: "Toggle Searching Toolbar",
                    buttonicon: 'ui-icon-pin-s',
                    onClickButton: function () { myGrid[0].toggleToolbar(); }
                });

        jQuery("#Lista").jqGrid('navButtonAdd', '#ListaPager',
                {
                    caption: "", buttonicon: "ui-icon-plus", title: "Agregar item",
                    onClickButton: function () {
                        AgregarItemVacio(jQuery("#Lista"));
                    },
                });

        jQuery("#Lista").jqGrid('navButtonAdd', '#ListaPager',
                {
                    caption: "", buttonicon: "ui-icon-trash", title: "Eliminar",
                    onClickButton: function () {
                        MarcarSeleccionadosParaEliminar(jQuery("#Lista"));
                    },
                });
    });
</script>
