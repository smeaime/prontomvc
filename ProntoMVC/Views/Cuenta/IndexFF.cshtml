@model IEnumerable<ProntoMVC.Data.Models.Pedido>
@{
    ViewBag.Title = "Cuentas de Fondo fijo";
}
<div>
    <input id="FechaInicial" name="FechaInicial" type="hidden" value=@Request.QueryString["fechainicial"]></div>
<div>
    <input id="FechaFinal" name="FechaFinal" type="hidden" value=@Request.QueryString["fechafinal"]></div>
@if (false)
{
    <style>
        /* jqGrid builds some additional divs over the main grid table. The outer div has the class ui-jqgrid. So if you need to remove right and left border existing over the whole grid you can use the following CSS: */
        
        
        
        .ui-widget-content
        {
            border: 0px solid #aaaaaa;
        }
        
        .ui-jqgrid
        {
            border-right-width: 0px;
            border-left-width: 0px;
        }
        /* If you need to remove all grid's borders you can use

.ui-jqgrid { border-width: 0px; }
If you want additionally remove vertical border between the cells in the grid you can use */
        
        .ui-jqgrid tr.ui-row-ltr td
        {
            border-right-color: #E4E4E4;
        }
        
        
        .ui-jqgrid tr.footrow-ltr td
        {
            border-right-color: #E4E4E4 !important;
        }
        
        /*To remove horizontal border between the rows you can use */
        
        .ui-jqgrid tr.ui-row-ltr td
        {
            border-bottom-color: #E4E4E4;
        }
        /*To remove vertical borders between the column headers you can use */
        
        th.ui-th-column
        {
            border-right-color: #E4E4E4 !important;
        }
        /* or alternatively (without the usage of !important) */
        
        .ui-jqgrid-labels .ui-th-column
        {
            border-right-color: #E4E4E4;
        }
    </style>


    <br />
}
<br />
<div style="padding-left: 15px; padding-right: 15px;">
    <div class="row-fluid">
        <div class="span12 lightblue">
            <button onclick="window.location.href='@Url.Action("Edit", new { id = -1 })'" class="btn btn-primary span2 ">
                Nuevo
            </button>
            <div class="span4">
                <div class="input-prepend input-append">
                    @* <div class="btn-group ">
                            <button class="btn dropdown-toggle" data-toggle="dropdown">
                                En todo <span class="caret"></span>
                            </button>
                            <div class="dropdown-menu">
                                Requerimientos
                            </div>
                            <ul class="dropdown-menu">
                                Número
                            </ul>
                        </div>*@
                    <input id="BuscadorListado" type="text" class="" placeholder="Filtrar" style="" />
                    @*<div>
                            <input id="FechaInicial" name="FechaInicial" type="hidden" value=@Request.QueryString["fechainicial"]></div>
                        <div>
                            <input id="FechaFinal" name="FechaFinal" type="hidden" value=@Request.QueryString["fechafinal"]></div>
                        <div>
                            <input id="IdObra" name="IdObra" type="hidden" value=@Request.QueryString["idobra"]></div>*@
                    @if (Roles.IsUserInRole(ViewBag.NombreUsuario, "SuperAdmin"))
                    {
                        <button onclick=" jQuery('#Lista').searchGrid({}) " class="btn append ">
                            avanzada</button>
                    }
                </div>
            </div>
            @*   <div class="btn-group  pull-right ">
                    <button onclick="  " class="btn">
                        <
                    </button>
                    <button onclick="  " class="btn ">
                        >
                    </button>
                </div>*@
            @if (Roles.IsUserInRole(ViewBag.NombreUsuario, "SuperAdmin"))
            {
                                               
                <button onclick="  " class="btn span1">
                    Excel
                </button>
            }
        </div>
        <br />
        <br />
        <script>



            $("#BuscadorListado").change(function () {

                var grid = jQuery("#Lista");

                if (false) {
                    // http://stackoverflow.com/questions/5272850/is-there-an-api-in-jqgrid-to-add-advanced-filters-to-post-data

                    // addPostDataFilters("AND");
                    var myfilter = { groupOp: "AND", rules: [] };

                    // addFilteritem("invdate", "gt", "2007-09-06");
                    myfilter.rules.push({ field: "Obra", op: "cn", data: $("#BuscadorListado").val() });


                    grid.jqGrid({
                        // all prarameters which you need
                        search: true, // if you want to force the searching
                        postData: { filters: JSON.stringify(myfilter) }
                    });

                    grid[0].p.search = myfilter.rules.length > 0;
                    $.extend(grid[0].p.postData, { filters: JSON.stringify(myfilter) });
                    grid.trigger("reloadGrid", [{ page: 1}]);



                    return;

                }



                var postdata = grid.jqGrid('getGridParam', 'postData');
                jQuery.extend(postdata,
               { filters: '',
                   searchField: 'Descripcion',
                   searchOper: 'cn',
                   searchString: $("#BuscadorListado").val()
               });
                grid.jqGrid('setGridParam', { search: true, postData: postdata });
                grid.trigger("reloadGrid", [{ page: 1}]);


                //<select><option value="NumeroRequerimiento" selected="selected">N°</option><option value="Detalle">Detalle</option><option value="NumeroObra">Obra</option><option value="Sector">Sector</option><option value="Observaciones">Observaciones</option><option value="LugarEntrega">Lugar de necesidad</option></select>
            });
        </script>
    </div>
    <table id="Lista" class="scroll" cellpadding="0" cellspacing="0" style="font-size: 14px;">
    </table>
    <div id="ListaPager" class="scroll" style="text-align: center; background: ; height: 30px">
    </div>
</div>
@*<p>@Html.ActionLink("Nuevo Pedido", "Edit", new { id = -1 }, null)</p> *@
<script type="text/javascript">
    $(document).ready(function () {
        var lastSelectedId;
        var inEdit;
        grid = $("#Lista");

        //Para que haga wrap en las celdas
        $('.ui-jqgrid .ui-jqgrid-htable th div').css('white-space', 'normal');

        grid.jqGrid({
            //        url: ROOT + 'Cuenta/Cuentas',
            url: ROOT + 'jqGridPaginacion/grilladinamica_CuentasFF',
            postData: { 'FechaInicial': function () { return ""; },
                'FechaFinal': function () { return ""; },
                'IdObra': function () { return ""; }
            },


            datatype: 'json',
            mtype: 'POST',
            cellEdit: false,

            colNames: ['ver', '', 'IdRequerimiento', 'Cuenta', 'cód.',

            'Grupo', 'Obra', 'CdeGasto', 'Rendicion', '',

            'Cump.', 'Recep.', 'Entreg.', 'Impresa', 'Detalle',
             'Obra', 'Pedidos', 'Comparativas', 'Pedidos', 'Recepciones',
              'Salidas', 'Libero', 'Solicito', 'Sector', 'Usuario anulo', 'Fecha anulacion', 'Motivo anulacion', 'Fechas liberacion',
                       'Observaciones', 'Lugar de entrega', 'IdObra', 'IdSector'],
            colModel: [
                        { name: 'accion', index: 'act', align: 'center', width: 40, sortable: false, editable: false, search: false, hidden: true }, //, formatter: 'showlink', formatoptions: { baseLinkUrl: '@Url.Action("Edit")'} },
                        {name: '', index: 'act', align: 'center', width: 160, sortable: false, editable: false, search: false, hidden: false }, //, formatter: 'showlink', formatoptions: { baseLinkUrl: '@Url.Action("Edit")'} },
                        {name: 'IdCuenta', key: true, index: 'IdRequerimiento', align: 'left', width: 100, editable: false, hidden: true },
                        { name: 'Cuenta', index: 'Descripcion', align: 'left', width: 200, editable: false, search: true, searchoptions: { clearSearch: false, searchOperators: true, sopt: ['cn']} },
                        { name: 'Codigo', index: 'Codigo', align: 'center', width: 50, editable: false, search: true, searchoptions: { clearSearch: false, searchOperators: true, sopt: ['cn','eq'] } },


                        { name: 'TiposCuentaGrupos',     // http://stackoverflow.com/questions/5328072/can-jqgrid-support-dropdowns-in-the-toolbar-filter-fields

                            index: 'TiposCuentaGrupos', align: 'center', width: 100, editable: false, search: true,

                            //formatter:'select',     stype: 'select', // http://stackoverflow.com/questions/5328072/can-jqgrid-support-dropdowns-in-the-toolbar-filter-fields
                            searchoptions: { sopt: ['cn']

                                //, value: categoriesStr
                            }, hidden: false




                        },
                        { name: 'Obra', index: 'Obra', align: 'center', width: 100, editable: false, search: true, hidden: false,
                            searchoptions: {
                                sopt: ['cn'],
                                dataInit: function (elem) {
                                    // it demonstrates custom item rendering  http://stackoverflow.com/questions/7392236/jqgrid-with-autocompletion-cant-parse-data-from-controller-to-view/7392816#7392816
                                    //                                    $(elem).autocomplete({ source:  ROOT + 'Articulo/GetObrasAutocomplete2' })
                                    //                                                                .data("autocomplete")._renderItem = function (ul, item) {
                                    //                                                                    return $("<li></li>")
                                    //                                                                        .data("item.autocomplete", item)
                                    //                                                                        .append("<a><span style='display:inline-block;width:60px;'><b>" +
                                    //                                                                                item.value + "</b></span>" + item.title + "</a>")
                                    //                                                                        .appendTo(ul);
                                    //                                                                };




                                    $(elem).autocomplete({
                                        source: ROOT + 'Articulo/GetObrasAutocomplete2'

                                        //,minLength: 3
                                        //                                                                        ,select: function (event, ui) {

                                        //                                                                            $("#IdCuenta").val(ui.item.id);
                                        //                                                                            $("#CodigoCuenta").val(ui.item.codigo); // por qué acá traes la propiedad codigo en lugar de value? -porque sugiero un texto pero al seleccionar solo tomo un pedazo
                                        //                                                                            $("#Descripcion").val(ui.item.title);
                                        //                                                                        }
                                    })
                                    .data("ui-autocomplete")._renderItem = function (ul, item) {
                                        return $("<li></li>")
                                            .data("ui-autocomplete-item", item)
                                            .append("<a><span style='display:inline-block;width:500px;font-size:12px'><b>" + item.value + " " + item.title + "</b></span></a>")
                                            .appendTo(ul);
                                    };




                                }
                            }


                        },
                        { name: 'CdeGasto', index: 'CuentasGasto', align: 'center', width: 100, editable: false, search: true, searchoptions: { sopt: ['cn'] }, hidden: false },
                        { name: 'Rendicion', index: '', align: 'center', width: 50, editable: false, search: true, searchoptions: { sopt: ['cn'] }, hidden: false },
                        { name: '', index: '', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },


                        { name: 'neto', index: 'Cumplido', align: 'center', width: 50, editable: false, search: true, searchoptions: { sopt: ['cn', 'nc', 'bw', 'bn', 'eq', 'ne', 'ew', 'en', 'lt', 'le', 'gt', 'ge'] }, hidden: false },
                        { name: 'percepciones', index: 'Recepcionado', align: 'center', width: 50, editable: false, search: true, searchoptions: { sopt: ['cn'] }, hidden: false },
                        { name: 'iva', index: 'Entregado', align: 'center', width: 50, editable: false, search: true, searchoptions: { sopt: ['cn'] }, hidden: false },
                        { name: 'total', index: 'Impresa', align: 'center', width: 50, editable: false, search: true, searchoptions: { sopt: ['cn'] }, hidden: true },
                        { name: '', index: 'Detalle', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },

                        { name: 'NumeroObra', index: 'NumeroObra', align: 'left', width: 85, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Pedidos', index: 'Pedidos', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn'] }, hidden: true },
                        { name: 'Comparativas', index: 'Comparativas', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn'] }, hidden: true },
                        { name: 'Pedidos', index: 'Pedidos', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn'] }, hidden: true },
                        { name: 'Recepciones', index: 'Recepciones', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn'] }, hidden: true },
                        { name: 'Salidas', index: 'Salidas', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn'] }, hidden: true },
                        { name: 'Libero', index: 'Libero', align: 'left', width: 150, editable: false, search: true, searchoptions: { sopt: [''] }, hidden: true },
                        { name: 'Solicito', index: 'Solicito', align: 'left', width: 150, editable: false, search: true, searchoptions: { sopt: ['cn'] }, hidden: true },
                        { name: 'Sector', index: 'Sector', align: 'left', width: 150, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Usuario_anulo', index: 'Usuario_anulo', align: 'left', width: 50, editable: false, search: true, searchoptions: { sopt: ['cn'] }, hidden: true },
                        { name: 'Fecha_anulacion', index: 'Fecha_anulacion', align: 'center', width: 75, editable: false, search: true, searchoptions: { sopt: ['cn'] }, hidden: true },
                        { name: 'Motivo_anulacion', index: 'Motivo_anulacion', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn'] }, hidden: true },
                        { name: 'Fechas_liberacion', index: 'Fechas_liberacion', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn'] }, hidden: true },
                        { name: 'Observaciones', index: 'Observaciones', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'LugarEntrega', index: 'LugarEntrega', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'IdObra', index: 'IdObra', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn'] }, hidden: true },
                        { name: 'IdSector', index: 'IdSector', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn'] }, hidden: true }
                    ],


            onSelectRow: function (id, status, e) {
                //       var acceptId = $(ui.draggable).attr("id");
                //		CopiarCuenta(acceptId, ui);


                CopiarCuenta(id, null);
            },
            ondblClickRow: function (id) {
                //  CopiarCuenta(id); //prefiero que copie con solo hacer clic  -y quizás hace el drag inutil, en especial cuando las grillas son fijas
            },



            pager: $('#ListaDragPager'),
            rowNum: 50,
            rowList: [10, 20, 50],
            sortname: 'Codigo',
            sortorder: "asc",
            viewrecords: true,

            ///////////////////////////////
            width: 'auto', // 'auto',
            autowidth: true,
            shrinkToFit: false,
            //////////////////////////////
            //height: '100%',

            height: '100%',
            // height: $(window).height() - 350,
            //////////////////////////////


            altRows: false,
            emptyrecords: 'No hay registros para mostrar'//,
            //caption: '<b>REQUERIMIENTOS RESUMIDO</b>'

        , multipleSearch: true,

            toppager: true,

            //recreateFilter:true,
            
            ///////////////////////
            footerrow: false,
            userDataOnFooter: true,
            /////////////////////////

            // jsonReader: { cell: "" }, // esto no funciona usando el formato de retorno con tipo "jqGridJson", quizá funciona con el original de Oleg  que devuelve directo el objeto a Json http://stackoverflow.com/questions/5500805/asp-net-mvc-2-0-implementation-of-searching-in-jqgrid/5501644#5501644

            loadError: function (jqXHR, textStatus, errorThrown) {
                // remove error div if exist
                $('#' + this.id + '_err').remove();
                // insert div with the error description before the grid
                myGrid.closest('div.ui-jqgrid').before(
            '<div id="' + this.id + '_err" style="max-width:' + this.style.width +
            ';"><div class="ui-state-error ui-corner-all" style="padding:0.7em;float:left;"><span class="ui-icon ui-icon-alert" style="float:left; margin-right: .3em;"></span><span style="clear:left">' +
                        decodeErrorMessage(jqXHR, textStatus, errorThrown) + '</span></div><div style="clear:left"/></div>')
            },
            loadComplete: function () {
                // remove error div if exist
                grid = $(this);
                $("#ListaDrag td", grid[0]).css({ background: 'rgb(234, 234, 234)' });
                $('#' + this.id + '_err').remove();
            }




        });


        jQuery("#Lista").jqGrid('navGrid', '#ListaPager', { refresh: true, add: false, edit: false, del: false }, {}, {}, {}, { sopt: ["cn"], width: 700, closeOnEscape: true, closeAfterSearch: true });
        //jQuery("#Lista").jqGrid('gridResize', { minWidth: 350, maxWidth: 1500, minHeight: 80, maxHeight: 500 });
        //jQuery("#Lista").jqGrid('setFrozenColumns');








        $('#Lista').jqGrid('footerData', 'set', { 
            // NumeroObra: 'TOTALES', 
            // Importe: totalCantidad.toFixed(DECIMALES),
            neto: "444",
            iva: "444",
            percepciones: "444"
        });

    });

</script>
