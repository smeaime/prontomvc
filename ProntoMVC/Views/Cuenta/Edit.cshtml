@model ProntoMVC.Data.Models.Cuenta
@{
    ViewBag.Title = "Cuenta";
}
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formid" }))
{

    @Html.ValidationSummary(true)








    <div class="container-fluid">
        <div class="modal" id="loading">
            <img src="@Url.Content("~/Content/images/fhhrx.gif")" style="margin-right: 5px;" />
            Cargando...
        </div>
        <style>
            input[readonly] {
                background: transparent;
                border: 0;
                -webkit-box-shadow: none;
                -moz-box-shadow: none;
                box-shadow: none;
            }

            .container-fluid {
                padding-left: 8px; /*    margin-right: 15px; */
            }
        </style>
        <style>
                        /* jqGrid builds some additional divs over the main grid table. The outer div has the class ui-jqgrid. So if you need to remove right and left border existing over the whole grid you can use the following CSS: */

                        .ui-jqgrid {
                            border-right-width: 0px;
                            border-left-width: 0px;
                        }
                            /* If you need to remove all grid's borders you can use

            .ui-jqgrid { border-width: 0px; }
            If you want additionally remove vertical border between the cells in the grid you can use */

                            .ui-jqgrid tr.ui-row-ltr td {
                                border-right-color: transparent;
                            }


                            .ui-jqgrid tr.footrow-ltr td {
                                border-right-color: transparent !important;
                                border: 0 transparent !important;
                            }

                            /*To remove horizontal border between the rows you can use */

                            .ui-jqgrid tr.ui-row-ltr td {
                                border-bottom-color: transparent;
                            }
                        /*To remove vertical borders between the column headers you can use */

                        th.ui-th-column {
                            /*    border-right-color: transparent !important; */
                            border-right-color: rgb(234, 234, 234) !important;
                        }
                        /* or alternatively (without the usage of !important) */

                        .ui-jqgrid-labels .ui-th-column {
                            /* border-right-color: transparent;*/
                        }
        </style>
        <form class="form-horizontal">
            <div>@Html.Hidden("IdCuenta", Model.IdCuenta)</div>

            <div class="span12">
                <div class="row-fluid" style="margin-bottom: 15px; margin-top: 5px;">
                    @* <div class="span5 lightblue" style="font-weight: bold; font-size: 34px; vertical-align: "> *@
                    <div class="" style='font-size: 34px; margin-top: 5px; height: 45px; font-weight: 400;
                    text-shadow: 0 1px 0  lightgray; font-family: "Segoe UI Web Regular", "Segoe UI", "Lucida", Tahoma, Arial,"sans-serif"'>
                        <span class="span1" style="padding-top: 15px; width: 110px">Cuenta </span>@*@Html.DisplayFor(model => model.NumeroPedido, new { style = "height: 42px ; font-weight: bold; font-size: 34px; border: 0; padding: ; text-align: right; background: transparent; ", @class = "span4", @readonly = "readonly" })*@
                        @Html.TextBoxFor(model => model.Descripcion, new { style = "height: 50px ;  font-weight: 400; text-shadow: 0 1px 0  lightgray; font-size: 34px; border: 0; padding: 0 ; text-align: right; background: transparent;  font-family: 'Segoe UI Web Regular', 'Segoe UI', 'Lucida', Tahoma, Arial,'sans-serif';                    -webkit-box-shadow: none; -moz-box-shadow: none; box-shadow: none;                   ", @class = "span2", @readonly = "readonly" })
                    </div>
                    <script>
                        $(function () {

                            function resizeInput() {
                                // $(this).attr('size', $(this).val().length + 2);
                                $(this).css('width', $(this).val().length * 32);
                            }


                            $('#SubNumero').keyup(resizeInput).each(resizeInput);

                            $('#NumeroPedido').css('width', $('#NumeroPedido').val().length * 21);

                        })
                    </script>
                </div>



                <div class="row-fluid">

                    <div class="span8 lightblue">
                        @Html.LabelFor(model => model.Descripcion, "codigo")
                        @Html.TextBoxFor(model => model.Descripcion, new { @class = "span12" })
                        @Html.ValidationMessageFor(model => model.Descripcion)
                    </div>
                </div>

                <div class="row-fluid">

                    <div class="span8 lightblue">
                        @Html.LabelFor(model => model.Descripcion, "codigo secundario")
                        @Html.TextBoxFor(model => model.Descripcion, new { @class = "span12" })
                        @Html.ValidationMessageFor(model => model.Descripcion)
                    </div>
                </div>

                <div class="row-fluid">

                    <div class="span8 lightblue">
                        @Html.LabelFor(model => model.Descripcion, "Descripción")
                        @Html.TextBoxFor(model => model.Descripcion, new { @class = "span12" })
                        @Html.ValidationMessageFor(model => model.Descripcion)
                    </div>
                </div>
                <div class="row-fluid">

                    <div class="span8 lightblue">
                        @Html.LabelFor(model => model.Descripcion, "tipo de cuenta")
                        @Html.TextBoxFor(model => model.Descripcion, new { @class = "span12" })
                        @Html.ValidationMessageFor(model => model.Descripcion)
                    </div>
                </div>

                <div class="row-fluid">

                    <div class="span8 lightblue">
                        @Html.LabelFor(model => model.Descripcion, "agrupacion de cuenta")
                        @Html.TextBoxFor(model => model.Descripcion, new { @class = "span12" })
                        @Html.ValidationMessageFor(model => model.Descripcion)
                    </div>
                </div>

                <div class="row-fluid">

                    <div class="span8 lightblue">
                        @Html.LabelFor(model => model.Descripcion, "rubro contable")
                        @Html.TextBoxFor(model => model.Descripcion, new { @class = "span12" })
                        @Html.ValidationMessageFor(model => model.Descripcion)
                    </div>
                </div>


                <div class="row-fluid">

                    <div class="span8 lightblue">
                        @Html.LabelFor(model => model.Descripcion, "obra/centro de costo")
                        @Html.TextBoxFor(model => model.Descripcion, new { @class = "span12" })
                        @Html.ValidationMessageFor(model => model.Descripcion)
                    </div>
                </div>


                <div class="row-fluid">

                    <div class="span8 lightblue">
                        @Html.LabelFor(model => model.Descripcion, "grupo de gasto")
                        @Html.TextBoxFor(model => model.Descripcion, new { @class = "span12" })
                        @Html.ValidationMessageFor(model => model.Descripcion)
                    </div>
                </div>


                <div class="row-fluid">

                    <div class="span8 lightblue">
                        @Html.LabelFor(model => model.Descripcion, "rubro financiero")
                        @Html.TextBoxFor(model => model.Descripcion, new { @class = "span12" })
                        @Html.ValidationMessageFor(model => model.Descripcion)
                    </div>
                </div>




            </div>
            <div class="row-fluid navbar navbar-fixed-bottom" style="background: rgba(234, 234, 234, 0.78);
            border: 1px solid lightgray; height: 70px; padding-top: 15px;">
                <div class="span7 pull-right">
                    <input type="button" id="grabar2" value="Aceptar" class="btn  btn-large btn-primary" />
                    @if (Model.IdCuenta > 0)
                    { @Html.ActionLink("Eliminar", "DeleteConfirmed", new { id = Model.IdCuenta }, new { @class = "btn  btn-large  btn-default" }) }
                    @Html.ActionLink("Volver al listado", "Index", null, new { @class = "btn  btn-large  btn-link" })
                </div>
            </div>
        </form>
    </div>
    <!--/.fluid-container-->
    <script type="text/javascript">
        $(function () {


            //            $("body").on({
            //                ajaxStart: function () {
            //                    $(this).addClass("loading");
            //                },
            //                ajaxStop: function () {
            //                    $(this).removeClass("loading");
            //                }
            //            });


            var OrigenDescripcionDefault = 0; // ViewBag.OrigenDescripcionDefault




            // vuelvo a llenar el mySelect (se hace por primera vez en el Layout) porque no sé qué pasa que algo me lo vacía
            $.post(ROOT + 'Empleado/EmpleadosParaComboSectorCompras/',
            function (data) {
                var select = $('#mySelect').empty();
                for (var i = 0; i < data.length; i++) {
                    select.append('<option value="' + data[i].IdEmpleado + '">' + data[i].Nombre + '</option>');
                }
            }, "json");



            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: ROOT + 'Pedido/Autorizaciones/',
                data: { IdPedido: $("#IdPedido").val() },
                dataType: "Json",
                success: function (data) {
                    for (var i = 0; i < data.length; i++) {
                        var j = i + 1;
                        $("#chk" + j).attr('checked', true);
                        $("#chk" + j).attr('title', data[i].Nombre);
                    }


                }
            });
            Aprobado();

            function Aprobado() {
                if ($('#Aprobo').val() != "") {
                    //if ($('#FechaAprobacion').val() != null) {
                    $("#chk0").attr('checked', true);
                    var Aprobo = $("#Aprobo > option:selected").html();
                    $("#chk0").attr('title', Aprobo);
                }
                else {
                    $("#chk0").attr('checked', false);
                    $("#chk0").attr('title', "");
                }
            }
        })
    </script>
}