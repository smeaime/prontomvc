@model IEnumerable<ProntoMVC.Data.Models.Articulo>
@{
    ViewBag.Title = "Artículos";
}
@*<h2>Index</h2>*@ @* <div class="container-fluid">*@
<br />

<div style=" padding-left: 15px;  padding-right: 15px ;">
    <div>
        <div class="row-fluid">
            <div class="span12 lightblue">
                <button onclick="window.location.href='@Url.Action("Edit", new { id = -1 })'" class="btn btn-primary span2">
                    Nuevo articulo
                </button>
                <div class="span4">
                    @*<div class="input-append span4">
                            <input id="BuscadorListado" type="text" class="" placeholder="Filtrar" style="" />
                            @if (Roles.IsUserInRole(ViewBag.NombreUsuario, "SuperAdmin"))
                            {
                                <select id="campos " class="span4 append">
                                    <option>Número</option>
                                    <option>Fecha</option>
                                </select>
                                <button onclick=" jQuery('#Lista').searchGrid({}) " class="btn append ">
                                    ...
                                </button>

                            }
                        </div>*@
                </div>
                @if (Roles.IsUserInRole(ViewBag.NombreUsuario, "SuperAdmin") && false)
                {
                    <div class="span2">
                        <button onclick=" exportExcel($('#Lista')) " class="btn span12">
                            Excel
                        </button>
                    </div>
                    <a href="@Url.Content("~")Articulo/Articulos_DynamicGridData_GenerarExcel?sidx=Descripcion&sord=asc&page=1&rows=222&_search=false&filters=">Excel2</a>
                }
            </div>
        </div>
        <br />
        <div class="span1">
            <div>
                <input id="IdRubro" name="IdRubro" type="hidden" value=@Request.QueryString["IdRubro"]>
            </div>
        </div>
        <table id="Lista" class="scroll" cellpadding="0" cellspacing="0"></table>
        <div id="ListaPager" class="scroll" style="text-align: center;">
            @*<input type="button" class="btn btn-small" id="addData" value="Aplicar alicuota IVA" />
            <input type="button" class="btn btn-small" id="addData" value="Recalcular costo promedio ponderado" />
            <input type="button" class="btn btn-small" id="addData" value="Emision de etiquetas" />
            <input type="button" class="btn btn-small" id="addData" value="Emision de etiquetas (Zebra)" />*@
        </div>
        <div class="contextMenu" id="myMenu1" style="display:none">
            <ul style="width: 200px">
                <li id="AlicuotaIva">
                    <span style="font-size:11px; font-family:Verdana">Aplicar alicuota IVA</span>
                </li>
                <li id="RecalcularCostoPPP">
                    <span style="font-size:11px; font-family:Verdana">Recalcular costo promedio ponderado</span>
                </li>
            </ul>
        </div>

        <div id="form" title="Porcentaje iva" style="display:none">
            <form id="usuario">
                <fieldset>
                    <label for="nombre">% Iva</label>
                    <input type="text" id="PorcentajeIvaNuevo" autocomplete="off" class="validate" required>
                    <br>
                    <a href="#!" id="AceptarIva" class=" modal-action modal-close waves-effect waves-green btn-flat">Aceptar</a>
                    <a href="#!" id="CancelarIva" class=" modal-action modal-close waves-effect waves-green btn-flat">Cancelar</a>
                </fieldset>
            </form>
        </div>

    </div>
</div>
<script type="text/javascript">
    $(document).ajaxStop($.unblockUI);
    $().ready(function () {
        $('#BuscadorListado').focus();

        $("#Lista").jqGrid({
            url: ROOT + 'Articulo/Articulos_DynamicGridData', // '@Url.Action("ArticulosGridData", "Articulo")',
            datatype: 'json',
            mtype: 'POST',
            postData: {
                'IdRubro': function () { return $("#IdRubro").val(); },
                //'FechaFinal': function () { return $("#FechaFinal").val(); },
                //'IdObra': function () { return $("#IdObra").val(); }
            },
            //            cellEdit: true,
            //            cellurl: '@Url.Action("UpdateArticuloProperty")',
            colNames: ['', 'IdArticulo', 'Codigo', 'Nro. inventario', 'Descripcion', 'Rubro', 'Subrubro', '% IVA', 'Costo PPP', 'Costo PPP u$s', 'Costo Rep', 'Costo rep u$s', 'Stock minimo',
                       'Stock reposicion', 'Stock actual', 'En', 'Ubicacion', 'Marca', 'Modelo', 'Para mant.?', 'Cuenta para compra', 'Fecha alta', 'Usuario alta', 'Fecha ult. modif.'
            ],
            colModel: [
                        { name: 'Edit', index: 'Edit', width: 50, align: 'left', sortable: false, search: false },
                        //{ name: 'Delete', index: 'Delete', width: 1, align: 'left', sortable: false, search: false, hidden: true },
                        { name: 'IdArticulo', index: 'IdArticulo', width: 80, sortable: false, editable: false, search: false, hidden: true },
                        { name: 'Codigo', index: 'Codigo', width: 130, align: 'left', search: true, stype: 'text' },
                        { name: 'NumeroInventario', index: 'NumeroInventario', width: 130, align: 'left', search: true, stype: 'text' },
                        { name: 'Descripcion', index: 'Descripcion', width: 480, align: 'left', stype: 'text', editable: false, edittype: 'text', editoptions: { maxlength: 250 }, editrules: { required: true }, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Rubro', index: 'Rubro', width: 200, align: 'left', search: true, stype: 'text' },
                        { name: 'Subrubro', index: 'Subrubro', width: 150, align: 'left', search: true, stype: 'text' },
                        { name: 'AlicuotaIVA', index: 'AlicuotaIVA', width: 50, align: 'center', search: true, stype: 'text' },
                        { name: 'CostoPPP', index: 'CostoPPP', width: 80, align: 'right', search: true, stype: 'text' },
                        { name: 'CostoPPPDolar', index: 'CostoPPPDolar', width: 80, align: 'right', search: true, stype: 'text' },
                        { name: 'CostoReposicion', index: 'CostoReposicion', width: 80, align: 'right', search: true, stype: 'text' },
                        { name: 'CostoReposicionDolar', index: 'CostoReposicionDolar', width: 80, align: 'right', search: true, stype: 'text' },
                        { name: 'StockMinimo', index: 'StockMinimo', width: 80, align: 'right', search: true, stype: 'text' },
                        { name: 'StockReposicion', index: 'StockReposicion', width: 80, align: 'right', search: true, stype: 'text' },
                        { name: 'StockActual', index: 'StockActual', width: 80, align: 'right', search: true, stype: 'text' },
                        { name: 'Unidad', index: 'Unidad', width: 50, align: 'center', search: true, stype: 'text' },
                        { name: 'Ubicacion', index: 'Ubicacion', width: 200, align: 'left', search: true, stype: 'text' },
                        { name: 'Marca', index: 'Marca', width: 200, align: 'left', search: true, stype: 'text' },
                        { name: 'Modelo', index: 'Modelo', width: 200, align: 'left', search: true, stype: 'text' },
                        { name: 'ParaMantenimiento', index: 'ParaMantenimiento', width: 50, align: 'center', search: true, stype: 'text' },
                        { name: 'CuentaCompra', index: 'CuentaCompra', width: 200, align: 'left', search: true, stype: 'text' },
                        { name: 'FechaAlta', index: 'FechaAlta', width: 120, align: 'center', search: true, stype: 'text' },
                        { name: 'UsuarioAlta', index: 'UsuarioAlta', width: 200, align: 'left', search: true, stype: 'text' },
                        { name: 'FechaUltimaModificacion', index: 'FechaUltimaModificacion', width: 120, align: 'center', search: true, stype: 'text' }
            ],
            ondblClickRow: function (idrow) {
                window.location.href = ROOT + 'Articulo/Edit/' + idrow;
            },
            loadComplete: function () {
                $("tr.jqgrow", this).contextMenu('myMenu1', {
                    bindings: {
                        'AlicuotaIva': function (trigger) {
                            AlicuotaIva()
                            // trigger is the DOM element ("tr.jqgrow") which are triggered
                            //   grid.editGridRow(trigger.id, editSettings);
                        },
                        'RecalcularCostoPPP': function (trigger) {
                            $.blockUI({ message: "Un momento por favor...",
                                css: {
                                    border: 'none',
                                    padding: '15px',
                                    backgroundColor: '#000',
                                    '-webkit-border-radius': '10px',
                                    '-moz-border-radius': '10px',
                                    opacity: .5,
                                    color: '#fff'
                                }
                            });
                            RecalcularCostoPPP();
                            $('#Lista').trigger('reloadGrid');

                            //if ($('#del').hasClass('ui-state-disabled') === false) {
                                // disabled item can do be choosed
                                //      grid.delGridRow(trigger.id, delSettings);
                            //}
                        }
                    },
                    onContextMenu: function (event/*, menu*/) {
                        var rowId = $(event.target).closest("tr.jqgrow").attr("id");
                        //grid.setSelection(rowId);
                        // disable menu for rows with even rowids
                        //$('#del').attr("disabled", Number(rowId) % 2 === 0);
                        //if (Number(rowId) % 2 === 0) {
                        //    $('#del').attr("disabled", "disabled").addClass('ui-state-disabled');
                        //} else {
                        //    $('#del').removeAttr("disabled").removeClass('ui-state-disabled');
                        //}
                        return true;
                    },
                    //http://stackoverflow.com/questions/8451982/custom-values-to-context-menu-items-in-jqgrid
                    menuStyle: {
                        backgroundColor: '#fcfdfd',
                        border: '1px solid #a6c9e2',
                        maxWidth: '600px', // to be sure
                        width: '100%' // to have good width of the menu
                    },
                    itemHoverStyle: {
                        border: '1px solid #79b7e7',
                        color: '#1d5987',
                        backgroundColor: '#d0e5f5'
                    }
                });
            },
            pager: $('#ListaPager'),
            rowNum: 50,
            rowList: [10, 50, 1000],
            sortname: 'Descripcion', // 'FechaFactura,NumeroFactura',
            sortorder: "asc",
            viewrecords: true,
            emptyrecords: 'No hay registros para mostrar', 
            width: 'auto', 
            autowidth: true,
            shrinkToFit: false,
            height: $(window).height() - ALTOLISTADO, // '100%'
            altRows: false,
            footerrow: false, //true,
            userDataOnFooter: true,
            caption: '<b>ARTICULOS</b>',
            gridview: true,
            multiboxonly: true,
            multipleSearch: true,
            multiselect: true
        });
        jQuery("#Lista").jqGrid('bindKeys');
        jQuery("#Lista").jqGrid('navGrid', '#ListaPager',
         { csv: true, refresh: true, add: false, edit: false, del: false }, {}, {}, {},
         {
             //sopt: ["cn"]
             //sopt: ['eq', 'ne', 'lt', 'le', 'gt', 'ge', 'bw', 'bn', 'ew', 'en', 'cn', 'nc', 'nu', 'nn', 'in', 'ni'],
             width: 700, closeOnEscape: true, closeAfterSearch: true, multipleSearch: true, overlay: false
         }
        );
        jQuery("#Lista").filterToolbar({
            stringResult: true, searchOnEnter: true,
            defaultSearch: 'cn',
            enableClear: false
        }); // si queres sacar el enableClear, definilo en las searchoptions de la columna específica http://www.trirand.com/blog/?page_id=393/help/clearing-the-clear-icon-in-a-filtertoolbar/
        $("#BuscadorListado").keyup(function () {
            filtrar()
        });

        $("#BuscadorListado").change(function () {
            filtrar()
        });

        $("#BuscarProximoNoFiltra").change(function () {
            buscar()
        });

        function filtrar() {
            var grid = jQuery("#Lista");
            var postdata = grid.jqGrid('getGridParam', 'postData');
            jQuery.extend(postdata,
               {
                   filters: '',
                   searchField: 'Descripcion', // $("#CampoParaBuscar").val(), // 'Descripcion',   // Codigo
                   searchOper: 'contains',
                   searchString: $("#BuscadorListado").val()
               });
            grid.jqGrid('setGridParam', { search: true, postData: postdata });
            grid.trigger("reloadGrid", [{ page: 1 }]);


            // http: //stackoverflow.com/questions/8501679/jqgrid-auto-filter-highlighting-search-result
            //            $("'>tbody>tr.jqgrow>td  [id*='" + $("#BuscadorListado").val() + "']").show().effect('highlight');
            //
            //                $('>tbody>tr.jqgrow>td:nth-child(' + (iCol + 1) +
            //                        ')', this).highlight(rule.data);

        }

        function RefrescaAnchoGrillaDetalle() {
            // $("#Lista").setGridWidth($(window).width());
            // la zona de drop se te complica si estas arrastrando un renglon muy largo de una grilla ancha sobre una grilla angosta

            $("#Lista").setGridWidth($("#divGrilla").width());

            //        $("#ListaDrag").setGridWidth(jQuery("#ListaDrag").parent().width());
            //        $("#ListaDrag2").setGridWidth(jQuery("#ListaDrag").parent().width());
        }

        pageLayout.hide('east');
        pageLayout.hide('south');
    });

    function exportExcel($id) {
        var keys = [], ii = 0, rows = "";
        var ids = $id.getDataIDs();  // Get All IDs
        var row = $id.getRowData(ids[0]);     // Get First row to get the labels
        for (var k in row) {
            keys[ii++] = k;    // capture col names
            rows = rows + k + "\t";     // output each Column as tab delimited
        }
        rows = rows + "\n";   // Output header with end of line
        for (i = 0; i < ids.length; i++) {
            row = $id.getRowData(ids[i]); // get each row
            for (j = 0; j < keys.length; j++) rows = rows + row[keys[j]] + "\t"; // output each Row as tab delimited
            rows = rows + "\n";  // output each row with end of line
        }
        rows = rows + "\n";  // end of line at the end
        var form = "<form name='csvexportform' action='" + php_path + "csvexport.php' method='post'>";
        form = form + "<input type='hidden' name='csvBuffer' value='" + rows + "'>";
        form = form + "</form><script>document.csvexportform.submit();</sc" + "ript>";
        OpenWindow = window.open('', '');
        OpenWindow.document.write(form);
        OpenWindow.document.close();
    }

    function gridcsvexport(id) {
        $('#' + id).jqGrid('navButtonAdd', '#' + id + '_pager', {
            caption: '',
            title: 'export',
            buttonicon: 'ui-icon-newwin',
            position: 'last',
            onClickButton: function () {
                exportExcel($(this));
            }
        });
    }

    $( "#form" ).dialog({
        autoOpen: false,
        modal: true,
        resizable: false,
        show: {
            effect: "blind"
        },
        hide: {
            effect: "explode"
        }
    });

    $("#AceptarIva").click(function () {
        var PorcentajeIvaNuevo = $("#PorcentajeIvaNuevo").val(), IdArticulo = 0;

        if (PorcentajeIvaNuevo === "") {
            alert("Debe indicar el % de iva");
        } else {
            var $grid = $("#Lista"), selIds = $grid.jqGrid("getGridParam", "selarrrow"), i, n,
                cellValues = [];
            for (i = 0, n = selIds.length; i < n; i++) {
                //cellValues.push($grid.jqGrid("getCell", selIds[i], "IdArticulo"));
                IdArticulo = $grid.jqGrid("getCell", selIds[i], "IdArticulo");
                $.ajax({
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    url: ROOT + 'Articulo/ActualizarPorcentajeIva',
                    dataType: 'json',
                    data: JSON.stringify({ IdArticulo: IdArticulo, PorcentajeIvaNuevo: PorcentajeIvaNuevo }),
                    async: false,
                    success: function (result) {
                        if (result) {
                        } else {
                            alert('No se pudo actualizar.');
                        }
                    },
                });
            }
            //alert(cellValues.join(","));
            $("#form").dialog('close');
            $('#Lista').trigger('reloadGrid');
            alert('Proceso completado con exito.');
        }
    });
        
    $("#CancelarIva").click(function () {
            $("#form").dialog('close');
    });

    function AlicuotaIva(id) {
        $("#form").dialog("open");
    };

    function RecalcularCostoPPP() {
        var $grid = $("#Lista"), selIds = $grid.jqGrid("getGridParam", "selarrrow"), i, n,
            cellValues = [];
        for (i = 0, n = selIds.length; i < n; i++) {
            IdArticulo = $grid.jqGrid("getCell", selIds[i], "IdArticulo");
            $.ajax({
                type: 'POST',
                async: true,
                contentType: 'application/json; charset=utf-8',
                url: ROOT + 'Articulo/RecalcularCostoPPP',
                dataType: 'json',
                data: JSON.stringify({ IdArticulo: IdArticulo }),
                success: function (result) {
                    if (result) {
                    } else {
                        alert('No se pudo actualizar.');
                    }
                },
            });
        }
    };

</script>
