@model IEnumerable<ProntoMVC.Data.Models.Articulo>
@{
    ViewBag.Title = "Artículos";
}
@*<h2>Index</h2>*@ @* <div class="container-fluid">*@
<br />

<div style=" padding-left: 15px;  padding-right: 15px ;">
    <div>
        <div class="row-fluid">
            <div class="span12 lightblue">
                <button onclick="window.location.href='@Url.Action("Edit", new { id = -1 })'" class="btn btn-primary span2">
                    Nuevo
                </button>
                <div class="span4">
                    <div class="input-append span4">
                        <input id="BuscadorListado" type="text" class="" placeholder="Filtrar" style="" />
                        @if (Roles.IsUserInRole(ViewBag.NombreUsuario, "SuperAdmin"))
                        {
                            <select id="campos " class="span4 append">
                                <option>Número</option>
                                <option>Fecha</option>
                            </select>
                            <button onclick=" jQuery('#Lista').searchGrid({}) " class="btn append ">
                                ...
                            </button>

                        }
                    </div>
                </div>
                @if (Roles.IsUserInRole(ViewBag.NombreUsuario, "SuperAdmin"))
                {
                    <div class="span2">
                        <button onclick=" exportExcel($('#Lista')) " class="btn span12">
                            Excel
                        </button>
                    </div>
                }
            </div>
        </div>
        <div class="span1">
            <div>
                <input id="IdRubro" name="IdRubro" type="hidden" value=@Request.QueryString["IdRubro"]>
            </div>
        </div>
        <table id="Lista" class="scroll" cellpadding="0" cellspacing="0"></table>
        <div id="ListaPager" class="scroll" style="text-align: center;">
        </div>
    </div>
</div>
<script type="text/javascript">
    $().ready(function () {

        $('#BuscadorListado').focus();

        $("#Lista").jqGrid({
            url: ROOT + 'Articulo/ArticulosGridData', // '@Url.Action("ArticulosGridData", "Articulo")',
            datatype: 'json',
            mtype: 'POST',
            postData: {
                'IdRubro': function () { return $("#IdRubro").val(); },
                //'FechaFinal': function () { return $("#FechaFinal").val(); },
                //'IdObra': function () { return $("#IdObra").val(); }
            },
            //            cellEdit: true,
            //            cellurl: '@Url.Action("UpdateArticuloProperty")',
            colNames: ['', '', 'IdArticulo', 'Codigo', 'Nro. inventario', 'Descripcion', 'Rubro', 'Subrubro', '% IVA', 'Costo PPP', 'Costo PPP u$s', 'Costo Rep', 'Costo rep u$s', 'Stock minimo',
                       'Stock reposicion', 'Stock actual', 'En', 'Ubicacion', 'Marca', 'Modelo', 'Para mant.?', 'Cuenta para compra', 'Fecha alta', 'Usuario alta', 'Fecha ult. modif.'
            ],
            colModel: [
                        { name: 'Edit', index: 'Edit', width: 50, align: 'left', sortable: false, search: false },
                        { name: 'Delete', index: 'Delete', width: 1, align: 'left', sortable: false, search: false, hidden: true },
                        { name: 'IdArticulo', index: 'IdArticulo', width: 80, sortable: false, editable: false, search: false, hidden: true },
                        { name: 'Codigo', index: 'Codigo', width: 130, align: 'left', search: true, stype: 'text' },
                        { name: 'NumeroInventario', index: 'NumeroInventario', width: 130, align: 'left', search: true, stype: 'text' },
                        { name: 'Descripcion', index: 'Descripcion', width: 480, align: 'left', stype: 'text', editable: false, edittype: 'text', editoptions: { maxlength: 250 }, editrules: { required: true }, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Rubro', index: 'Rubro', width: 200, align: 'left', search: true, stype: 'text' },
                        { name: 'Subrubro', index: 'Subrubro', width: 150, align: 'left', search: true, stype: 'text' },
                        { name: 'AlicuotaIVA', index: 'AlicuotaIVA', width: 50, align: 'center', search: true, stype: 'text' },
                        { name: 'CostoPPP', index: 'CostoPPP', width: 80, align: 'right', search: true, stype: 'text' },
                        { name: 'CostoPPPDolar', index: 'CostoPPPDolar', width: 80, align: 'right', search: true, stype: 'text' },
                        { name: 'CostoReposicion', index: 'CostoReposicion', width: 80, align: 'right', search: true, stype: 'text' },
                        { name: 'CostoReposicionDolar', index: 'CostoReposicionDolar', width: 80, align: 'right', search: true, stype: 'text' },
                        { name: 'StockMinimo', index: 'StockMinimo', width: 80, align: 'right', search: true, stype: 'text' },
                        { name: 'StockReposicion', index: 'StockReposicion', width: 80, align: 'right', search: true, stype: 'text' },
                        { name: 'StockActual', index: 'StockActual', width: 80, align: 'right', search: true, stype: 'text' },
                        { name: 'Unidad', index: 'Unidad', width: 50, align: 'center', search: true, stype: 'text' },
                        { name: 'Ubicacion', index: 'Ubicacion', width: 200, align: 'left', search: true, stype: 'text' },
                        { name: 'Marca', index: 'Marca', width: 200, align: 'left', search: true, stype: 'text' },
                        { name: 'Modelo', index: 'Modelo', width: 200, align: 'left', search: true, stype: 'text' },
                        { name: 'ParaMantenimiento', index: 'ParaMantenimiento', width: 50, align: 'center', search: true, stype: 'text' },
                        { name: 'CuentaCompra', index: 'CuentaCompra', width: 200, align: 'left', search: true, stype: 'text' },
                        { name: 'FechaAlta', index: 'FechaAlta', width: 120, align: 'center', search: true, stype: 'text' },
                        { name: 'UsuarioAlta', index: 'UsuarioAlta', width: 200, align: 'left', search: true, stype: 'text' },
                        { name: 'FechaUltimaModificacion', index: 'FechaUltimaModificacion', width: 120, align: 'center', search: true, stype: 'text' }
            ],
            ondblClickRow: function (idrow) {
                window.location.href = ROOT + 'Articulo/Edit/' + idrow;
            },
            pager: $('#ListaPager'),
            rowNum: 20,
            rowList: [10, 20, 50, 100],
            sortname: 'Descripcion',
            sortorder: "asc",
            viewrecords: true,
            //toppager: true,
            emptyrecords: 'No hay registros para mostrar',
            width: 'auto', // 'auto',
            height: 'auto',
            autowidth: true,
            shrinkToFit: false,
            altRows: false,
            footerrow: false, //true,
            userDataOnFooter: true,
            caption: '<b>ARTICULOS</b>',
            multiboxonly: true
        })

        jQuery("#Lista").jqGrid('navGrid', '#ListaPager',
             { csv: true, refresh: true, add: false, edit: false, del: false }, {}, {}, {}, { sopt: ["cn"], width: 700, closeOnEscape: true, closeAfterSearch: true }
            );

        jQuery("#Lista").jqGrid('bindKeys');

        $("#BuscadorListado").keyup(function () {
            filtrar()
        });

        $("#BuscadorListado").change(function () {
            filtrar()
        });

        $("#BuscarProximoNoFiltra").change(function () {
            buscar()
        });

        function filtrar() {
            var grid = jQuery("#Lista");
            var postdata = grid.jqGrid('getGridParam', 'postData');
            jQuery.extend(postdata,
               {
                   filters: '',
                   searchField: 'Descripcion', // $("#CampoParaBuscar").val(), // 'Descripcion',   // Codigo
                   searchOper: 'contains',
                   searchString: $("#BuscadorListado").val()
               });
            grid.jqGrid('setGridParam', { search: true, postData: postdata });
            grid.trigger("reloadGrid", [{ page: 1 }]);


            // http: //stackoverflow.com/questions/8501679/jqgrid-auto-filter-highlighting-search-result
            //            $("'>tbody>tr.jqgrow>td  [id*='" + $("#BuscadorListado").val() + "']").show().effect('highlight');
            //
            //                $('>tbody>tr.jqgrow>td:nth-child(' + (iCol + 1) +
            //                        ')', this).highlight(rule.data);

        }

        function RefrescaAnchoGrillaDetalle() {
            // $("#Lista").setGridWidth($(window).width());
            // la zona de drop se te complica si estas arrastrando un renglon muy largo de una grilla ancha sobre una grilla angosta

            $("#Lista").setGridWidth($("#divGrilla").width());

            //        $("#ListaDrag").setGridWidth(jQuery("#ListaDrag").parent().width());
            //        $("#ListaDrag2").setGridWidth(jQuery("#ListaDrag").parent().width());
        }

        pageLayout.hide('east');
        pageLayout.hide('south');
    });

    function exportExcel($id) {
        var keys = [], ii = 0, rows = "";
        var ids = $id.getDataIDs();  // Get All IDs
        var row = $id.getRowData(ids[0]);     // Get First row to get the labels
        for (var k in row) {
            keys[ii++] = k;    // capture col names
            rows = rows + k + "\t";     // output each Column as tab delimited
        }
        rows = rows + "\n";   // Output header with end of line
        for (i = 0; i < ids.length; i++) {
            row = $id.getRowData(ids[i]); // get each row
            for (j = 0; j < keys.length; j++) rows = rows + row[keys[j]] + "\t"; // output each Row as tab delimited
            rows = rows + "\n";  // output each row with end of line
        }
        rows = rows + "\n";  // end of line at the end
        var form = "<form name='csvexportform' action='" + php_path + "csvexport.php' method='post'>";
        form = form + "<input type='hidden' name='csvBuffer' value='" + rows + "'>";
        form = form + "</form><script>document.csvexportform.submit();</sc" + "ript>";
        OpenWindow = window.open('', '');
        OpenWindow.document.write(form);
        OpenWindow.document.close();
    }

    function gridcsvexport(id) {
        $('#' + id).jqGrid('navButtonAdd', '#' + id + '_pager', {
            caption: '',
            title: 'export',
            buttonicon: 'ui-icon-newwin',
            position: 'last',
            onClickButton: function () {
                exportExcel($(this));
            }
        });
    }

</script>
