@model IEnumerable<ProntoMVC.Data.Models.Ganancia>

@{
    ViewBag.Title = "Ganancias";
}

<div><input id="FechaInicial" name="FechaInicial" type="hidden" value=@Request.QueryString["fechainicial"]></div>
<div><input id="FechaFinal" name="FechaFinal" type="hidden" value=@Request.QueryString["fechafinal"]></div>
<div><input id="IdObra" name="IdObra" type="hidden" value=@Request.QueryString["idobra"]></div>

<br />
<p>

@*@Html.ActionLink("Nueva item de ganancias", "Edit", new { id = -1 }, null)*@

  <button onclick="window.location.href='@Url.Action("Edit", new { id = -1 })'"  class="btn btn-primary"  >
                    Nuevo
                </button>
</p> 
<table id="Lista" class="scroll" cellpadding="0" cellspacing="0"></table>
<div id="ListaPager" class="scroll" style="text-align: center;"></div>


<script type="text/javascript">
    $(document).ready(function () {
        var lastSelectedId;
        var inEdit;
        grid = $("#Lista");

        //Para que haga wrap en las celdas
        $('.ui-jqgrid .ui-jqgrid-htable th div').css('white-space', 'normal');

        $('#Lista').jqGrid({
            url: '@Url.Action("Listado_jqGrid", "Ganancia")',
            postData: { 'FechaInicial': function () { return $("#FechaInicial").val(); }, 'FechaFinal': function () { return $("#FechaFinal").val(); }, 'IdObra': function () { return $("#IdObra").val(); } },
            datatype: 'json',
            mtype: 'POST',
            shrinkToFit: true,
            colNames: ['Acciones','Imprimir', 'IdGanancia', 'Tipo', 'Desde', 'Hasta',
                         'Suma Fija', 'Porcentaje Adicional', 'Minimo No Imponible', 'Minimo a retener'
                        ],




            colModel: [
                        { name: 'act', index: 'act', align: 'center' , sortable: false, editable: false, search: false }, //, formatter: 'showlink', formatoptions: { baseLinkUrl: '@Url.Action("Edit")'} },
                        {name: 'impr', index: 'act', align: 'center' , sortable: false, editable: false, hidden: true, search: false },
                        { name: 'IdGanancia', index: 'IdGanancia', align: 'left', editable: false, hidden: true },
                        { name: 'IdTipoRetencionGanancia', index: 'IdTipoRetencionGanancia', align: 'right' , editable: false, search: true, searchoptions: { sopt: ['eq']} },
                        { name: 'Desde', index: 'FechaRequerimiento' , align: 'center', sorttype: 'date', editable: false, formatoptions: { newformat: 'dd/mm/yy' }, datefmt: 'dd/mm/yy', search: false },
                        { name: 'Hasta', index: 'Cumplido', align: 'center' , editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'SumaFija', index: 'Recepcionado', align: 'center' , editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'PorcentajeAdicional', index: 'Entregado', align: 'center' , editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'MinimoNoImponible', index: 'Impresa', align: 'center' , editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'MinimoARetener', index: 'Detalle', align: 'left' , editable: false, search: true, searchoptions: { sopt: ['cn']} }
                    ],
            onSelectRow: function (id) {
                if (id && id !== lastSelectedId) {
                    if (typeof lastSelectedId !== "undefined") {
                        grid.jqGrid('restoreRow', lastSelectedId);
                    }
                    lastSelectedId = id;
                }
            },
            pager: $('#ListaPager'),
            rowNum: 15,
            rowList: [10, 20, 50, 100],
            sortname: 'IdGanancia',
            sortorder: 'asc',
            viewrecords: true,
            width: 'auto',
            height: '100%',
            altRows: false,
            footerrow: true,
            userDataOnFooter: true,
            //imgpath: '/content/cupertino/images',
            //loadonce: true,
            caption: '<b>Ganancias</b>'
        });
        //jQuery("#Lista").jqGrid('navGrid', '#ListaPager', { edit: false, add: false, del: false, refresh: true, search: true });
        jQuery("#Lista").jqGrid('navGrid', '#ListaPager', { refresh: true, add: false, edit: false, del: false }, {}, {}, {}, { sopt: ["cn"], width: 700, closeOnEscape: true, closeAfterSearch: true });
        jQuery("#Lista").jqGrid('gridResize', { minWidth: 350, maxWidth: 1500, minHeight: 80, maxHeight: 500 });

    });

</script>


@*
@{
    var grid = new WebGrid(source: Model,
        defaultSort: "NumeroRequerimiento",
        rowsPerPage: 10,
        canPage: true,
        canSort: true,
        fieldNamePrefix: "ItemRM_",
        selectionFieldName: "selectedRow");
}

<div id="grid">
    @grid.GetHtml(
        tableStyle: "webgrid",
        headerStyle: "webgrid-header",
        footerStyle: "webgrid-footer",
        alternatingRowStyle: "webgrid-alternating-row",
        selectedRowStyle: "webgrid-selected-row",
        rowStyle: "webgrid-row-style",
        mode: WebGridPagerModes.All,
        firstText: "<< Primera",
        previousText: "< Anterior",
        nextText: "Siguiente >",
        lastText: "Última >>",
                columns: new[] {
                                        grid.Column(columnName: "NumeroRequerimiento", header: "Nro.", style: "text-align-left"),
                                        grid.Column(columnName: "FechaRequerimiento", header: "Fecha", style: "text-align-left", format: p => p.FechaRequerimiento.ToShortDateString()),
                                        //grid.Column(columnName: "",  format: p=>p.Obra.NumeroObra, header: "Obra", style: "text-align-left"),
                                        //grid.Column(columnName: "Empleados.Nombre", header: "Solicito", style: "text-align-left"),
                                        //grid.Column(columnName: "Empleados1.Nombre", header: "Aprobo", style: "text-align-left"),
                                        //grid.Column(columnName: "Sectores.Descripcion", header: "Sector", style: "text-align-left"),
                                        grid.Column(columnName: "Detalle", header: "Detalle", style: "text-align-left"),
                                        grid.Column("", header: "Acciones", 
                                            format: @<text>@Html.ActionLink("Editar", "Edit", new { id = item.IdRequerimiento })|
                                                           @Html.ActionLink("Eliminar", "Delete", new { id = item.IdRequerimiento })</text>
                                        )
                                        }
                            )
</div>

<table>
    <tr>
        <th>IdRequerimiento</th>
        <th>Numero RM</th>
        <th>Fecha</th>
        <th>Obra</th>
        <th>Sector</th>
        <th></th>
    </tr>

@{int i = 1;}
@foreach (var item in Model)
{
    <tr class="@(i++ % 2 == 0 ? "highlighted" : "")" >
        <td>@Html.DisplayFor(modelItem => item.IdRequerimiento)</td>
        <td>@Html.DisplayFor(modelItem => item.NumeroRequerimiento)</td>
        <td>@Html.DisplayFor(modelItem => item.FechaRequerimiento)</td>
        <td>@Html.DisplayFor(modelItem => item.Obra.NumeroObra)</td>
        <td>@Html.DisplayFor(modelItem => item.Sectores.Descripcion)</td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.IdRequerimiento }) |
            @Html.ActionLink("Details", "Details", new { id = item.IdRequerimiento }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.IdRequerimiento })
        </td>
    </tr>
}
</table>
*@