@model ProntoMVC.Data.Models.ListasPrecio
@{
    ViewBag.Title = "Edit";
}
@*import Namespace="Trirand.Web.Mvc"
Import Namespace="JQGridMVCExamples.Models"*@
@using Trirand.Web.Mvc
@using (Html.BeginForm())
{

    @Html.ValidationSummary(true)
    <div class="container-fluid">
        <form class="form-horizontal">
        <legend>Lista de precios</legend>
        @Html.HiddenFor(model => model.IdListaPrecios)
        @* <div>@Html.Hidden("IdListaPrecios", Model.IdListaPrecios)</div>*@ @*<div>@Html.Hidden("Cumplido", Model.Cumplido)</div>
        <div>@Html.Hidden("FechaAnulacion", Model.FechaAnulacion)</div>
        <div>@Html.Hidden("UsuarioAnulacion", Model.UsuarioAnulacion)</div>
        <div>@Html.Hidden("MotivoAnulacion", Model.MotivoAnulacion)</div>
*@
        <div>
            <div class="row-fluid">
                <div class="span2 lightblue">
                    @Html.LabelFor(model => model.Descripcion, "Descripcion")
                    @Html.TextBoxFor(model => model.Descripcion, new { @class = "span12" })
                    @Html.ValidationMessageFor(model => model.Descripcion)
                </div>
            </div>
            <div class="row-fluid">
                <div class="span2 lightblue">
                    @Html.LabelFor(model => model.NumeroLista, "Numero lista de precio")
                    @Html.TextBoxFor(model => model.NumeroLista, new { @class = "span12" })
                    @Html.ValidationMessageFor(model => model.NumeroLista)
                </div>
            </div>
            <div class="row-fluid">
                <div class="span2 lightblue">
                    @Html.LabelFor(model => model.FechaVigencia, "Fecha de vigencia")
                    @Html.TextBoxFor(model => model.FechaVigencia, new Dictionary<string, object> { { "class", "span12" }, { "placeholder", "dd/mm/yyyy" } })
                    @Html.ValidationMessageFor(model => model.FechaVigencia)
                    <script type="text/jscript">
                        $("#FechaVigencia").datepicker({
                            changeMonth: true,
                            changeYear: true
                            //numberOfMonths: 2,
                        });
                    </script>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span2 lightblue">
                    @Html.LabelFor(model => model.IdMoneda, "Moneda")
                    @Html.DropDownList("IdMoneda", String.Empty)
                    @Html.ValidationMessageFor(model => model.IdMoneda)
                </div>
            </div>
            <div class="row-fluid">
                <div class="span2 lightblue">
                    Activo @*                 @Html.HiddenFor(model => model.Activa, "Activa")
                 @Html.CheckBox("templateId", (Model.Activa=="SI"), new { @class = "span2" })*@
                    @Html.RadioButtonFor(model => model.Activa, "SI") SI
                    @Html.RadioButtonFor(model => model.Activa, "NO") NO
                </div>
            </div>
            <div id="RManulada" class="row-fluid" style="display: none; font-weight: bold; background-color: red">
            </div>
            <br />
            @* //////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////
       *@
            @if (false)
            {    <table>
                <tr>
                    <th>
                        Articulo
                    </th>
                    <th>
                        Precio
                    </th>
                    <th>
                    </th>
                </tr>
                @{int i = 1;}
                @foreach (var item in Model.ListasPreciosDetalles)
                {
                    <tr class="@(i++ % 2 == 0 ? "highlighted" : "")" >
                        <td>
                            @Html.DisplayFor(modelItem => item.Articulo.Descripcion)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Precio)
                        </td>
                        <td>
                            @Html.ActionLink("Editar", "EditDetalle", "ListaPrecio", new { id = item.IdListaPreciosDetalle, idparent = Model.IdListaPrecios }, null)
                            |
                            @Html.ActionLink("Borrar", "DeleteDetalle", "ListaPrecio", new { id = item.IdListaPreciosDetalle })
                        </td>
                    </tr>
                }
            </table>
                <p>@Html.ActionLink("Agregar item", "EditDetalle", "ListaPrecio", new { id = -1, idparent = Model.IdListaPrecios }, null)</p>
            }
            <table id="Lista" class="scroll" cellpadding="0" cellspacing="0">
            </table>
            <div id="ListaPager" class="scroll">
            </div>
            <input type="button" id="addData"  class="btn btn-mini" value="Agregar item" />
            <input type="button" id="edtData"  class="btn btn-mini" value="Modificar item" />
            <input type="button" id="delData"  class="btn btn-mini" value="Borrar item" />
            @*//////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////*@
            @*@Html.Trirand().JQGrid(Model.OrdersGrid, "JQGrid1")*@ @*      //////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////*@
            <br />
            <br />
            <div class="row-fluid">
                <div class="span11 lightblue">
                    <input type="button" id="grabar" value="Aceptar" class="btn btn-primary" />
                    &nbsp;&nbsp; @*<input type="button" id="Guardar" value="Borrar" class="butCancela" />*@
                    @if (Model.IdListaPrecios > 0)
                    { @Html.ActionLink("Borrar", "DeleteConfirmedDirecto", new { id = Model.IdListaPrecios }) 
                    }
                    &nbsp; &nbsp;
                    @Html.ActionLink("Volver al listado", "Index")


                    @*<input type="file" id="file-id" name="file_name" onchange="theimage()"/>
            <input type="text" name="file_path" id="file-path"/>*@
                </div>
            </div>
        </div>
        @if (false)
        {
            @Html.EditorForModel()

        //http://stackoverflow.com/questions/5532568/master-detail-sample-code-for-mvc-3-razor-using-ajax-for-details
           
            foreach (var item in Model.ListasPreciosDetalles)
            {
                Html.RenderPartial("Details", item);
            }
            
            
            @*  @Html.EditorFor(Model.ListasPreciosDetalles)          *@   
            
            <div id="details">
            </div>

            <script type="text/javascript">
                $(function () {
                    $('.detailsLink').click(function () {
                        $('#details').load(this.href);
                        return false;
                    });
                });
            </script>
        }
        </form>
    </div>
}
<!--/.fluid-container-->
<script type="text/javascript">
//    function theimage(){
//     var filename = document.getElementById('file-id').value;
//     document.getElementById('file-path').value = filename;
//     var filename1 = $('#file-id').next().val();
//     alert(filename);
//    }

    $(document).ready(function () {
        var lastSelectedId;
        var inEdit
        var headerRow, rowHight, resizeSpanHeight;
        grid = $("#Lista")

        //Esto es para analizar los parametros de entrada via querystring
        var querystring = location.search.replace( '?', '' ).split( '&' );
        var queryObj = {};
        for ( var i=0; i<querystring.length; i++ ) {
              var name = querystring[i].split('=')[0];
              var value = querystring[i].split('=')[1];
              queryObj[name] = value;
        }
        if (queryObj[ "code" ] === "1") {
                $(":input").attr("disabled","disabled");
                $(".boton").hide();
        }

        initDateEdit = function (elem) {
            setTimeout(function () {
                $(elem).datepicker({
                    dateFormat: 'dd/mm/yy',
                    autoSize: true,
                    showOn: 'button', // it dosn't work in searching dialog
                    changeYear: true,
                    changeMonth: true,
                    showButtonPanel: true,
                    showWeek: true
                });
                $(elem).focus();
            }, 100);
        };

        $("#FechaListaPrecio").datepicker({
		    changeMonth: true,
		    changeYear: true
		    //numberOfMonths: 2,
	    });

        //Para que haga wrap en las celdas
        $('.ui-jqgrid .ui-jqgrid-htable th div').css('white-space', 'normal');
        //$.jgrid.formatter.integer.thousandsSeparator=',';

        $('#Lista').jqGrid({
            url: ROOT + 'ListaPrecio/DetListaPrecios/',
            postData: { 'IdListaPrecio': function () { return $("#IdListaPrecios").val(); } },
            editurl: ROOT + 'ListaPrecio/EditGridData/',
            datatype: 'json',
            mtype: 'POST',
            colNames: ['Acciones'
                          , 'IdListaPreciosDetalle'
                          , 'IdArticulo'
                          , 'Codigo'
                          , 'Descripcion'
                          , 'Precio'
                       ],
            colModel: [
                        { name: 'act', index: 'act', align: 'left', width: 60, hidden: true, sortable: false, editable: false },
                        { name: 'IdListaPreciosDetalle', label: 'TB', width: 40, align: 'left', hidden: true },
                        { name: 'IdArticulo', index: 'IdArticulo', label:'TB', align: 'left', width: 85, editable: true, hidden: true, editoptions: { disabled: 'disabled' }, editrules: { edithidden: true, required: true} },
                        { name: 'Codigo', index: 'Codigo', align: 'left', width: 85, editable: true, edittype: 'text',
                            editoptions: {
                                dataInit: function (elem) {
                                    $(elem).autocomplete({ source: '@Url.Action("GetCodigosArticulosAutocomplete2", "Articulo")', minLength : 3, 
                                        select: function (event, ui) {
                                            $("#IdArticulo").val(ui.item.id);
                                            $("#Descripcion").val(ui.item.title);
                                        }
                                    })
                                    .data("ui-autocomplete")._renderItem = function (ul, item) {
                                        return $("<li></li>")
                                            .data("ui-autocomplete-item", item)
                                            .append("<a><span style='display:inline-block;width:500px;font-size:12px'><b>" + item.value + " " +  item.title + "</b></span></a>")
                                            .appendTo(ul);
                                    };
                                }
                            },
                            editrules: { required: true }
                        },
                        { name: 'Descripcion', index: 'Descripcion', align: 'left', width: 400, editable: true, edittype: 'text',
                            editoptions: {
                                dataInit: function (elem) {
                                    $(elem).autocomplete({ source: '@Url.Action("GetArticulosAutocomplete2", "Articulo")', minLength : 0, 
                                        select: function (event, ui) {
                                            $("#IdArticulo").val(ui.item.id);
                                            $("#Codigo").val(ui.item.codigo);
                                        }
                                    })
                                    .data("ui-autocomplete")._renderItem = function (ul, item) {
                                        return $("<li></li>")
                                            .data("ui-autocomplete-item", item)
                                            .append("<a><span style='display:inline-block;width:500px;font-size:12px'><b>" + item.value + " [" + item.codigo + "]</b></span></a>")
                                            .appendTo(ul);
                                    };
                                }
                            },
                            editrules: { required: true }
                        },
                        { name: 'Precio', index: 'Precio', label:'TB', align: 'right', width: 0, editable: true, edittype: 'text', editoptions: { maxlength: 20 }, editrules: { required: true } }, //, unformat:numUnformat


                    ],
            onSelectRow: function (id) {
                if (id && id !== lastSelectedId) {
                    if (typeof lastSelectedId !== "undefined") {
                        grid.jqGrid('restoreRow', lastSelectedId);
                    }
                    lastSelectedId = id;
                    calculateTotal();
                }
            },
            gridComplete: function () {
                var ids = jQuery("#Lista").jqGrid('getDataIDs');
                for (var i = 0; i < ids.length; i++) {
                    var cl = ids[i];
                    be = "<input style='height:22px;width:20px;' type='button' value='E' onclick=\"jQuery('#Lista').editRow('" + cl + "',true,pickdates);\"  />";
                    se = "<input style='height:22px;width:20px;' type='button' value='S' onclick=\"jQuery('#Lista').saveRow('" + cl + "');\"  />";
                    ce = "<input style='height:22px;width:20px;' type='button' value='C' onclick=\"jQuery('#Lista').restoreRow('" + cl + "');\" />";
                    jQuery("#Lista").jqGrid('setRowData', ids[i], { act: be + se + ce });
//                    jQuery("#Lista").jqGrid('editRow', ids[i], false);
                    calculateTotal();
                }
            },
            afterSaveCell: function (rowid, name, val, iRow, iCol) {
                calculateTotal();
            },
            pager: $('#ListaPager'),
            rowNum: 15,
            sortname: 'NumeroItem',
            sortorder: 'asc',
            viewrecords: true,
            width: 'auto',
            height: 'auto',
            altRows: false,
            footerrow: true,
            userDataOnFooter: true,
            loadonce: true,
            caption: '<b>ITEMS DEL ListaPrecio</b>'
        });

        function numUnformat( cellvalue, options, rowObject ){
            return cellvalue.replace(",",".");
        }

        $("#addData").click(function () {
            jQuery("#Lista").jqGrid('editGridRow', "new", { addCaption: "Agregar item de ListaPrecio", bSubmit: "Aceptar", bCancel: "Cancelar", width: 800, reloadAfterSubmit: false, closeOnEscape: true, closeAfterAdd: true,
                recreateForm: true,
                beforeShowForm: function(form) {
                    var dlgDiv = $("#editmod" + grid[0].id);
                    dlgDiv[0].style.top = 0 //Math.round((parentHeight-dlgHeight)/2) + "px";
                    dlgDiv[0].style.left = 0 //Math.round((parentWidth-dlgWidth)/2) + "px";
                    $('#tr_IdListaPreciosDetalle', form).hide();
                    $('#tr_IdArticulo', form).hide();
                    $('#tr_IdUnidad', form).hide();
                },
                beforeInitData: function () {
                    inEdit = false;
                },
                onInitializeForm: function (form) {
                    $('#IdDetalleListaPrecio', form).val(0);
                    $('#NumeroItem', form).val(jQuery("#Lista").jqGrid('getGridParam', 'records')+1);
                },
            });
        });

        $("#edtData").click(function () {
            var gr = jQuery("#Lista").jqGrid('getGridParam', 'selrow');
            if (gr != null) jQuery("#Lista").jqGrid('editGridRow', gr, { editCaption: "Modificacion item de ListaPrecio", bSubmit: "Aceptar", bCancel: "Cancelar", width: 800, reloadAfterSubmit: false, closeOnEscape: true,
                closeAfterEdit: true, recreateForm: true, Top: 0, 
                beforeShowForm: function(form) {
                    var dlgDiv = $("#editmod" + grid[0].id);
                    var parentDiv = dlgDiv.parent(); // div#gbox_list
                    var dlgWidth = dlgDiv.width();
                    var parentWidth = parentDiv.width();
                    var dlgHeight = dlgDiv.height();
                    var parentHeight = parentDiv.height();
                    dlgDiv[0].style.top = 0 //Math.round((parentHeight-dlgHeight)/2) + "px";
                    dlgDiv[0].style.left = 0 //Math.round((parentWidth-dlgWidth)/2) + "px";
                    $('#tr_IdListaPreciosDetalle', form).hide();
                    $('#tr_IdArticulo', form).hide();
                    $('#tr_IdUnidad', form).hide();
                },
                beforeInitData: function () {
                    inEdit = true;
                }
            });
            else alert("Debe seleccionar un item!");
        });

        $("#delData").click(function () {
            var gr = jQuery("#Lista").jqGrid('getGridParam', 'selrow');
            if (gr != null) {
                    //jQuery("#Lista").jqGrid('setRowData',gr,{Eliminado:"true"});
                    //$("#"+gr).hide();  
                    jQuery("#Lista").jqGrid('delGridRow', gr, { caption: "Borrar", 
                    msg: "Elimina el registro seleccionado?", bSubmit: "Borrar", bCancel: "Cancelar", width: 300, closeOnEscape: true, reloadAfterSubmit: true });
                }
            else alert("Debe seleccionar un item!");
        });

        $('#grabar').click(function() {
            var colModel = jQuery("#Lista").jqGrid ('getGridParam', 'colModel');
            var cabecera = {
                            "IdListaPrecios":"", 
                            "Descripcion":"", 
                            "FechaVigencia":"", 
                            "IdMoneda":"", 
                            "NumeroLista":"", 
                            "Activa":"", 
                            "ListasPreciosDetalles":[] };

            var cm, data1, data2, valor;



            cabecera.IdListaPrecios = $("#IdListaPrecios").val();
             cabecera.Descripcion = $("#Descripcion").val();
            cabecera.FechaVigencia = $("#FechaVigencia").val();
            cabecera.IdMoneda = $("#IdMoneda").val();
            cabecera.NumeroLista = $("#NumeroLista").val();
            cabecera.Activa =  $('input[name=Activa]:checked').val(); 

            var dataIds = $('#Lista').jqGrid('getDataIDs');
            for (var i = 0; i < dataIds.length; i++) {
                try {
	                $('#Lista').jqGrid('saveRow', dataIds[i], false, 'clientArray');
                    var data = $('#Lista').jqGrid('getRowData', dataIds[i]);

                    data1 = '{"IdListaPrecios":"' + $("#IdListaPrecios").val() + '",'
                    for (var j = 0; j < colModel.length; j++) {
                        cm = colModel[j]
                        if (cm.label==='TB') {
                            valor=data[cm.name];
                            if (cm.name==='Cantidad') valor=valor.replace(".",",")
                            if (cm.name==='Cumplido' && cabecera.Cumplido==='AN') valor='AN'
                            data1 = data1 + '"' + cm.name + '":"' + valor + '",'; 
                        }
                    }
                    data1 = data1.substring(0, data1.length-1) + '}';
                    data1 = data1.replace(/(\r\n|\n|\r)/gm,"");
                    data2 = JSON.parse(data1);  
                    cabecera.ListasPreciosDetalles.push(data2);
                }
                catch (ex) {
                    $('#Lista').jqGrid('restoreRow', dataIds[i]);
                    alert("No se pudo grabar el comprobante. " + ex);
                    return;
                }
            }
            $.ajax({
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                url: '@Url.Action("BatchUpdate", "ListaPrecio")',
                dataType: 'json',
                data: $.toJSON(cabecera),
                success: function(result) {
                    if (result) {
                        $('#Lista').trigger('reloadGrid'); 
                        window.location.replace( ROOT + "ListaPrecio/index"); 
                    } else {
                        alert('No se pudo grabar el comprobante.');
                    }
                }
            });
        });

        jQuery("#Lista").jqGrid('gridResize', { minWidth: 350, maxWidth: 1500, minHeight: 80, maxHeight: 500 });

        // get the header row which contains
        headerRow = grid.closest("div.ui-jqgrid-view")
            .find("table.ui-jqgrid-htable>thead>tr.ui-jqgrid-labels");

        // increase the height of the resizing span
        resizeSpanHeight = 'height: ' + headerRow.height() + 'px !important; cursor: col-resize;';
        headerRow.find("span.ui-jqgrid-resize").each(function () {
            this.style.cssText = resizeSpanHeight;
        });

        // set position of the dive with the column header text to the middle
        rowHight = headerRow.height();
        headerRow.find("div.ui-jqgrid-sortable").each(function () {
            var ts = $(this);
            ts.css('top', (rowHight - ts.outerHeight()) / 2 + 'px');
        });

        $("#ListaDrag").jqGrid({
            url: '@Url.Action("ArticulosGridData2", "Articulo")',
            datatype: 'json',
            mtype: 'POST',
            cellEdit: true,
            colNames: ['IdArticulo', 'Codigo', 'Material', 'IdUnidad', 'Un.'],
            colModel: [
                        { name: 'IdArticulo', index: 'IdArticulo', align: 'left', width: 100, editable: false, hidden: true },
                        { name: 'Codigo', index: 'Codigo', width: 100, align: 'left', search: true, stype: 'text' },
                        { name: 'Descripcion', index: 'Descripcion', width: 400, align: 'left', search: true, stype: 'text', editable: true, edittype: 'text', editoptions: { maxlength: 250 }, editrules: { required: true} },
                        { name: 'IdUnidad', index: 'IdUnidad', align: 'left', width: 100, editable: false, hidden: true },
                        { name: 'Unidad', index: 'Unidad', width: 100, align: 'left', search: true, stype: 'text' },
            ],
            pager: $('#ListaDragPager'),
            rowNum: 15,
            rowList: [10, 20, 50],
            sortname: 'Descripcion',
            sortorder: "asc",
            viewrecords: true,
            width: 'auto',
            height: '100%',
            altRows: false,
            emptyrecords: 'No hay registros para mostrar',
            caption: '<b>MATERIALES</b>'
        })
        jQuery("#ListaDrag").jqGrid('navGrid', '#ListaDragPager', { refresh: true, add: false, edit: false, del: false }, {}, {}, {}, { sopt: ["cn"], width: 700, closeOnEscape: true, closeAfterSearch: true });
        jQuery("#ListaDrag").jqGrid('gridResize', { minWidth: 350, maxWidth: 1500, minHeight: 80, maxHeight: 500 });


        // make grid2 sortable
        $("#Lista").jqGrid('sortableRows', {
            update: function () {
                resetAltRows.call(this.parentNode);
            }
        });

        $("#Aprobo").change(function() {
            var IdAprobo = $("#Aprobo > option:selected").attr("value");
            var Aprobo = $("#Aprobo > option:selected").html();
            $("#Aux1").val(IdAprobo);
            $("#Aux2").val(Aprobo);
            $("#Aux3").val("");
            $("#Aux10").val("");
            $('#dialog-password').data('Combo', 'Aprobo');
            $('#dialog-password').dialog('open'); 
        });

        $("#anular").click(function () {
            $("#Aux1").val("");
            $("#Aux2").val("");
            $("#Aux3").val("");
            $("#Aux10").val("anularRM");
            $('#dialog-password').dialog('open'); 
        });

        //DEFINICION DE PANEL ESTE PARA LISTAS DRAG DROP
        $('a#a_panel_este_tab1').text('Lista de materiales');
        $('a#a_panel_este_tab2').text('Historico de ListaPrecios');



    });


    function pickdates(id) {
        jQuery("#" + id + "_sdate", "#Lista").datepicker({ dateFormat: "yy-mm-dd" });
    }
    
    function formEdit() {
        $('input[name=rdEditApproach]').attr('disabled', true);
        $('#Lista').navGrid(
                '#Lista',
        //enabling buttons
                {add: true, del: true, edit: true, search: false },
        //edit option
                {width: 'auto' },
        //add options
                {width: 'auto', url: '/Home/AddProduct/' },
        //delete options
                {url: '/Home/DeleteProduct/' });
    };

    calculateTotal = function () {
        var totalCantidad = grid.jqGrid('getCol', 'Cantidad', false, 'sum')
        grid.jqGrid('footerData', 'set', { NumeroItem: 'TOTAL', Cantidad: totalCantidad });
    };

    getColumnIndexByName = function (grid, columnName) {
        var cm = grid.jqGrid('getGridParam', 'colModel'), i, l = cm.length;
        for (i = 0; i < l; i++) {
            if (cm[i].name === columnName) {
                return i; // return the index
            }
        }
        return -1;
    },

    // Para usar en la edicion de una fila afterSubmit:processAddEdit,
    function processAddEdit(response, postdata) {
        var success = true;
        var message = ""
        var json = eval('(' + response.responseText + ')');
        if (json.errors) {
            success = false;
            for (i = 0; i < json.errors.length; i++) {
                message += json.errors[i] + '<br/>';
            }
        }
        var new_id = "1";
        return [success, message, new_id];
    }

    if ($("#IdListaPrecio").val()<=0) {
        $("#anular").attr('disabled', 'disabled'); 
    }
    else {
    }

    if ($("#Cumplido").val() == "AN") {
        $(":input").attr("disabled","disabled");
        $("#RManulada").html("RM ANULADA el " + $("#FechaAnulacion").val() + ", Motivo : " + $("#MotivoAnulacion").val()+ ", Usuario : " + $("#UsuarioAnulacion").val()); 
        $("#RManulada").show();
    }


</script>
