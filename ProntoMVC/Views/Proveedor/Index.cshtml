@model IEnumerable<ProntoMVC.Data.Models.Proveedor>
@{
    ViewBag.Title = "Proveedores";
}
@*<p>@Html.ActionLink("Nuevo Proveedor", "Edit", new { id = -1 }, null)</p>*@
<br />
<button onclick="window.location.href='@Url.Action("Edit", new { id = -1 })'"  class="btn btn-primary"  >
    Nuevo
</button>
<br /><br />
<div>
    <input id="FechaInicial" name="FechaInicial" type="hidden" value=@Request.QueryString["fechainicial"]></div>
<div>
    <input id="FechaFinal" name="FechaFinal" type="hidden" value=@Request.QueryString["fechafinal"]></div>
<div>
    <input id="IdObra" name="IdObra" type="hidden" value=@Request.QueryString["idobra"]></div>
<table id="Lista" class="scroll" cellpadding="0" cellspacing="0">
</table>
<div id="ListaPager" class="scroll" style="text-align: center;">
</div>
<script type="text/javascript">
    $(document).ready(function () {
        var lastSelectedId;
        var inEdit;
        grid = $("#Lista");

        //Para que haga wrap en las celdas
        $('.ui-jqgrid .ui-jqgrid-htable th div').css('white-space', 'normal');

        $('#Lista').jqGrid({
            url: '@Url.Action("Listado_jqGrid", "Proveedor")',
            postData: { 'FechaInicial': function () { return $("#FechaInicial").val(); }, 'FechaFinal': function () { return $("#FechaFinal").val(); }, 'IdObra': function () { return $("#IdObra").val(); } },
            datatype: 'json',
            mtype: 'POST',
            colNames: ['Acciones', 'IdProveedor'
                        , 'Razon social'
                        , 'Codigo',
                        'Direccion',
                        'Localidad',
                        'CodigoPostal',
                        'Provincia',
                        'Pais',
                        'Telefono'

                        , 'Fax',
                        'Email',
                        'Cuit',
                        'Condicion IVA',
                        'Fecha alta',
                        'Contacto',
                        'Direccion de entrega',
                        'Localidad (entrega)',
                        'Provincia (entrega)',
                        'Codigo PRESTO',

                        'Vendedor',
                        'Cobrador',
                        'Estado',
                        'Nombre comercial',
                        'Observaciones',
                        'Ingreso',
                        'Fecha ing.',
                        'Modifico',
                        'Fecha modif.',
                        'Cond.IIBB',

                        'Cat.IIBB',
                        'Nro.Inscr.IIBB',
                        'Cuenta contable',
                        'Cuenta contable (ext.)'

                       ],
            colModel: [
                        { name: 'act', index: 'act', align: 'center', width: 80, sortable: false, editable: false, search: false }, //, formatter: 'showlink', formatoptions: { baseLinkUrl: '@Url.Action("Edit")'} },
                        {name: 'IdProveedor', index: 'IdProveedor', align: 'left', width: 100, editable: false, hidden: true },
                        { name: 'Razonsocial', index: 'CondicionCompra', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Codigo', index: 'CondicionCompra', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Direccion', index: 'CondicionCompra', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Localidad', index: 'CondicionCompra', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'CodigoPostal', index: 'CondicionCompra', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Provincia', index: 'CondicionCompra', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Pais', index: 'CondicionCompra', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Telefono', index: 'CondicionCompra', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },


                        { name: 'Fax', index: 'CondicionCompra', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Email', index: 'CondicionCompra', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Cuit', index: 'CondicionCompra', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Condicion IVA', index: 'CondicionCompra', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: '', index: '', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: '', index: '', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: '', index: '', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: '', index: '', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: '', index: '', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: '', index: '', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },

                        { name: '', index: '', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: '', index: '', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: '', index: '', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: '', index: '', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: '', index: '', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: '', index: '', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: '', index: '', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: '', index: '', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: '', index: '', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: '', index: '', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },

                        { name: '', index: '', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: '', index: '', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: '', index: '', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: '', index: '', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} }


                    ],
            onSelectRow: function (id) {
                if (id && id !== lastSelectedId) {
                    if (typeof lastSelectedId !== "undefined") {
                        grid.jqGrid('restoreRow', lastSelectedId);
                    }
                    lastSelectedId = id;
                }
            },




            pager: $('#ListaPager'),
            rowNum: 15,
            rowList: [10, 20, 50, 100],
            sortname: 'RazonSocial',
            sortorder: 'asc',

            viewrecords: true,
            //toppager: true,

            emptyrecords: 'No hay registros para mostrar',

            ///////////////////////////////
            width: 'auto', // 'auto',
            autowidth: true,
            shrinkToFit: false,
            //////////////////////////////

            height: $(window).height() - ALTOLISTADO, // '100%'
            altRows: false,
            footerrow: false, //true,
            userDataOnFooter: true

              , multiboxonly: true
        });
        //jQuery("#Lista").jqGrid('navGrid', '#ListaPager', { edit: false, add: false, del: false, refresh: true, search: true });
        jQuery("#Lista").jqGrid('navGrid', '#ListaPager', { refresh: true, add: false, edit: false, del: false }, {}, {}, {}, { sopt: ["cn"], width: 700, closeOnEscape: true, closeAfterSearch: true });
        jQuery("#Lista").jqGrid('gridResize', { minWidth: 350, maxWidth: 1500, minHeight: 80, maxHeight: 500 });

    });
    

</script>
@*
@{
    var grid = new WebGrid(source: Model,
        defaultSort: "RazonSocial",
        rowsPerPage: 10,
        canPage: true,
        canSort: true,
        fieldNamePrefix: "ItemRM_",
        selectionFieldName: "selectedRow");
}

<div id="grid">
    @grid.GetHtml(
        tableStyle: "webgrid",
        headerStyle: "webgrid-header",
        footerStyle: "webgrid-footer",
        alternatingRowStyle: "webgrid-alternating-row",
        selectedRowStyle: "webgrid-selected-row",
        rowStyle: "webgrid-row-style",
        mode: WebGridPagerModes.All,
        firstText: "<< Primera",
        previousText: "< Anterior",
        nextText: "Siguiente >",
        lastText: "Última >>",
                columns: new[] {
                                        grid.Column(columnName: "RazonSocial", header: "Nro.", style: "text-align-left"),
                                        grid.Column(columnName: "FechaProveedor", header: "Fecha", style: "text-align-left", format: p => p.FechaProveedor.ToShortDateString()),
                                        //grid.Column(columnName: "",  format: p=>p.Obra.NumeroObra, header: "Obra", style: "text-align-left"),
                                        //grid.Column(columnName: "Empleados.Nombre", header: "Solicito", style: "text-align-left"),
                                        //grid.Column(columnName: "Empleados1.Nombre", header: "Aprobo", style: "text-align-left"),
                                        //grid.Column(columnName: "Sectores.Descripcion", header: "Sector", style: "text-align-left"),
                                        grid.Column(columnName: "Detalle", header: "Detalle", style: "text-align-left"),
                                        grid.Column("", header: "Acciones", 
                                            format: @<text>@Html.ActionLink("Editar", "Edit", new { id = item.IdProveedor })|
                                                           @Html.ActionLink("Eliminar", "Delete", new { id = item.IdProveedor })</text>
                                        )
                                        }
                            )
</div>

<table>
    <tr>
        <th>IdProveedor</th>
        <th>Numero RM</th>
        <th>Fecha</th>
        <th>Obra</th>
        <th>Sector</th>
        <th></th>
    </tr>

@{int i = 1;}
@foreach (var item in Model)
{
    <tr class="@(i++ % 2 == 0 ? "highlighted" : "")" >
        <td>@Html.DisplayFor(modelItem => item.IdProveedor)</td>
        <td>@Html.DisplayFor(modelItem => item.RazonSocial)</td>
        <td>@Html.DisplayFor(modelItem => item.FechaProveedor)</td>
        <td>@Html.DisplayFor(modelItem => item.Obra.NumeroObra)</td>
        <td>@Html.DisplayFor(modelItem => item.Sectores.Descripcion)</td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.IdProveedor }) |
            @Html.ActionLink("Details", "Details", new { id = item.IdProveedor }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.IdProveedor })
        </td>
    </tr>
}
</table>
*@