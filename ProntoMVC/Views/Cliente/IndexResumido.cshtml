@model IEnumerable<ProntoMVC.Data.Models.Cliente>

@{
    ViewBag.Title = "Index";
}

<p>@Html.ActionLink("Nuevo Cliente", "Edit", new { id = -1 }, null)</p> 

<div><input id="FechaInicial" name="FechaInicial" type="hidden" value=@Request.QueryString["fechainicial"]></div>
<div><input id="FechaFinal" name="FechaFinal" type="hidden" value=@Request.QueryString["fechafinal"]></div>
<div><input id="IdObra" name="IdObra" type="hidden" value=@Request.QueryString["idobra"]></div>

<table id="Lista" class="scroll" cellpadding="0" cellspacing="0"></table>
<div id="ListaPager" class="scroll" style="text-align: center;"></div>

<script type="text/javascript">
    $(document).ready(function () {
        var lastSelectedId;
        var inEdit;
        grid = $("#Lista");

        //Para que haga wrap en las celdas
        $('.ui-jqgrid .ui-jqgrid-htable th div').css('white-space', 'normal');

        $('#Lista').jqGrid({
            url: '@Url.Action("Listado_jqGrid_Resumido", "Cliente")',
            postData: { 'FechaInicial': function () { return $("#FechaInicial").val(); }, 'FechaFinal': function () { return $("#FechaFinal").val(); }, 'IdObra': function () { return $("#IdObra").val(); } },
            datatype: 'json',
            mtype: 'POST',
            colNames: ['Acciones', 'IdCliente', 
                        'Razon Social', 
                        'Codigo', 
                        'Direccion', 
                        'CodigoPostal', 
                        'Telefono', 
                        'Email', 
                        'Cuit',
                        'Codigo PRESTO'
                        ],
            colModel: [
                        { name: 'act', index: 'act', align: 'center', width: 80, sortable: false, editable: false, search: false }, //, formatter: 'showlink', formatoptions: { baseLinkUrl: '@Url.Action("Edit")'} },
                        { name: 'IdCliente', index: 'IdCliente', align: 'left', width: 100, editable: false, hidden: true },
                        { name: 'RazonSocial', index: 'RazonSocial', align: 'right', width: 50, editable: false, search: true, searchoptions: { sopt: ['eq']} },
                        { name: 'FechaCliente', index: 'FechaCliente', width: 75, align: 'center', sorttype: 'date', editable: false, formatoptions: { newformat: 'dd/mm/yy' }, datefmt: 'dd/mm/yy', search: false },
                        { name: 'Cumplido', index: 'Cumplido', align: 'center', width: 50, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Recepcionado', index: 'Recepcionado', align: 'center', width: 50, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Entregado', index: 'Entregado', align: 'center', width: 50, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Impresa', index: 'Impresa', align: 'center', width: 50, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Detalle', index: 'Detalle', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'NumeroObra', index: 'NumeroObra', align: 'left', width: 85, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Presupuestos', index: 'Presupuestos', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Comparativas', index: 'Comparativas', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Pedidos', index: 'Pedidos', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Recepciones', index: 'Recepciones', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Salidas', index: 'Salidas', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Libero', index: 'Libero', align: 'left', width: 150, editable: false, search: true, searchoptions: { sopt: ['']} },
                        { name: 'Solicito', index: 'Solicito', align: 'left', width: 150, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Sector', index: 'Sector', align: 'left', width: 150, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Usuario_anulo', index: 'Usuario_anulo', align: 'left', width: 50, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Fecha_anulacion', index: 'Fecha_anulacion', align: 'center', width: 75, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Motivo_anulacion', index: 'Motivo_anulacion', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Fechas_liberacion', index: 'Fechas_liberacion', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'Observaciones', index: 'Observaciones', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                        { name: 'LugarEntrega', index: 'LugarEntrega', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn']} },
                    ],
            onSelectRow: function (id) {
                if (id && id !== lastSelectedId) {
                    if (typeof lastSelectedId !== "undefined") {
                        grid.jqGrid('restoreRow', lastSelectedId);
                    }
                    lastSelectedId = id;
                }
            },
            pager: $('#ListaPager'),
            rowNum: 15,
            rowList: [10, 20, 50, 100],
            sortname: 'RazonSocial',
            sortorder: 'asc',
            viewrecords: true,
            width: 'auto',
            height: '100%',
            altRows: false,
            footerrow: true,
            userDataOnFooter: true,
            //imgpath: '/content/cupertino/images',
            //loadonce: true,
            caption: '<b>Clientes</b>'
        });
        //jQuery("#Lista").jqGrid('navGrid', '#ListaPager', { edit: false, add: false, del: false, refresh: true, search: true });
        jQuery("#Lista").jqGrid('navGrid', '#ListaPager', { refresh: true, add: false, edit: false, del: false }, {}, {}, {}, { sopt: ["cn"], width: 700, closeOnEscape: true, closeAfterSearch: true });
        jQuery("#Lista").jqGrid('gridResize', { minWidth: 350, maxWidth: 1500, minHeight: 80, maxHeight: 500 });

    });

</script>


@*
@{
    var grid = new WebGrid(source: Model,
        defaultSort: "RazonSocial",
        rowsPerPage: 10,
        canPage: true,
        canSort: true,
        fieldNamePrefix: "ItemRM_",
        selectionFieldName: "selectedRow");
}

<div id="grid">
    @grid.GetHtml(
        tableStyle: "webgrid",
        headerStyle: "webgrid-header",
        footerStyle: "webgrid-footer",
        alternatingRowStyle: "webgrid-alternating-row",
        selectedRowStyle: "webgrid-selected-row",
        rowStyle: "webgrid-row-style",
        mode: WebGridPagerModes.All,
        firstText: "<< Primera",
        previousText: "< Anterior",
        nextText: "Siguiente >",
        lastText: "Última >>",
                columns: new[] {
                                        grid.Column(columnName: "RazonSocial", header: "Nro.", style: "text-align-left"),
                                        grid.Column(columnName: "FechaCliente", header: "Fecha", style: "text-align-left", format: p => p.FechaCliente.ToShortDateString()),
                                        //grid.Column(columnName: "",  format: p=>p.Obra.NumeroObra, header: "Obra", style: "text-align-left"),
                                        //grid.Column(columnName: "Empleados.Nombre", header: "Solicito", style: "text-align-left"),
                                        //grid.Column(columnName: "Empleados1.Nombre", header: "Aprobo", style: "text-align-left"),
                                        //grid.Column(columnName: "Sectores.Descripcion", header: "Sector", style: "text-align-left"),
                                        grid.Column(columnName: "Detalle", header: "Detalle", style: "text-align-left"),
                                        grid.Column("", header: "Acciones", 
                                            format: @<text>@Html.ActionLink("Editar", "Edit", new { id = item.IdCliente })|
                                                           @Html.ActionLink("Eliminar", "Delete", new { id = item.IdCliente })</text>
                                        )
                                        }
                            )
</div>

<table>
    <tr>
        <th>IdCliente</th>
        <th>Numero RM</th>
        <th>Fecha</th>
        <th>Obra</th>
        <th>Sector</th>
        <th></th>
    </tr>

@{int i = 1;}
@foreach (var item in Model)
{
    <tr class="@(i++ % 2 == 0 ? "highlighted" : "")" >
        <td>@Html.DisplayFor(modelItem => item.IdCliente)</td>
        <td>@Html.DisplayFor(modelItem => item.RazonSocial)</td>
        <td>@Html.DisplayFor(modelItem => item.FechaCliente)</td>
        <td>@Html.DisplayFor(modelItem => item.Obra.NumeroObra)</td>
        <td>@Html.DisplayFor(modelItem => item.Sectores.Descripcion)</td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.IdCliente }) |
            @Html.ActionLink("Details", "Details", new { id = item.IdCliente }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.IdCliente })
        </td>
    </tr>
}
</table>
*@