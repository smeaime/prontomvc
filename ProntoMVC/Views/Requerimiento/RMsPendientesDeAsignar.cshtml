@model IEnumerable<ProntoMVC.Data.Models.Requerimiento>
    @{
        ViewBag.Title = "Requerimientos (pendientes)";
    }


    @*<div class="container-fluid">*@
    @if (false)
    {
        <style>
                /* jqGrid builds some additional divs over the main grid table. The outer div has the class ui-jqgrid. So if you need to remove right and left border existing over the whole grid you can use the following CSS: */



                .ui-widget-content {
                    border: 0px solid #aaaaaa;
                }

                .ui-jqgrid {
                    border-right-width: 0px;
                    border-left-width: 0px;
                }
                    /* If you need to remove all grid's borders you can use

            .ui-jqgrid { border-width: 0px; }
            If you want additionally remove vertical border between the cells in the grid you can use */

                    .ui-jqgrid tr.ui-row-ltr td {
                        border-right-color: #E4E4E4;
                    }


                    .ui-jqgrid tr.footrow-ltr td {
                        border-right-color: #E4E4E4 !important;
                    }

                    /*To remove horizontal border between the rows you can use */

                    .ui-jqgrid tr.ui-row-ltr td {
                        border-bottom-color: #E4E4E4;
                    }
                /*To remove vertical borders between the column headers you can use */

                th.ui-th-column {
                    border-right-color: #E4E4E4 !important;
                }
                /* or alternatively (without the usage of !important) */

                .ui-jqgrid-labels .ui-th-column {
                    border-right-color: #E4E4E4;
                }
        </style>
    }


    <div style=" padding-left: 15px;  padding-right: 15px ;">
        <div>
            <div class="row-fluid">
                <div class="span12 lightblue">

                    @if (false)
                    {
                        <div class="btn-group span2">
                            <a class="btn  " style="color: Black" href="#"><i class="icon-print"></i>&nbsp;más</a>
                            <button class="btn dropdown-toggle " data-toggle="dropdown">
                                <span class="caret "></span>
                            </button>
                            <ul class="dropdown-menu ">
                                <li><a class="" href="#"><i class="icon-print"></i>&nbsp;Excel</a></li>
                            </ul>
                        </div>
                    }
                    <div class="span1">
                        <div>
                            <input id="FechaInicial" name="FechaInicial" type="hidden" value=@Request.QueryString["fechainicial"]>
                        </div>
                        <div>
                            <input id="FechaFinal" name="FechaFinal" type="hidden" value=@Request.QueryString["fechafinal"]>
                        </div>
                        <div>
                            <input id="IdObra" name="IdObra" type="hidden" value=@Request.QueryString["idobra"]>
                        </div>
                    </div>
                </div>
                <br />
                <br />
            </div>
            <table id="Lista" class="scroll" cellpadding="0" cellspacing="0" style="font-size: 16px;
        "></table>
            <div id="ListaPager" class="scroll" style="text-align: center;">
            </div>

            @*<div style="margin-top: 4px">
                    <input type="button" class="btn btn-small" id="addData" value="Vale salida (stock)" />
                    <input type="button" class="btn btn-small" id="edtData" value="Para compras" />
                    <input type="button" class="btn btn-small" id="delData" value="dar por cumplido" />
                </div>*@
        </div>
    </div>



    <div class="contextMenu" id="myMenu1" style="display:none">
        <ul style="width: 400px">
            <li id="add">
                @*<span class="ui-icon ui-icon-plus" style="float:left"></span>*@
                <span id="Vale" style="font-size:11px; font-family:Verdana">Generar Vale salida (stock)</span>
            </li>
            <li id="edit">
                @*<span class="ui-icon ui-icon-pencil" style="float:left"></span>*@
                <span id="ParaCompras" style="font-size:11px; font-family:Verdana">Liberar para Compras</span>
            </li>
            <li id="del">
                @*<span class="ui-icon ui-icon-trash" style="float:left"></span>*@
                <span id="DarPorCumplido" style="font-size:11px; font-family:Verdana">Dar por cumplido</span>
            </li>
        </ul>
    </div>



    <script type="text/javascript">




    var rowIdContextMenu;


    $(document).ready(function () {

        $("#Vale").click(function () {

            var $grid = $("#Lista");
            var lista = $grid.jqGrid("getGridParam", "selarrrow");
            if ((lista == null) || (lista.length == 0)) {
                // http://stackoverflow.com/questions/11762757/how-to-retrieve-the-cell-information-for-mouseover-event-in-jqgrid

                //como no hay renglones tildados, tomo el renglon sobre el que está el cursor
                lista = [ rowIdContextMenu ] ;
                // lista = $grid.jqGrid('getGridParam', 'selrow')

                if ((lista == null) || (lista.length == 0)) {
                    alert("No hay rms elegidas " + rowIdContextMenu);
                    return;
                }

            }


            // http://stackoverflow.com/questions/4234619/how-to-avoid-long-nesting-of-asynchronous-functions-in-node-js

            $("#dialog-password").dialog({
                buttons: {
                    'Aceptar': function () {
                        //alert('hola');
                        // $(this).dialog('close');
                        // http://stackoverflow.com/questions/1031674/how-do-i-write-a-jquery-function-that-accepts-a-callback-as-a-parameter



                        $("#loading").show();




                        validatePwd2(
                            function () {
                                generarvale(lista, "administrador", "",
                                    function () {
                                        $("#loading").hide();
                                        $('#Lista').trigger('reloadGrid');
                                    }
                                )
                            }
                            , function () { $("#loading").hide(); }
                         );

                        $(this).dialog('close');

                    },
                    'Cancelar': function () {
                        $(this).dialog('close');
                    }
                },
                open: function () {

                }
            });

            $('#dialog-password').data('Combo', 'Aprobo');
            $('#dialog-password').dialog('open');


        })


        function generarvale(ids, user, pass, callback) {
            //juntar los ids y mandarlos?


            $("#loading").show();


            $.ajax({
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                url: '@Url.Action("GenerarValesAlmacen", "Requerimiento")',
                data: JSON.stringify({
                    idDetalleRequerimientos: ids,
                    user: user,
                    pass: pass
                })
            }).done(function () {
                //if (typeof callback == "function") callback();
                $("#loading").hide();
                alert("Vale creado")
                $('#Lista').trigger('reloadGrid');
            }).fail(function () {
                $("#loading").hide();
                alert("No se pudo crear el vale")
            });
        }







        $("#DarPorCumplido").click(function () {
            //juntar los ids y mandarlos?

            var $grid = $("#Lista");
            var lista = $grid.jqGrid("getGridParam", "selarrrow");
            if ((lista == null) || (lista.length == 0)) {
                 //como no hay renglones tildados, tomo el renglon sobre el que está el cursor
                lista = [ rowIdContextMenu ] ;
                // lista = $grid.jqGrid('getGridParam', 'selrow')

                if ((lista == null) || (lista.length == 0)) {
                    alert("No hay rms elegidas " + rowIdContextMenu);
                    return;
                }
            }


            $.ajax({
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                url: '@Url.Action("DarPorCumplido", "Requerimiento")',
                data: JSON.stringify({
                    idDetalleRequerimientos: lista,
                    userAutorizador: "administrador",
                    passAutorizador: "",
                    userCumplidor: "administrador",
                    sObsCumplido: "asdasd asd asd asd asd asdasdasd asd asdasd asd "
                })
            }).done(function () {
                $('#Lista').trigger('reloadGrid');
            });
        })




        $("#ParaCompras").click(function () {
            //juntar los ids y mandarlos?

            var $grid = $("#Lista");
            var lista = $grid.jqGrid("getGridParam", "selarrrow");
            if ((lista == null) || (lista.length == 0)) {
                //como no hay renglones tildados, tomo el renglon sobre el que está el cursor
                lista = [ rowIdContextMenu ] ;
                // lista = $grid.jqGrid('getGridParam', 'selrow')

                if ((lista == null) || (lista.length == 0)) {
                    alert("No hay rms elegidas " + rowIdContextMenu);
                    return;
                }
            }


            $.ajax({
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                url: '@Url.Action("AsignaComprador", "Requerimiento")',
                data: JSON.stringify({
                    idDetalleRequerimientos: lista,
                    userComprador: "administrador",
                    passComprador: ""

                })
            }).done(function () {
                $('#Lista').trigger('reloadGrid');
            });
        })






        function PisarFechaEntrega(nombre) {

            var f = $("#InputFechaEntrega").val();

            var $grid = $("#Lista");
            var righe = $grid.jqGrid("getGridParam", "selarrrow");
            if ((righe == null) || (righe.length == 0)) {
                righe = $grid.jqGrid('getDataIDs');
                // return false;
            }


            for (var i = 0; i < righe.length; i++) {
                var Id = righe[i];

                var rowData = $grid.jqGrid('getRowData', Id);
                rowData[nombre] = f;
                $grid.jqGrid('setRowData', Id, rowData);

            }
        }




        $("#asignarPrecio").click(function () {
            $("#InputFechaEntrega").val('');
            $('[id$=labeldialog]').text("Ingrese el Precio");
            $("#dialog").dialog({
                buttons: {
                    "Aceptar": function () {
                        PisarFechaEntrega("Precio");
                        $(this).dialog("close");
                    },
                    "Cerrar": function () {
                        $(this).dialog("close");
                    }
                }
            });
            $("#dialog").dialog("open");
        });








        $("#BuscadorListado").keyup(function () {


            filtrar()

        });


        $("#BuscadorListado").change(function () {

            filtrar()


        });

        function filtrar() {



            var grid = jQuery("#Lista");
            var postdata = grid.jqGrid('getGridParam', 'postData');
            jQuery.extend(postdata,
               {
                   filters: '',
                   searchField: 'NumeroRequerimiento',
                   searchOper: 'eq',
                   searchString: $("#BuscadorListado").val()
               });
            grid.jqGrid('setGridParam', { search: true, postData: postdata });
            grid.trigger("reloadGrid", [{ page: 1 }]);


            //<select><option value="NumeroRequerimiento" selected="selected">N°</option><option value="Detalle">Detalle</option><option value="NumeroObra">Obra</option><option value="Sector">Sector</option><option value="Observaciones">Observaciones</option><option value="LugarEntrega">Lugar de necesidad</option></select>
        }






        var lastSelectedId;
        var inEdit;
        grid = $("#Lista");

        //Para que haga wrap en las celdas
        //$('.ui-jqgrid .ui-jqgrid-htable th div').css('white-space', 'normal');

        $('#Lista').jqGrid({
            url: '@Url.Action("RequerimientosPendientesAsignar_DynamicGridData", "Requerimiento")',

            postData: {
                'FechaInicial': function () { return $("#FechaInicial").val(); },
                'FechaFinal': function () { return $("#FechaFinal").val(); },
                'IdObra': function () { return $("#IdObra").val(); },
                'bAConfirmar': function () {
                    return $('#bAConfirmar').is(":checked");
                },
                'bALiberar': function () {
                    return $('#bALiberar').is(":checked");
                }
            },


            datatype: 'json',
            mtype: 'POST',
            colNames: [ 'IdDetalleRequerimiento','', 'IdRequerimiento', 'Numero', 'IdObra', 'Cump.', 'Recep.', 'Entreg.', 'Impresa', 'Detalle', 'Obra', 'Presupuestos', 'Comparativas',
                       'Pedidos', 'Recepciones', 'Salidas', 'Libero', 'Solicito', 'Sector', 'Usuario anulo', 'Fecha anulacion', 'Motivo anulacion', 'Fechas liberacion',
                       'Observaciones', 'Lugar de entrega', '', '', 'Web'],
            colModel: [
                        { name: 'IdDetalleRequerimiento', index: 'IdDetalleRequerimiento', align: 'center', width: 80, sortable: false, editable: false, search: false, frozen: true, hidden: true }, //, formatter: 'showlink', formatoptions: { baseLinkUrl: '@Url.Action("Edit")'} },
                        { name: 'act', index: 'act', align: 'center', width: 50, sortable: false, editable: false, search: false, frozen: true }, //, formatter: 'showlink', formatoptions: { baseLinkUrl: '@Url.Action("Edit")'} },
                        { name: 'IdRequerimiento', index: 'IdRequerimiento', align: 'left', width: 0, editable: false, hidden: true, frozen: true },
                        { name: 'NumeroRequerimiento', index: 'NumeroRequerimiento', align: 'right', width: 100, editable: false, frozen: true, search: true, searchoptions: { sopt: ['cn', 'eq'] } },



                        { name: 'IdObra', index: 'IdObra', align: 'left', width: 0, editable: false, hidden: true, frozen: true },

    /*
                           {
                               name: 'FechaRequerimiento', index: 'FechaRequerimiento', width: 100, align: 'center',
                               sorttype: 'date', hidden: false, editable: false, formatoptions: { newformat: 'dd/mm/yy' },
                               datefmt: 'dd/mm/yy',

                               search: true,
                               searchrules: {
                                   date: true
                               },
                               searchoptions: { // http://stackoverflow.com/questions/14632735/jqgrid-searching-dates
                                   sopt: ['ge', 'le', 'eq'],
                                   dataInit: function (elem) {
                                       $(elem).datepicker({
                                           dateFormat: 'dd/mm/yy',
                                           changeYear: true,
                                           changeMonth: true,
                                           showButtonPanel: true,
                                           onSelect: function () {
                                               $(this).keydown();
                                           }
                                       });
                                   }
                               }

                           },

    */
                        { name: 'Cumplido', index: 'Cumplido', align: 'center', width: 60, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Recepcionado', index: 'Recepcionado', align: 'center', width: 60, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Entregado', index: 'Entregado', align: 'center', width: 60, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Impresa', index: 'Impresa', align: 'center', width: 60, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Detalle', index: 'Detalle', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Obra.NumeroObra', index: 'Obra.NumeroObra', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Presupuestos', index: 'Presupuestos', align: 'left', width: 0, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Comparativas', index: 'Comparativas', align: 'left', width: 0, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Pedidos', index: 'Pedidos', align: 'left', width: 0, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Recepciones', index: 'Recepciones', align: 'left', width: 0, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Salidas', index: 'Salidas', align: 'left', width: 0, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Libero', index: 'Libero', align: 'left', width: 0, editable: false, search: true, searchoptions: { sopt: [''] } },
                        { name: 'Solicito', index: 'Solicito', align: 'left', width: 0, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Sector', index: 'Sector', align: 'left', width: 0, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Usuario_anulo', index: 'Usuario_anulo', align: 'left', width: 0, editable: false, search: true, searchoptions: { sopt: ['cn'] } },


                           {
                               name: 'Fecha_anulacion', index: 'Fecha_anulacion', width: 100, align: 'center',
                               sorttype: 'date', hidden: false, editable: false, formatoptions: { newformat: 'dd/mm/yy' },
                               datefmt: 'dd/mm/yy',

                               search: true,
                               searchrules: {
                                   date: true
                               },
                               searchoptions: { // http://stackoverflow.com/questions/14632735/jqgrid-searching-dates
                                   sopt: ['ge', 'le', 'eq'],
                                   dataInit: function (elem) {
                                       $(elem).datepicker({
                                           dateFormat: 'dd/mm/yy',
                                           changeYear: true,
                                           changeMonth: true,
                                           showButtonPanel: true,
                                           onSelect: function () {
                                               $(this).keydown();
                                           }
                                       });
                                   }
                               }

                           },


                    { name: 'Motivo_anulacion', index: 'Motivo_anulacion', align: 'left', width: 0, editable: false, search: true, searchoptions: { sopt: ['cn'] } },


                           {
                               name: 'Fechas_liberacion', index: 'Fechas_liberacion', width: 100, align: 'center',
                               sorttype: 'date', hidden: false, editable: false, formatoptions: { newformat: 'dd/mm/yy' },
                               datefmt: 'dd/mm/yy',

                               search: true,
                               searchrules: {
                                   date: true
                               },
                               searchoptions: { // http://stackoverflow.com/questions/14632735/jqgrid-searching-dates
                                   sopt: ['ge', 'le', 'eq'],
                                   dataInit: function (elem) {
                                       $(elem).datepicker({
                                           dateFormat: 'dd/mm/yy',
                                           changeYear: true,
                                           changeMonth: true,
                                           showButtonPanel: true,
                                           onSelect: function () {
                                               $(this).keydown();
                                           }
                                       });
                                   }
                               }

                           },


                        { name: 'Observaciones', index: 'Observaciones', align: 'left', width: 0, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'LugarEntrega', index: 'LugarEntrega', align: 'left', width: 0, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Web', index: 'Web', align: 'left', width: 0, editable: false, hidden: true, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Web', index: 'Web', align: 'left', width: 0, editable: false, hidden: true, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Web', index: 'Web', align: 'left', width: 0, editable: false, search: true, searchoptions: { sopt: ['cn'] } }

            ],
            //            onSelectRow: function (id) {
            //                if (id && id !== lastSelectedId) {
            //                    if (typeof lastSelectedId !== "undefined") {
            //                        grid.jqGrid('restoreRow', lastSelectedId);
            //                    }
            //                    lastSelectedId = id;
            //                }
            //            },

            ondblClickRow: function (idrow) {
                window.location.href = ROOT + 'Requerimiento/Edit/' + idrow;


                // $("#edtData").click();

                //edicion inline
                // http://stackoverflow.com/questions/8163106/form-editing-with-inline-editing-to-same-jqgrid
                //                if(id && id!==lastSel){
                //                    jQuery('#Lista').restoreRow(lastSel);
                //                    lastSel=id;
                //                }
                //                jQuery('#Lista').editRow(id, true);
                //

            },
            loadComplete: function () {
                //$("#Lista").jqGrid('filterToolbar', {})
            },



            loadComplete: function () {
                $("tr.jqgrow", this).contextMenu('myMenu1', {
                    bindings: {
                        'edit': function (trigger) {
                            // trigger is the DOM element ("tr.jqgrow") which are triggered
                            //   grid.editGridRow(trigger.id, editSettings);
                        },
                        'add': function (/*trigger*/) {
                            //  grid.editGridRow("new", addSettings);
                        },
                        'del': function (trigger) {
                            if ($('#del').hasClass('ui-state-disabled') === false) {
                                // disabled item can do be choosed
                                //      grid.delGridRow(trigger.id, delSettings);
                            }
                        }
                    },
                    onContextMenu: function (event/*, menu*/) {
                        rowIdContextMenu = $(event.target).closest("tr.jqgrow").attr("id");
                        //grid.setSelection(rowId);
                        // disable menu for rows with even rowids
                        //$('#del').attr("disabled", Number(rowId) % 2 === 0);
                        //if (Number(rowId) % 2 === 0) {
                        //    $('#del').attr("disabled", "disabled").addClass('ui-state-disabled');
                        //} else {
                        //    $('#del').removeAttr("disabled").removeClass('ui-state-disabled');
                        //}
                        return true;
                    },

                    //http://stackoverflow.com/questions/8451982/custom-values-to-context-menu-items-in-jqgrid
                    menuStyle: {
                        backgroundColor: '#fcfdfd',
                        border: '1px solid #a6c9e2',
                        maxWidth: '600px', // to be sure
                        width: '100%' // to have good width of the menu
                    },
                    itemHoverStyle: {
                        border: '1px solid #79b7e7',
                        color: '#1d5987',
                        backgroundColor: '#d0e5f5'
                    }


                });
            },




    //loadError : function(xhr,st,err) {
    //            jQuery("#rsperror").html("Type: "+st+"; Response: "+ xhr.status + " "+xhr.statusText);
    //        },

              loadError: function (xhr, textStatus, exceptionThrown) {
                var errorData = $.parseJSON(xhr.responseText);
                var errorMessages = [];
                //this ugly loop is because List<> is serialized to an object instead of an array
                for (var key in errorData) {
                    errorMessages.push(errorData[key]);
                }



                $('#result').html(errorMessages.join("<br />"));
                alert(errorMessages.join("\n").replace(/<br\/>/g, '\n'));



                $('html, body').css('cursor', 'auto');
                $('#grabar2').attr("disabled", false).val("Aceptar");
                //alert(errorMessages.join("<br />"));

                $("#textoMensajeAlerta").html(errorMessages.join("<br />"));
                //$('#result').html(errorMessages.join("<br />"));
                //$("#textoMensajeAlerta").html(xhr.responseText);
                //$("#textoMensajeAlerta").html(errorData.Errors.join("<br />"));
                $("#mensajeAlerta").show();
                pageLayout.show('east');

            },




            //pager: $('#ListaPager'),
            rowNum: 500,
            rowList: [100, 500],
            sortname: 'NumeroRequerimiento', // 'FechaRecibo,NumeroRecibo',
            sortorder: 'desc',
            viewrecords: true,
            emptyrecords: 'No hay registros para mostrar', //,


            ///////////////////////////////
            width: 'auto', // 'auto',
            autowidth: true,
            shrinkToFit: false,
            //////////////////////////////

            height: $(window).height() - ALTOLISTADO, // '100%'
            altRows: false,
            footerrow: false, //true,
            userDataOnFooter: true
            // ,caption: '<b>FACTURAS</b>'

        , gridview: true
        , multiboxonly: true
        , multipleSearch: true
            , multiselect: true






            //imgpath: '/content/cupertino/images',
            //loadonce: true,
            , caption: '<b>Requerimientos pendientes de asignar</b>'
        });
        jQuery("#Lista").jqGrid('bindKeys');

        jQuery("#Lista").jqGrid('navGrid', '#ListaPager',
         { csv: true, refresh: true, add: false, edit: false, del: false }, {}, {}, {},
         {
             //sopt: ["cn"]
             //sopt: ['eq', 'ne', 'lt', 'le', 'gt', 'ge', 'bw', 'bn', 'ew', 'en', 'cn', 'nc', 'nu', 'nn', 'in', 'ni'],
             width: 700, closeOnEscape: true, closeAfterSearch: true, multipleSearch: true, overlay: false
         }
        );


        jQuery("#Lista").filterToolbar({
            stringResult: true, searchOnEnter: true,
            defaultSearch: 'cn',
            enableClear: false
        }); // si queres sacar el enableClear, definilo en las searchoptions de la columna específica http://www.trirand.com/blog/?page_id=393/help/clearing-the-clear-icon-in-a-filtertoolbar/



        $(window).resize(function () {
            RefrescaAnchoJqgrids();
        });




        $(function () {
            deshabilitarPanelesDerecho();

        })


        //$("#Requerimientos").click();





        pageLayout.hide('east');
        pageLayout.hide('south');


    });


    </script>
    @*
        @{
            var grid = new WebGrid(source: Model,
                defaultSort: "NumeroRequerimiento",
                rowsPerPage: 10,
                canPage: true,
                canSort: true,
                fieldNamePrefix: "ItemRM_",
                selectionFieldName: "selectedRow");
        }

        <div id="grid">
            @grid.GetHtml(
                tableStyle: "webgrid",
                headerStyle: "webgrid-header",
                footerStyle: "webgrid-footer",
                alternatingRowStyle: "webgrid-alternating-row",
                selectedRowStyle: "webgrid-selected-row",
                rowStyle: "webgrid-row-style",
                mode: WebGridPagerModes.All,
                firstText: "<< Primera",
                previousText: "< Anterior",
                nextText: "Siguiente >",
                lastText: "Última >>",
                        columns: new[] {
                                                grid.Column(columnName: "NumeroRequerimiento", header: "Nro.", style: "text-align-left"),
                                                grid.Column(columnName: "FechaRequerimiento", header: "Fecha", style: "text-align-left", format: p => p.FechaRequerimiento.ToShortDateString()),
                                                //grid.Column(columnName: "",  format: p=>p.Obra.NumeroObra, header: "Obra", style: "text-align-left"),
                                                //grid.Column(columnName: "Empleados.Nombre", header: "Solicito", style: "text-align-left"),
                                                //grid.Column(columnName: "Empleados1.Nombre", header: "Aprobo", style: "text-align-left"),
                                                //grid.Column(columnName: "Sectores.Descripcion", header: "Sector", style: "text-align-left"),
                                                grid.Column(columnName: "Detalle", header: "Detalle", style: "text-align-left"),
                                                grid.Column("", header: "Acciones",
                                                    format: @<text>@Html.ActionLink("Editar", "Edit", new { id = item.IdRequerimiento })|
                                                                   @Html.ActionLink("Eliminar", "Delete", new { id = item.IdRequerimiento })</text>
                                                )
                                                }
                                    )
        </div>

        <table>
            <tr>
                <th>IdRequerimiento</th>
                <th>Numero RM</th>
                <th>Fecha</th>
                <th>Obra</th>
                <th>Sector</th>
                <th></th>
            </tr>

        @{int i = 1;}
        @foreach (var item in Model)
        {
            <tr class="@(i++ % 2 == 0 ? "highlighted" : "")" >
                <td>@Html.DisplayFor(modelItem => item.IdRequerimiento)</td>
                <td>@Html.DisplayFor(modelItem => item.NumeroRequerimiento)</td>
                <td>@Html.DisplayFor(modelItem => item.FechaRequerimiento)</td>
                <td>@Html.DisplayFor(modelItem => item.Obra.NumeroObra)</td>
                <td>@Html.DisplayFor(modelItem => item.Sectores.Descripcion)</td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.IdRequerimiento }) |
                    @Html.ActionLink("Details", "Details", new { id = item.IdRequerimiento }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.IdRequerimiento })
                </td>
            </tr>
        }
        </table>
    *@
