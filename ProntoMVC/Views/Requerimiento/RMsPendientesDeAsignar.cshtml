@model IEnumerable<ProntoMVC.Data.Models.Requerimiento>
    @{
        ViewBag.Title = "Requerimientos (pendientes)";
    }

    <script src="@Url.Content("~/Scripts/ScriptRMsPendientesDeAsignar.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/ScriptValeSalida.js?1518")" type="text/javascript"></script>

    <div style=" padding-left: 15px;  padding-right: 15px ;">
        <div>
            <div class="row-fluid">
                <div class="span12 lightblue">
                    @if (false)
                    {
                        <div class="btn-group span2">
                            <a class="btn  " style="color: Black" href="#"><i class="icon-print"></i>&nbsp;más</a>
                            <button class="btn dropdown-toggle " data-toggle="dropdown">
                                <span class="caret "></span>
                            </button>
                            <ul class="dropdown-menu ">
                                <li><a class="" href="#"><i class="icon-print"></i>&nbsp;Excel</a></li>
                            </ul>
                        </div>
                    }
                    <div class="span1">
                        <div>
                            <input id="FechaInicial" name="FechaInicial" type="hidden" value=@Request.QueryString["fechainicial"]>
                        </div>
                        <div>
                            <input id="FechaFinal" name="FechaFinal" type="hidden" value=@Request.QueryString["fechafinal"]>
                        </div>
                        <div>
                            <input id="IdObra" name="IdObra" type="hidden" value=@Request.QueryString["idobra"]>
                        </div>
                    </div>
                </div>
                <br />
                <br />
            </div>
            <table id="ListaReq" class="scroll" cellpadding="0" cellspacing="0" style="font-size: 16px;"></table>
            <div id="ListaReqPager" class="scroll" style="text-align: center;">
            </div>
        </div>
    </div>

    <div class="contextMenu" id="myMenu1" style="display:none">


        <style>

            .price-features li span {
                padding: 0 0 0 0 !important;
                border: 0;
                display: block;
                margin: 0 0 0 0;
                height: 30px;
            }

        </style>


        <ul style="width: 400px"  class="price-features">
            <li id="add">
                @*<span class="ui-icon ui-icon-plus" style="float:left"></span>*@
                <span id="Vale" style="font-size:11px; height: 30px; font-family:Verdana">Generar Vale salida (stock)</span>
            </li>
            <li id="edit">
                @*<span class="ui-icon ui-icon-pencil" style="float:left"></span>*@
                <span id="ParaCompras" style="font-size:11px; height: 30px; font-family:Verdana">Liberar para Compras</span>
            </li>
            <li id="del">
                @*<span class="ui-icon ui-icon-trash" style="float:left"></span>*@
                <span id="DarPorCumplido" style="font-size:11px; height: 30px; font-family:Verdana">Dar por cumplido</span>
            </li>
        </ul>
    </div>


    <style>



        .ui-dialog-titlebar {
            /*display: none;*/
        }

        .ui-dialog-content {
            padding: 0 0 0 0;
        }
    </style>
    <div id="frmVale"></div>

    <script type="text/javascript">
    var rowIdContextMenu;

    $(document).ready(function () {




        //mover todo esto al ScriptRMsPendientes...js, cambiando los helpers de Razor (arrobaUrl) 


        $("#Vale2").click(function () {
            var $grid = $("#ListaReq");
            var ListaReq = $grid.jqGrid("getGridParam", "selarrrow");
            if ((ListaReq == null) || (ListaReq.length == 0)) {
                //como no hay renglones tildados, tomo el renglon sobre el que está el cursor
                ListaReq = [rowIdContextMenu];
                // ListaReq = $grid.jqGrid('getGridParam', 'selrow')
                if ((ListaReq == null) || (ListaReq.length == 0)) {
                    alert("No hay rms elegidas " + rowIdContextMenu);
                    return;
                }
            }

            $("#dialog-password").dialog({
                buttons: {
                    'Aceptar': function () {
                        //alert('hola');
                        // $(this).dialog('close');
                        // http://stackoverflow.com/questions/1031674/how-do-i-write-a-jquery-function-that-accepts-a-callback-as-a-parameter
                        $("#loading").show();
                        validatePwd2(
                            function () {
                                generarvale(ListaReq, "administrador", "",
                                    function () {
                                        $("#loading").hide();
                                        $('#ListaReq').trigger('reloadGrid');
                                    }
                                )
                            }
                            , function () { $("#loading").hide(); }
                         );
                        $(this).dialog('close');
                    },
                    'Cancelar': function () {
                        $(this).dialog('close');
                    }
                },
                open: function () {
                }
            });
            $('#dialog-password').data('Combo', 'Aprobo');
            $('#dialog-password').dialog('open');
        })

        function generarvale(ids, user, pass, callback) {
            $("#loading").show();
            $.ajax({
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                url: '@Url.Action("GenerarValesAlmacen", "Requerimiento")',
                data: JSON.stringify({
                    idDetalleRequerimientos: ids,
                    user: user,
                    pass: pass
                })
            }).done(function () {
                //if (typeof callback == "function") callback();
                $("#loading").hide();
                alert("Vale creado")
                $('#ListaReq').trigger('reloadGrid');
            }).fail(function () {
                $("#loading").hide();
                alert("No se pudo crear el vale")
            });
        }

        $("#DarPorCumplido").click(function () {
            //juntar los ids y mandarlos?
            var $grid = $("#ListaReq");
            var ListaReq = $grid.jqGrid("getGridParam", "selarrrow");
            if ((ListaReq == null) || (ListaReq.length == 0)) {
                //como no hay renglones tildados, tomo el renglon sobre el que está el cursor
                ListaReq = [rowIdContextMenu];
                // ListaReq = $grid.jqGrid('getGridParam', 'selrow')

                if ((ListaReq == null) || (ListaReq.length == 0)) {
                    alert("No hay rms elegidas " + rowIdContextMenu);
                    return;
                }
            }
            $.ajax({
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                url: '@Url.Action("DarPorCumplido", "Requerimiento")',
                data: JSON.stringify({
                    idDetalleRequerimientos: ListaReq,
                    userAutorizador: "administrador",
                    passAutorizador: "",
                    userCumplidor: "administrador",
                    sObsCumplido: "asdasd asd asd asd asd asdasdasd asd asdasd asd "
                })
            }).done(function () {
                $('#ListaReq').trigger('reloadGrid');
            });
        })

        $("#ParaCompras").click(function () {
            //juntar los ids y mandarlos?
            var $grid = $("#ListaReq");
            var ListaReq = $grid.jqGrid("getGridParam", "selarrrow");
            if ((ListaReq == null) || (ListaReq.length == 0)) {
                //como no hay renglones tildados, tomo el renglon sobre el que está el cursor
                ListaReq = [rowIdContextMenu];
                // ListaReq = $grid.jqGrid('getGridParam', 'selrow')
                if ((ListaReq == null) || (ListaReq.length == 0)) {
                    alert("No hay rms elegidas " + rowIdContextMenu);
                    return;
                }
            }

            $.ajax({
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                url: '@Url.Action("AsignaComprador", "Requerimiento")',
                data: JSON.stringify({
                    idDetalleRequerimientos: ListaReq,
                    userComprador: "administrador",
                    passComprador: ""
                })
            }).done(function () {
                $('#ListaReq').trigger('reloadGrid');
            });
        })

        //function PisarFechaEntrega(nombre) {
        //    var f = $("#InputFechaEntrega").val();
        //    var $grid = $("#ListaReq");
        //    var righe = $grid.jqGrid("getGridParam", "selarrrow");
        //    if ((righe == null) || (righe.length == 0)) {
        //        righe = $grid.jqGrid('getDataIDs');
        //        // return false;
        //    }

        //    for (var i = 0; i < righe.length; i++) {
        //        var Id = righe[i];
        //        var rowData = $grid.jqGrid('getRowData', Id);
        //        rowData[nombre] = f;
        //        $grid.jqGrid('setRowData', Id, rowData);
        //    }
        //}

        //$("#asignarPrecio").click(function () {
        //    $("#InputFechaEntrega").val('');
        //    $('[id$=labeldialog]').text("Ingrese el Precio");
        //    $("#dialog").dialog({
        //        buttons: {
        //            "Aceptar": function () {
        //                PisarFechaEntrega("Precio");
        //                $(this).dialog("close");
        //            },
        //            "Cerrar": function () {
        //                $(this).dialog("close");
        //            }
        //        }
        //    });
        //    $("#dialog").dialog("open");
        //});

        $("#BuscadorListaReqdo").keyup(function () {
            filtrar()
        });

        $("#BuscadorListaReqdo").change(function () {
            filtrar()
        });

        function filtrar() {
            var grid = jQuery("#ListaReq");
            var postdata = grid.jqGrid('getGridParam', 'postData');
            jQuery.extend(postdata,
               {
                   filters: '',
                   searchField: 'NumeroRequerimiento',
                   searchOper: 'eq',
                   searchString: $("#BuscadorListaReqdo").val()
               });
            grid.jqGrid('setGridParam', { search: true, postData: postdata });
            grid.trigger("reloadGrid", [{ page: 1 }]);
            //<select><option value="NumeroRequerimiento" selected="selected">N°</option><option value="Detalle">Detalle</option><option value="NumeroObra">Obra</option><option value="Sector">Sector</option><option value="Observaciones">Observaciones</option><option value="LugarEntrega">Lugar de necesidad</option></select>
        }

        var lastSelectedId;
        var inEdit;
        grid = $("#ListaReq");

        //Para que haga wrap en las celdas
        //$('.ui-jqgrid .ui-jqgrid-htable th div').css('white-space', 'normal');

        $('#ListaReq').jqGrid({
            url: '@Url.Action("RequerimientosPendientesAsignar_DynamicGridData", "Requerimiento")',
            postData: {
                'FechaInicial': function () { return $("#FechaInicial").val(); },
                'FechaFinal': function () { return $("#FechaFinal").val(); },
                'IdObra': function () { return $("#IdObra").val(); },
                'bAConfirmar': function () {
                    return $('#bAConfirmar').is(":checked");
                },
                'bALiberar': function () {
                    return $('#bALiberar').is(":checked");
                }
            },
            datatype: 'json',
            mtype: 'POST',
            colNames: ['', 'IdDetalleRequerimiento', 'IdRequerimiento', 'IdObra', 'TipoDesignacion', 'Numero', 'Item', 'Cant.', 'Un.', 'Cant. Vales', 'Cant. Pedida', 'Cant. Recibida',
                       'Recepcion', 'Ult. Recepcion', 'En Stock', 'Stock Min.', 'Articulo', 'Fecha Entrega', 'Solicito', 'Tipo Requerimiento', 'Obra', 'Cump.', 'Recep.',
                       'Observaciones Item', 'Deposito', 'Observaciones Firmante', 'Firmante Observo', 'Fecha Ult. Observacion', 'Cod. Equ. Destino', 'Equipo Destino'],
            colModel: [
                        { name: 'act', index: 'act', align: 'center', width: 50, sortable: false, editable: false, search: false, frozen: true }, //, formatter: 'showlink', formatoptions: { baseLinkUrl: '@Url.Action("Edit")'} },
                        { name: 'IdDetalleRequerimiento', index: 'IdDetalleRequerimiento', align: 'center', width: 80, sortable: false, editable: false, search: false, frozen: true, hidden: true }, //, formatter: 'showlink', formatoptions: { baseLinkUrl: '@Url.Action("Edit")'} },
                        { name: 'IdRequerimiento', index: 'IdRequerimiento', align: 'left', width: 0, editable: false, hidden: true, frozen: true },
                        { name: 'IdObra', index: 'IdObra', align: 'left', width: 0, editable: false, hidden: true, frozen: true },
                        { name: 'TipoDesignacion', index: 'TipoDesignacion', align: 'left', width: 0, editable: false, hidden: true, frozen: true },
                        { name: 'NumeroRequerimiento', index: 'NumeroRequerimiento', align: 'right', width: 100, editable: false, frozen: true, search: true, searchoptions: { sopt: ['cn', 'eq'] } },
                        { name: 'Item', index: 'Item', align: 'center', width: 40, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Cantidad', index: 'Cantidad', align: 'right', width: 80, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Unidad', index: 'Unidad', align: 'center', width: 50, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'CantidadVales', index: 'CantidadVales', align: 'center', width: 80, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'CantidadPedida', index: 'CantidadPedida', align: 'center', width: 80, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'CantidadRecibida', index: 'CantidadRecibida', align: 'center', width: 80, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'NumeroRecepcion', index: 'NumeroRecepcion', align: 'center', width: 150, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'UltimoNumeroRecepcion', index: 'UltimoNumeroRecepcion', align: 'center', width: 150, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'EnStock', index: 'EnStock', align: 'right', width: 100, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'StockMinimo', index: 'StockMinimo', align: 'right', width: 100, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Articulo', index: 'Articulo', align: 'left', width: 500, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        {
                            name: 'FechaEntrega', index: 'FechaEntrega', width: 100, align: 'center', sorttype: 'date', hidden: false, editable: false, formatoptions: { newformat: 'dd/mm/yy' }, datefmt: 'dd/mm/yy',
                            search: true, searchrules: { date: true }, searchoptions: { sopt: ['ge', 'le', 'eq'] }
                        },
                        { name: 'Solicito', index: 'Solicito', align: 'left', width: 150, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'TipoRequerimiento', index: 'TipoRequerimiento', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Obra', index: 'Obra', align: 'left', width: 300, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Cumplido', index: 'Cumplido', align: 'center', width: 60, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Recepcionado', index: 'Recepcionado', align: 'center', width: 60, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Observacionesitem', index: 'Observacionesitem', align: 'left', width: 300, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Deposito', index: 'Deposito', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'ObservacionesFirmante', index: 'ObservacionesFirmante', align: 'left', width: 300, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'FirmanteObservo', index: 'FirmanteObservo', align: 'left', width: 150, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        {
                            name: 'FechaUltimaObservacion', index: 'FechaUltimaObservacion', width: 100, align: 'center', sorttype: 'date', hidden: false, editable: false, formatoptions: { newformat: 'dd/mm/yy' }, datefmt: 'dd/mm/yy',
                            search: true, searchrules: { date: true }, searchoptions: { sopt: ['ge', 'le', 'eq'] }
                        },
                        { name: 'CodigoEquipoDestino', index: 'CodigoEquipoDestino', align: 'left', width: 100, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'EquipoDestino', index: 'EquipoDestino', align: 'left', width: 300, editable: false, search: true, searchoptions: { sopt: ['cn'] } }
            ],
            ondblClickRow: function (idrow) {
                window.location.href = ROOT + 'Requerimiento/Edit/' + idrow;
                // $("#edtData").click();
                //edicion inline
                // http://stackoverflow.com/questions/8163106/form-editing-with-inline-editing-to-same-jqgrid
                //                if(id && id!==lastSel){
                //                    jQuery('#ListaReq').restoreRow(lastSel);
                //                    lastSel=id;
                //                }
                //                jQuery('#ListaReq').editRow(id, true);
                //
            },
            loadComplete: function () {
                $("#ListaReq").setGridParam({ datatype: 'local', page: 1 }).trigger('reloadGrid');
                $("tr.jqgrow", this).contextMenu('myMenu1', {
                    bindings: {
                        'edit': function (trigger) {
                            // trigger is the DOM element ("tr.jqgrow") which are triggered
                            //   grid.editGridRow(trigger.id, editSettings);
                        },
                        'add': function (/*trigger*/) {
                            //  grid.editGridRow("new", addSettings);
                        },
                        'del': function (trigger) {
                            if ($('#del').hasClass('ui-state-disabled') === false) {
                                // disabled item can do be choosed
                                //      grid.delGridRow(trigger.id, delSettings);
                            }
                        }
                    },
                    onContextMenu: function (event/*, menu*/) {
                        rowIdContextMenu = $(event.target).closest("tr.jqgrow").attr("id");
                        //grid.setSelection(rowId);
                        // disable menu for rows with even rowids
                        //$('#del').attr("disabled", Number(rowId) % 2 === 0);
                        //if (Number(rowId) % 2 === 0) {
                        //    $('#del').attr("disabled", "disabled").addClass('ui-state-disabled');
                        //} else {
                        //    $('#del').removeAttr("disabled").removeClass('ui-state-disabled');
                        //}
                        return true;
                    },
                    //http://stackoverflow.com/questions/8451982/custom-values-to-context-menu-items-in-jqgrid
                    menuStyle: {
                        backgroundColor: '#fcfdfd',
                        border: '1px solid #a6c9e2',
                        maxWidth: '600px', // to be sure
                        width: '100%' // to have good width of the menu
                    },
                    itemHoverStyle: {
                        border: '1px solid #79b7e7',
                        color: '#1d5987',
                        backgroundColor: '#d0e5f5'
                    }
                });
            },

            loadError: function (xhr, textStatus, exceptionThrown) {
                var errorData = $.parseJSON(xhr.responseText);
                var errorMessages = [];
                //this ugly loop is because List<> is serialized to an object instead of an array
                for (var key in errorData) {
                    errorMessages.push(errorData[key]);
                }
                $('#result').html(errorMessages.join("<br />"));
                alert(errorMessages.join("\n").replace(/<br\/>/g, '\n'));
                $('html, body').css('cursor', 'auto');
                $('#grabar2').attr("disabled", false).val("Aceptar");
                //alert(errorMessages.join("<br />"));
                $("#textoMensajeAlerta").html(errorMessages.join("<br />"));
                //$('#result').html(errorMessages.join("<br />"));
                //$("#textoMensajeAlerta").html(xhr.responseText);
                //$("#textoMensajeAlerta").html(errorData.Errors.join("<br />"));
                $("#mensajeAlerta").show();
                pageLayout.show('east');
            },
            pager: $('#ListaReqPager'),
            rowNum: 500,
            rowList: [1, 100, 500],
            sortname: 'NumeroRequerimiento', // 'FechaRecibo,NumeroRecibo',
            sortorder: 'desc',
            viewrecords: true,
            emptyrecords: 'No hay registros para mostrar', //,
            width: 'auto', // 'auto',
            autowidth: true,
            shrinkToFit: false,
            height: $(window).height() - ALTOLISTADO, // '100%'
            altRows: false,
            footerrow: false, //true,
            userDataOnFooter: true,
            gridview: true,
            multiboxonly: true,
            multipleSearch: true,
            multiselect: true,
            //imgpath: '/content/cupertino/images',
            loadonce: true,
            caption: '<b>Requerimientos pendientes de asignar</b>'
        });
        jQuery("#ListaReq").jqGrid('bindKeys');

        jQuery("#ListaReq").jqGrid('navGrid', '#ListaReqPager',
         { csv: true, refresh: true, add: false, edit: false, del: false }, {}, {}, {},
         {
             //sopt: ["cn"]
             //sopt: ['eq', 'ne', 'lt', 'le', 'gt', 'ge', 'bw', 'bn', 'ew', 'en', 'cn', 'nc', 'nu', 'nn', 'in', 'ni'],
             //width: 700,
             closeOnEscape: true, closeAfterSearch: true, multipleSearch: true, overlay: false
         }
        );

        //jQuery("#ListaReq").filterToolbar({
        //    stringResult: true, searchOnEnter: true,
        //    defaultSearch: 'cn',
        //    enableClear: false
        //}); // si queres sacar el enableClear, definilo en las searchoptions de la columna específica http://www.trirand.com/blog/?page_id=393/help/clearing-the-clear-icon-in-a-filtertoolbar/

        $(window).resize(function () {
            RefrescaAnchoJqgrids();
            deshabilitarPanelesDerecho();

        });

        $(function () {
            RefrescaAnchoJqgrids();
            deshabilitarPanelesDerecho();

        })

        pageLayout.hide('east');
        pageLayout.hide('south');
    });

    </script>
