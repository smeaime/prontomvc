@model IEnumerable<ProntoMVC.Data.Models.Requerimiento>
    @{
        ViewBag.Title = "Requerimientos";
    }
    @*<div class="container-fluid">*@

    <br />

@if (false)
{
    <style>
        /* jqGrid builds some additional divs over the main grid table. The outer div has the class ui-jqgrid. So if you need to remove right and left border existing over the whole grid you can use the following CSS: */
        .ui-widget-content {
            border: 0px solid #aaaaaa;
        }

        .ui-jqgrid {
            border-right-width: 0px;
            border-left-width: 0px;
        }
            /* If you need to remove all grid's borders you can use
        .ui-jqgrid { border-width: 0px; }
        If you want additionally remove vertical border between the cells in the grid you can use */
            .ui-jqgrid tr.ui-row-ltr td {
                border-right-color: #E4E4E4;
            }

            .ui-jqgrid tr.footrow-ltr td {
                border-right-color: #E4E4E4 !important;
            }
            /*To remove horizontal border between the rows you can use */
            .ui-jqgrid tr.ui-row-ltr td {
                border-bottom-color: #E4E4E4;
            }
        /*To remove vertical borders between the column headers you can use */

        th.ui-th-column {
            border-right-color: #E4E4E4 !important;
        }
        /* or alternatively (without the usage of !important) */
        .ui-jqgrid-labels .ui-th-column {
            border-right-color: #E4E4E4;
        }
    </style>
}
<script src="~/Scripts/jquery.table2excel.js"></script>
<script type="text/javascript">
    function VerProveedores() {
        $("#dialog").dialog({
            show: "blind",
            hide: "blind",
            width: 1000,
            height: 700,
            modal: true,
            buttons: {
                "Enviar": function () {
                    EnviarRM_Correo2();
                    $(this).dialog("close");
                },
                "Cancelar": function () {
                    $(this).dialog("close");
                }
            }
        });
    }
</script>
<div style=" padding-left: 15px;  padding-right: 15px ;">
    <div>
        <div class="row-fluid">
            <div class="span12 lightblue">
                <button onclick="window.location.href='@Url.Action("Edit", new { id = -1 })'" class="btn btn-primary span2 ">Nuevo requerimiento</button>
                @*<div class="span1"></div>
                    <button onclick=Exportar() class="btn btn-primary span2">Exportar a Excel</button>*@
                <div class="span4">
                    <div class="input-prepend input-append">
                        @* <div class="btn-group ">
                                <button class="btn dropdown-toggle" data-toggle="dropdown">
                                    En todo <span class="caret"></span>
                                </button>
                                <div class="dropdown-menu">
                                    Requerimientos
                                </div>
                                <ul class="dropdown-menu">
                                    Número
                                </ul>
                            </div>*@
                        @if (Roles.IsUserInRole(ViewBag.NombreUsuario, "SuperAdmin") && false)
                        {
                            <input id="BuscadorListado" type="text" class="" placeholder="Filtrar" style="" />
                            <select id="campos " class="span4">
                                <option>Número</option>
                                @* <option>Fecha</option>*@
                            </select>
                            <button onclick=" jQuery('#Lista').searchGrid({}) " class="btn append ">
                                ...
                            </button>
                        }
                    </div>
                </div>
                <div class="span2 pull-right" style="text-align: center; display: none">
                    a confirmar
                    @Html.CheckBox("bAConfirmar")
                    a liberar
                    @Html.CheckBox("bALiberar")
                </div>
                @*  <input id="BuscarEnLugarDeFiltrar" type="text" class="" placeholder="Buscar" style="" />*@
                @* <div class="btn-group  pull-right ">
                        <button onclick="  " class="btn">
                            <
                        </button>
                        <button onclick="  " class="btn ">
                            >
                        </button>
                    </div>*@
                @if (false)
                {
                    <div class="btn-group span2">
                        <a class="btn  " style="color: Black" href="#"><i class="icon-print"></i>&nbsp;más</a>
                        <button class="btn dropdown-toggle " data-toggle="dropdown">
                            <span class="caret "></span>
                        </button>
                        <ul class="dropdown-menu ">
                            <li><a class="" href="#"><i class="icon-print"></i>&nbsp;Excel</a></li>
                        </ul>
                    </div>
                }
                <div class="span1">
                    <div>
                        <input id="FechaInicial" name="FechaInicial" type="hidden" value=@Request.QueryString["fechainicial"]>
                    </div>
                    <div>
                        <input id="FechaFinal" name="FechaFinal" type="hidden" value=@Request.QueryString["fechafinal"]>
                    </div>
                    <div>
                        <input id="IdObra" name="IdObra" type="hidden" value=@Request.QueryString["idobra"]>
                    </div>
                </div>
            </div>
            <br />
            <br />
        </div>
        <br />
        <table id="Lista" class="scroll" cellpadding="0" cellspacing="0" style="font-size: 16px;"></table>
        <div id="ListaPager" class="scroll" style="text-align: center;">
        </div>
        @*<input type="button" class="btn btn-small" id="addData" value="Generar en Word" />
            <input type="button" class="btn btn-small" id="edtData" value="marcar RM como impresa" />
            <input type="button" class="btn btn-small" id="delData" value="desmarcar rm como impresa" />
            <input type="button" class="btn btn-small" id="delData" value="Enviar RM a proveedores por correo" />
            <input type="button" class="btn btn-small" id="delData" value="Enviar RM a proveedores por fax" />*@

        <div class="contextMenu" id="myMenu1" style="display:none">
            <ul style="width: 200px">
                <li id="GenerarRM_Word">
                    <span style="font-size:11px; font-family:Verdana">Generar en Word</span>
                </li>
                <li id="GenerarRM_Pdf">
                    <span style="font-size:11px; font-family:Verdana">Generar en Pdf</span>
                </li>
                <li id="MarcarRM_Impresa">
                    <span style="font-size:11px; font-family:Verdana">Marcar RM como impresa</span>
                </li>
                <li id="DesmarcarRM_Impresa">
                    <span style="font-size:11px; font-family:Verdana">Desmarcar RM como impresa</span>
                </li>
                <li id="EnviarRM_Correo">
                    <span style="font-size:11px; font-family:Verdana">Enviar RM a proveedores por correo</span>
                </li>
            </ul>
        </div>

        <div id="dialog" style="display: none;" title="Marcar los proveedores para envio de emails">
            <table id="ListaProveedores" class="scroll" cellpadding="0" cellspacing="0" style="font-size: 16px;"></table>
            <div id="ListaPager2" class="scroll" style="text-align: center;"></div>
        </div>

    </div>
</div>

<script type="text/javascript">
    //$(document).ajaxStop(function () {
    //    $.unblockUI;
    //    $('#Lista').trigger('reloadGrid');
    //});
    $(document).ajaxStop($.unblockUI);
    $(document).ready(function () {
        $("#BuscadorListado").keyup(function () {
            filtrar()
        });
        $("#BuscadorListado").change(function () {
            filtrar()
        });

        var activeAjaxConnections = 0;
        var ajaxQueue = $({});

        $.ajaxQueue = function (ajaxOpts) {
            // hold the original complete function
            var oldComplete = ajaxOpts.complete;
            activeAjaxConnections ++;
            // queue our ajax request
            ajaxQueue.queue(function (next) {
                // create a complete callback to fire the next event in the queue
                ajaxOpts.complete = function () {
                    // fire the original complete if it was there
                    activeAjaxConnections--;
                    if (activeAjaxConnections <= 0) {
                        //$.unblockUI;
                        $('#Lista').trigger('reloadGrid');
                    }
                    if (oldComplete) oldComplete.apply(this, arguments);

                    next(); // run the next query in the queue
                };
                // run the query
                $.ajax(ajaxOpts);
            });
        };

        function filtrar() {
            var grid = jQuery("#Lista");
            var postdata = grid.jqGrid('getGridParam', 'postData');
            jQuery.extend(postdata,
               {
                   filters: '',
                   searchField: 'NumeroRequerimiento',
                   searchOper: 'eq',
                   searchString: $("#BuscadorListado").val()
               });
            grid.jqGrid('setGridParam', { search: true, postData: postdata });
            grid.trigger("reloadGrid", [{ page: 1 }]);
            //<select><option value="NumeroRequerimiento" selected="selected">N°</option><option value="Detalle">Detalle</option><option value="NumeroObra">Obra</option><option value="Sector">Sector</option><option value="Observaciones">Observaciones</option><option value="LugarEntrega">Lugar de necesidad</option></select>
        }

        function ExportDataToExcel() {
            var grid = "#Lista";

            var mya = new Array();
            mya = $(grid).getDataIDs();  // Get All IDs

            var data = $(grid).getRowData(mya[0]);     // Get First row to get the labels
            var colNames = new Array();

            var ii = 0;
            for (var i in data) { colNames[ii++] = i; }    // capture col names

            var html = "";

            var columnNames = $(grid).jqGrid('getGridParam', 'colNames');

            for (i = 0; i < columnNames.length - 1; i++) {
                html = html + columnNames[i + 1] + "\t";
            }

            html = html + "\n";

            for (i = 0; i < mya.length; i++) {
                data = $(grid).getRowData(mya[i]); // get each row
                for (j = 0; j < colNames.length; j++) {
                    html = html + data[colNames[j]] + "\t"; // output each column as tab delimited
                }

                html = html + "</tr>"; // output each row with end of line
            }
            html = html + "</table></body></html>"; // end of line at the end

            window.open('data:application/vnd.ms-excel,' + html);
            e.preventDefault();
            Response.AddHeader("Content-Disposition", "attachment;filename=download.xls");
        }

        function ExportDataToExcel2() {
            $("#Lista").table2excel({
                //exclude: ".noExl",
                name: "Worksheet Name",
                filename: "SomeFile" //do not include extension
            });
        }

        var lastSelectedId;
        var inEdit;
        grid = $("#Lista");

        //Para que haga wrap en las celdas
        //$('.ui-jqgrid .ui-jqgrid-htable th div').css('white-space', 'normal');

        $('#Lista').jqGrid({
            url: '@Url.Action("Requerimientos_DynamicGridData", "Requerimiento")',
            postData: {
                'FechaInicial': function () { return $("#FechaInicial").val(); },
                'FechaFinal': function () { return $("#FechaFinal").val(); },
                'IdObra': function () { return $("#IdObra").val(); },
                'bAConfirmar': function () { return $('#bAConfirmar').is(":checked"); },
                'bALiberar': function () { return $('#bALiberar').is(":checked"); }
            },
            datatype: 'local', //'json',
            mtype: 'POST',
            colNames: ['', '', 'IdRequerimiento', 'Numero', 'Fecha', 'Vs', 'Cump.', 'Recep.', 'Entreg.', 'Impresa', 'Detalle', 'Obra', 'Presupuestos', 'Comparativas', 'Pedidos', 'Recepciones',
                       'Salidas', 'Items', 'Liberado por', 'Fecha aprobacion', 'Solicito', 'Sector', 'Equipos destino', 'Usuario anulo', 'Fecha anulacion', 'Motivo anulacion', 'Tipo compra',
                       'Comprador', 'Fechas liberacion para compra', 'Detalle imputacion', 'Observaciones', 'Circ. firmas completo', 'Firmas'],
            colModel: [
                        { name: 'act', index: 'act', width: 80, align: 'center', sortable: false, editable: false, search: false, frozen: true }, //, formatter: 'showlink', formatoptions: { baseLinkUrl: '@Url.Action("Edit")'} },
                        { name: 'act', index: 'act', width: 80, align: 'center', sortable: false, editable: false, search: false, frozen: true }, //, formatter: 'showlink', formatoptions: { baseLinkUrl: '@Url.Action("Edit")'} },
                        { name: 'IdRequerimiento', index: 'IdRequerimiento', width: 0, align: 'left', editable: false, hidden: true, frozen: true },
                        { name: 'NumeroRequerimiento', index: 'NumeroRequerimiento', width: 80, align: 'right', editable: false, frozen: true, search: true, searchoptions: { sopt: ['eq'] } },
                        {
                            name: 'FechaRequerimiento', index: 'FechaRequerimiento', width: 100, align: 'center', sorttype: 'date', hidden: false, editable: false, formatoptions: { newformat: 'dd/mm/yy' }, datefmt: 'dd/mm/yy',
                            search: true, searchrules: { date: true }, searchoptions: { sopt: ['ge', 'le', 'eq'] }
                        },
                        { name: 'NumeradorEliminacionesFirmas', index: 'NumeradorEliminacionesFirmas', width: 60, align: 'center', editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Cumplido', index: 'Cumplido', width: 60, align: 'center', editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Recepcionado', index: 'Recepcionado', width: 60, align: 'center', editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Entregado', index: 'Entregado', width: 60, align: 'center', editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Impresa', index: 'Impresa', width: 60, align: 'center', editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Detalle', index: 'Detalle', width: 200, align: 'left', editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Obra', index: 'Obra', width: 300, align: 'left', editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Presupuestos', index: 'Presupuestos', width: 200, align: 'left', editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Comparativas', index: 'Comparativas', width: 200, align: 'left', editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Pedidos', index: 'Pedidos', width: 200, align: 'left', editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Recepciones', index: 'Recepciones', width: 200, align: 'left', editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Salidas', index: 'Salidas', width: 200, align: 'left', editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'CantidadItems', index: 'CantidadItems', width: 50, align: 'right', editable: false, frozen: true, search: true, searchoptions: { sopt: ['eq'] } },
                        { name: 'LiberadoPor', index: 'LiberadoPor', width: 150, align: 'left', editable: false, search: true, searchoptions: { sopt: [''] } },
                        {
                            name: 'FechaAprobacion', index: 'FechaAprobacion', width: 100, align: 'center', sorttype: 'date', hidden: false, editable: false, formatoptions: { newformat: 'dd/mm/yy' }, datefmt: 'dd/mm/yy',
                            search: true, searchrules: { date: true }, searchoptions: { sopt: ['ge', 'le', 'eq'] }
                        },
                        { name: 'SolicitadaPor', index: 'SolicitadaPor', width: 150, align: 'left', editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Sector', index: 'Sector', align: 'left', width: 150, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'EquipoDestino', index: 'EquipoDestino', width: 100, align: 'left', editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'UsuarioAnulacion', index: 'UsuarioAnulacion', align: 'left', width: 0, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        {
                            name: 'FechaAnulacion', index: 'FechaAnulacion', width: 100, align: 'center', sorttype: 'date', hidden: false, editable: false, formatoptions: { newformat: 'dd/mm/yy' }, datefmt: 'dd/mm/yy',
                            search: true, searchrules: { date: true }, searchoptions: { sopt: ['ge', 'le', 'eq'] }
                        },
                        { name: 'MotivoAnulacion', index: 'MotivoAnulacion', width: 300, align: 'left', editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'TipoCompra', index: 'TipoCompra', width: 200, align: 'left', editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Comprador', index: 'Comprador', width: 150, align: 'left', editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'FechasLiberacionCompra', index: 'FechasLiberacionCompra', width: 200, align: 'left', editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'DetalleImputacion', index: 'DetalleImputacion', width: 200, align: 'left', editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Observaciones', index: 'Observaciones', width: 300, align: 'left', editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'CircuitoFirmasCompleto', index: 'CircuitoFirmasCompleto', width: 80, align: 'left', editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Firmas', index: 'Firmas', width: 300, align: 'left', editable: false, search: true, searchoptions: { sopt: ['cn'] } }
            ],
            //            onSelectRow: function (id) {
            //                if (id && id !== lastSelectedId) {
            //                    if (typeof lastSelectedId !== "undefined") {
            //                        grid.jqGrid('restoreRow', lastSelectedId);
            //                    }
            //                    lastSelectedId = id;
            //                }
            //            },

            ondblClickRow: function (idrow) {
                window.location.href = ROOT + 'Requerimiento/Edit/' + idrow;
                // $("#edtData").click();
                //edicion inline
                // http://stackoverflow.com/questions/8163106/form-editing-with-inline-editing-to-same-jqgrid
                //                if(id && id!==lastSel){
                //                    jQuery('#Lista').restoreRow(lastSel);
                //                    lastSel=id;
                //                }
                //                jQuery('#Lista').editRow(id, true);
                //
            },

            loadComplete: function () {
                $("tr.jqgrow", this).contextMenu('myMenu1', {
                    bindings: {
                        'GenerarRM_Word': function (trigger) {
                            GenerarRM_Word()
                        },
                        'GenerarRM_Pdf': function (trigger) {
                            GenerarRM_Pdf()
                        },
                        'MarcarRM_Impresa': function (trigger) {
                            $.blockUI({
                                message: "Un momento por favor...",
                                css: {
                                    border: 'none',
                                    padding: '15px',
                                    backgroundColor: '#000',
                                    '-webkit-border-radius': '10px',
                                    '-moz-border-radius': '10px',
                                    opacity: .5,
                                    color: '#fff'
                                }
                            });
                            MarcarRM_Impresa();
                            //$('#Lista').trigger('reloadGrid');
                        },
                        'DesmarcarRM_Impresa': function (trigger) {
                            $.blockUI({
                                message: "Un momento por favor...",
                                css: {
                                    border: 'none',
                                    padding: '15px',
                                    backgroundColor: '#000',
                                    '-webkit-border-radius': '10px',
                                    '-moz-border-radius': '10px',
                                    opacity: .5,
                                    color: '#fff'
                                }
                            });
                            DesmarcarRM_Impresa();
                            //$('#Lista').trigger('reloadGrid');
                        },
                        'EnviarRM_Correo': function (trigger) {
                            EnviarRM_Correo()
                        }
                    },
                    onContextMenu: function (event/*, menu*/) {
                        var rowId = $(event.target).closest("tr.jqgrow").attr("id");
                        return true;
                    },
                    menuStyle: {
                        backgroundColor: '#fcfdfd',
                        border: '1px solid #a6c9e2',
                        maxWidth: '600px', // to be sure
                        width: '100%' // to have good width of the menu
                    },
                    itemHoverStyle: {
                        border: '1px solid #79b7e7',
                        color: '#1d5987',
                        backgroundColor: '#d0e5f5'
                    }
                });
            },
            pager: $('#ListaPager'),
            rowNum: 15,
            rowList: [10, 20, 50],
            sortname: 'NumeroRequerimiento', // 'FechaRecibo,NumeroRecibo',
            sortorder: 'desc',
            viewrecords: true,
            emptyrecords: 'No hay registros para mostrar', //,
            width: 'auto', // 'auto',
            autowidth: true,
            shrinkToFit: false,
            height: $(window).height() - ALTOLISTADO, // '100%'
            altRows: false,
            footerrow: false, //true,
            userDataOnFooter: true,
            gridview: true,
            multiboxonly: true,
            multipleSearch: true,
            //imgpath: '/content/cupertino/images',
            //loadonce: true,
            //, caption: '<b>REQUERIMIENTOS</b>'
            multiselect: true
        });
        jQuery("#Lista").jqGrid('bindKeys');
        //jQuery("#Lista").jqGrid('setFrozenColumns'); // si usas frozencolumns, estas obligado a sacar el cellEdit!!! -y tambien el autofiltro??
        jQuery("#Lista").jqGrid('navGrid', '#ListaPager',
         { csv: true, refresh: true, add: false, edit: false, del: false }, {}, {}, {},
         {
             //sopt: ["cn"]
             //sopt: ['eq', 'ne', 'lt', 'le', 'gt', 'ge', 'bw', 'bn', 'ew', 'en', 'cn', 'nc', 'nu', 'nn', 'in', 'ni'],
             width: 700, closeOnEscape: true, closeAfterSearch: true, multipleSearch: true, overlay: false
         }
        ).navButtonAdd('#ListaPager', {
            caption: "Excel",
            buttonicon: "ui-icon-disk",
            onClickButton: function () {
                ExportDataToExcel2();
                //window.open('data:application/vnd.ms-excel,' + $('#Lista').html());
                //e.preventDefault();
            },
            position: "last"
        });
        jQuery("#Lista").filterToolbar({
            stringResult: true, searchOnEnter: true,
            defaultSearch: 'cn',
            enableClear: false
        }); // si queres sacar el enableClear, definilo en las searchoptions de la columna específica http://www.trirand.com/blog/?page_id=393/help/clearing-the-clear-icon-in-a-filtertoolbar/


        $('#ListaProveedores').jqGrid({
            url: '@Url.Action("Proveedores_DynamicGridData_Resumido", "Proveedor")',
            datatype: 'json',
            mtype: 'POST',
            colNames: ['Acciones', 'IdProveedor', 'Razon social', 'Codigo', 'Email', 'Cuit'],
            colModel: [
                        { name: 'act', index: 'act', align: 'center', width: 80, sortable: false, editable: false, search: false, hidden: true },
                        { name: 'IdProveedor', index: 'IdProveedor', align: 'left', width: 50, editable: false, hidden: true },
                        { name: 'RazonSocial', index: 'RazonSocial', align: 'left', width: 400, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'CodigoEmpresa', index: 'CodigoEmpresa', align: 'left', width: 70, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Email', index: 'Email', align: 'left', width: 300, editable: false, search: true, searchoptions: { sopt: ['cn'] } },
                        { name: 'Cuit', index: 'Cuit', align: 'left', width: 120, editable: false, search: true, searchoptions: { sopt: ['cn'] } }
            ],
            onSelectRow: function (id) {
                if (id && id !== lastSelectedId) {
                    if (typeof lastSelectedId !== "undefined") {
                        grid.jqGrid('restoreRow', lastSelectedId);
                    }
                    lastSelectedId = id;
                }
            },
            pager: $('#ListaPager2'),
            rowNum: 13,
            rowList: [13, 20, 50, 100],
            sortname: 'RazonSocial',
            sortorder: 'asc',
            viewrecords: true,
            emptyrecords: 'No hay registros para mostrar',
            width: 'auto', // 'auto',
            autowidth: true,
            shrinkToFit: true,
            height: '100%',
            altRows: false,
            footerrow: false, //true,
            userDataOnFooter: true,
            multiboxonly: true,
            multiselect: true,
            multipleSearch: true,
            caption: '<b>PROVEEDORES</b>'
        });
        jQuery("#ListaProveedores").jqGrid('navGrid', '#ListaPager2', { refresh: true, add: false, edit: false, del: false }, {}, {}, {}, { sopt: ["cn"], width: 700, closeOnEscape: true, closeAfterSearch: true });
        //jQuery("#ListaProveedores").jqGrid('gridResize', { minWidth: 800, maxWidth: 800, minHeight: 80, maxHeight: 100 });
        jQuery("#ListaProveedores").filterToolbar({
            stringResult: true, searchOnEnter: true,
            defaultSearch: 'cn',
            enableClear: false
        });

        $(window).resize(function () {
            RefrescaAnchoJqgrids();
        });

        function jqGridFilter(filtersparam, grid) {
            grid.setGridParam({
                datatype: 'json',
                postData: {
                    filters: filtersparam,
                    'FechaInicial': $("#FechaInicial").val(),
                    'FechaFinal': $("#FechaFinal").val()
                },
                search: true
            });
            grid.trigger("reloadGrid");  // tenes que agregar datatype local  en la definicion de la grilla para que no la cargue en ese momento
        }

        var myfilter = { groupOp: "AND", rules: [] };
        if ($("#FechaInicial").val() != "") myfilter.rules.push({ field: "FechaRequerimiento", op: "ge", data: $("#FechaInicial").val() });
        if ($("#FechaFinal").val() != "") myfilter.rules.push({ field: "FechaRequerimiento", op: "le", data: $("#FechaFinal").val() });

        jqGridFilter(JSON.stringify(myfilter), $('#Lista'));

        $(function () {
            deshabilitarPanelesDerecho();
        })

        pageLayout.hide('east');
        pageLayout.hide('south');
    });

    function GenerarRM_Word() {
        //window.open('Imprimir/42501');
        //return;
        var $grid = $("#Lista"), selIds = $grid.jqGrid("getGridParam", "selarrrow"), i, n,
            cellValues = [];
        for (i = 0, n = selIds.length; i < n; i++) {
            var IdRequerimiento = $grid.jqGrid("getCell", selIds[i], "IdRequerimiento");

            var url = '@Html.Raw(@Url.Action("Imprimir", "Requerimiento", new { id = "__param__" }))';
            url=url.replace('__param__', encodeURIComponent(IdRequerimiento));
            //window.location.href = url.replace('__param__', encodeURIComponent(IdRequerimiento));
            //window.open(url, '_blank');
            window.open(url); 
           
            //$.post(url, function (result) {
            //    $('#previewCredencial').html(
            //        $('<iframe/>', {
            //            'class': 'pdfpreview', // some CSS class to set the width and height of the preview iframe
            //            'src': result.url
            //        })
            //    );
            //});

            @*function EditProducts(productId, orderId, employeeId, mode) {
                mode = "edit";
                debugger;
                var url = '@Html.Raw(Url.Action("Index", "Home", new { productId = "__productId__", orderId = "__orderId__", employeeId = "__employeeId__", Mode = "__mode__"}))';
                var params = url.replace('__productId__', productId).replace('__orderId__', orderId).replace('__employeeId__', employeeId).replace('__mode__', mode);
                window.location.href = params;
            }*@
        }
    };

    function GenerarRM_Pdf() {
        var $grid = $("#Lista"), selIds = $grid.jqGrid("getGridParam", "selarrrow"), i, n, cellValues = [];
        for (i = 0, n = selIds.length; i < n; i++) {
            var IdRequerimiento = $grid.jqGrid("getCell", selIds[i], "IdRequerimiento");
            var url = '@Html.Raw(@Url.Action("ImprimirPDF", "Requerimiento", new { id = "__param__" }))';
            url=url.replace('__param__', encodeURIComponent(IdRequerimiento));
            window.open(url); 
        }
    };

    function EnviarRM_Correo() {
        VerProveedores();
    };

    function EnviarRM_Correo2() {
        var i, n, IdsRequerimiento = "", IdsProveedor = "";
        var $grid = $("#Lista"), selIds = $grid.jqGrid("getGridParam", "selarrrow")
        var $grid2 = $("#ListaProveedores"), selIds2 = $grid2.jqGrid("getGridParam", "selarrrow")

        for (i = 0, n = selIds.length; i < n; i++) {
            IdsRequerimiento = IdsRequerimiento + $grid.jqGrid("getCell", selIds[i], "IdRequerimiento") + '|';
        }
        for (i = 0, n = selIds2.length; i < n; i++) {
            IdsProveedor = IdsProveedor + $grid2.jqGrid("getCell", selIds2[i], "IdProveedor") + '|';
        }

        $.ajax({
            type: 'POST',
            async: true,
            contentType: 'application/json; charset=utf-8',
            url: ROOT + 'Requerimiento/EnviarEmail',
            dataType: 'json',
            data: JSON.stringify({ IdsRequerimiento: IdsRequerimiento, IdsProveedor: IdsProveedor }),
            success: function (result) {
                if (result) {
                } else {
                    alert('No se pudo actualizar.');
                }
            },
        });
    };

    function MarcarRM_Impresa() {
        var $grid = $("#Lista"), selIds = $grid.jqGrid("getGridParam", "selarrrow"), i, n, IdRequerimiento, cellValues = [];
        for (i = 0, n = selIds.length; i < n; i++) {
            IdRequerimiento = $grid.jqGrid("getCell", selIds[i], "IdRequerimiento");
            $.ajaxQueue({
                type: 'POST',
                async: true,
                contentType: 'application/json; charset=utf-8',
                url: ROOT + 'Requerimiento/MarcarRM_Impresa',
                dataType: 'json',
                data: JSON.stringify({ IdRequerimiento: IdRequerimiento, Marca: "SI" }),
                success: function (result) {
                    if (result) {
                    } else {
                        alert('No se pudo actualizar.');
                    }
                },
            });
        }
    };

    function DesmarcarRM_Impresa() {
        var $grid = $("#Lista"), selIds = $grid.jqGrid("getGridParam", "selarrrow"), i, n, IdRequerimiento, cellValues = [];
        for (i = 0, n = selIds.length; i < n; i++) {
            IdRequerimiento = $grid.jqGrid("getCell", selIds[i], "IdRequerimiento");
            $.ajaxQueue({
                type: 'POST',
                async: true,
                contentType: 'application/json; charset=utf-8',
                url: ROOT + 'Requerimiento/MarcarRM_Impresa',
                dataType: 'json',
                data: JSON.stringify({ IdRequerimiento: IdRequerimiento, Marca: "NO" }),
                success: function (result) {
                    if (result) {
                    } else {
                        alert('No se pudo actualizar.');
                    }
                },
            });
        }
    };

</script>
