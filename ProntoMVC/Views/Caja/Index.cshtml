@model IEnumerable<ProntoMVC.Data.Models.Caja>
@{
    ViewBag.Title = "Cajas";
}

<br />
<div style="padding-left: 15px; padding-right: 15px;">
    <table id="Lista" class="scroll" cellpadding="0" cellspacing="0" style="font-size: 16px; font-family: 'Helvetica Narrow', 'Arial Narrow', Tahoma, Arial, Helvetica, sans-serif;"></table>
    <div id="ListaPager" class="scroll" style="text-align: center; background: ; height: 30px"></div>
</div>

<script type="text/javascript">
    var $grid = "";
    var lastSelectedId;
    var lastSelectediCol;
    var lastSelectediRow;
    var lastSelectediCol2;
    var lastSelectediRow2;
    var inEdit;
    var selICol;
    var selIRow;
    var gridCellWasClicked = false;
    var grillaenfoco = false;
    var getColumnIndexByName = function (grid, columnName) {
        var cm = grid.jqGrid('getGridParam', 'colModel'), i, l = cm.length;
        for (i = 0; i < l; i++) {
            if (cm[i].name === columnName) {
                return i; // return the index
            }
        }
        return -1;
    };
    var saveIcon = '<span class="ui-state-default" style="border:0"><span class="ui-icon ui-icon-info" style="float: left; margin-right: .3em;"></span></span>'

    function GrabarFila(gridId) {
        var $grid = $("#Lista");

        //jQuery('#Lista').jqGrid('saveCell', lastRowIndex, lastColIndex);
        $grid.jqGrid("saveCell", lastSelectediRow2, lastSelectediCol2);
        //GrabarGrillaLocal()

        var dataFromTheRow = $grid.jqGrid('getRowData', gridId);
        var datos = $("#formid").serializeObject();
        var err;

        datos.IdCaja = gridId;
        datos.IdCuenta = dataFromTheRow.IdCuenta;
        datos.IdMoneda = dataFromTheRow.IdMoneda;
        datos.Descripcion = dataFromTheRow.Descripcion;

        err = ""
        if (datos.Descripcion == "" || datos.Descripcion == undefined) err = err + "Falta definir la descripcion de la caja.\n"

        if (err != "") {
            alert('No se pudo grabar el registro.\n' + err);
        } else {
            //$('html, body').css('cursor', 'wait');
            $.ajax({
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                url: ROOT + 'Caja/BatchUpdate',
                dataType: 'json',
                data: JSON.stringify(datos),
                success: function (result) {
                    if (result) {
                        $grid.jqGrid('setRowData', gridId, { act: "" });
                        var rowid = $('#Lista').getGridParam('selrow');
                        var valor = result.IdCaja;
                        if (valor == "") { valor = "0"; }
                        $('#Lista').jqGrid('setCell', rowid, 'IdCaja', valor);
                    } else {
                        alert('No se pudo grabar el registro.');
                    }
                },
                error: function (xhr, textStatus, exceptionThrown) {
                    try {
                        var errorData = $.parseJSON(xhr.responseText);
                        var errorMessages = [];
                        for (var key in errorData) { errorMessages.push(errorData[key]); }
                        $('html, body').css('cursor', 'auto');
                        $('#grabar2').attr("disabled", false).val("Aceptar");
                        $("#textoMensajeAlerta").html(errorData.Errors.join("<br />"));
                        $("#mensajeAlerta").show();
                        alert(errorData.Errors.join("\n").replace(/<br\/>/g, '\n'));
                    } catch (e) {
                        $('html, body').css('cursor', 'auto');
                        $('#grabar2').attr("disabled", false).val("Aceptar");
                        $("#textoMensajeAlerta").html(xhr.responseText);
                        $("#mensajeAlerta").show();
                    }
                }
            });
        };
    };

    function EliminarFila(gridId) {
        var dataFromTheRow = $grid.jqGrid('getRowData', gridId);
        var idprincipal = dataFromTheRow['IdCaja'];
        if (idprincipal <= 0) {
            $grid.jqGrid('delRowData', gridId);
        } else {
            $.ajax({
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                url: ROOT + 'Caja/Delete',
                dataType: 'json',
                data: JSON.stringify({ id: idprincipal }),
                success: function (result) {
                    if (result) {
                        $grid.jqGrid('delRowData', gridId);
                    } else {
                        alert('No se pudo eliminar el registro.');
                    }
                },
            });
        };
    };

    $(document).ready(function () {

        $('.ui-jqgrid .ui-jqgrid-htable th div').css('white-space', 'normal');

        $.extend($.jgrid.inlineEdit, {
            keys: true
        });

        window.parent.document.body.onclick = saveEditedCell; // attach to parent window if any
        document.body.onclick = saveEditedCell; // attach to current document.

        function saveEditedCell(evt) {
            var target = $(evt.target);

            if ($grid) {
                var isCellClicked = $grid.find(target).length; // check if click is inside jqgrid
                if (gridCellWasClicked && !isCellClicked) // check if a valid click
                {
                    gridCellWasClicked = false;
                    $grid.jqGrid("saveCell", lastSelectediRow2, lastSelectediCol2);
                }
            }

            //$grid = "";
            gridCellWasClicked = false;

            if (jQuery("#Lista").find(target).length) {
                $grid = $('#Lista');
                grillaenfoco = true;
            }
            if (grillaenfoco) {
                gridCellWasClicked = true;
                lastSelectediRow2 = lastSelectediRow;
                lastSelectediCol2 = lastSelectediCol;
            }
        };

        function MarcarSeleccionadosParaEliminar(grid) {
            var selectedIds = grid.jqGrid('getGridParam', 'selarrrow');
            var i, Id;
            for (i = selectedIds.length - 1; i >= 0; i--) {
                Id = selectedIds[i];
                var se = "<input style='height:22px;width:20px;' type='button' value='B' onclick=\"EliminarFila('" + Id + "');\"  />";
                grid.jqGrid('setRowData', Id, { act: se });
                //grid.jqGrid('delRowData', selectedIds[i]);
            }
        };

        function AgregarItemVacio(grid) {
            var colModel = grid.jqGrid('getGridParam', 'colModel');
            var dataIds = grid.jqGrid('getDataIDs');
            var Id = (grid.jqGrid('getGridParam', 'records') + 1) * -1;
            var se = "<input style='height:22px;width:20px;' type='button' value='G' onclick=\"GrabarFila('" + Id + "');\"  />";
            var data, j, cm;

            data = '{';
            for (j = 1; j < colModel.length; j++) {
                cm = colModel[j];
                data = data + '"' + cm.index + '":' + '"",';
            }
            data = data.substring(0, data.length - 1) + '}';
            data = data.replace(/(\r\n|\n|\r)/gm, "");
            grid.jqGrid('addRowData', Id, data, "first");
            grid.jqGrid('setRowData', Id, { act: se });
        };

        var lastSelectedId;
        var inEdit;
        grid = $("#Lista");

        $('.ui-jqgrid .ui-jqgrid-htable th div').css('white-space', 'normal');

        $('#Lista').jqGrid({
            url: '@Url.Action("Cajas_DynamicGridData", "Caja")',
            datatype: 'json',
            mtype: 'POST',
            colNames: ['Acciones', 'IdCaja', 'IdCuenta', 'IdMoneda', 'Descripcion', 'Cuenta', 'Moneda'],
            colModel: [
                        { name: 'act', index: 'act', align: 'center', width: 80, sortable: false, editable: false, search: false },
                        { name: 'IdCaja', index: 'IdCaja', align: 'left', width: 100, editable: false, hidden: true },
                        { name: 'IdCuenta', index: 'IdCuenta', align: 'left', width: 100, editable: false, hidden: true },
                        { name: 'IdMoneda', index: 'IdMoneda', align: 'left', width: 100, editable: false, hidden: true },
                        { name: 'Descripcion', index: 'Descripcion', align: 'left', width: 300, editable: true, edittype: 'text', search: true, searchoptions: { clearSearch: true, searchOperators: true, sopt: ['eq', 'cn'] } },
                        {
                            name: 'Cuenta', index: 'Cuenta', align: 'left', width: 300, editable: true, hidden: false, edittype: 'select', editrules: { required: false },
                            editoptions: {
                                dataUrl: ROOT + 'Cuenta/GetCuentas?Texto=1',
                                dataInit: function (elem) {
                                    $(elem).width(290);
                                },
                                dataEvents: [{
                                    type: 'change', fn: function (e) {
                                        var $this = $(e.target), $td;
                                        if ($this.hasClass("FormElement")) {
                                            // form editing
                                            $('#IdCuenta').val(this.value);
                                        } else {
                                            $td = $this.closest("td");
                                            if ($td.hasClass("edit-cell")) {
                                                // cell editing
                                                var rowid = $('#Lista').getGridParam('selrow');
                                                var valor = this.value;
                                                if (valor == "") { valor = "0"; }
                                                $('#Lista').jqGrid('setCell', rowid, 'IdCuenta', valor);
                                            } else {
                                                // inline editing
                                            }
                                        }
                                    }
                                }]
                            },
                        },
                        {
                            name: 'Moneda', index: 'Moneda', align: 'left', width: 100, editable: true, hidden: false, edittype: 'select', editrules: { required: false },
                            editoptions: {
                                dataUrl: ROOT + 'Moneda/GetMonedas',
                                dataInit: function (elem) {
                                    $(elem).width(90);
                                },
                                dataEvents: [{
                                    type: 'change', fn: function (e) {
                                        var $this = $(e.target), $td;
                                        if ($this.hasClass("FormElement")) {
                                            // form editing
                                            $('#IdMoneda').val(this.value);
                                        } else {
                                            $td = $this.closest("td");
                                            if ($td.hasClass("edit-cell")) {
                                                // cell editing
                                                var rowid = $('#Lista').getGridParam('selrow');
                                                var valor = this.value;
                                                if (valor == "") { valor = "0"; }
                                                $('#Lista').jqGrid('setCell', rowid, 'IdMoneda', valor);
                                            } else {
                                                // inline editing
                                            }
                                        }
                                    }
                                }]
                            },
                        }
            ],
            onSelectRow: function (id) {
                if (id && id !== lastSelectedId) {
                    if (typeof lastSelectedId !== "undefined") {
                        grid.jqGrid('restoreRow', lastSelectedId);
                    }
                    lastSelectedId = id;
                }
            },

            onCellSelect: function (rowid, iCol, cellcontent, e) {
                var $this = $(this);
                var iRow = $('#' + $.jgrid.jqID(rowid))[0].rowIndex;
                lastSelectedId = rowid;
                lastSelectediCol = iCol;
                lastSelectediRow = iRow;
            },
            afterEditCell: function (id, name, val, iRow, iCol) {
                var se = "<input style='height:22px;width:20px;' type='button' value='G' onclick=\"GrabarFila('" + id + "');\"  />";
                jQuery("#Lista").jqGrid('setRowData', id, { act: se });
            },

            pager: $('#ListaPager'),
            rowNum: 20,
            rowList: [10, 20, 50, 100],
            sortname: 'IdCaja',
            sortorder: 'asc',
            multiselect: true,
            viewrecords: true,
            emptyrecords: 'No hay registros para mostrar',

            caption: '<b>CAJAS</b>',

            width: 'auto', // 'auto',
            autowidth: true,
            shrinkToFit: false,

            height: $(window).height() - ALTOLISTADO, // '100%'
            altRows: false,
            footerrow: false, //true,
            userDataOnFooter: true,

            gridview: true,
            multiboxonly: true,
            multipleSearch: true,

            cellEdit: true,
            cellsubmit: 'clientArray',
            editurl: ROOT + 'Empleado/EditGridData/'
        });


        //  //jQuery("#Lista").jqGrid('navGrid', '#ListaPager', { refresh: true, add: false, edit: false, del: false }, {}, {}, {}, { sopt: ["cn"], width: 700, closeOnEscape: true, closeAfterSearch: true });
        //  jQuery("#Lista").jqGrid('gridResize', { minWidth: 350, maxWidth: 1500, minHeight: 80, maxHeight: 500 });
        //  jQuery("#Lista").jqGrid('navGrid', '#ListaPager',
        // { csv: true, refresh: true, add: false, edit: false, del: false }, {}, {}, {},
        // {
        //     //sopt: ["cn"]
        //     //sopt: ['eq', 'ne', 'lt', 'le', 'gt', 'ge', 'bw', 'bn', 'ew', 'en', 'cn', 'nc', 'nu', 'nn', 'in', 'ni'],
        //     width: 700, closeOnEscape: true, closeAfterSearch: true, multipleSearch: true, overlay: false
        // }
        //);

        jQuery("#Lista").jqGrid('navGrid', '#ListaPager',
             { csv: true, refresh: true, add: false, edit: false, del: false }, {}, {}, {},
             {
                 //sopt: ["cn"]
                 //sopt: ['eq', 'ne', 'lt', 'le', 'gt', 'ge', 'bw', 'bn', 'ew', 'en', 'cn', 'nc', 'nu', 'nn', 'in', 'ni'],
                 width: 700, closeOnEscape: true, closeAfterSearch: true, multipleSearch: true, overlay: false
             }
            );

        jQuery("#Lista").jqGrid('navButtonAdd', '#ListaPager', {
            caption: "",
            buttonicon: "ui-icon-calculator",
            title: "Choose columns",
            onClickButton: function () {
                $(this).jqGrid('columnChooser',
                    { width: 550, msel_opts: { dividerLocation: 0.5 }, modal: true });
                $("#colchooser_" + $.jgrid.jqID(this.id) + ' div.available>div.actions')
                    .prepend('<label style="float:left;position:relative;margin-left:0.6em;top:0.6em">Search:</label>');
            }
        });

        jQuery("#Lista").filterToolbar({
            stringResult: true, searchOnEnter: true,
            defaultSearch: 'cn',
            enableClear: false
        }); // si queres sacar el enableClear, definilo en las searchoptions de la columna específica http://www.trirand.com/blog/?page_id=393/help/clearing-the-clear-icon-in-a-filtertoolbar/
        //myGrid.filterToolbar({  });

        jQuery("#Lista").jqGrid('navButtonAdd', '#ListaPager',
                {
                    caption: "Filter", title: "Toggle Searching Toolbar",
                    buttonicon: 'ui-icon-pin-s',
                    onClickButton: function () { myGrid[0].toggleToolbar(); }
                });

        jQuery("#Lista").jqGrid('navButtonAdd', '#ListaPager',
                {
                    caption: "", buttonicon: "ui-icon-plus", title: "Agregar item",
                    onClickButton: function () {
                        AgregarItemVacio(jQuery("#Lista"));
                    },
                });

        jQuery("#Lista").jqGrid('navButtonAdd', '#ListaPager',
                {
                    caption: "", buttonicon: "ui-icon-trash", title: "Eliminar",
                    onClickButton: function () {
                        MarcarSeleccionadosParaEliminar(jQuery("#Lista"));
                    },
                });
    });
</script>
