@model ProntoMVC.Data.Models.Asiento
@{
    ViewBag.Title = "Asiento";
}
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formid" }))
{

    @Html.ValidationSummary(true)





    @*para centrar verticalmente las observaciones *@
    <style type="text/css">
        .ui-jqgrid tr.jqgrow td {
            vertical-align: middle !important;
        }
    </style>



    <div class="container-fluid" style="padding-left: 0px; padding-right: 0px;">
        <div class="modal" id="loading">
            <img src="@Url.Content("~/Content/images/fhhrx.gif")" style="margin-right: 5px;" />
            Cargando...
        </div>
        <style>
            /* probando cómo zafar del color en los border del arbol de la izquierda */
            .ui-jqgrid tr.ui-row-ltr td {
                border-color: rgb(234, 234, 234) /* rgba(213, 175, 175, 0); */;
            }
        </style>
        <style>
            input[readonly] {
                background: transparent;
                border: 0;
                -webkit-box-shadow: none;
                -moz-box-shadow: none;
                box-shadow: none;
            }

            .container-fluid {
                padding-left: 8px; /*    margin-right: 15px; */
            }
        </style>
        <style>
            .ui-jqgrid tr.footrow-ltr td {
                border-right-color: transparent !important;
                border: 0 transparent !important;
            }
        </style>
        <style>
            .accordion-heading {
                /*   font-size: 25px !important;  */
            }

            /* http://stackoverflow.com/questions/13778703/adding-open-closed-icon-to-twitter-bootstrap-collapsibles-accordions */
            .accordion-caret .accordion-toggle:hover {
                text-decoration: none;
            }

                .accordion-caret .accordion-toggle:hover span, .accordion-caret .accordion-toggle:hover strong {
                    text-decoration: underline;
                }

            .accordion-caret .accordion-toggle:before {
                font-size: 20px;
                vertical-align: -3px;
            }

            .accordion-caret .accordion-toggle:not(.collapsed):before {
                /*                content: "▾"; */
                margin-right: 0px;
            }

            .accordion-caret .accordion-toggle.collapsed:before {
                /*             content: "▸"; */
                margin-right: 0px;
            }
        </style>

        <style>
            /*  http://stackoverflow.com/questions/13103544/how-to-restrict-jqgrid-textarea-height-in-grid-only */
            tr.jqgrow > td.textInDiv > div {
                max-height: 30px;
                height: 30px;
                overflow: auto;
            }

            td.form-view-data > span > div {
                max-height: 30px;
                height: 30px;
                overflow: auto;
            }
        </style>
        <form class="form-horizontal">
            <div>@Html.Hidden("IdAsiento", Model.IdAsiento)</div>


            <div id="cuerposinpie" class="" style="padding-bottom:2px; position: relative;  " @*Height of the footer *@>
                <div id="conscroll" style="height: 600px; margin-bottom: 40px; overflow-y: scroll;
                padding-left: 25px; padding-right: 25px; overflow-x: hidden;">



                    <div class="row-fluid" style="margin-bottom: 15px; margin-top: 5px;">
                        @* <div class="span5 lightblue" style="font-weight: bold; font-size: 34px; vertical-align: "> *@
                        <div class="" style='font-size: 34px; margin-top: 5px; height: 45px; font-weight: 400;
                    text-shadow: 0 1px 0  lightgray; font-family: "Segoe UI Web Regular", "Segoe UI", "Lucida", Tahoma, Arial,"sans-serif"'>
                            <span class="span8" style="padding-top: 15px; width: ">
                                Asiento @Html.DisplayFor(model => model.NumeroAsiento, new { style = "height: 50px ;  font-weight: 400; text-shadow: 0 1px 0  lightgray; font-size: 34px; border: 0; padding: 0 ; text-align: right; background: transparent;  font-family: 'Segoe UI Web Regular', 'Segoe UI', 'Lucida', Tahoma, Arial,'sans-serif';                    -webkit-box-shadow: none; -moz-box-shadow: none; box-shadow: none;                   ", @class = "", @readonly = "readonly" })
                            </span>
                        </div>

                    </div>

                    <div class="row-fluid">

                        <div class="span2 lightblue">
                            @Html.LabelFor(model => model.NumeroAsiento, "Número")
                            @Html.TextBoxFor(model => model.NumeroAsiento, new { @class = "span12", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.NumeroAsiento)
                        </div>

                        <div class="span2 lightblue">
                            @Html.LabelFor(model => model.FechaAsiento, "Fecha")
                            @Html.TextBoxFor(model => model.FechaAsiento, new { @class = "span12" })
                            @Html.ValidationMessageFor(model => model.FechaAsiento)
                        </div>
                        <script>
                            $("#FechaAsiento").datepicker({
                                changeMonth: true,
                                changeYear: true,
                                dateFormat: 'dd/mm/yy'
                                //numberOfMonths: 2,
                            });



                        </script>

                        <div class="span8 lightblue">
                            @Html.LabelFor(model => model.Concepto, "Concepto")
                            @Html.TextBoxFor(model => model.Concepto, new { @class = "span12" })
                            @Html.ValidationMessageFor(model => model.Concepto)
                        </div>
                    </div>
                    <div class="row-fluid">
                        <div id="divGrilla" class="span12 lightblue">



                            <table id="Lista" class="scroll separacion AltoRenglones" cellpadding="0" cellspacing="0"
                                   style="font-size: 22px; font-family: 'Helvetica Narrow', 'Arial Narrow', Tahoma, Arial, Helvetica, sans-serif;"></table>
                            <div id="ListaPager" class="scroll" style="text-align: center; height: 30px"></div>

                        </div>
                    </div>

                    <div class="row-fluid">
                        <input type="button" class="btn btn-small" id="addData" value="+ Agregar" />
                        <input type="button" class="btn btn-small" id="edtData" value="Modificar" />
                        <input type="button" class="btn btn-small" id="delData" value="Borrar" />

                    </div>
                    <br />

                    <div class="row-fluid">
                        <div class="span6 lightblue">
                            @Html.LabelFor(model => model.AsientoApertura, "Asiento de apertura del ejercicio")
                            @Html.RadioButtonFor(model => model.AsientoApertura, "SI") SI
                            @Html.RadioButtonFor(model => model.AsientoApertura, "NO") NO
                        </div>

                        <div class="span1 lightblue">
                            @Html.Label("Diferencia")
                        </div>
                        <div class="span4 lightblue">

                            @Html.TextBox("Diferencia", "", new { @class = "span12", @readonly = "readonly" })

                            <script>
                                function calculateTotal() {
                                    var debe = $('#Lista').jqGrid('getCol', 'Debe', false, 'sum')
                                    var haber = $('#Lista').jqGrid('getCol', 'Haber', false, 'sum')

                                    $("#Lista").jqGrid('footerData', 'set', {
                                        Obra: 'TOTALES',
                                        Debe: debe.toFixed(4),
                                        Haber: haber.toFixed(4),
                                    });

                                    $("#Diferencia").val(debe - haber);
                                }
                            </script>
                        </div>
                    </div>

                    <div class="row-fluid">


                        @Html.LabelFor(model => model.AsignarAPresupuestoObra, "Agregar a presupuesto de obra")
                        @Html.RadioButtonFor(model => model.AsignarAPresupuestoObra, "SI") SI
                        @Html.RadioButtonFor(model => model.AsignarAPresupuestoObra, "NO") NO
                    </div>





                </div>


                <div id="pie" style="position: absolute; bottom: -26px; background: rgb(236, 236, 236);
                width: 100%; height: 68px; padding-left: 0; margin-right: 15px;">
                    <hr style="margin: 0; border-top-color: #D8D4D4; border-bottom: 0px solid #ffffff;" />
                    <div class="row-fluid " style="padding: 11px 0px 0px 0px">
                        <div class="span7 pull-right">
                            <input type="button" id="grabar2" value="Aceptar" class="btn  btn-large btn-primary" />
                            @if (Model.IdAsiento > 0)
                            { @Html.ActionLink("Eliminar", "DeleteConfirmed", new { id = Model.IdAsiento }, new { @class = "btn  btn-large  btn-default" }) }
                            @Html.ActionLink("Volver al listado", "Index", null, new { @class = "btn  btn-large  btn-link" })
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
    <!--/.fluid-container-->
    <script type="text/javascript">


        var lastColIndex;
        var lastRowIndex;


        $(window).resize(function () {
            RefrescaAnchoGrillaDetalle();

            $("#conscroll").height($(window).height() - 120);
        });


        $(function () {


            //            $("body").on({
            //                ajaxStart: function () {
            //                    $(this).addClass("loading");
            //                },
            //                ajaxStop: function () {
            //                    $(this).removeClass("loading");
            //                }
            //            });


            var OrigenDescripcionDefault = 0; // ViewBag.OrigenDescripcionDefault





            // vuelvo a llenar el mySelect (se hace por primera vez en el Layout) porque no sé qué pasa que algo me lo vacía
            $.post(ROOT + 'Empleado/EmpleadosParaComboSectorCompras/',
            function (data) {
                var select = $('#mySelect').empty();
                for (var i = 0; i < data.length; i++) {
                    select.append('<option value="' + data[i].IdEmpleado + '">' + data[i].Nombre + '</option>');
                }
            }, "json");



            //$.ajax({
            //    type: "GET",
            //    contentType: "application/json; charset=utf-8",
            //    url: ROOT + 'Pedido/Autorizaciones/',
            //    data: { IdPedido: $("#IdPedido").val() },
            //    dataType: "Json",
            //    success: function (data) {
            //        for (var i = 0; i < data.length; i++) {
            //            var j = i + 1;
            //            $("#chk" + j).attr('checked', true);
            //            $("#chk" + j).attr('title', data[i].Nombre);
            //        }


            //    }
            //});
            Aprobado();

            function Aprobado() {
                if ($('#Aprobo').val() != "") {
                    //if ($('#FechaAprobacion').val() != null) {
                    $("#chk0").attr('checked', true);
                    var Aprobo = $("#Aprobo > option:selected").html();
                    $("#chk0").attr('title', Aprobo);
                }
                else {
                    $("#chk0").attr('checked', false);
                    $("#chk0").attr('title', "");
                }
            }



        });










        $(function () {


            $('#Lista').jqGrid({




                url: ROOT + 'Asiento/DetAsientos/', // no puedo usar el modelo para cargar la grilla?????
                postData: { 'IdAsiento': function () { return $("#IdAsiento").val(); } }, //esto es el parametro con que se llama a la url
                //editurl: ROOT + 'Asiento/EditGridData/', // "clientArray",
                /////////
                datatype: 'json',
                mtype: 'POST',
                //////////////////////////////////////////////
                //////////////////////////////////////////////
                //////////////////////////////////////////////

                colNames: ['#',

                                'IdDetalleAsiento',
                           'IdCuenta', 'item',

                           'Cuenta',

                            'Detalle de cuenta', 'Obra', 'Debe', 'Haber',

                            'Registrar en analitico', 'Detalle',
                            'Moneda destino', 'Cotiz. moneda destino', 'Importe mon destino',

                            'Enviar a libro',
                        'Pase IVA',
                        'Nro Comprobante',
                        'Porcentaje de IVA', 'IdObra','IdMoneda'
                ],
                colModel: [
                                { name: 'accion', index: 'act', align: 'center', width: 40, sortable: false, editable: false, search: false, hidden: true }, //, formatter: 'showlink', formatoptions: { baseLinkUrl: '@Url.Action("Edit")'} },
                                { name: 'IdDetalleAsiento', label: 'TB', index: 'IdDetalleAsiento', align: 'center', width: 80, sortable: false, editable: false, search: false, hidden: true }, //, formatter: 'showlink', formatoptions: { baseLinkUrl: '@Url.Action("Edit")'} },
                                { name: 'IdCuenta', label: 'TB', key: true, index: 'IdRequerimiento', align: 'left', width: 100, editable: false, hidden: true },
                                { name: 'Item', index: 'Item', align: 'left', width: 50, editable: true, search: true, searchoptions: { clearSearch: false, searchOperators: true, sopt: ['cn'] } },
                                { name: 'Codigo', index: 'Codigo', align: 'left', width: 50, hidden: false, editable: false, search: true, searchoptions: { clearSearch: false, searchOperators: true, sopt: ['cn', 'eq'] } },

                                {
                                    name: 'Cuenta', formoptions: {  label: "Cuenta" }, index: 'Cuenta', align: 'left', width: 250,
                                    hidden: false,
                                    editable: true, edittype: 'text',
                                    editoptions: {
                                        rows: '1', cols: '1',
                                        dataInit: function (elem) {
                                            var NoResultsLabel = "No se encontraron resultados"; // http://stackoverflow.com/questions/8663189/jquery-autocomplete-no-result-message

                                            $(elem).autocomplete({

                                                source: ROOT + 'Cuenta/GetCuentasAutocomplete',
                                                minLength: 0,
                                                select: function (event, ui) {

                                                    if (ui.item.label === NoResultsLabel) {
                                                        event.preventDefault();
                                                        return;
                                                    }
                                                    // cómo hago si la modificacion se hizo en modo inline??????


                                                    //if ($($("#Lista").jqGrid("getInd", rowid, true)).attr("editable") === "1") {
                                                    // the row having id=rowid is in editing mode


                                                    //                                            }
                                                    //                                          else {



                                                    //                                            $("#IdCuenta").val(ui.id);
                                                    //                                            $("#Codigo").val(ui.codigo); // por qué acá traes la propiedad codigo en lugar de value? -porque sugiero un texto pero al seleccionar solo tomo un pedazo
                                                    //                                            $("#CuentaGasto").val(ui.title);

                                                    $("#IdCuenta").val(ui.item.id);
                                                    $("#Codigo").val(ui.item.codigo); // por qué acá traes la propiedad codigo en lugar de value? -porque sugiero un texto pero al seleccionar solo tomo un pedazo
                                                    $("#CuentaGasto").val(ui.item.title);
                                                    //}

                                                },
                                                focus: function (event, ui) {
                                                    if (ui.item.label === NoResultsLabel) {
                                                        event.preventDefault();
                                                    }
                                                }
                                            })
                                            .data("ui-autocomplete")._renderItem = function (ul, item) {
                                                return $("<li></li>")
                                                    .data("ui-autocomplete-item", item)
                                                    .append("<a><span style='display:inline-block;width:500px;font-size:12px'><b>" + item.value + " [" + item.codigo + "]</b></span></a>")
                                                    .appendTo(ul);
                                            };
                                        }


                                                ,
                                        dataEvents: [{
                                            type: 'change',
                                            fn: function (e) {

                                                //alert(this.value);

                                                if (this.value == "No se encontraron resultados") {
                                                    $("#Descripcion").val("");
                                                    return;
                                                }

                                                $.post(ROOT + 'Cuenta/GetCuentasAutocomplete',  // ?term=' + val
                                                    { term: this.value },
                                                    function (data) {
                                                        if (data.length == 1 || data.length > 1) { // qué pasa si encuentra más de uno?????
                                                            var ui = data[0];

                                                            if (ui.codigo == "") {
                                                                alert("No existe la cuenta"); // se está bancando que no sea identica la descripcion
                                                                $("#Descripcion").val("");
                                                                return;
                                                            }


                                                            //alert('hay ' + data.length);

                                                            alert(ui.codigo);

                                                            $("#IdCuenta").val(ui.id);
                                                            $("#Codigo").val(ui.codigo); // por qué acá traes la propiedad codigo en lugar de value? -porque sugiero un texto pero al seleccionar solo tomo un pedazo
                                                            $("#CuentaGasto").val(ui.title);

                                                            //                                                    $("#IdArticulo").val(ui.id);
                                                            //                                                    $("#Codigo").val(ui.codigo);
                                                            //                                                    $("#IdUnidad").val(ui.IdUnidad);
                                                            //                                                    //$("#Unidad").val(ui.item.Unidad);
                                                            //                                                    $("#Unidad").val(ui.IdUnidad); // hay que ponerle el id para elegir el item... por eso es que cuando salis del form en la celda queda con el id como texto...  no?

                                                            //                                                    UltimoIdArticulo = ui.id;
                                                            //                                                    UltimoIdUnidad = ui.IdUnidad;


                                                        }
                                                        else {

                                                            alert("No existe el artículo"); // se está bancando que no sea identica la descripcion
                                                        }
                                                    }
                                                );



                                            }
                                        }]
                                    },
                                    editrules: { required: false }
                                },


                                {
                                    name: 'Obra', formoptions: { label: "Obra" }, index: 'Cuenta', align: 'left', width: 250,
                                    hidden: false,
                                    editable: true, edittype: 'text',
                                    editoptions: {
                                        rows: '1', cols: '1',
                                        dataInit: function (elem) {
                                            var NoResultsLabel = "No se encontraron resultados"; // http://stackoverflow.com/questions/8663189/jquery-autocomplete-no-result-message

                                            $(elem).autocomplete({

                                                source: ROOT + 'Articulo/GetObrasAutocomplete2',
                                                minLength: 0,
                                                select: function (event, ui) {

                                                    if (ui.item.label === NoResultsLabel) {
                                                        event.preventDefault();
                                                        return;
                                                    }
                                                    // cómo hago si la modificacion se hizo en modo inline??????


                                                    //if ($($("#Lista").jqGrid("getInd", rowid, true)).attr("editable") === "1") {
                                                    // the row having id=rowid is in editing mode


                                                    //                                            }
                                                    //                                          else {



                                                    //                                            $("#IdCuenta").val(ui.id);
                                                    //                                            $("#Codigo").val(ui.codigo); // por qué acá traes la propiedad codigo en lugar de value? -porque sugiero un texto pero al seleccionar solo tomo un pedazo
                                                    //                                            $("#CuentaGasto").val(ui.title);

                                                    $("#IdObra").val(ui.item.id);
                                                    //$("#Codigo").val(ui.item.codigo); // por qué acá traes la propiedad codigo en lugar de value? -porque sugiero un texto pero al seleccionar solo tomo un pedazo
                                                    //$("#CuentaGasto").val(ui.item.title);
                                                    //}

                                                },
                                                focus: function (event, ui) {
                                                    if (ui.item.label === NoResultsLabel) {
                                                        event.preventDefault();
                                                    }
                                                }
                                            })
                                            .data("ui-autocomplete")._renderItem = function (ul, item) {
                                                return $("<li></li>")
                                                    .data("ui-autocomplete-item", item)
                                                    .append("<a><span style='display:inline-block;width:500px;font-size:12px'><b>" + item.value + " [" + item.codigo + "]</b></span></a>")
                                                    .appendTo(ul);
                                            };
                                        }


                                                ,
                                        dataEvents: [{
                                            type: 'change',
                                            fn: function (e) {

                                                //alert(this.value);

                                                if (this.value == "No se encontraron resultados") {
                                                    $("#Obra").val("");
                                                    return;
                                                }

                                                $.post(ROOT + 'Articulo/GetObrasAutocomplete2',  // ?term=' + val
                                                    { term: this.value },
                                                    function (data) {
                                                        if (data.length == 1 || data.length > 1) { // qué pasa si encuentra más de uno?????
                                                            var ui = data[0];

                                                            if (ui.codigo == "") {
                                                                alert("No existe la obra"); // se está bancando que no sea identica la descripcion
                                                                $("#Obra").val("");
                                                                return;
                                                            }


                                                            //alert('hay ' + data.length);

                                                            alert(ui.codigo);

                                                            $("#IdObra").val(ui.id);
                                                            //$("#Codigo").val(ui.codigo); // por qué acá traes la propiedad codigo en lugar de value? -porque sugiero un texto pero al seleccionar solo tomo un pedazo
                                                            //$("#CuentaGasto").val(ui.title);

                                                            //                                                    $("#IdArticulo").val(ui.id);
                                                            //                                                    $("#Codigo").val(ui.codigo);
                                                            //                                                    $("#IdUnidad").val(ui.IdUnidad);
                                                            //                                                    //$("#Unidad").val(ui.item.Unidad);
                                                            //                                                    $("#Unidad").val(ui.IdUnidad); // hay que ponerle el id para elegir el item... por eso es que cuando salis del form en la celda queda con el id como texto...  no?

                                                            //                                                    UltimoIdArticulo = ui.id;
                                                            //                                                    UltimoIdUnidad = ui.IdUnidad;


                                                        }
                                                        else {

                                                            alert("No existe la obra"); // se está bancando que no sea identica la descripcion
                                                        }
                                                    }
                                                );



                                            }
                                        }]
                                    },
                                    editrules: { required: false }
                                },


                                { name: 'Debe', label: 'TB', index: 'Debe', align: 'right', width: 100, editable: true, search: true, searchoptions: { sopt: ['cn'] }, hidden: false },
                                { name: 'Haber', label: 'TB', index: 'Haber', align: 'right', width: 100, editable: true, search: false, searchoptions: { sopt: ['cn'] }, hidden: false },




                                 {
                                     name: 'RegistrarEnAnalitico', label: 'TB', index: 'RegistrarEnAnalitico', align: 'center', width: 50,
                                     editable: true, edittype: 'checkbox', editoptions: { value: "True:False" },
                                     //formatter: "checkbox",
                                     formatter: "SiNoFormatter",
                                     formatoptions: { disabled: false }
                                 },

                                { name: 'Detalle', index: 'Detalle', label: 'TB', align: 'left', width: 300, editable: true, search: true, searchoptions: { clearSearch: false, searchOperators: true, sopt: ['cn', 'eq'] } },




                                {
                                    name: 'MonedaDestino', index: 'MonedaDestino',
                                    align: 'left',
                                    width: 50, editable: true, hidden: false,
                                    edittype: 'select', // formatter: 'select',
                                    editrules: { required: false },
                                    editoptions: {
                                        dataUrl: ROOT +  'Moneda/GetMonedas',
                                        dataInit: function (elem) {
                                            $(elem).width(40);
                                        },
                                        dataEvents: [{
                                            type: 'change', fn: function (e) {
                                                var $this = $(e.target), $td;
                                                if ($this.hasClass("FormElement")) {
                                                    // form editing
                                                    $('#IdMonedaDestino').val(this.value);
                                                    Moneda_Cotizacion(null, this.value, function (cotiz) {
                                                                    $('#CotizacionMoneda').val (cotiz);
                                                    });
                                                } else {
                                                    $td = $this.closest("td");
                                                    if ($td.hasClass("edit-cell")) {
                                                        // cell editing
                                                        var rowid = $('#Lista').getGridParam('selrow');
                                                        $('#Lista').jqGrid('setCell', rowid, 'IdMonedaDestino', this.value);
                                                        Moneda_Cotizacion(null, this.value, function (cotiz) {
                                                                $('#Lista').jqGrid('setCell', rowid, 'CotizacionMoneda', cotiz);
                                                        });
                                                        
                                                    } else {
                                                        // inline editing
                                                    }
                                                }
                                            }
                                        }]
                                    },
                                },

                                { name: 'CotizacionMoneda', label: 'TB', index: 'CotizacionMoneda', align: 'center', width: 80, editable: true, editoptions: {}, search: false, searchoptions: { sopt: ['cn'] }, hidden: false },
                                { name: 'ImporteEnMonedaDestino', label: 'TB', index: 'ImporteEnMonedaDestino', align: 'center', width: 80, editable: true, editoptions: {}, search: false, searchoptions: { sopt: ['cn'] }, hidden: false },



                                 {

                                     name: 'Libro', label: 'TB'
                                    , formoptions: {
                                        //rowpos: 11, colpos: 2,
                                        label: "Enviar a libros"
                                    }
                                    , index: 'Libro',
                                    align: 'center', width: 100, editable: true, hidden: false,
                                    edittype: 'select', formatter: 'select',
                                     // formatter: radioFormatter, unformat: unformatRadio,
                                     editrules: {
                                         required: false
                                         //                                      , readonly: ( (OrigenDescripcionDefault==3 || true) ?  'readonly' : ''  )                , disabled: 'disabled'
                                     },
                                     editoptions: {
                                         //                         readonly: true,
                                         //   disabled:  ( (OrigenDescripcionDefault==3 ) ?  'disabled' : ''  )  ,
                                         //defaultValue: OrigenDescripcionDefault,
                                         value: "N:no enviar a los libros;V:enviar al libro ventas; C:enviar al libro ventas;:" //, size: 3
                                         //,
                                         //     custom_element: myelem, custom_value: myvalue
                                     }

                                 },

                                {

                                    name: 'TipoImporte', label: 'TB'
                                        , formoptions: {
                                            //rowpos: 11, colpos: 2,
                                            label: "El pase es"
                                        }
                                        , index: 'TipoImporte',
                                        align: 'center', width: 100, editable: true, hidden: false,
                                        edittype: 'select', formatter: 'select',
                                    // edittype: 'custom',
                                    // formatter: radioFormatter, unformat: unformatRadio,
                                    editrules: {
                                        required: false
                                        //                                      , readonly: ( (OrigenDescripcionDefault==3 || true) ?  'readonly' : ''  )                , disabled: 'disabled'
                                    },
                                    editoptions: {
                                        //                         readonly: true,
                                        //   disabled:  ( (OrigenDescripcionDefault==3 ) ?  'disabled' : ''  )  ,
                                        //defaultValue: OrigenDescripcionDefault,
                                        value: "I:IVA;G:Gravado;N:No gravado;:" //, size: 3
                                        //,
                                        //     custom_element: myelem, custom_value: myvalue
                                    }

                                },



                                { name: 'NumeroComprobante', index: 'NumeroComprobante', label: 'TB', align: 'left', width: 100, editable: true, editoptions: {}, search: true, searchoptions: { sopt: ['cn'] }, hidden: false },
                                { name: 'PorcentajeIVA', label: 'TB', index: 'PorcentajeIVA', align: 'left', width: 70, editable: true, editoptions: {}, search: false, searchoptions: { sopt: ['cn'] }, hidden: false },


                                { name: 'IdObra', label: 'TB', key: true, index: 'IdObra', align: 'left', width: 100, editable: false, hidden: true },
                                { name: 'IdMonedaDestino', label: 'TB', key: true, index: 'IdMonedaDestino', align: 'left', width: 100, editable: false, hidden: true },


                ],

                //////////////////////////////////////////////
                //////////////////////////////////////////////
                //////////////////////////////////////////////

                loadComplete: function (data) {
                    calculateTotal();
                },

                onSelectRow: function (id) {


                    try {
                        if (id && id !== lastSelectedId) {
                            if (typeof lastSelectedId !== "undefined") {
                                grid.jqGrid('restoreRow', lastSelectedId);
                            }
                            lastSelectedId = id;
                            calculateTotal();
                        }
                    } catch (e) {

                    }

                },

                ondblClickRow: function (id) {
                    try {
                        jQuery('#Lista').jqGrid('saveCell', lastRowIndex, lastColIndex);

                        //if (id && id !== lastSelectedId) {
                        //    if (typeof lastSelectedId !== "undefined") {
                        //        jQuery('#Lista').jqGrid('restoreRow', lastSelectedId);
                        //    }
                        //    lastSelectedId = id;

                        //}
                        //jQuery('#Lista').jqGrid('restoreRow', id);
                    } catch (e) {

                    }
                    $("#edtData").click(); //prefiero que copie con solo hacer clic  -y quizás hace el drag inutil, en especial cuando las grillas son fijas
                },


                beforeShowForm: function (form) {
                    // "editmodlist" //http://stackoverflow.com/questions/3967488/how-to-center-jqgrid-popup-modal-window
                    var dlgDiv = $("#editmod" + grid[0].id);
                    var parentDiv = dlgDiv.parent(); // div#gbox_list
                    var dlgWidth = dlgDiv.width();
                    var parentWidth = parentDiv.width();
                    var dlgHeight = dlgDiv.height();
                    var parentHeight = parentDiv.height();
                    // TODO: change parentWidth and parentHeight in case of the grid
                    //       is larger as the browser window
                    dlgDiv[0].style.top = Math.round((parentHeight - dlgHeight) / 2) + "px";
                    dlgDiv[0].style.left = Math.round((parentWidth - dlgWidth) / 2) + "px";
                },

                beforeEditCell: function (rowid, cellname, value, iRow, iCol) {
                    lastRowIndex = iRow;
                    lastColIndex = iCol;
                },

                afterSaveCell: function () {
                    calculateTotal();
                },




                pager: $('#ListaPager'),
                //rowNum: 100,
                //rowList: [10, 20, 50, 100],
                //sortname: 'NumeroItem',
                //sortorder: 'asc',
                viewrecords: false,
                pgbuttons: false,
                pgtext: "",
                pginput: false,

                ///////////////////////////////
                width: 'auto', // 'auto',
                autowidth: true,
                shrinkToFit: false,
                //////////////////////////////
                height: '150px', // 'auto',
                altRows: false,
                rownumbers: false,
                footerrow: true,
                userDataOnFooter: true
             , multiselect: true




                ///////////////////////////////////////////////////////////////////////////////////////////////
                ///////////////////////////////////////////////////////////////////////////////////////////////
                ///////////////////////////////////////////////////////////////////////////////////////////////
                // http://stackoverflow.com/questions/14662632/jqgrid-celledit-in-json-data-shows-url-not-set-alert
         ,
                cellEdit: true,
                cellsubmit: 'clientArray'
        , editurl: ROOT + 'Asiento/EditGridData/' // pinta que esta es la papa: editurl con la url, y cellsubmit en clientarray
                ///////////////////////////////////////////////////////////////////////////////////////////////
                ///////////////////////////////////////////////////////////////////////////////////////////////
            });





            jQuery("#Lista").jqGrid('navGrid', '#ListaPager', { refresh: false, add: false, edit: false, del: false, search: false }, {}, {}, {}, { sopt: ["cn"], width: 700, closeOnEscape: true, closeAfterSearch: true });
            jQuery("#Lista").jqGrid('navButtonAdd', '#ListaPager',
                                         {
                                             caption: "", buttonicon: "ui-icon-plus", title: "Agregar item",
                                             onClickButton: function () {
                                                 $("#addData").click();
                                                 //AgregarItemVacio(jQuery("#Lista"));
                                             },
                                         });
            jQuery("#Lista").jqGrid('navButtonAdd', '#ListaPager',
                                         {
                                             caption: "", buttonicon: "ui-icon-trash", title: "Eliminar",
                                             onClickButton: function () {
                                                 EliminarSeleccionados(jQuery("#Lista"));
                                             },
                                         });
            jQuery("#Lista").jqGrid('gridResize', { minWidth: 350, maxWidth: 910, minHeight: 100, maxHeight: 500 });















            function SerializaForm() {
                var cm, data1, data2, valor;
                var colModel = jQuery("#Lista").jqGrid('getGridParam', 'colModel');
                //            var cabecera = { "IdPedido": "", "Numero": "", "SubNumero": "", "FechaIngreso": "", "IdProveedor": "", "Validez": "", "Bonificacion": "", "PorcentajeIva1": "", "IdMoneda": "",
                //                "ImporteBonificacion": "", "ImporteIva1": "", "ImporteTotal": "", "IdPlazoEntrega": "", "IdCondicionCompra": "", "Garantia": "", "LugarEntrega": "",
                //                "IdComprador": "", "Aprobo": "", "Referencia": "", "Detalle": "", "Contacto": "", "Observaciones": "", "DetallePedidos": []
                //            };

                //var ImporteBonificacion = $("#TotalBonificacionGlobal").val();
                //            ImporteBonificacion = ImporteBonificacion.replace(".", ",");

                //////////////////////////////////////////////////////////////////////////////////////////////
                var cabecera = $("#formid").serializeObject(); // .serializeArray(); // serializeArray
                cabecera.DetalleAsientos = [];


                //cabecera.IdProveedor = $("#IdProveedor").val();
                //// como no le encontre la vuelta a automatizar la serializacion de inputs disableados, los pongo manualmente
                //// como no le encontre la vuelta a automatizar la serializacion de inputs disableados, los pongo manualmente
                ////cabecera.NumeroFactura = $("#NumeroFactura").val();




                ////            cabecera.IdPedido = $("#IdPedido").val();
                //cabecera.NumeroPedido = $("#NumeroPedido").val();
                //// cabecera.FechaPedido = $("#FechaPedido").datepicker("getDate");
                //cabecera.FechaPedido = $.datepicker.formatDate("yy/mm/dd", $.datepicker.parseDate("dd/mm/yy", $("#FechaPedido").val()));
                ////            cabecera.SubNumero = $("#SubNumero").val();
                ////            cabecera.FechaIngreso = $("#FechaIngreso").val();
                ////            cabecera.IdProveedor = $("#IdProveedor").val();
                ////            cabecera.Validez = $("#Validez").val();
                //cabecera.DetalleCondicionCompra = $("#DetalleCondicionCompra").val();
                //cabecera.Bonificacion = $("#TotalBonificacionGlobal").val().replace(".", ",");
                //////            cabecera.PorcentajeIva1 = 21;
                ////            cabecera.IdMoneda = $("#IdMoneda").val();
                ////            cabecera.ImporteBonificacion = ImporteBonificacion;
                //cabecera.TotalIva1 = $("#TotalIva").val().replace(".", ",");
                //cabecera.TotalPedido = $("#Total").val().replace(".", ",");
                ////            cabecera.IdPlazoEntrega = $("#IdPlazoEntrega").val();
                ////            cabecera.IdCondicionCompra = $("#IdCondicionCompra").val();
                ////            cabecera.Garantia = $("#Garantia").val();
                ////            cabecera.LugarEntrega = $("#LugarEntrega").val();
                ////            cabecera.IdComprador = $("#IdComprador").val();
                ////            cabecera.Aprobo = $("#Aprobo").val();
                ////            cabecera.Referencia = $("#Referencia").val();
                ////            cabecera.Detalle = $("#Detalle").val();
                ////            cabecera.Contacto = $("#Contacto").val();
                ////            cabecera.Observaciones = $("#Observaciones").val();

                //cabecera.CotizacionMoneda = $("#CotizacionMoneda").val().replace(".", ",");

                var dataIds = $('#Lista').jqGrid('getDataIDs');
                for (var i = 0; i < dataIds.length; i++) {
                    try {


                        var saveparameters = {
                            "successfunc": null,
                            "url": 'clientArray',
                            "extraparam": {},
                            //                "aftersavefunc": function (response) {
                            //                    alert('saved');
                            //                },
                            "errorfunc": null,
                            "afterrestorefunc": null,
                            "restoreAfterError": true,
                            "mtype": "POST"
                        }

                        $('#Lista').jqGrid('saveRow', dataIds[i], saveparameters, 'clientArray'); //si esta en inline mode, quizas salta un error!




                        var data = $('#Lista').jqGrid('getRowData', dataIds[i]);



                        var iddeta = data['IdDetalleAsiento'];
                        //alert(iddeta);
                        if (!iddeta) continue;



                        data1 = '{"IdAsiento":"' + $("#IdAsiento").val() + '",'
                        for (var j = 0; j < colModel.length; j++) {
                            cm = colModel[j]
                            if (cm.label === 'TB') {
                                valor = data[cm.name];


                                valor = valor.replace(".", ",")



                                //if (cm.name === 'Cantidad') valor = valor.replace(".", ",") // parseFloat(this.value).toFixed(2) valor.replace(",", ".").toFixed(2)
                                //if (cm.name === 'Precio') valor = valor.replace(".", ",")
                                //if (cm.name === 'PorcentajeBonificacion') valor = valor.replace(".", ",")  // parseFloat(valor) || 0;
                                //if (cm.name === 'ImporteBonificacion') valor = valor.replace(".", ",")
                                //if (cm.name === 'PorcentajeIva') valor = valor.replace(".", ",")
                                //if (cm.name === 'ImporteIva') valor = valor.replace(".", ",")
                                //if (cm.name === 'ImporteTotalItem') valor = valor.replace(".", ",")

                                //if (cm.name === 'IdDetalleRequerimiento') valor = valor.replace(".", ",")
                                ////if (cm.name === 'Observaciones') {


                                ////}
                                //if (cm.name === 'Adj. 1') {
                                //    valor = '';
                                //}


                                //if (cm.name.indexOf("Fecha") !== -1) {
                                //    try {
                                //        valor = $.datepicker.formatDate("yy/mm/dd", $.datepicker.parseDate("dd/mm/yy", valor));
                                //    } catch (e) {
                                //        $.post(ROOT + "Error/JSErrorHandler", { msg: "Error al formatear como fecha " + valor });
                                //        valor = null;
                                //    }

                                //}

                                //if (cm.name === 'Cumplido' && cabecera.Cumplido === 'AN') valor = 'AN'


                                //if (cm.name === 'OrigenDescripcion') {
                                //    if (valor == 'Solo el material') {
                                //        valor = 1;
                                //    }
                                //    else if (valor == 'Solo las observaciones') {
                                //        valor = 2;
                                //    }
                                //    else if (valor == 'Material mas observaciones') {
                                //        valor = 3;
                                //    }
                                //    else {
                                //        //valor = 0;
                                //    }


                                //}




                                try {
                                    // replace() solo reemplaza la primera aparicion !!!!!!!!
                                    // http://stackoverflow.com/questions/1144783/replacing-all-occurrences-of-a-string-in-javascript

                                    valor = replaceAll('"', '\\"', valor);
                                    valor = replaceAll('\t', '\\t', valor);
                                    valor = replaceAll('\n', '\\n', valor);
                                    //                                   valor = valor.replace('\t', '\\t');
                                    //                                   valor = valor.replace('\n', '\\n');
                                    //                                   valor = valor.replace('\r', '\\r');
                                    // http://stackoverflow.com/questions/983451/where-can-i-find-a-list-of-escape-characters-required-for-my-json-ajax-return-ty
                                } catch (e) {
                                    //
                                }

                                /////////////////////////////////////////////////////////
                                /////////////////////////////////////////////////////////
                                /////////////////////////////////////////////////////////
                                /////////////////////////////////////////////////////////
                                /////////////////////////////////////////////////////////
                                /////////////////////////////////////////////////////////
                                data1 = data1 + '"' + cm.name + '":"' + valor + '",';
                            }
                        }








                        data1 = data1.substring(0, data1.length - 1) + '}';
                        data1 = data1.replace(/(\r\n|\n|\r)/gm, "");
                        data2 = JSON.parse(data1);
                        cabecera.DetalleAsientos.push(data2);
                    }
                    catch (ex) {
                        $('#Lista').jqGrid('restoreRow', dataIds[i]);
                        alert("No se pudo grabar el comprobante. " + ex);
                        return;
                    }
                }


                return cabecera;
            }







      





            $("#grabar2").click(function () {
                //  http://stackoverflow.com/questions/10744694/submitting-jqgrid-row-data-from-view-to-controller-what-method
                //  http://stackoverflow.com/questions/6798671/how-to-submit-local-jqgrid-data-and-form-input-elements?answertab=votes#tab-top


                try {
                    jQuery('#Lista').jqGrid('saveCell', lastRowIndex, lastColIndex);

                    //if (id && id !== lastSelectedId) {
                    //    if (typeof lastSelectedId !== "undefined") {
                    //        jQuery('#Lista').jqGrid('restoreRow', lastSelectedId);
                    //    }
                    //    lastSelectedId = id;

                    //}
                    //jQuery('#Lista').jqGrid('restoreRow', id);
                } catch (e) {

                }
                var griddata = $("#Lista").jqGrid('getGridParam', 'data');
                //var cabecera = $("#formid").serializeObject(); // .serializeArray(); // serializeArray
                var cabecera = SerializaForm();

                //  var aaa = $.toJSON(formdata);

                var fullData = jQuery("#Lista").jqGrid('getRowData');

                //        var gd = $('#ListaLugaresEntrega').jqGrid('getRowData'); // use preferred interface
                //        for (var i = 0; i < gd.length; ++i) {
                //            for (var f in gd[i]) res.push({ name: '_detail[' + i + '].' + f, value: gd[i][f] });
                //        }

                var grid1 = $("#Lista");
                var colModel = grid1.jqGrid('getGridParam', 'colModel');

                var items = [];


                // cabecera.DetalleFacturas.push(items);
                // $(items).appendTo(cabecera);



                //        var allData = {
                //            localGridData:   griddata,       // grid.jqGrid('Lista','data'),
                //            formData: formdata
                //        };

                var dataToSend = JSON.stringify(cabecera); // JSON.stringify(griddata);   JSON.parse() ;   $.toJSON();


                // ShowProgressAnimation();

                $.ajax({
                    type: 'POST',
                    // contentType: 'application/json; charset=utf-8',
                    contentType: 'application/json; charset=utf-8', // http://stackoverflow.com/a/2281875/1054200
                    url: ROOT + 'Asiento/BatchUpdate',   // 'Factura/UpdateAwesomeGridData',
                    dataType: 'json',
                    // data:JSON.stringify( {formulario: colData , grilla: dataToSend })
                    data: dataToSend,
                    //  data: { "formulario": formdata ,"grilla": dataToSend }, // $.toJSON(griddata),
                    success: function (result) {






                        if (result) {
                            var dt = new Date();
                            var currentTime = dt.getHours() + ":" + dt.getMinutes() + ":" + dt.getSeconds();

                            $("#textoMensajeAlerta").html("Grabado " + currentTime);
                            $("#mensajeAlerta").show();
                            // $('#Lista').trigger('reloadGrid'); // no tenes el id!!!!!
                            //si graban de nuevo, va a dar un alta!!!!


                            $('html, body').css('cursor', 'auto');
                            $('#grabar2').attr("disabled", false);
                            //$('#grabar2').attr("disabled", false).val("Aceptar y nuevo");

                            //alert('hola.');
                            // grid1.trigger('reloadGrid');

                            //window.location.replace(ROOT + "Cliente/index");

                            window.location = (ROOT + "Asiento/Edit/" + result.IdAsiento);

                        } else {
                            // window.location.replace(ROOT + "Cliente/index");
                            alert('No se pudo grabar el comprobante.');
                        }

                    },


                    error: function (xhr, textStatus, exceptionThrown) {
                        var errorData = $.parseJSON(xhr.responseText);
                        var errorMessages = [];
                        //this ugly loop is because List<> is serialized to an object instead of an array
                        for (var key in errorData) {
                            errorMessages.push(errorData[key]);
                        }
                        $('#result').html(errorMessages.join("<br />"));
                        alert(errorMessages.join("\n").replace(/<br\/>/g, '\n'));
                    }




                });
            });





        });

        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////






        $(function () {



            var myGrid = $('#ListaDrag')

            //function decodeErrorMessage(jqXHR, textStatus, errorThrown) {
            //    var html, errorInfo, i, errorText = textStatus + '\n' + errorThrown;
            //    if (jqXHR.responseText.charAt(0) === '[') {
            //        try {
            //            errorInfo = $.parseJSON(jqXHR.responseText);
            //            errorText = "";
            //            for (i = 0; i < errorInfo.length; i++) {
            //                if (errorText.length !== 0) {
            //                    errorText += "<hr/>";
            //                }
            //                errorText += errorInfo[i].Source + ": " + errorInfo[i].Message;
            //            }
            //        }
            //        catch (e) { }
            //    } else {
            //        html = /<body.*?>([\s\S]*)<\/body>/.exec(jqXHR.responseText);
            //        if (html !== null && html.length > 1) {
            //            errorText = html[1];
            //        }
            //    }
            //    return errorText;
            //};









            myGrid.jqGrid({
                //        url: ROOT + 'Cuenta/Cuentas',
                url: ROOT + 'jqGridPaginacion/DynamicGridData',
                //url: ROOT + 'jqGridPaginacion/grilladinamica_CuentasFF',


                postData: {
                    'FechaInicial': function () { return ""; },
                    'FechaFinal': function () { return ""; },
                    'IdObra': function () { return ""; }
                },


                datatype: 'json',
                mtype: 'POST',
                cellEdit: false,


                colNames: ['ver', '<<', 'IdCuenta', 'Cuenta', 'cód.',

    'Grupo', 'Obra', 'CdeGasto', '', '',

    'Cump.', 'Recep.', 'Entreg.', 'Impresa', 'Detalle',
     'Obra', 'Pedidos', 'Comparativas', 'Pedidos', 'Recepciones',
      'Salidas', 'Libero', 'Solicito', 'Sector', 'Usuario anulo', 'Fecha anulacion', 'Motivo anulacion', 'Fechas liberacion',
               'Observaciones', 'Lugar de entrega', 'IdObra', 'IdSector'],
                colModel: [
                                { name: 'accion', index: 'act', align: 'center', width: 40, sortable: false, editable: false, search: false, hidden: true }, //, formatter: 'showlink', formatoptions: { baseLinkUrl: '@Url.Action("Edit")'} },
                                { name: '', index: 'act', align: 'center', width: 80, sortable: false, editable: false, search: false, hidden: true }, //, formatter: 'showlink', formatoptions: { baseLinkUrl: '@Url.Action("Edit")'} },
                                { name: 'IdCuenta', key: true, index: 'IdRequerimiento', align: 'left', width: 100, editable: false, hidden: true },
                                { name: 'Cuenta', index: 'Descripcion', align: 'left', width: 200, editable: false, search: true, searchoptions: { clearSearch: false, searchOperators: true, sopt: ['cn'] } },
                                { name: 'Codigo', index: 'Codigo', align: 'center', width: 50, editable: false, search: true, searchoptions: { clearSearch: false, searchOperators: true, sopt: ['cn', 'eq'] } },


                                {
                                    name: 'TiposCuentaGrupos',     // http://stackoverflow.com/questions/5328072/can-jqgrid-support-dropdowns-in-the-toolbar-filter-fields

                                    index: 'TiposCuentaGrupos', align: 'center', width: 100, editable: false, search: true,

                                    //formatter:'select',     stype: 'select', // http://stackoverflow.com/questions/5328072/can-jqgrid-support-dropdowns-in-the-toolbar-filter-fields
                                    searchoptions: {
                                        sopt: ['cn']

                                        //, value: categoriesStr
                                    }, hidden: false




                                },
                                {
                                    name: 'Obra', index: 'Obra', align: 'center', width: 100, editable: false, search: true, hidden: false,
                                    searchoptions: {
                                        sopt: ['cn'],
                                        dataInit: function (elem) {
                                            // it demonstrates custom item rendering  http://stackoverflow.com/questions/7392236/jqgrid-with-autocompletion-cant-parse-data-from-controller-to-view/7392816#7392816
                                            //                                    $(elem).autocomplete({ source:  ROOT + 'Articulo/GetObrasAutocomplete2' })
                                            //                                                                .data("autocomplete")._renderItem = function (ul, item) {
                                            //                                                                    return $("<li></li>")
                                            //                                                                        .data("item.autocomplete", item)
                                            //                                                                        .append("<a><span style='display:inline-block;width:60px;'><b>" +
                                            //                                                                                item.value + "</b></span>" + item.title + "</a>")
                                            //                                                                        .appendTo(ul);
                                            //                                                                };




                                            $(elem).autocomplete({
                                                source: ROOT + 'Articulo/GetObrasAutocomplete2'

                                                //,minLength: 3
                                                //                                                                        ,select: function (event, ui) {

                                                //                                                                            $("#IdCuenta").val(ui.item.id);
                                                //                                                                            $("#CodigoCuenta").val(ui.item.codigo); // por qué acá traes la propiedad codigo en lugar de value? -porque sugiero un texto pero al seleccionar solo tomo un pedazo
                                                //                                                                            $("#Descripcion").val(ui.item.title);
                                                //                                                                        }
                                            })
                                            .data("ui-autocomplete")._renderItem = function (ul, item) {
                                                return $("<li></li>")
                                                    .data("ui-autocomplete-item", item)
                                                    .append("<a><span style='display:inline-block;width:500px;font-size:12px'><b>" + item.value + " " + item.title + "</b></span></a>")
                                                    .appendTo(ul);
                                            };




                                        }
                                    }


                                },
                                { name: 'CdeGasto', index: 'CuentasGasto', align: 'center', width: 100, editable: false, search: true, searchoptions: { sopt: ['cn'] }, hidden: false },
                                { name: '', index: '', align: 'center', width: 50, editable: false, search: false, searchoptions: { sopt: ['cn'] }, hidden: true },
                                { name: '', index: '', align: 'left', width: 200, editable: false, search: false, searchoptions: { sopt: ['cn'] }, hidden: true },


                                { name: 'Cumplido', index: 'Cumplido', align: 'center', width: 50, editable: false, search: false, searchoptions: { sopt: ['cn', 'nc', 'bw', 'bn', 'eq', 'ne', 'ew', 'en', 'lt', 'le', 'gt', 'ge'] }, hidden: true },
                                { name: 'Recepcionado', index: 'Recepcionado', align: 'center', width: 50, editable: false, search: false, searchoptions: { sopt: ['cn'] }, hidden: true },
                                { name: 'Entregado', index: 'Entregado', align: 'center', width: 50, editable: false, search: false, searchoptions: { sopt: ['cn'] }, hidden: true },
                                { name: 'Impresa', index: 'Impresa', align: 'center', width: 50, editable: false, search: false, searchoptions: { sopt: ['cn'] }, hidden: true },
                                { name: 'Detalle', index: 'Detalle', align: 'left', width: 200, editable: false, search: false, searchoptions: { sopt: ['cn'] }, hidden: true },

                                { name: 'NumeroObra', index: 'NumeroObra', align: 'left', width: 85, editable: false, search: false, searchoptions: { sopt: ['cn'] }, hidden: true },
                                { name: 'Pedidos', index: 'Pedidos', align: 'left', width: 200, editable: false, search: false, searchoptions: { sopt: ['cn'] }, hidden: true },
                                { name: 'Comparativas', index: 'Comparativas', align: 'left', width: 200, editable: false, search: true, searchoptions: { sopt: ['cn'] }, hidden: true },
                                { name: 'Pedidos', index: 'Pedidos', align: 'left', width: 200, editable: false, search: false, searchoptions: { sopt: ['cn'] }, hidden: true },
                                { name: 'Recepciones', index: 'Recepciones', align: 'left', width: 200, editable: false, search: false, searchoptions: { sopt: ['cn'] }, hidden: true },
                                { name: 'Salidas', index: 'Salidas', align: 'left', width: 200, editable: false, search: false, searchoptions: { sopt: ['cn'] }, hidden: true },
                                { name: 'Libero', index: 'Libero', align: 'left', width: 150, editable: false, search: false, searchoptions: { sopt: [''] }, hidden: true },
                                { name: 'Solicito', index: 'Solicito', align: 'left', width: 150, editable: false, search: false, searchoptions: { sopt: ['cn'] }, hidden: true },
                                { name: 'Sector', index: 'Sector', align: 'left', width: 150, editable: false, search: false, searchoptions: { sopt: ['cn'] }, hidden: true },
                                { name: 'Usuario_anulo', index: 'Usuario_anulo', align: 'left', width: 50, editable: false, search: false, searchoptions: { sopt: ['cn'] }, hidden: true },
                                { name: 'Fecha_anulacion', index: 'Fecha_anulacion', align: 'center', width: 75, editable: false, search: false, searchoptions: { sopt: ['cn'] }, hidden: true },
                                { name: 'Motivo_anulacion', index: 'Motivo_anulacion', align: 'left', width: 200, editable: false, search: false, searchoptions: { sopt: ['cn'] }, hidden: true },
                                { name: 'Fechas_liberacion', index: 'Fechas_liberacion', align: 'left', width: 200, editable: false, search: false, searchoptions: { sopt: ['cn'] }, hidden: true },
                                { name: 'Observaciones', index: 'Observaciones', align: 'left', width: 200, editable: false, search: false, searchoptions: { sopt: ['cn'] }, hidden: true },
                                { name: 'LugarEntrega', index: 'LugarEntrega', align: 'left', width: 200, editable: false, search: false, searchoptions: { sopt: ['cn'] }, hidden: true },
                                { name: 'IdObra', index: 'IdObra', align: 'left', width: 200, editable: false, search: false, searchoptions: { sopt: ['cn'] }, hidden: true },
                                { name: 'IdSector', index: 'IdSector', align: 'left', width: 200, editable: false, search: false, searchoptions: { sopt: ['cn'] }, hidden: true }
                ],




                onSelectRow: function (id, status, e) {
                    //       var acceptId = $(ui.draggable).attr("id");
                    //		CopiarCuenta(acceptId, ui);


                    // CopiarCuenta(id, null);
                },
                ondblClickRow: function (id) {
                    CopiarCuenta(id); //prefiero que copie con solo hacer clic  -y quizás hace el drag inutil, en especial cuando las grillas son fijas
                },



                pager: $('#ListaDragPager'),
                rowNum: 15,
                rowList: [10, 20, 50],
                sortname: 'Codigo',
                sortorder: "asc",
                viewrecords: true,

                ///////////////////////////////
                width: 'auto', // 'auto',
                autowidth: true,
                shrinkToFit: false,
                //////////////////////////////
                //height: '100%',

                height: '100%',
                // height: $(window).height() - 350,
                //////////////////////////////


                altRows: false,
                emptyrecords: 'No hay registros para mostrar'//,
                //caption: '<b>REQUERIMIENTOS RESUMIDO</b>'

    , multipleSearch: true,

                toppager: true,

                //recreateFilter:true,



                // jsonReader: { cell: "" }, // esto no funciona usando el formato de retorno con tipo "jqGridJson", quizá funciona con el original de Oleg  que devuelve directo el objeto a Json http://stackoverflow.com/questions/5500805/asp-net-mvc-2-0-implementation-of-searching-in-jqgrid/5501644#5501644

                loadError: function (jqXHR, textStatus, errorThrown) {
                    // remove error div if exist
                    $('#' + this.id + '_err').remove();
                    // insert div with the error description before the grid
                    myGrid.closest('div.ui-jqgrid').before(
                    '<div id="' + this.id + '_err" style="max-width:' + this.style.width +
                    ';"><div class="ui-state-error ui-corner-all" style="padding:0.7em;float:left;"><span class="ui-icon ui-icon-alert" style="float:left; margin-right: .3em;"></span><span style="clear:left">' +
                                decodeErrorMessage(jqXHR, textStatus, errorThrown) + '</span></div><div style="clear:left"/></div>')
                },
                loadComplete: function () {
                    // remove error div if exist
                    grid = $(this);
                    $("#ListaDrag td", grid[0]).css({ background: 'rgb(234, 234, 234)' });
                    $('#' + this.id + '_err').remove();

                    AgregarRenglonesEnBlanco({ "IdDetalleAsiento": "0", "IdCuenta": "0", "Precio": "0", "Descripcion": "", "IVAComprasPorcentaje1": "0" });


                }




            });
            //jQuery("#ListaDrag").jqGrid('navGrid', '#ListaDragPager', { refresh: true, add: false, edit: false, del: false }, {}, {}, {}, { sopt: ["cn"], width: 700, closeOnEscape: true, closeAfterSearch: true });
            //$("#ListaDrag").filterToolbar({ searchOnEnter: true, enableClear: false });    // usar search: true, searchoptions: { sopt: ['cn']} o  { sopt: ['cn','eq'] }
            //    $("#ListaDrag").setFrozenColumns();

            myGrid.jqGrid('navGrid', '#ListaDragPager', { add: false, edit: false, del: false },
                      {}, {}, {}, { multipleSearch: true, overlay: false });

            myGrid.filterToolbar({ stringResult: true, searchOnEnter: true, defaultSearch: 'cn', enableClear: false }); // si queres sacar el enableClear, definilo en las searchoptions de la columna específica http://www.trirand.com/blog/?page_id=393/help/clearing-the-clear-icon-in-a-filtertoolbar/
            //myGrid.filterToolbar({  });
            myGrid.jqGrid('navButtonAdd', '#ListaDragPager',
                    {
                        caption: "Filter", title: "Toggle Searching Toolbar",
                        buttonicon: 'ui-icon-pin-s',
                        onClickButton: function () { myGrid[0].toggleToolbar(); }
                    });




            //DEFINICION DE PANEL ESTE PARA LISTAS DRAG DROP
            $('a#a_panel_este_tab1').text('Cuentas');
            $('a#a_panel_este_tab2').text('RMDet');
            $('a#a_panel_este_tab2').remove();  //
            $('a#a_panel_este_tab3').text('Presup');
            $('a#a_panel_este_tab3').remove();  //
            $('a#a_panel_este_tab4').text('Comp');
            $('a#a_panel_este_tab4').remove();  //
            $('a#a_panel_este_tab5').text('Ped');
            $('a#a_panel_este_tab5').remove();  //
            //////////////////////////////////////////////////////////////////

        });







        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

        function CopiarCuenta(acceptId, ui) {


            // jQuery('#Lista').jqGrid('saveCell', lastRowIndex, lastColIndex);

            // sacarDeEditMode();


            // GrabarGrillaLocal()



            var getdata = $("#ListaDrag").jqGrid('getRowData', acceptId);
            var j = 0, tmpdata = {}, dropname;
            // var dropmodel = $("#" + this.id).jqGrid('getGridParam', 'colModel');
            //var prox = ProximoNumeroItem();
            try {
                //					for (var key in getdata) {
                //						if(getdata.hasOwnProperty(key) && dropmodel[j]) {
                //							dropname = dropmodel[j].name;
                //							tmpdata[dropname] = getdata[key];
                //						}
                //						j++;
                //					}
                tmpdata['IdDetalleAsiento'] = 0;

                tmpdata['IdCuenta'] = getdata['IdCuenta'];
                tmpdata['Codigo'] = getdata['Codigo'];
                tmpdata['Cuenta'] = getdata['Cuenta'];
                tmpdata['CuentaGasto'] = getdata['Cuenta'];

                tmpdata['IvaComprasPorcentaje1'] = '0'; // "21";

                //name: 'CdeGasto', index: 'CuentasGasto'
                //        tmpdata['OrigenDescripcion'] = 1;
                //        var now = new Date();
                //        var currentDate = strpad00(now.getDate()) + "/" + strpad00(now.getMonth() + 1) + "/" + now.getFullYear();
                //        tmpdata['FechaEntrega'] = currentDate;
                //        tmpdata['IdUnidad'] = getdata['IdUnidad'];
                //        tmpdata['Unidad'] = getdata['Unidad'];
                //        tmpdata['IdDetalleRequerimiento'] = 0;
                //        tmpdata['Cantidad'] = 0;
                //        tmpdata['NumeroItem'] = prox++;
                getdata = tmpdata;
            } catch (e) { }
            var grid;
            grid = Math.ceil(Math.random() * 1000000);
            // SE CAMBIO EN EL COMPONENTE grid.jqueryui.js LA LINEA 435 (SE COMENTO LA INSTRUCCION addRowData)



            var getdata = tmpdata;
            var idazar = Math.ceil(Math.random() * 1000000);



            QuitarRenglonDragDrop(idazar, getdata)





            //resetAltRows.call(this);
            $("#gbox_grid2").css("border", "1px solid #aaaaaa");




            //RefrescarOrigenDescripcion();
            //    AgregarRenglonesEnBlanco({ "IdDetalleComprobanteProveedor": "0", "IdCuenta": "0", "Precio": "0", "Descripcion": "" });
            //AgregarRenglonesEnBlanco({ "IdDetalleAsiento": "0", "IdCuenta": "0", "Precio": "0", "Descripcion": "", "IVAComprasPorcentaje1": "0" });


            //   var rows = $("#Lista").getGridParam("reccount");
            //    if (rows > 4) $("#Lista").jqGrid('setGridHeight', rows * 40, true);




            // Validar();



        }


        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////






        $("#addData").click(function () {
            $("#Lista").jqGrid('editGridRow', "new", {
                addCaption: "Agregar registro", bSubmit: "Aceptar", bCancel: "Cancelar",
                width: 800, reloadAfterSubmit: false, closeOnEscape: true, closeAfterAdd: true,
                recreateForm: true,
                beforeShowForm: function (form) {
                    var dlgDiv = $("#editmod" + $("#Lista")[0].id);
                    dlgDiv[0].style.top = 0 //Math.round((parentHeight-dlgHeight)/2) + "px";
                    dlgDiv[0].style.left = 0 //Math.round((parentWidth-dlgWidth)/2) + "px";
                },
                beforeInitData: function () {
                    inEdit = false;
                },
                afterComplete: function (response, postdata) {
                    calculateTotal();
                },
                onInitializeForm: function (form) {
                    $('#IdDetalleAsiento', form).val(0);
                    $('#Item', form).val(($("#Lista").jqGrid('getCol', 'Item', false, 'max') || 0) + 1);
                }
                //beforeShowForm: function (form) { $('#tr_IdDetalleFactura', form).hide(); }
            });
        });

        $("#edtData").click(function () {
            var gr = jQuery("#Lista").jqGrid('getGridParam', 'selrow');
            if (gr != null) jQuery("#Lista").jqGrid('editGridRow', gr, {
                editCaption: "Modificar registro", bSubmit: "Aceptar", bCancel: "Cancelar",
                width: 800, reloadAfterSubmit: false, closeOnEscape: true,
                closeAfterEdit: true, recreateForm: true, Top: 0,
                beforeShowForm: function (form) {
                    // "editmodlist"
                    var dlgDiv = $("#editmod" + $("#Lista")[0].id);
                    var parentDiv = dlgDiv.parent(); // div#gbox_list
                    var dlgWidth = dlgDiv.width();
                    var parentWidth = parentDiv.width();
                    var dlgHeight = dlgDiv.height();
                    var parentHeight = parentDiv.height();
                    dlgDiv[0].style.top = 100 //Math.round((parentHeight-dlgHeight)/2) + "px";
                    dlgDiv[0].style.left = 200 //Math.round((parentWidth-dlgWidth)/2) + "px";
                },
                afterComplete: function (response, postdata) {
                    calculateTotal();
                },
                beforeInitData: function () {
                    inEdit = true;
                }
            });
            else alert("Debe seleccionar un item!");
        });


        $("#delData").click(function () {
            var gr = jQuery("#Lista").jqGrid('getGridParam', 'selrow');
            if (gr != null) {
                //jQuery("#Lista").jqGrid('setRowData',gr,{Eliminado:"true"});
                //$("#"+gr).hide();
                jQuery("#Lista").jqGrid('delGridRow', gr, { caption: "Borrar", msg: "Elimina el registro seleccionado?", bSubmit: "Borrar", bCancel: "Cancelar", width: 800, closeOnEscape: true, reloadAfterSubmit: true });
                calculateTotal();
            }
            else alert("Debe seleccionar un item!");
        });


        //  jQuery("#Lista").jqGrid('gridResize', { minWidth: 350, maxWidth: 1500, minHeight: 80, maxHeight: 500 });


        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////

    </script>
}