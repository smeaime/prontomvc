@model ProntoMVC.Data.Models.Provincia
@{
    ViewBag.Title = "Provincia " + Model.Nombre;
}
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formid" }))
{
    @Html.ValidationSummary(true)
    <div class="container-fluid">
        <div>@Html.Hidden("IdProvincia", Model.IdProvincia)</div>
        <div class="row-fluid" style="margin-bottom: 15px; margin-top: 5px;">
            <div class="span5 lightblue">
                @Html.TextBox("Titulo", "PROVINCIA", new { style = "font-weight: 400; text-shadow: 0 1px 0  lightgray; font-size: 24px; border: 0; padding: 0 ; text-align: left; background: transparent;  font-family: 'Segoe UI Web Regular', 'Segoe UI', 'Lucida', Tahoma, Arial,'sans-serif'; -webkit-box-shadow: none; -moz-box-shadow: none; box-shadow: none; ", @class = "span10", @readonly = "readonly" })
            </div>
            <div class="span4 lightblue">
                <input type="button" id="grabar2" value="Aceptar" class="btn btn-primary" />
                @if (Model.IdProvincia > 0)
                { @Html.ActionLink("Eliminar", "DeleteConfirmed", new { id = Model.IdProvincia }, new { @class = "btn  btn-default" }) }
                @Html.ActionLink("Volver al listado", "Index", null, new { @class = "btn btn-link" })
            </div>
        </div>

        <div class="row-fluid">
            <div class="span8 lightblue">
                @Html.LabelFor(model => model.Nombre, "Nombre")
                @Html.TextBoxFor(model => model.Nombre, new { @class = "span12" })
                @Html.ValidationMessageFor(model => model.Nombre)
            </div>
        </div>

        <div class="row-fluid">
            <div class="span4 lightblue">
                @Html.LabelFor(model => model.IdPais, "Pais")
                @Html.DropDownList("IdPais", null, "", new { @class = "span12", @style = "height: 15px;   line-height: 14px;" })
                @Html.ValidationMessageFor(model => model.IdPais)
            </div>
            <div class="span4 lightblue">
                @Html.LabelFor(model => model.EsAgenteRetencionIIBB, "La empresa es agente de retencion IIBB en esta jurisdiccion")
                @Html.CheckBox("EsAgenteRetencionIIBB", Model.EsAgenteRetencionIIBB == "SI")
            </div>
        </div>

        <div class="row-fluid">
            <div class="span4 lightblue">
                @Html.LabelFor(model => model.InformacionAuxiliar, "Codigo de jurisdiccion")
                @Html.TextBoxFor(model => model.InformacionAuxiliar, new { @class = "span12" })
                @Html.ValidationMessageFor(model => model.InformacionAuxiliar)
            </div>
            <div class="span2 lightblue">
                @Html.LabelFor(model => model.Codigo, "Codigo")
                @Html.TextBoxFor(model => model.Codigo, new { @class = "span12" })
                @Html.ValidationMessageFor(model => model.Codigo)
            </div>
            <div class="span2 lightblue">
                @Html.LabelFor(model => model.Codigo2, "Codigo adicional")
                @Html.TextBoxFor(model => model.Codigo2, new { @class = "span12" })
                @Html.ValidationMessageFor(model => model.Codigo2)
            </div>
        </div>

        <div class="well well-sm" style="height: 145px; width: 900px;">
            <h5>RETENCION PAGOS</h5>
            <div class="row-fluid">
                <div class="span6 lightblue">
                    @Html.LabelFor(model => model.IdCuentaRetencionIBrutos, "Cuenta contable")
                    @Html.DropDownList("IdCuentaRetencionIBrutos", null, "", new { @class = "span12", @style = "height: 15px;   line-height: 14px;" })
                    @Html.ValidationMessageFor(model => model.IdCuentaRetencionIBrutos)
                </div>
                <div class="span4 lightblue">
                    @Html.LabelFor(model => model.ProximoNumeroCertificadoRetencionIIBB, "Proximo nro. certificado retencion IIBB")
                    @Html.TextBoxFor(model => model.ProximoNumeroCertificadoRetencionIIBB, new { @class = "span12" })
                    @Html.ValidationMessageFor(model => model.ProximoNumeroCertificadoRetencionIIBB)
                </div>
            </div>
            <div class="row-fluid">
                <div class="span4 lightblue">
                    @Html.LabelFor(model => model.TipoRegistro, "Tipo de diseño de registro para presentacion del IIBB")
                    @Html.TextBoxFor(model => model.TipoRegistro, new { @class = "span12" })
                    @Html.ValidationMessageFor(model => model.TipoRegistro)
                </div>
                <div class="span4 lightblue">
                    @Html.LabelFor(model => model.ExportarConApertura, "Exportar retenciones con apertura por categoria")
                    @Html.CheckBox("ExportarConApertura", Model.ExportarConApertura == "SI")
                </div>
                <div class="span4 lightblue">
                    @Html.LabelFor(model => model.PlantillaRetencionIIBB, "Plantilla para emision de certificado (opcional)")
                    @Html.TextBoxFor(model => model.PlantillaRetencionIIBB, new { @class = "span12" })
                    @Html.ValidationMessageFor(model => model.PlantillaRetencionIIBB)
                </div>
            </div>
        </div>
        
        <div class="well well-sm" style="height: 80px; width: 900px;">
            <h5>RETENCION COBRANZAS</h5>
            <div class="row-fluid">
                <div class="span6 lightblue">
                    @Html.LabelFor(model => model.IdCuentaRetencionIBrutosCobranzas, "Cuenta contable")
                    @Html.DropDownList("IdCuentaRetencionIBrutosCobranzas", null, "", new { @class = "span12", @style = "height: 15px;   line-height: 14px;" })
                    @Html.ValidationMessageFor(model => model.IdCuentaRetencionIBrutosCobranzas)
                </div>
            </div>
        </div>

        <div class="well well-sm" style="height: 80px; width: 900px;">
            <h5>PERCEPCION COMPRAS</h5>
            <div class="row-fluid">
                <div class="span6 lightblue">
                    @Html.LabelFor(model => model.IdCuentaPercepcionIIBBComprasJurisdiccionLocal, "Cuenta contable jurisdiccion local")
                    @Html.DropDownList("IdCuentaPercepcionIIBBComprasJurisdiccionLocal", null, "", new { @class = "span12", @style = "height: 15px;   line-height: 14px;" })
                    @Html.ValidationMessageFor(model => model.IdCuentaPercepcionIIBBComprasJurisdiccionLocal)
                </div>
                <div class="span6 lightblue">
                    @Html.LabelFor(model => model.IdCuentaPercepcionIIBBCompras, "Cuenta contable convenio")
                    @Html.DropDownList("IdCuentaPercepcionIIBBCompras", null, "", new { @class = "span12", @style = "height: 15px;   line-height: 14px;" })
                    @Html.ValidationMessageFor(model => model.IdCuentaPercepcionIIBBCompras)
                </div>
            </div>
        </div>

        <div class="well well-sm" style="height: 145px; width: 900px;">
            <h5>PERCEPCION VENTAS</h5>
            <div class="row-fluid">
                <div class="span6 lightblue">
                    @Html.LabelFor(model => model.IdCuentaPercepcionIBrutos, "Cuenta contable jurisdiccion local")
                    @Html.DropDownList("IdCuentaPercepcionIBrutos", null, "", new { @class = "span12", @style = "height: 15px;   line-height: 14px;" })
                    @Html.ValidationMessageFor(model => model.IdCuentaPercepcionIBrutos)
                </div>
                <div class="span6 lightblue">
                    @Html.LabelFor(model => model.IdCuentaPercepcionIIBBConvenio, "Cuenta contable convenio")
                    @Html.DropDownList("IdCuentaPercepcionIIBBConvenio", null, "", new { @class = "span12", @style = "height: 15px;   line-height: 14px;" })
                    @Html.ValidationMessageFor(model => model.IdCuentaPercepcionIIBBConvenio)
                </div>
            </div>
            <div class="row-fluid">
                <div class="span4 lightblue">
                    @Html.LabelFor(model => model.ProximoNumeroCertificadoPercepcionIIBB, "Proximo nro. certificado percepcion IIBB")
                    @Html.TextBoxFor(model => model.ProximoNumeroCertificadoPercepcionIIBB, new { @class = "span12" })
                    @Html.ValidationMessageFor(model => model.ProximoNumeroCertificadoPercepcionIIBB)
                </div>
                <div class="span4 lightblue">
                    @Html.LabelFor(model => model.TipoRegistroPercepcion, "Tipo de diseño de registro para presentacion del IIBB")
                    @Html.TextBoxFor(model => model.TipoRegistroPercepcion, new { @class = "span12" })
                    @Html.ValidationMessageFor(model => model.TipoRegistroPercepcion)
                </div>
                <div class="span4 lightblue">
                    @Html.LabelFor(model => model.IdCuentaSIRCREB, "Cuenta contable SIRCREB")
                    @Html.DropDownList("IdCuentaSIRCREB", null, "", new { @class = "span12", @style = "height: 15px;   line-height: 14px;" })
                    @Html.ValidationMessageFor(model => model.IdCuentaSIRCREB)
                </div>
            </div>
        </div>

    </div>

    <script type="text/javascript">
        $(document).ready(function () {
            ////////////////////////////////////////////////////////// SERIALIZACION //////////////////////////////////////////////////////////
            function SerializaForm() {
                var chk, valor;
                var cabecera = $("#formid").serializeObject();
                //cabecera.Descripcion = $("#Descripcion").val();

                chk = $('#EsAgenteRetencionIIBB').is(':checked');
                if (chk) {
                    cabecera.EsAgenteRetencionIIBB = "SI";
                } else {
                    cabecera.EsAgenteRetencionIIBB = "NO";
                };

                chk = $('#ExportarConApertura').is(':checked');
                if (chk) {
                    cabecera.ExportarConApertura = "SI";
                } else {
                    cabecera.ExportarConApertura = "NO";
                };

                //valor = $("input[name='ActivaNumeracionPorGrupo']:checked").val();
                //if (typeof valor == "undefined") { $("#ActivaNumeracionPorGrupo").val(""); }

                return cabecera;
            }

            $('#grabar2').click(function () {
                var cabecera = SerializaForm();

                $('html, body').css('cursor', 'wait');
                $.ajax({
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    url: ROOT + 'Provincia/BatchUpdate',
                    dataType: 'json',
                    data: JSON.stringify({ Provincia: cabecera }),
                    success: function (result) {
                        if (result) {
                            $('html, body').css('cursor', 'auto');
                            window.location = (ROOT + "Provincia/Edit/" + result.IdProvincia);
                        } else {
                            alert('No se pudo grabar el objeto.');
                            $('.loading').html('');
                            $('html, body').css('cursor', 'auto');
                            $('#grabar2').attr("disabled", false).val("Aceptar");
                        }
                    },
                    beforeSend: function () {
                        $("#loading").show();
                        $('#grabar2').attr("disabled", true).val("Espere...");
                    },
                    complete: function () {
                        $("#loading").hide();
                    },
                    error: function (xhr, textStatus, exceptionThrown) {
                        try {
                            var errorData = $.parseJSON(xhr.responseText);
                            var errorMessages = [];
                            for (var key in errorData) { errorMessages.push(errorData[key]); }
                            $('html, body').css('cursor', 'auto');
                            $('#grabar2').attr("disabled", false).val("Aceptar");
                            $("#textoMensajeAlerta").html(errorData.Errors.join("<br />"));
                            $("#mensajeAlerta").show();
                            alert(errorData.Errors.join("\n").replace(/<br\/>/g, '\n'));
                        } catch (e) {
                            $('html, body').css('cursor', 'auto');
                            $('#grabar2').attr("disabled", false).val("Aceptar");
                            $("#textoMensajeAlerta").html(xhr.responseText);
                            $("#mensajeAlerta").show();
                        }
                    }
                });
            });

        });

    </script>
}
