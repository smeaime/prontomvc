@model ProntoMVC.Data.Models.AjustesStock
@{
    ViewBag.Title = "Ajuste de stock";
}
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formid" }))
{
    @Html.ValidationSummary(true)

    <script src="@Url.Content("~/Scripts/ScriptAjusteStock.js")" type="text/javascript"></script>

    <div id="principal" class="container-fluid">
        <form class="form-horizontal">
            <div class="row-fluid">
                <div class="span3 lightblue">
                    <legend>Ajuste de stock</legend>
                </div>
                <div class="span1 lightblue">
                    <div>@Html.Hidden("IdAjusteStock", Model.IdAjusteStock)</div>
                    <div><input id="FechaInicial" name="FechaInicial" type="hidden" value=@Request.QueryString["fechainicial"]></div>
                    <div><input id="FechaFinal" name="FechaFinal" type="hidden" value=@Request.QueryString["fechafinal"]></div>
                </div>
                <div class="span1 lightblue">
                </div>
                <div class="span2 lightblue">
                </div>
                <div class="span4 lightblue">
                    <input type="button" id="grabar2" value="Aceptar" class="btn  btn-large btn-primary " usesubmitbehavior="false" />
                </div>
            </div>

            <div class="row-fluid">
                <div class="span1 lightblue">
                    @Html.LabelFor(model => model.NumeroAjusteStock, "Numero")
                    @Html.TextBoxFor(model => model.NumeroAjusteStock, new { style = "text-align: center; font-weight: bold; font-size: 18px;", @class = "span12", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.NumeroAjusteStock)
                </div>
                <div class="span2 lightblue">
                    @Html.LabelFor(model => model.FechaAjuste, "Fecha")
                    @Html.TextBoxFor(model => model.FechaAjuste, new Dictionary<string, object> { { "class", "span12" }, { "placeholder", "dd/mm/yyyy" } })
                    @Html.ValidationMessageFor(model => model.FechaAjuste)
                    <script>
                        $("#FechaAjuste").datepicker({
                            changeMonth: true,
                            changeYear: true,
                            dateFormat: 'dd/mm/yy'
                            //numberOfMonths: 2,
                        });
                    </script>
                </div>
                <div class="span6 lightblue">
                    @Html.LabelFor(model => model.TipoAjuste, "Tipo de ajuste")
                    @Html.RadioButtonFor(model => model.TipoAjuste, "N") Normal
                    @Html.RadioButtonFor(model => model.TipoAjuste, "I") Inventario
                    @Html.RadioButtonFor(model => model.TipoAjuste, "P") Produccion
                </div>
            </div>

            <div class="row-fluid">
                <div class="span3 lightblue">
                    @Html.LabelFor(model => model.IdRealizo, "Realizo")
                    @Html.DropDownList("IdRealizo", null, "", new { @class = "span12", @style = "height: 15px;   line-height: 14px;" })
                    @Html.ValidationMessageFor(model => model.IdRealizo)
                </div>
                <div class="span3 lightblue">
                    @Html.LabelFor(model => model.IdAprobo, "Aprobo")
                    @Html.DropDownList("IdAprobo", null, "", new { @class = "span12", @style = "height: 15px;   line-height: 14px;" })
                    @Html.ValidationMessageFor(model => model.IdAprobo)
                </div>
            </div>

            <div class="row-fluid">
                <div class="span10 lightblue">
                    <table id="ListaArticulos" class="scroll" cellpadding="0" cellspacing="0"></table>
                    <div id="ListaPager1" class="scroll" style="text-align: center; height: 30px"></div>
                </div>
            </div>

            <div class="row-fluid">
                <div class="span10 lightblue">
                    @Html.LabelFor(model => model.Observaciones)
                    @Html.TextAreaFor(model => model.Observaciones, new { @class = "span12" })
                    @Html.ValidationMessageFor(model => model.Observaciones)
                </div>
            </div>

            <div class="row-fluid">
                <div class="span1 lightblue">
                    <label for="ArchivoAdjunto1">Archivo adjunto 1</label>
                </div>
                <div class="span4 lightblue">
                    @Html.TextBoxFor(model => model.ArchivoAdjunto1, new { @class = "span12", @readonly = "readonly" })
                </div>
                <div class="span1 lightblue">
                    <label for="ArchivoAdjunto2">Archivo adjunto 2</label>
                </div>
                <div class="span4 lightblue">
                    @Html.TextBoxFor(model => model.ArchivoAdjunto2, new { @class = "span12", @readonly = "readonly" })
                </div>
            </div>

            <div class="row-fluid">
                <span class="btn btn-success fileinput-button">
                    <i class="glyphicon glyphicon-plus"></i>
                    <span>Agregar adjuntos...</span>
                    @if (Model.IdAjusteStock <= 0)
                    {<input id="fileupload" type="file" name="files[]" multiple>}
                </span>
                <br />
                <div class="progress">
                    <div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;">
                        <span class="sr-only">0% completo</span>
                    </div>
                </div>
            </div>

        </form>
    </div>
}