@model IEnumerable<ProntoMVC.Data.Models.TiposComprobante>
@{
    ViewBag.Title = "Tipos Comprobantes";
}

<div style="padding-left: 15px; padding-right: 15px;">
    <table id="Lista" class="scroll" cellpadding="0" cellspacing="0" style="font-size: 16px; "></table>
    <div id="ListaPager" class="scroll" style="text-align: center; background: ; height: 30px"></div>
</div>

<script type="text/javascript">
    var lastSelectedId;
    var lastSelectediCol;
    var lastSelectediRow;
    var lastSelectediCol2;
    var lastSelectediRow2;
    var inEdit;
    var selICol;
    var selIRow;
    var gridCellWasClicked = false;
    var grillaenfoco = false;
    var getColumnIndexByName = function (grid, columnName) {
        var cm = grid.jqGrid('getGridParam', 'colModel'), i, l = cm.length;
        for (i = 0; i < l; i++) {
            if (cm[i].name === columnName) {
                return i; // return the index
            }
        }
        return -1;
    };
    var saveIcon = '<span class="ui-state-default" style="border:0"><span class="ui-icon ui-icon-info" style="float: left; margin-right: .3em;"></span></span>'

    $('.ui-jqgrid .ui-jqgrid-htable th div').css('white-space', 'normal');

    $.extend($.jgrid.inlineEdit, {
        keys: true
    });

    function GrabarFila(gridId) {
        var i, a, err = "";

        $('#Lista').jqGrid('setSelection', gridId);
        var iRow = $('#' + $.jgrid.jqID(gridId))[0].rowIndex;
        var dataFromTheRow = $('#Lista').jqGrid('getRowData', gridId)
        var colModel = $('#Lista').jqGrid('getGridParam', 'colModel');

        for (i = 0; i < colModel.length; i++) {
            if (colModel[i].editable) {
                a = dataFromTheRow[colModel[i].name];
                if (typeof a != "undefined") {
                    if (a.substring(0, 1) == "<") {
                        err = err + "Hay campos en modo edicion, confirmelos con enter antes de grabar.\n"
                    }
                }
            }
        }

        var datos = $("#formid").serializeObject();

        datos.IdTipoComprobante = gridId;
        datos.Descripcion = dataFromTheRow.Descripcion;
        datos.DescripcionAb = dataFromTheRow.DescripcionAb;
        datos.Coeficiente = dataFromTheRow.Coeficiente;
        datos.EsValor = dataFromTheRow.EsValor;
        datos.Agrupacion1 = dataFromTheRow.Agrupacion1;
        datos.VaAlLibro = dataFromTheRow.VaAlLibro;
        datos.VaAlCiti = dataFromTheRow.VaAlCiti;
        datos.VaAConciliacionBancaria = dataFromTheRow.VaAConciliacionBancaria;
        datos.VaAlRegistroComprasAFIP = dataFromTheRow.VaAlRegistroComprasAFIP;
        datos.ExigirCAI = dataFromTheRow.ExigirCAI;
        datos.CodigoDgi = dataFromTheRow.CodigoDgi;
        datos.NumeradorAuxiliar = dataFromTheRow.NumeradorAuxiliar;
        datos.CodigoAFIP_Letra_A = dataFromTheRow.CodigoAFIP_Letra_A;
        datos.CodigoAFIP_Letra_B = dataFromTheRow.CodigoAFIP_Letra_B;
        datos.CodigoAFIP_Letra_C = dataFromTheRow.CodigoAFIP_Letra_C;
        datos.CodigoAFIP_Letra_E = dataFromTheRow.CodigoAFIP_Letra_E;
        datos.CodigoAFIP2_Letra_A = dataFromTheRow.CodigoAFIP2_Letra_A;
        datos.CodigoAFIP2_Letra_B = dataFromTheRow.CodigoAFIP2_Letra_B;
        datos.CodigoAFIP2_Letra_C = dataFromTheRow.CodigoAFIP2_Letra_C;
        datos.CodigoAFIP2_Letra_E = dataFromTheRow.CodigoAFIP2_Letra_E;
        datos.CodigoAFIP3_Letra_A = dataFromTheRow.CodigoAFIP3_Letra_A;
        datos.CodigoAFIP3_Letra_B = dataFromTheRow.CodigoAFIP3_Letra_B;
        datos.CodigoAFIP3_Letra_C = dataFromTheRow.CodigoAFIP3_Letra_C;
        datos.CodigoAFIP3_Letra_E = dataFromTheRow.CodigoAFIP3_Letra_E;

        if (datos.Descripcion == "" || datos.Descripcion == undefined) err = err + "Falta definir el nombre.\n"

        if (err != "") {
            alert('No se pudo grabar el registro.\n' + err);
        } else {
            //$('html, body').css('cursor', 'wait');
            $.ajax({
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                url: ROOT + 'TiposComprobante/BatchUpdate',
                dataType: 'json',
                data: JSON.stringify(datos),
                success: function (result) {
                    if (result) {
                        $('#Lista').jqGrid('setRowData', gridId, { act: "" });
                        var rowid = $('#Lista').getGridParam('selrow');
                        var valor = result.IdTipoComprobante;
                        if (valor == "") { valor = "0"; }
                        $('#Lista').jqGrid('setCell', rowid, 'IdTipoComprobante', valor);
                    } else {
                        alert('No se pudo grabar el registro.');
                    }
                },
                error: function (xhr, textStatus, exceptionThrown) {
                    try {
                        var errorData = $.parseJSON(xhr.responseText);
                        var errorMessages = [];
                        for (var key in errorData) { errorMessages.push(errorData[key]); }
                        $('html, body').css('cursor', 'auto');
                        $('#grabar2').attr("disabled", false).val("Aceptar");
                        $("#textoMensajeAlerta").html(errorData.Errors.join("<br />"));
                        $("#mensajeAlerta").show();
                        alert(errorData.Errors.join("\n").replace(/<br\/>/g, '\n'));
                    } catch (e) {
                        $('html, body').css('cursor', 'auto');
                        $('#grabar2').attr("disabled", false).val("Aceptar");
                        $("#textoMensajeAlerta").html(xhr.responseText);
                        $("#mensajeAlerta").show();
                    }
                }
            });
        };
    };

    function EliminarFila(gridId) {
        var dataFromTheRow = $('#Lista').jqGrid('getRowData', gridId);
        var idprincipal = dataFromTheRow['IdTipoComprobante'];
        if (idprincipal <= 0) {
            $('#Lista').jqGrid('delRowData', gridId);
        } else {
            $.ajax({
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                url: ROOT + 'TiposComprobante/Delete',
                dataType: 'json',
                data: JSON.stringify({ id: idprincipal }),
                success: function (result) {
                    if (result) {
                        $('#Lista').jqGrid('delRowData', gridId);
                    } else {
                        alert('No se pudo eliminar el registro.');
                    }
                },
            });
        };
    };

    function MarcarSeleccionadosParaEliminar(grid) {
        var selectedIds = grid.jqGrid('getGridParam', 'selarrrow');
        var i, Id;
        for (i = selectedIds.length - 1; i >= 0; i--) {
            Id = selectedIds[i];
            var se = "<input style='height:22px;width:20px;' type='button' value='B' onclick=\"EliminarFila('" + Id + "');\"  />";
            grid.jqGrid('setRowData', Id, { act: se });
            //grid.jqGrid('delRowData', selectedIds[i]);
        }
    };

    function AgregarItemVacio(grid) {
        var colModel = grid.jqGrid('getGridParam', 'colModel');
        var dataIds = grid.jqGrid('getDataIDs');
        var Id = (grid.jqGrid('getGridParam', 'records') + 1) * -1;
        var se = "<input style='height:22px;width:20px;' type='button' value='G' onclick=\"GrabarFila('" + Id + "');\"  />";
        var data, j, cm;

        data = '{';
        for (j = 1; j < colModel.length; j++) {
            cm = colModel[j];
            data = data + '"' + cm.index + '":' + '"",';
        }
        data = data.substring(0, data.length - 1) + '}';
        data = data.replace(/(\r\n|\n|\r)/gm, "");
        grid.jqGrid('addRowData', Id, data, "first");
        grid.jqGrid('setRowData', Id, { act: se });
    };

    $(document).ready(function () {
        $('#Lista').jqGrid({
            url: ROOT + 'TiposComprobante/TiposComprobante_DynamicGridData/',
            postData: {},
            datatype: 'json',
            mtype: 'POST',
            colNames: ['Acciones', 'IdTipoComprobante', 'Descripcion', 'Abrev.', 'Coef.', 'Es valor?', 'Agrupacion', 'Va al libro?', 'Va al CITI?', 'Va a conc. bancos?', 'Va al reg. compras?',
                       'Exigir CAI', 'Codigo Dgi', 'Numerador', 'Codigo AFIP A', 'Codigo AFIP B', 'Codigo AFIP C', 'Codigo AFIP E', 'Codigo 2 AFIP A', 'Codigo 2 AFIP B', 'Codigo 2 AFIP C',
                       'Codigo 2 AFIP E', 'Codigo 3 AFIP A', 'Codigo 3 AFIP B', 'Codigo 3 AFIP C', 'Codigo 3 AFIP E'],
            colModel: [
                        { name: 'act', index: 'act', align: 'center', width: 70, search: false, editable: false, hidden: false },
                        { name: 'IdTipoComprobante', index: 'IdTipoComprobante', align: 'left', width: 100, search: false, editable: false, hidden: true },
                        { name: 'Descripcion', index: 'Descripcion', width: 200, align: 'left', search: true, editable: false, editrules: { required: false }, edittype: 'text', label: 'TB' },
                        { name: 'DescripcionAb', index: 'DescripcionAb', width: 50, align: 'center', search: true, editable: false, editrules: { required: false }, edittype: 'text', label: 'TB' },
                        { name: 'Coeficiente', index: 'Coeficiente', width: 50, align: 'center', search: false, editable: false, editrules: { required: false }, edittype: 'text', label: 'TB' },
                        { name: 'EsValor', index: 'EsValor', width: 70, align: 'center', search: true, editable: true, editrules: { required: false }, editoptions: { value: "SI:NO" }, edittype: 'checkbox', label: 'TB' },
                        { name: 'Agrupacion1', index: 'Agrupacion1', width: 130, align: 'left', search: true, editable: true, editrules: { required: false }, edittype: 'text', label: 'TB' },
                        { name: 'VaAlLibro', index: 'VaAlLibro', width: 80, align: 'center', search: true, editable: true, editrules: { required: false }, editoptions: { value: "SI:NO" }, edittype: 'checkbox', label: 'TB' },
                        { name: 'VaAlCiti', index: 'VaAlCiti', width: 80, align: 'center', search: true, editable: true, editrules: { required: false }, editoptions: { value: "SI:NO" }, edittype: 'checkbox', label: 'TB' },
                        { name: 'VaAConciliacionBancaria', index: 'VaAConciliacionBancaria', width: 80, search: true, align: 'center', editable: true, editrules: { required: false }, editoptions: { value: "SI:NO" }, edittype: 'checkbox', label: 'TB' },
                        { name: 'VaAlRegistroComprasAFIP', index: 'VaAlRegistroComprasAFIP', width: 80, search: true, align: 'center', editable: true, editrules: { required: false }, editoptions: { value: "SI:NO" }, edittype: 'checkbox', label: 'TB' },
                        { name: 'ExigirCAI', index: 'ExigirCAI', width: 80, align: 'center', search: true, editable: true, editrules: { required: false }, editoptions: { value: "SI:NO" }, edittype: 'checkbox', label: 'TB' },
                        { name: 'CodigoDgi', index: 'CodigoDgi', width: 60, align: 'center', search: true, editable: true, editrules: { required: false }, edittype: 'text', label: 'TB' },
                        {
                            name: 'NumeradorAuxiliar', index: 'NumeradorAuxiliar', width: 80, align: 'right', search: true, editable: true, editrules: { required: false, number: true }, edittype: 'text', label: 'TB',
                            editoptions: {
                                maxlength: 20, defaultValue: '',
                                dataEvents: [
                                {
                                    type: 'keypress',
                                    fn: function (e) {
                                        var key = e.charCode || e.keyCode;
                                        if (key == 13) { setTimeout("jQuery('#Lista').editCell(" + selIRow + " + 1, " + selICol + ", true);", 100); }
                                        if ((key < 48 || key > 57) && key !== 46 && key !== 44 && key !== 8 && key !== 37 && key !== 39) { return false; }
                                    }
                                }]
                            }
                        },
                        { name: 'CodigoAFIP_Letra_A', index: 'CodigoAFIP_Letra_A', width: 70, align: 'center', search: true, editable: true, editrules: { required: false }, edittype: 'text', label: 'TB' },
                        { name: 'CodigoAFIP_Letra_B', index: 'CodigoAFIP_Letra_B', width: 70, align: 'center', search: true, editable: true, editrules: { required: false }, edittype: 'text', label: 'TB' },
                        { name: 'CodigoAFIP_Letra_C', index: 'CodigoAFIP_Letra_C', width: 70, align: 'center', search: true, editable: true, editrules: { required: false }, edittype: 'text', label: 'TB' },
                        { name: 'CodigoAFIP_Letra_E', index: 'CodigoAFIP_Letra_E', width: 70, align: 'center', search: true, editable: true, editrules: { required: false }, edittype: 'text', label: 'TB' },
                        { name: 'CodigoAFIP2_Letra_A', index: 'CodigoAFIP2_Letra_A', width: 70, align: 'center', search: true, editable: true, editrules: { required: false }, edittype: 'text', label: 'TB' },
                        { name: 'CodigoAFIP2_Letra_B', index: 'CodigoAFIP2_Letra_B', width: 70, align: 'center', search: true, editable: true, editrules: { required: false }, edittype: 'text', label: 'TB' },
                        { name: 'CodigoAFIP2_Letra_C', index: 'CodigoAFIP2_Letra_C', width: 70, align: 'center', search: true, editable: true, editrules: { required: false }, edittype: 'text', label: 'TB' },
                        { name: 'CodigoAFIP2_Letra_E', index: 'CodigoAFIP2_Letra_E', width: 70, align: 'center', search: true, editable: true, editrules: { required: false }, edittype: 'text', label: 'TB' },
                        { name: 'CodigoAFIP3_Letra_A', index: 'CodigoAFIP3_Letra_A', width: 70, align: 'center', search: true, editable: true, editrules: { required: false }, edittype: 'text', label: 'TB' },
                        { name: 'CodigoAFIP3_Letra_B', index: 'CodigoAFIP3_Letra_B', width: 70, align: 'center', search: true, editable: true, editrules: { required: false }, edittype: 'text', label: 'TB' },
                        { name: 'CodigoAFIP3_Letra_C', index: 'CodigoAFIP3_Letra_C', width: 70, align: 'center', search: true, editable: true, editrules: { required: false }, edittype: 'text', label: 'TB' },
                        { name: 'CodigoAFIP3_Letra_E', index: 'CodigoAFIP3_Letra_E', width: 70, align: 'center', search: true, editable: true, editrules: { required: false }, edittype: 'text', label: 'TB' }
            ],
            //gridComplete: function () {
            //    var ids = jQuery("#Lista").jqGrid('getDataIDs');
            //    for (var i = 0; i < ids.length; i++) {
            //        var cl = ids[i];
            //        var se = "<input style='height:22px;width:20px;' type='button' value='G' onclick=\"GrabarFila('" + cl + "'); \"  />";
            //        jQuery("#Lista").jqGrid('setRowData', ids[i], { act: se });
            //    }
            //},
            onCellSelect: function (rowid, iCol, cellcontent, e) {
                var $this = $(this);
                var iRow = $('#' + $.jgrid.jqID(rowid))[0].rowIndex;
                lastSelectedId = rowid;
                lastSelectediCol = iCol;
                lastSelectediRow = iRow;
            },
            afterEditCell: function (id, name, val, iRow, iCol) {
                var se = "<input style='height:22px;width:20px;' type='button' value='G' onclick=\"GrabarFila('" + id + "');\"  />";
                jQuery("#Lista").jqGrid('setRowData', id, { act: se });
            },
            //beforeSelectRow: function (rowid, e) {
            //    var iCol = $.jgrid.getCellIndex($(e.target).closest("td")[0]);
            //    if (this.p.colModel[iCol].name === 'act') {
            //        GrabarFila(rowid);
            //        return false;
            //    }
            //},
            pager: $('#ListaPager'),
            rowNum: 20,
            rowList: [10, 20, 50, 100],
            sortname: 'Descripcion',
            sortorder: 'asc',
            viewrecords: true,
            multiselect: true,
            shrinkToFit: false,
            width: 'auto',
            height: 'auto',
            altRows: false,
            footerrow: false,
            userDataOnFooter: true,
            caption: '<b>TIPOS DE COMPROBANTES</b>',
            cellEdit: true,
            cellsubmit: 'clientArray',
            editurl: ROOT + 'Empleado/EditGridData/'
        });
        jQuery("#Lista").jqGrid('navGrid', '#ListaPager', { search: false, refresh: false, add: false, edit: false, del: false }, {}, {}, {}, {});
        //jQuery("#Lista").jqGrid('navButtonAdd', '#ListaPager',
        //                                {
        //                                    caption: "", buttonicon: "ui-icon-plus", title: "Agregar item",
        //                                    onClickButton: function () {
        //                                        AgregarItemVacio(jQuery("#Lista"));
        //                                    },
        //                                });
        //jQuery("#Lista").jqGrid('navButtonAdd', '#ListaPager',
        //                                {
        //                                    caption: "", buttonicon: "ui-icon-trash", title: "Eliminar",
        //                                    onClickButton: function () {
        //                                        MarcarSeleccionadosParaEliminar(jQuery("#Lista"));
        //                                    },
        //                                });
        jQuery("#Lista").filterToolbar({
            stringResult: true, searchOnEnter: true,
            defaultSearch: 'cn',
            enableClear: false
        });
    });
</script>
