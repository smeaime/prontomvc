@model IEnumerable<ProntoMVC.Data.Models.Deposito>
@{
    ViewBag.Title = "Depositos";
}

<br />

<table id="Lista" class="scroll" cellpadding="0" cellspacing="0"></table>
<div id="ListaPager" class="scroll" style="text-align: center; height: 30px"></div>

<style>
    .myLink {
        text-decoration: underline;
        cursor: pointer;
    }
</style>

<script type="text/javascript">

    var lastSelectedId;
    var lastSelectediCol;
    var lastSelectediRow;
    var lastSelectediCol2;
    var lastSelectediRow2;
    var inEdit;
    var selICol;
    var selIRow;
    var gridCellWasClicked = false;
    var grillaenfoco = false;
    var getColumnIndexByName = function (grid, columnName) {
        var cm = grid.jqGrid('getGridParam', 'colModel'), i, l = cm.length;
        for (i = 0; i < l; i++) {
            if (cm[i].name === columnName) {
                return i; // return the index
            }
        }
        return -1;
    };
    var saveIcon = '<span class="ui-state-default" style="border:0"><span class="ui-icon ui-icon-info" style="float: left; margin-right: .3em;"></span></span>'

    $('.ui-jqgrid .ui-jqgrid-htable th div').css('white-space', 'normal');

    $.extend($.jgrid.inlineEdit, {
        keys: true
    });

    function GrabarFila(gridId) {
        var i, a, err = "";

        $('#Lista').jqGrid('setSelection', gridId);
        var iRow = $('#' + $.jgrid.jqID(gridId))[0].rowIndex;
        var dataFromTheRow = $('#Lista').jqGrid('getRowData', gridId)
        var colModel = $('#Lista').jqGrid('getGridParam', 'colModel');

        for (i = 0; i < colModel.length; i++) {
            if (colModel[i].editable) {
                a = dataFromTheRow[colModel[i].name];
                if (typeof a != "undefined") {
                    if (a.substring(0, 1) == "<") {
                        err = err + "Hay campos en modo edicion, confirmelos con enter antes de grabar.\n"
                    }
                }
            }
        }

        var datos = $("#formid").serializeObject();

        datos.IdDeposito = gridId;
        datos.IdObra = dataFromTheRow.IdObra;
        datos.Descripcion = dataFromTheRow.Descripcion;
        datos.Abreviatura = dataFromTheRow.Abreviatura;

        if (datos.Descripcion == "" || datos.Descripcion == undefined) err = err + "Falta definir el nombre.\n"
        if (datos.Abreviatura == "" || datos.Abreviatura == undefined) err = err + "Falta definir la abreviatura.\n"

        if (err != "") {
            alert('No se pudo grabar el registro.\n' + err);
        } else {
            //$('html, body').css('cursor', 'wait');
            $.ajax({
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                url: ROOT + 'Deposito/BatchUpdate',
                dataType: 'json',
                data: JSON.stringify(datos),
                success: function (result) {
                    if (result) {
                        $('#Lista').jqGrid('setRowData', gridId, { act: "" });
                        var rowid = $('#Lista').getGridParam('selrow');
                        var valor = result.IdDeposito;
                        if (valor == "") { valor = "0"; }
                        $('#Lista').jqGrid('setCell', rowid, 'IdDeposito', valor);
                    } else {
                        alert('No se pudo grabar el registro.');
                    }
                },
                error: function (xhr, textStatus, exceptionThrown) {
                    try {
                        var errorData = $.parseJSON(xhr.responseText);
                        var errorMessages = [];
                        for (var key in errorData) { errorMessages.push(errorData[key]); }
                        $('html, body').css('cursor', 'auto');
                        $('#grabar2').attr("disabled", false).val("Aceptar");
                        $("#textoMensajeAlerta").html(errorData.Errors.join("<br />"));
                        $("#mensajeAlerta").show();
                        alert(errorData.Errors.join("\n").replace(/<br\/>/g, '\n'));
                    } catch (e) {
                        $('html, body').css('cursor', 'auto');
                        $('#grabar2').attr("disabled", false).val("Aceptar");
                        $("#textoMensajeAlerta").html(xhr.responseText);
                        $("#mensajeAlerta").show();
                        alert(xhr.responseText.replace(/<br\/>/g, '\n'));
                    }
                }
            });
        };
    };

    function EliminarFila(gridId) {
        var dataFromTheRow = $('#Lista').jqGrid('getRowData', gridId);
        var idprincipal = dataFromTheRow['IdDeposito'];
        if (idprincipal <= 0) {
            $('#Lista').jqGrid('delRowData', gridId);
        } else {
            $.ajax({
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                url: ROOT + 'Deposito/Delete',
                dataType: 'json',
                data: JSON.stringify({ id: idprincipal }),
                success: function (result) {
                    if (result) {
                        $('#Lista').jqGrid('delRowData', gridId);
                    } else {
                        alert('No se pudo eliminar el registro.');
                    }
                },
                error: function (xhr, textStatus, exceptionThrown) {
                    try {
                        var errorData = $.parseJSON(xhr.responseText);
                        var errorMessages = [];
                        for (var key in errorData) { errorMessages.push(errorData[key]); }
                        $('html, body').css('cursor', 'auto');
                        $('#grabar2').attr("disabled", false).val("Aceptar");
                        $("#textoMensajeAlerta").html(errorData.Errors.join("<br />"));
                        $("#mensajeAlerta").show();
                        alert(errorData.Errors.join("\n").replace(/<br\/>/g, '\n'));
                    } catch (e) {
                        $('html, body').css('cursor', 'auto');
                        $('#grabar2').attr("disabled", false).val("Aceptar");
                        $("#textoMensajeAlerta").html(xhr.responseText);
                        $("#mensajeAlerta").show();
                        alert(xhr.responseText.replace(/<br\/>/g, '\n'));
                    }
                }
            });
        };
    };

    function MarcarSeleccionadosParaEliminar(grid) {
        var selectedIds = grid.jqGrid('getGridParam', 'selarrrow');
        var i, Id;
        for (i = selectedIds.length - 1; i >= 0; i--) {
            Id = selectedIds[i];
            var se = "<input style='height:22px;width:20px;' type='button' value='B' onclick=\"EliminarFila('" + Id + "');\"  />";
            grid.jqGrid('setRowData', Id, { act: se });
            //grid.jqGrid('delRowData', selectedIds[i]);
        }
    };

    function AgregarItemVacio(grid) {
        var colModel = grid.jqGrid('getGridParam', 'colModel');
        var dataIds = grid.jqGrid('getDataIDs');
        var Id = (grid.jqGrid('getGridParam', 'records') + 1) * -1;
        var se = "<input style='height:22px;width:20px;' type='button' value='G' onclick=\"GrabarFila('" + Id + "');\"  />";
        var data, j, cm;

        data = '{';
        for (j = 1; j < colModel.length; j++) {
            cm = colModel[j];
            data = data + '"' + cm.index + '":' + '"",';
        }
        data = data.substring(0, data.length - 1) + '}';
        data = data.replace(/(\r\n|\n|\r)/gm, "");
        grid.jqGrid('addRowData', Id, data, "first");
        grid.jqGrid('setRowData', Id, { act: se });
    };

    $().ready(function () {
        'use strict';

        $('#Lista').jqGrid({
            url: ROOT + 'Deposito/Depositos_DynamicGridData/',
            postData: {},
            datatype: 'json',
            mtype: 'POST',
            colNames: ['Acciones', 'IdDeposito', 'IdObra', 'Descripcion', 'Abreviatura', 'Obra'],
            colModel: [
                        { name: 'act', index: 'act', align: 'center', width: 60, search: false, editable: false, hidden: false },
                        { name: 'IdDeposito', index: 'IdDeposito', align: 'left', width: 100, search: false, editable: false, hidden: true },
                        { name: 'IdObra', index: 'IdObra', align: 'left', width: 100, search: false, editable: false, hidden: true },
                        { name: 'Descripcion', index: 'Descripcion', width: 200, align: 'left', search: true, editable: true, editrules: { required: false }, edittype: 'text', label: 'TB' },
                        { name: 'Abreviatura', index: 'Abreviatura', width: 200, align: 'left', search: true, editable: true, editrules: { required: false }, edittype: 'text', label: 'TB' },
                        {
                            name: 'Obra', index: 'Obra', align: 'left', width: 300, search: true, editable: true, hidden: false, edittype: 'select', editrules: { required: false },
                            editoptions: {
                                dataUrl: ROOT + 'Obra/GetObras',
                                dataInit: function (elem) {
                                    $(elem).width(290);
                                },
                                dataEvents: [{
                                    type: 'change', fn: function (e) {
                                        var $this = $(e.target), $td;
                                        if ($this.hasClass("FormElement")) {
                                            // form editing
                                            $('#IdObra').val(this.value);
                                        } else {
                                            $td = $this.closest("td");
                                            if ($td.hasClass("edit-cell")) {
                                                // cell editing
                                                var rowid = $('#Lista').getGridParam('selrow');
                                                var valor = this.value;
                                                if (valor == "") { valor = "0"; }
                                                $('#Lista').jqGrid('setCell', rowid, 'IdObra', valor);
                                            } else {
                                                // inline editing
                                            }
                                        }
                                    }
                                }]
                            },
                        }
            ],
            //gridComplete: function () {
            //    var ids = jQuery("#Lista").jqGrid('getDataIDs');
            //    for (var i = 0; i < ids.length; i++) {
            //        var cl = ids[i];
            //        var se = "<input style='height:22px;width:20px;' type='button' value='G' onclick=\"GrabarFila('" + cl + "'); \"  />";
            //        jQuery("#Lista").jqGrid('setRowData', ids[i], { act: se });
            //    }
            //},
            onCellSelect: function (rowid, iCol, cellcontent, e) {
                var $this = $(this);
                var iRow = $('#' + $.jgrid.jqID(rowid))[0].rowIndex;
                lastSelectedId = rowid;
                lastSelectediCol = iCol;
                lastSelectediRow = iRow;
            },
            afterEditCell: function (id, name, val, iRow, iCol) {
                var se = "<input style='height:22px;width:20px;' type='button' value='G' onclick=\"GrabarFila('" + id + "');\"  />";
                jQuery("#Lista").jqGrid('setRowData', id, { act: se });
            },
            //beforeSelectRow: function (rowid, e) {
            //    var iCol = $.jgrid.getCellIndex($(e.target).closest("td")[0]);
            //    if (this.p.colModel[iCol].name === 'act') {
            //        GrabarFila(rowid);
            //        return false;
            //    }
            //},
            pager: $('#ListaPager'),
            rowNum: 20,
            rowList: [10, 20, 50, 100],
            sortname: 'Descripcion',
            sortorder: 'asc',
            viewrecords: true,
            multiselect: true,
            width: 'auto',
            autowidth: true,
            shrinkToFit: false,
            height: '100%',
            altRows: false,
            footerrow: false,
            userDataOnFooter: true,
            caption: '<b>DEPOSITOS</b>',
            cellEdit: true,
            cellsubmit: 'clientArray',
            editurl: ROOT + 'Empleado/EditGridData/'
        });
        jQuery("#Lista").jqGrid('navGrid', '#ListaPager', { search: false, refresh: false, add: false, edit: false, del: false }, {}, {}, {}, {});
        jQuery("#Lista").jqGrid('navButtonAdd', '#ListaPager',
                                        {
                                            caption: "", buttonicon: "ui-icon-plus", title: "Agregar item",
                                            onClickButton: function () {
                                                AgregarItemVacio(jQuery("#Lista"));
                                            },
                                        });
        jQuery("#Lista").jqGrid('navButtonAdd', '#ListaPager',
                                        {
                                            caption: "", buttonicon: "ui-icon-trash", title: "Eliminar",
                                            onClickButton: function () {
                                                MarcarSeleccionadosParaEliminar(jQuery("#Lista"));
                                            },
                                        });
        jQuery("#Lista").filterToolbar({
            stringResult: true, searchOnEnter: true,
            defaultSearch: 'cn',
            enableClear: false
        });
    });

</script>
