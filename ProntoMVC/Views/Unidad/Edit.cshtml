@model ProntoMVC.Data.Models.Recibo
@{
    ViewBag.Title = "Edit";
}
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formid" }))
{

    

    @Html.ValidationSummary(true)


    <script src="@Url.Content("~/Scripts/ScriptRecibo.js")"  type="text/javascript" />     @*aparentemente tengo que llamarla despues de cargar las div*@

    
    <script>
        //        dejar esto
    </script>
        
    <div class="container-fluid">
        @*  <legend>Recibo</legend>*@
        <div>@Html.Hidden("IdRecibo", Model.IdRecibo)</div>
        <div>
            <div class="row-fluid">
                <div class="span1 lightblue">
                    @Html.LabelFor(model => model.PuntoVenta, "PV")
                    @Html.DropDownList("PuntoVenta", null, new { @class = "span12" })
                    @* @Html.DropDownList("PuntoVenta", (IEnumerable<SelectListItem>)ViewData["PuntoVenta"], string.Empty, new { @class = "span12" }) *@
                    @*http://stackoverflow.com/questions/506001/asp-net-mvc-dropdown-with-a-default-empty-option*@
                    <script>
                        $(document).ready(function () {

                            $('#PuntoVenta').change(function () {
                                ActualizarPuntoVenta();
                            });

                        });

                        function ActualizarPuntoVenta() {
                            var PuntoVenta = $('#PuntoVenta').val();
                            var IdCodigoIva = $('#IdCodigoIva').val();
                            $.getJSON('@Url.Action("PuntosVenta", "Cliente")',
                                        { IdCodigoIva: IdCodigoIva, PuntoVenta: $("#PuntoVenta option:selected").text() },
                                        function (cities) {
                                            if (cities.length == 0) {
                                                // nonononon, lo que pasa es que aca no deberia dejar elegir un punto de venta que no permite la condicion iva
                                                // en otras palabras, no tendría que darse nunca esta posiblidad
                                                // alert('Elija otro punto de venta');
                                                $('#PuntoVenta').val('');
                                                $('#NumeroRecibo').val('');
                                                $('#TipoABC').val('-');
                                                return;
                                            }
                                            var p = cities[0].proxnumero;
                                            $('#NumeroRecibo').val(p);
                                            var l = cities[0].letra;
                                            $('#TipoABC').val(l);
                                        });
                            calculateTotal();
                        }

                        function ActualizarListaPuntoVenta() {
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("GetPuntosVenta", "Cliente")',
                                data: { IdCodigoIVA: $('#IdCodigoIva').val() },
                                success: function (data) {
                                    var markup = '';
                                    for (var x = 0; x < data.length; x++) {
                                        //markup += '<option value="' + data[x].id + '">' + data[x].value + '</option>';
                                        markup += '<option value="' + data[x].value + '">' + data[x].value + '</option>';
                                    }
                                    $('#PuntoVenta').html(markup).show();
                                    var myDDL = $('#PuntoVenta');
                                    myDDL[0].selectedIndex = 0;
                                    ActualizarPuntoVenta();
                                }
                            })
                        }


                    </script>
                </div>
                <div class="span2 lightblue">
                    @Html.LabelFor(model => model.NumeroRecibo, "Número")
                    @Html.TextBoxFor(model => model.NumeroRecibo, new { @class = "span12", @readonly = true, @disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.NumeroRecibo)
                </div>
                <div class="span1 lightblue">
                    @*         @Html.LabelFor(model => model.TipoABC, "Letra")
                    @Html.TextBoxFor(model => model.TipoABC, new { @class = "span6", @readonly = true })
                    @Html.ValidationMessageFor(model => model.TipoABC)*@
                </div>
                <!--/span-->
                <div class="span2 lightblue">
                    @Html.LabelFor(model => model.FechaRecibo, "Fecha") @Html.TextBoxFor(model => model.FechaRecibo, new Dictionary<string, object> { { "class", "span8" }, { "placeholder", "dd/mm/yyyy" } })
                    @Html.ValidationMessageFor(model => model.FechaRecibo)
                </div>
                <div class="span2 lightblue">
                    @Html.LabelFor(model => model.Cliente.Cuit, "Cuit")
                    @Html.TextBoxFor(model => model.Cliente.Cuit, new { @class = "span12", @readonly = true })
                    @Html.ValidationMessageFor(model => model.Cliente.Cuit)
                </div>
            </div>
            <!--/row-->
            <div class="row-fluid">
                @*---------------------------------------------------------------------------------------*@
                @*---------------------------------------------------------------------------------------*@
                @*---------------------------------------------------------------------------------------*@
                @*---------------------------------------------------------------------------------------*@
                <div class="span1 lightblue">
                    @Html.HiddenFor(model => model.IdCliente)
                    @Html.LabelFor(model => model.Cliente.Codigo, "Codigo")
                    @Html.TextBoxFor(m => m.Cliente.Codigo, new { id = "CodigoCliente", @class = "span12" })
                </div>
                <div class="span5 lightblue">
                    @Html.LabelFor(model => model.IdCliente, "Cliente") @*para que quede el espacio*@
                    @Html.TextBoxFor(m => m.Cliente.RazonSocial, new { id = "DescripcionCliente", @class = "span12" })
                    <script type="text/jscript">


                        $("#CodigoCliente").autocomplete({
                            source: '@Url.Action("GetCodigosClienteAutocomplete", "Cliente")', minLength: 0,
                            messages: { noResults: "", results: function () { } },
                            select: proveedorSeleccionado,
                            autoFocus: true
                        })

                        $("#DescripcionCliente").autocomplete({
                            source: '@Url.Action("GetCodigosClienteAutocomplete", "Cliente")',
                            minLength: 0,
                            messages: { noResults: "", results: function () { } },
                            select: proveedorSeleccionado,
                            autoFocus: true

                        });

                        function proveedorSeleccionado(event, ui) {

                            ActualizarCliente(ui.item);
                            ///////////////////////
                            event.preventDefault();
                        }

                        function ActualizarCliente(item) {
                            $("#IdCliente").val(item.id);
                            $("#CodigoCliente").val(item.codigo || "");
                            $("#DescripcionCliente").val(item.value || "");
                            $("#IdCodigoIva").val(item.idCodigoIva);

                            $("#Cliente_Email").val(item.Email || "");
                            $("#Cliente_Telefono").val(item.Telefono || "");
                            $("#Cliente_Direccion").val(item.Direccion || "");
                            $("#Cliente_Provincia").val(item.Provincia || "");
                            $("#Cliente_Localidad").val(item.Localidad || "");
                            $("#Cliente_Fax").val(item.Fax || "");
                            $("#Cliente_Cuit").val(item.Cuit) || "";
                            $("#IdCondicionVenta").val(item.IdCondicionVenta);
                            $("#IdListaPrecios").val(item.IdListaPrecios);



                            $("#Cliente_EsAgenteRetencionIVA").val(item.EsAgenteRetencionIVA || "");
                            $("#Cliente_BaseMinimaParaPercepcionIVA").val(item.BaseMinimaParaPercepcionIVA) || "";
                            $("#Cliente_PorcentajePercepcionIVA").val(item.PorcentajePercepcionIVA) || "";


                            $("#IdIBCondicionPorDefecto").val(item.IdIBCondicionPorDefecto);
                            $("#IdIBCondicionPorDefecto2").val(item.IdIBCondicionPorDefecto2);
                            $("#IdIBCondicionPorDefecto3").val(item.IdIBCondicionPorDefecto3);
                            var someNumericValue = '@(ViewBag.someStringValue)'; //http://stackoverflow.com/questions/10389649/possible-to-access-mvc-viewbag-object-from-javascript-file
                            $("#Cliente_PercepcionIIBB").val(someNumericValue);
                            $('#Cliente_IBCondicionCat1_AlicuotaPercepcion').val(item.AlicuotaPercepcion1);
                            $('#Cliente_IBCondicionCat2_AlicuotaPercepcion').val(item.AlicuotaPercepcion2);
                            $('#Cliente_IBCondicionCat3_AlicuotaPercepcion').val(item.AlicuotaPercepcion3);


                            ActualizarPercepcionIIBB();
                            ActualizarListaPuntoVenta();
                            ActualizarPuntoVenta();
                        }


                        function ActualizarPercepcionIIBB() {
                            var mvarIBCondicion, mvarPercepcionIIBB, mvarId;

                            mvarIBCondicion = $("#Cliente_IBCondicion"); // IBCondicion del cliente elegido
                            mvarPercepcionIIBB = $("#PercepcionIIBB"); // PercepcionIIBB de parametros generales -los parametros generales los debo incluir en el model, o en el viewmodel? -agregalos al viewbag...



                            if (mvarIBCondicion == 1 || mvarIBCondicion == 4 || (mvarId < 0 && mvarPercepcionIIBB != "SI")) {

                                $("#IdIBCondicionPorDefecto").prop('disabled', true);
                                $("#IdIBCondicionPorDefecto2").prop('disabled', true);
                                $("#IdIBCondicionPorDefecto3").prop('disabled', true);

                                //            dcfields(4).Enabled = False
                                //            dcfields(5).Enabled = False
                                //            dcfields(6).Enabled = False
                                //            .Fields("IdIBCondicion").Value = Null
                                //            .Fields("IdIBCondicion2").Value = Null
                                //            .Fields("IdIBCondicion3").Value = Null
                                //            With Check1(0)
                                //               .Value = 0
                                //               .Enabled = False
                                //            End With
                                //            With Check1(1)
                                //               .Value = 0
                                //               .Enabled = False
                                //            End With
                                //            With Check1(2)
                                //               .Value = 0
                                //               .Enabled = False
                                //            End With
                            } else {
                                $("#IdIBCondicionPorDefecto").prop('disabled', false);
                                $("#IdIBCondicionPorDefecto2").prop('disabled', false);
                                $("#IdIBCondicionPorDefecto3").prop('disabled', false);
                                //            Check1(0).Enabled = True
                                //            If IsNull(.Fields("IdIBCondicion").Value) Then
                                //               .Fields("IdIBCondicion").Value = mvarIdIBCondicion
                                //               If mvarIdIBCondicion <> 0 Then Check1(0).Value = 1
                                //            End If
                                //            If Check1(0).Value = 1 Then dcfields(4).Enabled = True Else dcfields(4).Enabled = False
                                //            Check1(1).Enabled = True
                                //            If IsNull(.Fields("IdIBCondicion2").Value) And mvarIdIBCondicion2 <> 0 Then
                                //               .Fields("IdIBCondicion2").Value = mvarIdIBCondicion2
                                //               If mvarIdIBCondicion2 <> 0 Then Check1(1).Value = 1
                                //            End If
                                //            If Check1(1).Value = 1 Then dcfields(5).Enabled = True Else dcfields(5).Enabled = False
                                //            Check1(2).Enabled = True
                                //            If IsNull(.Fields("IdIBCondicion3").Value) And mvarIdIBCondicion3 <> 0 Then
                                //               .Fields("IdIBCondicion3").Value = mvarIdIBCondicion3
                                //               If mvarIdIBCondicion3 <> 0 Then Check1(2).Value = 1
                                //            End If
                                //            If Check1(2).Value = 1 Then dcfields(6).Enabled = True Else dcfields(6).Enabled = False
                            }
                        }

                        function AutocompleteManual(term) {
                            $.ajax({
                                type: 'POST',
                                contentType: 'application/json; charset=utf-8',
                                url: ROOT + 'Cliente/GetCodigosClienteAutocomplete',
                                dataType: 'json',
                                // data:JSON.stringify( {formulario: colData , grilla: dataToSend })
                                data: JSON.stringify({ term: term }),
                                success: function (result) {
                                    var item = result[0];

                                    ActualizarCliente(item);
                                }
                            })


                            //                            $.getJSON('@Url.Action("PuntosVenta", "Cliente")',
                            //                                        { IdCodigoIva: IdCodigoIva, PuntoVenta: $("#PuntoVenta option:selected").text() },
                            //                                        function (cities) {
                            //                                            var p = cities[0].proxnumero;
                            //                                            $('#NumeroRecibo').val(p);
                            //                                            var l = cities[0].letra;
                            //                                            $('#TipoABC').val(l);
                            //                                        });
                        }


                        function ActualizarDatosCliente(cadenaAutoComplete) {
                            // var code = "OPELMEC";
                            // simulo un ingreso y clic en el autocomplete (tiene que tener puesto el autofocus: true)
                            // http: //stackoverflow.com/questions/8036143/jquery-autocomplete-select-first-item
                            AutocompleteManual(cadenaAutoComplete);
                            return;
                            $("#DescripcionCliente").val(cadenaAutoComplete);
                            $("#DescripcionCliente").autocomplete('search', cadenaAutoComplete);
                            $(".ui-menu-item:first a").click();
                            // '@Url.Action("GetCodigosClienteAutocomplete", "Cliente")'
                        };


                    </script>
                </div>
                @*---------------------------------------------------------------------------------------*@
                @*---------------------------------------------------------------------------------------*@
                @*---------------------------------------------------------------------------------------*@
                @*---------------------------------------------------------------------------------------*@
                @*---------------------------------------------------------------------------------------*@
            </div>
            @*---------------------------------------------------------------------------------------*@
            @*---------------------------------------------------------------------------------------*@
            @*---------------------------------------------------------------------------------------*@
       
            <div class="accordion" id="accordion2">
                <div class="accordion-group" style="border: 0px; padding: 0px;">



                    <div class="accordion-heading" style="border: 0px; padding: 0px;">
                        <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapseOne"
                            style="border: 0px; padding: 0px;">más... </a>
                    </div>
                    <div id="collapseOne" class="accordion-body collapse" style="border: 0px; padding: 0px;">
                        @*si pones "collapse in" empieza abierto*@
                        <div class="accordion-inner" style="border: 0px; padding: 0px;">
                             <br />
            Ret. ganan. n° cert ret iva
            <br />
            n° cert gananc. n° cert ing. brut
            <br />
            <br />
                            <div class="row-fluid">
                                <div class="span2 lightblue">
                                    @Html.LabelFor(model => model.Cliente.Direccion, "Dirección")
                                    @Html.TextBoxFor(model => model.Cliente.Direccion, new { @class = "span12", @readonly = true })
                                    @Html.ValidationMessageFor(model => model.Cliente.Direccion)
                                </div>
                                <div class="span2 lightblue">
                                    @Html.LabelFor(model => model.Cliente.Telefono, "Telefono")
                                    @Html.TextBoxFor(model => model.Cliente.Telefono, new { @class = "span12", @readonly = true })
                                    @Html.ValidationMessageFor(model => model.Cliente.Telefono)
                                </div>
                                <div class="span2 lightblue">
                                    @Html.LabelFor(model => model.Cliente.Fax)
                                    @Html.TextBoxFor(model => model.Cliente.Fax, new { @class = "span12", @readonly = true })
                                    @Html.ValidationMessageFor(model => model.Cliente.Fax)
                                </div>
                            </div>
                            <div class="row-fluid">
                                <div class="span2 lightblue">
                                    @Html.LabelFor(model => model.Cliente.Localidad, "Localidad")
                                    @Html.TextBoxFor(model => model.Cliente.Localidad, new { @class = "span12", @readonly = true })
                                    @Html.ValidationMessageFor(model => model.Cliente.Localidad)
                                </div>
                                <div class="span2 lightblue">
                                    @Html.LabelFor(model => model.Cliente.Email, "Email")
                                    @Html.TextBoxFor(model => model.Cliente.Email, new { @class = "span12", @readonly = true })
                                    @Html.ValidationMessageFor(model => model.Cliente.Email)
                                </div>
                                <div class="span2 lightblue">
                                    @*Zona*@
                                </div>
                            </div>
                            <div class="row-fluid">
                                <div class="span4 lightblue">
                                    @Html.LabelFor(model => model.Cliente.Provincia, "Provincia")
                                    @Html.TextBoxFor(model => model.Cliente.Provincia, new { @class = "span12", @readonly = true })
                                    @Html.ValidationMessageFor(model => model.Cliente.Provincia)
                                </div>
                                <div class="span2 lightblue">
                                </div>
                            </div>
                            <div class="row-fluid">
                                @* <div class="span2 lightblue">
                                    @Html.LabelFor(model => model.IdMoneda, "Moneda")
                                    @Html.DropDownList("IdMoneda", null, "", new { @class = "span12" })
                                    @Html.ValidationMessageFor(model => model.IdMoneda)
                                </div>*@
                                <div class="span2 lightblue">
                                    @Html.LabelFor(model => model.IdMoneda, "Conv. a Pesos")
                                    @Html.TextBoxFor(model => model.CotizacionMoneda, new { @class = "span12" })
                                    @Html.ValidationMessageFor(model => model.IdMoneda)
                                </div>
                                @*    <div class="span2 lightblue">
                                    @Html.LabelFor(model => model.IdMoneda, "Cotiz. Dolar")
                                    @Html.TextBoxFor(model => model.CotizacionDolar, new { @class = "span12" })
                                    @Html.ValidationMessageFor(model => model.IdMoneda)
                                </div>*@
                            </div>
                            <div class="row-fluid">
                                <div class="span12 lightblue">
                                    Otros conceptos
                                    <br />
                                    Obra Cta. gastos Grupo Codigo Cuenta n° comprob. Importe
                                    <br />
                                    obra
                                    @Html.TextBoxFor(model => model.IdObra1, new { @class = "span12" })
                                    cuenta gasto
                                    @Html.TextBoxFor(model => model.IdCuentaGasto1, new { @class = "span12" })
                                    cuenta
                                    @Html.TextBoxFor(model => model.IdCuenta1)
                                    numero
                                    @Html.TextBoxFor(model => model.NumeroComprobante1)
                                    importe
                                    @Html.TextBoxFor(model => model.Otros1)
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <script>
                // http://stackoverflow.com/questions/12733238/bootstrap-collapse-accordion-return-to-same-section-when-navigating-away-and-ba
                $(function () {
                    //                    $("#accordion2estado").val(localStorage.getItem("accordion2"));

                    //                    $("#accordion2").click() {
                    //                        localStorage.setItem("accordion2estado", $("#accordion2").val());
                    //                    }
                    $("#collapseOne").bind('shown', function () {
                        var active = $("#collapseOne .in").attr('id');
                        $.cookie('activeAccordionGroup', active)
                    });

                    $("#accordion2").bind('shown', function () {
                        var active = $("#accordion2 .in").attr('id');
                        $.cookie('activeAccordionGroup', active)
                    });
                })
                
            </script>
            @*---------------------------------------------------------------------------------------*@
            @*---------------------------------------------------------------------------------------*@
            @*---------------------------------------------------------------------------------------*@
            <!--/row-->
           
            <div class="row-fluid">
                <div class="span8 lightblue">
                    @*@Html.Hidden("DetalleRecibos", Model.DetalleRecibos)*@
                    @Html.HiddenFor(m => m.DetalleRecibos)
                    @*<style type="text/css">
                    .ui-jqgrid tr.jqgrow td
                    {
                        white-space: normal !important;
                        height: auto;
                        vertical-align: text-top;
                        padding-top: 2px;
                    }
                </style>*@
                    <table id="Lista" class="scroll" cellpadding="0" cellspacing="0" style="width: 100%">
                    </table>

                     
                    <input type="button" class="btn btn-mini" id="addData" value="Agregar imputación" />
                    <input type="button" class="btn btn-mini" id="edtData" value="Modificar item" />
                    <input type="button" class="btn btn-mini" id="delData" value="Borrar item" />
                     <input type="button" class="btn btn-mini" id="addData" value="Pago anticipado" />
                  
                    <input type="button" class="btn btn-mini" id="" value="Buscar" onclick="pageLayout.show('east'); pageLayout.hide('south'); pageLayout.hide('north')" />
                </div>
            </div>
            <br />
            <div class="row-fluid">

                <div class="span4 lightblue">
                    @*  ////////////////////////////////////////////////////////////////////
                    ////////////////////////////////////////////////////////////////////
                    ////////////////////////////////////////////////////////////////////*@
                    <table id="ListaDocumentos" class="scroll" cellpadding="0" cellspacing="0" style="width: 100%">
                    </table>
                    @*pinta que al no usar el tag de cierre separado se vuelve loco*@
                    <div id="PagerDocumentos" class="scroll">
                    </div>
                    <input type="button" id="addDataDocumentos" class="btn btn-mini" value="Agregar registro" />
                    <input type="button" id="edtDataDocumentos" class="btn btn-mini" value="Modificar item" />
                    <input type="button" id="delDataDocumentos" class="btn btn-mini" value="Borrar item" />
                     <input type="checkbox" id="delDataDocumentos" class="btn btn-mini" value="Manual" />

                    @* ////////////////////////////////////////////////////////////////////
                    ////////////////////////////////////////////////////////////////////
                    ////////////////////////////////////////////////////////////////////
                    ////////////////////////////////////////////////////////////////////*@
                </div>
                <!--/span-->
                <div class="span4 lightblue">
                    @*  ////////////////////////////////////////////////////////////////////
                    ////////////////////////////////////////////////////////////////////
                    ////////////////////////////////////////////////////////////////////*@
                    <table id="ListaUnidades" class="scroll" cellpadding="0" cellspacing="0" style="width: 100%">
                    </table>
                    @*pinta que al no usar el tag de cierre separado se vuelve loco*@
                    <div id="PagerUnidades" class="scroll">
                    </div>
                    <input type="button" id="addDataUnidades" class="btn btn-mini" value="Agregar valor" />
                    <input type="button" id="addDataUnidades" class="btn btn-mini" value="Agregar caja" />
                    <input type="button" id="edtDataUnidades" class="btn btn-mini" value="Modificar item" />
                    <input type="button" id="delDataUnidades" class="btn btn-mini" value="Borrar item" />

                    @* ////////////////////////////////////////////////////////////////////
                    ////////////////////////////////////////////////////////////////////
                    ////////////////////////////////////////////////////////////////////
                    ////////////////////////////////////////////////////////////////////*@
                </div>
                <!--/span-->
            </div>
         
            <br />
            <div class="row-fluid" style="font-size: 10px;">
                <div class="span3 lightblue small" style="min-height: 0px !important;">
                    <small>
                        <div class="row-fluid">
                            <div class="span6 lightblue">
                                Subtotal
                            </div>
                            <div class="span6 lightblue">
                                @Html.TextBox("Subtotal1", 0, new { @class = "span12", @readonly = true, style = "text-align: right" })
                            </div>
                        </div>
                        @*  <div class="row-fluid">
                    <div class="span6 lightblue">
                        Bonif items
                                          </div>
                    <div class="span6 lightblue">
                        @Html.Display("TotalBonificacionGlobal", new { @class = "span12" ,@readonly=true })
                    </div>
                </div>*@ @*        <div class="row-fluid">
                        <div class="span2 lightblue">
                            Bonif glob
                        </div>
                        <div class="span4 lightblue">
                            <div class="input-append">
                                @Html.TextBoxFor(m => m.PorcentajeBonificacion, new { @class = "span6" })
                                <span class="add-on">%</span>
                            </div>
                            <script>
                                $("#PorcentajeBonificacion").change(function () { calculateTotal(); })
                            </script>
                        </div>
                        <div class="span6 lightblue">
                            @Html.TextBox("ImporteBonificacionTotal", Model.ImporteBonificacion, new { @class = "span12", @readonly = true, style = "text-align: right" })
                            @Html.TextBoxFor(m => m.ImporteBonificacion, new { @class = "span12", @readonly = true, style = "text-align: right" })
                        </div>
                    </div>
                   @* <div class="row-fluid">
                        <div class="span2 lightblue">
                            IVA
                        </div>
                        <div class="span4 lightblue">
                            <div class="input-append">
                                @Html.TextBoxFor(m => m.PorcentajeIva1, new { @class = "span6", @readonly = true })
                                <span class="add-on">%</span>
                            </div>
                            <script>
                                $("#PorcentajeIva1").change(function () { calculateTotal(); })
                            </script>
                            @Html.HiddenFor(m => m.PorcentajeIva2, new { @class = "span6", @readonly = true })
                        </div>
                        <div class="span6 lightblue">
                            @Html.TextBoxFor(m => m.ImporteIva1, new { @class = "span12", @readonly = true, style = "text-align: right" })
                        </div>
                    </div>*@ @*       <div class="row-fluid">
                        <div class="span6 lightblue">
                            Percep IIBB
                        </div>
                        <div class="span6 lightblue">
                            @Html.TextBox("PercepIIBB", Model.RetencionIBrutos1 + Model.RetencionIBrutos2 + Model.RetencionIBrutos3, new { @class = "span12", @readonly = true, style = "text-align: right" })
                        </div>
                    </div>
                    <div class="row-fluid">
                        <div class="span6 lightblue">
                            Percep IVA
                        </div>
                        <div class="span6 lightblue">
                            @Html.TextBoxFor(m => m.PercepcionIVA, new { @class = "span12", @readonly = true, style = "text-align: right" })
                            @Html.HiddenFor(m => m.Cliente.EsAgenteRetencionIVA)
                            @Html.HiddenFor(m => m.Cliente.BaseMinimaParaPercepcionIVA)
                            @Html.HiddenFor(m => m.Cliente.PorcentajePercepcionIVA)
                        </div>
                    </div>
                    <div>
                        @* style="visibility: hidden; display: none;">*@
                        <div class="row-fluid">
                            <div class="span6 lightblue">
                                TOTAL
                            </div>
                            <div class="span6 lightblue">
                                @* @Html.TextBoxFor(m => m.ImporteTotal, new { @class = "span12", @readonly = true, style = "text-align: right" })*@
                            </div>
                        </div>
                    </small>
                </div>
                <div class="span5 lightblue">
                    <div class="row-fluid">
                        <div class="span12 lightblue">
                        </div>
                    </div>
                    <div class="row-fluid">
                        <div class="span12 lightblue">
                            @Html.LabelFor(model => model.Observaciones)
                            @Html.TextAreaFor(model => model.Observaciones, new { @class = "span12" })
                            @Html.ValidationMessageFor(model => model.Observaciones)
                        </div>
                        <!--/span-->
                    </div>
                    <div class="row-fluid">
                        <div class="span12 lightblue">
                        </div>
                    </div>
                    <div class="row-fluid">
                        <div class="span12 lightblue">
                        </div>
                    </div>
                    <div class="row-fluid">
                        <div class="span12 lightblue">
                            @if (Model.IdRecibo <= 0)
                            {
                                <input type="button" id="grabar2" value="Aceptar" class="btn  btn-large btn-primary" />
@*<input type="button" id="grabarNormal" value="Guardar generico" class="btn btn-primary" />*@
                      
                            }
                            else
                            { 
                                <a class="btn btn-link" style="color: Black" href="@Url.Action("Imprimir", new { @id = Model.IdRecibo })">
                                    <i class="icon-print"></i>&nbsp;Imprimir</a>
                            
@*    if (Model.Anulada != "SI")
                            {
                            <a class="btn btn-link" style="color: Black" href="@Url.Action("Anular", new { @id = Model.IdRecibo })">
                                <i class=""></i>&nbsp;Anular</a>
                            }*@
@*@Html.ActionLink("Imprimir", "Imprimir", new { @id = Model.IdRecibo }, new { @class = "btn btn-link" })
                            @Html.ActionLink("Borrar", "DeleteConfirmedDirecto", new { id = Model.IdRecibo }, new { @class = "btn btn-link" }) *@
                            }
                            @Html.ActionLink("Volver al listado", "Index", null, new { @class = "btn btn-link" })
                            @*<input type="button" id="anular" class="boton" value="Anular RM" />*@
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <script type="text/javascript">

    </script>
    

}
