@model IEnumerable<ProntoMVC.Data.Models.Unidad>
@{
    ViewBag.Title = "Unidades";
}
@*<h2>Index</h2>*@ @* <div class="container-fluid">*@

<br />
<div style="padding-left: 15px; padding-right: 15px;">
    @*agregar esto 1*@

    <div class="row-fluid">
        <div class="span10 lightblue">


            <table id="Lista" class="scroll" cellpadding="0" cellspacing="0"
                   style="font-size: 16px;
        font-family: 'Helvetica Narrow', 'Arial Narrow', Tahoma, Arial, Helvetica, sans-serif;"></table> @*agregar esto 2 font family*@


        <div id="ListaPager" class="scroll" style="text-align: center; height: 30px"></div>
    </div>
</div>
</div>

<style>
    .myLink {
        text-decoration: underline;
        cursor: pointer;
    }


    .ui-widget {
        /* font-size: 1.1em; */
        /*font-size: 10pt;
      line-height: 14px;*/
        font-family: 'Helvetica Narrow', 'Arial Narrow',Tahoma,Arial,Helvetica,sans-serif;
    }
</style>




<script type="text/javascript">

    var $grid = "";
    var lastSelectedId;
    var lastSelectediCol;
    var lastSelectediRow;
    var lastSelectediCol2;
    var lastSelectediRow2;
    var inEdit;
    var selICol;
    var selIRow;
    var gridCellWasClicked = false;
    var grillaenfoco = false;
    var getColumnIndexByName = function (grid, columnName) {
        var cm = grid.jqGrid('getGridParam', 'colModel'), i, l = cm.length;
        for (i = 0; i < l; i++) {
            if (cm[i].name === columnName) {
                return i; // return the index
            }
        }
        return -1;
    };
    var saveIcon = '<span class="ui-state-default" style="border:0"><span class="ui-icon ui-icon-info" style="float: left; margin-right: .3em;"></span></span>'

    $('.ui-jqgrid .ui-jqgrid-htable th div').css('white-space', 'normal');

    $.extend($.jgrid.inlineEdit, {
        keys: true
    });

    function GrabarFila(gridId) {
        var dataFromTheRow = $grid.jqGrid('getRowData', gridId);
        var datos = $("#formid").serializeObject();
        var err;

        datos.IdUnidad = gridId;
        datos.Descripcion = dataFromTheRow.Descripcion;
        datos.Abreviatura = dataFromTheRow.Abreviatura;
        datos.CodigoAFIP = dataFromTheRow.CodigoAFIP;
        datos.UnidadesPorPack = dataFromTheRow.UnidadesPorPack;
        datos.TaraEnKg = dataFromTheRow.TaraEnKg;

        err = ""
        if (datos.Descripcion == "" || datos.Descripcion == undefined) err = err + "Falta definir la descripcion.\n"
        if (datos.Abreviatura == "" || datos.Abreviatura == undefined) err = err + "Falta definir la abreviatura.\n"

        if (err != "") {
            alert('No se pudo grabar el registro.\n' + err);
        } else {
            //$('html, body').css('cursor', 'wait');
            $.ajax({
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                url: ROOT + 'Unidad/BatchUpdate',
                dataType: 'json',
                data: JSON.stringify(datos),
                success: function (result) {
                    if (result) {
                        $grid.jqGrid('setRowData', gridId, { act: "" });
                        var rowid = $('#Lista').getGridParam('selrow');
                        var valor = result.IdUnidad;
                        if (valor == "") { valor = "0"; }
                        $('#Lista').jqGrid('setCell', rowid, 'IdUnidad', valor);
                    } else {
                        alert('No se pudo grabar el registro.');
                    }
                },
                error: function (xhr, textStatus, exceptionThrown) {
                    try {
                        var errorData = $.parseJSON(xhr.responseText);
                        var errorMessages = [];
                        for (var key in errorData) { errorMessages.push(errorData[key]); }
                        $('html, body').css('cursor', 'auto');
                        $('#grabar2').attr("disabled", false).val("Aceptar");
                        $("#textoMensajeAlerta").html(errorData.Errors.join("<br />"));
                        $("#mensajeAlerta").show();
                        alert(errorData.Errors.join("\n").replace(/<br\/>/g, '\n'));
                    } catch (e) {
                        $('html, body').css('cursor', 'auto');
                        $('#grabar2').attr("disabled", false).val("Aceptar");
                        $("#textoMensajeAlerta").html(xhr.responseText);
                        $("#mensajeAlerta").show();
                    }
                }
            });
        };
    };

    function EliminarFila(gridId) {
        var dataFromTheRow = $grid.jqGrid('getRowData', gridId);
        var idprincipal = dataFromTheRow['IdUnidad'];
        if (idprincipal <= 0) {
            $grid.jqGrid('delRowData', gridId);
        } else {
            $.ajax({
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                url: ROOT + 'Unidad/Delete',
                dataType: 'json',
                data: JSON.stringify({ id: idprincipal }),
                success: function (result) {
                    if (result) {
                        $grid.jqGrid('delRowData', gridId);
                    } else {
                        alert('No se pudo eliminar el registro.');
                    }
                },
            });
        };
    };

    window.parent.document.body.onclick = saveEditedCell; // attach to parent window if any
    document.body.onclick = saveEditedCell; // attach to current document.

    function saveEditedCell(evt) {
        var target = $(evt.target);

        if ($grid) {
            var isCellClicked = $grid.find(target).length; // check if click is inside jqgrid
            if (gridCellWasClicked && !isCellClicked) // check if a valid click
            {
                gridCellWasClicked = false;
                $grid.jqGrid("saveCell", lastSelectediRow2, lastSelectediCol2);
            }
        }

        //$grid = "";
        gridCellWasClicked = false;

        if (jQuery("#Lista").find(target).length) {
            $grid = $('#Lista');
            grillaenfoco = true;
        }
        if (grillaenfoco) {
            gridCellWasClicked = true;
            lastSelectediRow2 = lastSelectediRow;
            lastSelectediCol2 = lastSelectediCol;
        }
    };

    function MarcarSeleccionadosParaEliminar(grid) {
        var selectedIds = grid.jqGrid('getGridParam', 'selarrrow');
        var i, Id;
        for (i = selectedIds.length - 1; i >= 0; i--) {
            Id = selectedIds[i];
            var se = "<input style='height:22px;width:20px;' type='button' value='B' onclick=\"EliminarFila('" + Id + "');\"  />";
            grid.jqGrid('setRowData', Id, { act: se });
            //grid.jqGrid('delRowData', selectedIds[i]);
        }
    };

    function AgregarItemVacio(grid) {
        var colModel = grid.jqGrid('getGridParam', 'colModel');
        var dataIds = grid.jqGrid('getDataIDs');
        var Id = (grid.jqGrid('getGridParam', 'records') + 1) * -1;
        var se = "<input style='height:22px;width:20px;' type='button' value='G' onclick=\"GrabarFila('" + Id + "');\"  />";
        var data, j, cm;

        data = '{';
        for (j = 1; j < colModel.length; j++) {
            cm = colModel[j];
            data = data + '"' + cm.index + '":' + '"",';
        }
        data = data.substring(0, data.length - 1) + '}';
        data = data.replace(/(\r\n|\n|\r)/gm, "");
        grid.jqGrid('addRowData', Id, data, "first");
        grid.jqGrid('setRowData', Id, { act: se });
    };

    $().ready(function () {
        'use strict';

        $('#Lista').jqGrid({
            url: ROOT + 'Unidad/TT/',
            postData: {},
            datatype: 'json',
            mtype: 'POST',
            colNames: ['Acciones', 'IdUnidad', 'Descripcion', 'Abreviatura', 'CodigoAFIP', 'Unidades P/Pack', 'Tara en Kg'],
            colModel: [
                        { name: 'act', index: 'act', align: 'center', width: 30, editable: false, hidden: false },
                        { name: 'IdUnidad', index: 'IdUnidad', align: 'left', width: 100, editable: false, hidden: true },
                        { name: 'Descripcion', index: 'Descripcion', width: 200, align: 'left', editable: true, editrules: { required: false }, edittype: 'text', label: 'TB' },
                        { name: 'Abreviatura', index: 'Abreviatura', width: 50, align: 'left', editable: true, editrules: { required: false }, edittype: 'text', label: 'TB' },
                        { name: 'CodigoAFIP', index: 'CodigoAFIP', width: 50, align: 'left', editable: true, editrules: { required: false }, edittype: 'text', label: 'TB' },
                        {
                            name: 'UnidadesPorPack', index: 'UnidadesPorPack', width: 80, align: 'right', editable: true, editrules: { required: false, number: true }, edittype: 'text', label: 'TB',
                            editoptions: {
                                maxlength: 20, defaultValue: '0.00',
                                dataEvents: [
                                {
                                    type: 'keypress',
                                    fn: function (e) {
                                        var key = e.charCode || e.keyCode;
                                        if (key == 13) { setTimeout("jQuery('#Lista').editCell(" + selIRow + " + 1, " + selICol + ", true);", 100); }
                                        if ((key < 48 || key > 57) && key !== 46 && key !== 44 && key !== 8 && key !== 37 && key !== 39) { return false; }
                                    }
                                }]
                            }
                        },
                        {
                            name: 'TaraEnKg', index: 'TaraEnKg', width: 80, align: 'right', editable: true, editrules: { required: false, number: true }, edittype: 'text', label: 'TB',
                            editoptions: {
                                maxlength: 20, defaultValue: '0.00',
                                dataEvents: [
                                {
                                    type: 'keypress',
                                    fn: function (e) {
                                        var key = e.charCode || e.keyCode;
                                        if (key == 13) { setTimeout("jQuery('#Lista').editCell(" + selIRow + " + 1, " + selICol + ", true);", 100); }
                                        if ((key < 48 || key > 57) && key !== 46 && key !== 44 && key !== 8 && key !== 37 && key !== 39) { return false; }
                                    }
                                }]
                            }
                        }
            ],
            //gridComplete: function () {
            //    var ids = jQuery("#Lista").jqGrid('getDataIDs');
            //    for (var i = 0; i < ids.length; i++) {
            //        var cl = ids[i];
            //        var se = "<input style='height:22px;width:20px;' type='button' value='G' onclick=\"GrabarFila('" + cl + "'); \"  />";
            //        jQuery("#Lista").jqGrid('setRowData', ids[i], { act: se });
            //    }
            //},
            onCellSelect: function (rowid, iCol, cellcontent, e) {
                var $this = $(this);
                var iRow = $('#' + $.jgrid.jqID(rowid))[0].rowIndex;
                lastSelectedId = rowid;
                lastSelectediCol = iCol;
                lastSelectediRow = iRow;
            },
            afterEditCell: function (id, name, val, iRow, iCol) {
                var se = "<input style='height:22px;width:20px;' type='button' value='G' onclick=\"GrabarFila('" + id + "');\"  />";
                jQuery("#Lista").jqGrid('setRowData', id, { act: se });
            },
            //beforeSelectRow: function (rowid, e) {
            //    var iCol = $.jgrid.getCellIndex($(e.target).closest("td")[0]);
            //    if (this.p.colModel[iCol].name === 'act') {
            //        GrabarFila(rowid);
            //        return false;
            //    }
            //},


            pager: $('#ListaPager'),
            rowNum: 20,
            rowList: [10, 20, 50, 100],
            sortname: 'Descripcion',
            sortorder: 'asc',
            viewrecords: true,
            multiselect: true,
            toppager: true,



            caption: '<b>UNIDADES</b>',
            cellEdit: true,
            cellsubmit: 'clientArray',
            editurl: ROOT + 'Empleado/EditGridData/',



            ///////////////////////////////
            //width: 'auto', // 'auto',
            autowidth: true,
            shrinkToFit: false,
            //////////////////////////////

            height: $(window).height() - ALTOLISTADO, // '100%'
            altRows: false,
            footerrow: false, //true,
            userDataOnFooter: true
            // ,caption: '<b>PEDIDOS</b>'
            , multiboxonly: true






        });
        jQuery("#Lista").jqGrid('navGrid', '#ListaPager', { search: false, refresh: false, add: false, edit: false, del: false }, {}, {}, {}, {});
        jQuery("#Lista").jqGrid('navButtonAdd', '#ListaPager',
                                        {
                                            caption: "", buttonicon: "ui-icon-plus", title: "Agregar item",
                                            onClickButton: function () {
                                                AgregarItemVacio(jQuery("#Lista"));
                                            },
                                        });
        jQuery("#Lista").jqGrid('navButtonAdd', '#ListaPager',
                                        {
                                            caption: "", buttonicon: "ui-icon-trash", title: "Eliminar",
                                            onClickButton: function () {
                                                MarcarSeleccionadosParaEliminar(jQuery("#Lista"));
                                            },
                                        });
    });




    @*agregar esto 3 *@
    $(window).resize(function () {
        RefrescaAnchoJqgrids();
    });


</script>
