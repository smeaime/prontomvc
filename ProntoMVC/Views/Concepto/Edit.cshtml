@model ProntoMVC.Data.Models.Concepto
@{
    ViewBag.Title = "Edit";
}
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formid" }))
{
    @Html.ValidationSummary(true)

    <div class="container-fluid">
        <div>@Html.Hidden("IdConcepto", Model.IdConcepto)</div>
        <div class="row-fluid" style="margin-bottom: 15px; margin-top: 5px;">
            <div class="span5 lightblue">
                @Html.TextBox("Titulo", "CONCEPTOS", new { style = "font-weight: 400; text-shadow: 0 1px 0  lightgray; font-size: 24px; border: 0; padding: 0 ; text-align: left; background: transparent;  font-family: 'Segoe UI Web Regular', 'Segoe UI', 'Lucida', Tahoma, Arial,'sans-serif'; -webkit-box-shadow: none; -moz-box-shadow: none; box-shadow: none; ", @class = "span10", @readonly = "readonly" })
            </div>
            <div class="span4 lightblue">
                <input type="button" id="grabar2" value="Aceptar" class="btn btn-primary" />
                @if (Model.IdConcepto > 0)
                { @Html.ActionLink("Eliminar", "DeleteConfirmed", new { id = Model.IdConcepto }, new { @class = "btn  btn-default" }) }
                @Html.ActionLink("Volver al listado", "Index", null, new { @class = "btn btn-link" })
            </div>
        </div>

        <div>
            <div class="row-fluid">
                <div class="span2 lightblue">
                    @Html.LabelFor(model => model.CodigoConcepto, "Codigo")
                    @Html.TextBoxFor(model => model.CodigoConcepto, new { @class = "span12" })
                    @Html.ValidationMessageFor(model => model.CodigoConcepto)
                </div>
                <div class="span6 lightblue">
                    @Html.LabelFor(model => model.Descripcion, "Descripcion")
                    @Html.TextBoxFor(model => model.Descripcion, new { @class = "span12" })
                    @Html.ValidationMessageFor(model => model.Descripcion)
                </div>
            </div>

            <div class="row-fluid">
                <div class="span6 lightblue">
                    @Html.LabelFor(model => model.IdCuenta, "Cuenta contable")
                    @Html.TextBoxFor(m => m.Cuenta.Descripcion, new { id = "DescripcionCuenta", @class = "span12" })
                    <script type="text/jscript">
                        var NoResultsLabel = "No se encontraron resultados";
                        $("#DescripcionCuenta").autocomplete({
                            source: '@Url.Action("GetCuentasAutocomplete", "Cuenta")', minLength: 0,
                            messages: { noResults: "", results: function () { } },
                            select: cuentaSeleccionado,
                            autoFocus: true,
                            focus: function (event, ui) {
                                if (ui.item.label === NoResultsLabel) {
                                    event.preventDefault();
                                }
                            }
                        })

                        function cuentaSeleccionado(event, ui) {
                            if (ui.item.label === NoResultsLabel) {
                                event.preventDefault();
                                return;
                            }
                            $("#IdCuenta").val(ui.item.id);
                            $("#DescripcionCuenta").val(ui.item.value || "");
                            event.preventDefault();
                        }
                    </script>
                </div>
            </div>

            <div class="row-fluid">
                <div class="span3 lightblue">
                    @Html.LabelFor(model => model.CodigoAFIP, "Codigo AFIP")
                    @Html.TextBoxFor(model => model.CodigoAFIP)
                    @Html.ValidationMessageFor(model => model.CodigoAFIP)
                </div>
                <div class="span3 lightblue">
                    @Html.LabelFor(model => model.GravadoDefault, "Valor por defecto gravado")
                    @Html.RadioButtonFor(model => model.GravadoDefault, "SI") Gravado
                    @Html.RadioButtonFor(model => model.GravadoDefault, "NO") No gravado
                </div>
                <div class="span2 lightblue">
                    @Html.LabelFor(model => model.GeneraComision, "Genera comision al vendedor?")
                    @Html.CheckBox("GeneraComision", Model.GeneraComision == "SI")
                </div>
            </div>

        </div>
    </div>

    <script type="text/javascript">
        $(document).ready(function () {
            ////////////////////////////////////////////////////////// SERIALIZACION //////////////////////////////////////////////////////////
            function SerializaForm() {
                var valor;
                //cabecera.Descripcion = $("#Descripcion").val();

                valor = $("input[name='GeneraComision']:checked").val();
                if (typeof valor == "undefined") { $("#GeneraComision").val(""); }
                else { $("#GeneraComision").val(valor); }

                var cabecera = $("#formid").serializeObject();

                return cabecera;
            }

            $('#grabar2').click(function () {
                var cabecera = SerializaForm();

                $('html, body').css('cursor', 'wait');
                $.ajax({
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    url: ROOT + 'Concepto/BatchUpdate',
                    dataType: 'json',
                    data: JSON.stringify({ Concepto: cabecera }),
                    success: function (result) {
                        if (result) {
                            $('html, body').css('cursor', 'auto');
                            window.location = (ROOT + "Concepto/Edit/" + result.IdConcepto);
                        } else {
                            alert('No se pudo grabar el objeto.');
                            $('.loading').html('');
                            $('html, body').css('cursor', 'auto');
                            $('#grabar2').attr("disabled", false).val("Aceptar");
                        }
                    },
                    beforeSend: function () {
                        $("#loading").show();
                        $('#grabar2').attr("disabled", true).val("Espere...");
                    },
                    complete: function () {
                        $("#loading").hide();
                    },
                    error: function (xhr, textStatus, exceptionThrown) {
                        try {
                            var errorData = $.parseJSON(xhr.responseText);
                            var errorMessages = [];
                            for (var key in errorData) { errorMessages.push(errorData[key]); }
                            $('html, body').css('cursor', 'auto');
                            $('#grabar2').attr("disabled", false).val("Aceptar");
                            $("#textoMensajeAlerta").html(errorData.Errors.join("<br />"));
                            $("#mensajeAlerta").show();
                            alert(errorData.Errors.join("\n").replace(/<br\/>/g, '\n'));
                        } catch (e) {
                            $('html, body').css('cursor', 'auto');
                            $('#grabar2').attr("disabled", false).val("Aceptar");
                            $("#textoMensajeAlerta").html(xhr.responseText);
                            $("#mensajeAlerta").show();
                        }
                    }
                });
            });

        });

    </script>
}