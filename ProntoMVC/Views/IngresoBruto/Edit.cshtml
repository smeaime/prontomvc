@model ProntoMVC.Data.Models.IBCondicion
@{
    ViewBag.Title = "Edit";
}
@using (Html.BeginForm())
{

    @Html.ValidationSummary(true)
    <div class="container-fluid">
        <form class="form-horizontal">
        <legend>Categoría de Ingresos Brutos</legend>@* <div>@Html.Hidden("IdRequerimiento", Model.IdIBCondicion)</div>*@
        @Html.HiddenFor(model => model.IdIBCondicion)
        @* <div>@Html.Hidden("Cumplido", Model.Cumplido)</div>
        <div>@Html.Hidden("FechaAnulcion", Model.FechaAnulacion)</div>
        <div>@Html.Hidden("UsuarioAnulacion", Model.UsuarioAnulacion)</div>
        <div>@Html.Hidden("MotivoAnulacion", Model.MotivoAnulacion)</div>*@
        @string.Join("; ", ViewData.ModelState.Values.SelectMany(x => x.Errors).Select(x => x.ErrorMessage))
        @Html.Raw(ViewBag.Errores)
        @*<div class="alert">
            @Html.Raw(ViewBag.Errores)
            <button type="button" class="close" data-dismiss="alert">
                &times;</button>
          
        </div>
*@
        <div class="row-fluid">
            <div class="span8 lightblue">
                @Html.LabelFor(model => model.Descripcion, "Jurisdiccion")
                @Html.TextBoxFor(model => model.Descripcion, new { @class = "span12" })
                @Html.ValidationMessageFor(model => model.Descripcion)
            </div>
        </div>
        <div class="row-fluid">
            <div class="span4 lightblue">
                @Html.LabelFor(model => model.IdProvincia, "Provincia")
                @Html.DropDownList("IdProvincia", String.Empty)
                @Html.ValidationMessageFor(model => model.IdProvincia)
            </div>
            <div class="span4 lightblue">
                @Html.LabelFor(model => model.IdProvinciaReal, "Provincia real")
                @Html.DropDownList("IdProvinciaReal", String.Empty)
                @Html.ValidationMessageFor(model => model.IdProvinciaReal)
            </div>
        </div>
        <div class="row-fluid">
            <div class="span4 lightblue">
                @Html.LabelFor(model => model.FechaVigencia, "Fecha de vigencia")
                @Html.TextBoxFor(model => model.FechaVigencia, new Dictionary<string, object> { { "class", "span12" }, { "placeholder", "dd/mm/yyyy" } })
                @Html.ValidationMessageFor(model => model.FechaVigencia)
                <script type="text/jscript">
                    $("#FechaVigencia").datepicker({
                        changeMonth: true,
                        changeYear: true
                        //numberOfMonths: 2,
                    });
                </script>
            </div>
            <div class="span4 lightblue">
                @Html.LabelFor(model => model.Codigo, "Cod. interno (opcional)")
                @Html.TextBoxFor(model => model.Codigo, new { @class = "span12" })
                @Html.ValidationMessageFor(model => model.Codigo)
            </div>
            <!--/span-->
        </div>
        <div class="row-fluid">
            <div class="span4 lightblue">
                @Html.LabelFor(model => model.CodigoActividad, "Codigo de actividad")
                @Html.TextBoxFor(model => model.CodigoActividad, new { @class = "span12" })
                @Html.ValidationMessageFor(model => model.CodigoActividad)
            </div>
            <div class="span4 lightblue">
                @Html.LabelFor(model => model.CodigoAFIP, "Codigo segun AFIP")
                @Html.TextBoxFor(model => model.CodigoAFIP, new { @class = "span12" })
                @Html.ValidationMessageFor(model => model.CodigoAFIP)
            </div>
            <!--/span-->
        </div>
        <div class="row-fluid">
            <div class="span4 lightblue">
                @Html.LabelFor(model => model.InformacionAuxiliar, "Informacion auxiliar")
                @Html.TextBoxFor(model => model.InformacionAuxiliar, new { @class = "span12" })
                @Html.ValidationMessageFor(model => model.InformacionAuxiliar)
            </div>
        </div>
        <h4>
            Retenciones</h4>
        <div class="row-fluid">
            <div class="span2 lightblue">
                @Html.LabelFor(model => model.ImporteTopeMinimo, "Tope mínimo")
                @Html.TextBoxFor(model => model.ImporteTopeMinimo, new { @class = "span12" })
                @Html.ValidationMessageFor(model => model.ImporteTopeMinimo)
            </div>
            <div class="span2 lightblue">
                @Html.LabelFor(model => model.Alicuota, "Alicuota")
                @Html.TextBoxFor(model => model.Alicuota, new { @class = "span12" })
                @Html.ValidationMessageFor(model => model.Alicuota)
            </div>
            <div class="span2 lightblue">
                <div class="input-append">
                    @Html.LabelFor(model => model.PorcentajeATomarSobreBase, "% a tomar sobre imponible")
                    @Html.TextBoxFor(model => model.PorcentajeATomarSobreBase, new { @class = "span12" })
                    <span class="add-on">%</span>
                    @Html.ValidationMessageFor(model => model.PorcentajeATomarSobreBase)
                </div>
            </div>
        </div>
        <div class="row-fluid">
            <div class="span2 lightblue">
                @Html.LabelFor(model => model.PorcentajeATomarSobreBase, "% adic. sobre calculado")
                @Html.TextBoxFor(model => model.PorcentajeATomarSobreBase, new { @class = "span12" })
                @Html.ValidationMessageFor(model => model.PorcentajeATomarSobreBase)
            </div>
            <div class="span4 lightblue">
                @Html.LabelFor(model => model.LeyendaPorcentajeAdicional, "Leyenda % adic")
                @Html.TextBoxFor(model => model.LeyendaPorcentajeAdicional, new { @class = "span12" })
                @Html.ValidationMessageFor(model => model.LeyendaPorcentajeAdicional)
            </div>
        </div>
        <div class="row-fluid">
            <div class="span2 lightblue">
                @Html.LabelFor(model => model.CodigoNormaRetencion, "Codigo de norma")
                @Html.TextBoxFor(model => model.CodigoNormaRetencion, new { @class = "span12" })
                @Html.ValidationMessageFor(model => model.CodigoNormaRetencion)
            </div>
        </div>
        <h4>
            Percepciones</h4>
        <h5>
            Ventas</h5>
        <div class="row-fluid">
            <div class="span2 lightblue">
            </div>
            <div class="span2 lightblue">
                Alicuotas
            </div>
            <div class="span4 lightblue">
                Cuentas contables
            </div>
        </div>
        <div class="row-fluid">
            <div class="span2 lightblue">
                @Html.LabelFor(model => model.CodigoNormaPercepcion, "Cond. normal")
            </div>
            <div class="span2 lightblue">
                @Html.TextBoxFor(model => model.AlicuotaPercepcion, new { @class = "span12" })
                @Html.ValidationMessageFor(model => model.AlicuotaPercepcion)
            </div>
            <div class="span4 lightblue">
                @*---------------------------------------------------------------------------------------*@
                @*---------------------------------------------------------------------------------------*@
                @*---------------------------------------------------------------------------------------*@
                @*---------------------------------------------------------------------------------------*@
                @Html.HiddenFor(model => model.IdCuentaPercepcionIIBB)
                @Html.TextBox("CodigoCuentaNormal", (Model.CuentaIIBBnormal == null ? "" : Model.CuentaIIBBnormal.Codigo.ToString()), new { @class = "span2" })
                @Html.TextBox("DescripcionCuentaNormal", (Model.CuentaIIBBnormal == null ? "" : Model.CuentaIIBBnormal.Descripcion), new { @class = "span10" })
                <script type="text/jscript">


                    $("#CodigoCuentaNormal").autocomplete({
                        source: '@Url.Action("GetCodigosCuentasAutocomplete2", "Cuenta")', minLength: 3,
                        messages: { noResults: "", results: function () { } },
                        select: proveedorSeleccionado
                    })

                    $("#DescripcionCuentaNormal").autocomplete({
                        source: '@Url.Action("GetCuentasAutocomplete", "Cuenta")',
                        minLength: 0,
                        messages: { noResults: "", results: function () { } },
                        select: proveedorSeleccionado

                    });

                    function proveedorSeleccionado(event, ui) {
                        $("#IdCuentaPercepcionIIBB").val(ui.item.id);
                        $("#CodigoCuentaNormal").val(ui.item.codigo);
                        $("#DescripcionCuentaNormal").val(ui.item.title);
                        event.preventDefault();
                    }
                </script>
                @*---------------------------------------------------------------------------------------*@
                @*---------------------------------------------------------------------------------------*@
                @*---------------------------------------------------------------------------------------*@
                @*---------------------------------------------------------------------------------------*@
                @*---------------------------------------------------------------------------------------*@
            </div>
        </div>
        <div class="row-fluid">
            <div class="span2 lightblue">
                @Html.LabelFor(model => model.Codigo, "Convenio multilat.")
            </div>
            <div class="span2 lightblue">
                @Html.TextBoxFor(model => model.AlicuotaPercepcionConvenio, new { @class = "span12" })
                @Html.ValidationMessageFor(model => model.AlicuotaPercepcionConvenio)
            </div>
            <div class="span4 lightblue">
                @* http://blogs.msdn.com/b/ukadc/archive/2012/04/24/asp-net-mvc-amp-jquery-ui-autocomplete.aspx*@
                @*---------------------------------------------------------------------------------------*@
                @*---------------------------------------------------------------------------------------*@
                @*---------------------------------------------------------------------------------------*@
                @*---------------------------------------------------------------------------------------*@
                @Html.HiddenFor(model => model.IdCuentaPercepcionIIBBConvenio)
                @Html.TextBox("CodigoCuenta", (Model.CuentaIIBBconvenio == null ? "" : Model.CuentaIIBBconvenio.Codigo.ToString()), new { @class = "span2" })
                @Html.TextBox("DescripcionCuenta", (Model.CuentaIIBBconvenio == null ? "" : Model.CuentaIIBBconvenio.Descripcion), new { @class = "span10" })
                <script>
                    $("#CodigoCuenta").autocomplete({
                        source: '@Url.Action("GetCodigosCuentasAutocomplete2", "Cuenta")', minLength: 3,
                        messages: { noResults: "", results: function () { } },
                        select: proveedorSeleccionado2
                    })

                    $("#DescripcionCuenta").autocomplete({
                        source: '@Url.Action("GetCuentasAutocomplete", "Cuenta")',
                        minLength: 0,
                        messages: { noResults: "", results: function () { } },
                        select: proveedorSeleccionado2

                    });

                    function proveedorSeleccionado2(event, ui) {
                        $("#IdCuentaPercepcionIIBBConvenio").val(ui.item.id);
                        $("#CodigoCuenta").val(ui.item.codigo);
                        $("#DescripcionCuenta").val(ui.item.title);
                        event.preventDefault();
                    }
                </script>
                @*---------------------------------------------------------------------------------------*@
                @*---------------------------------------------------------------------------------------*@
                @*---------------------------------------------------------------------------------------*@
                @*---------------------------------------------------------------------------------------*@
            </div>
        </div>
        <div class="row-fluid">
            <div class="span2 lightblue">
                @Html.LabelFor(model => model.ImporteTopeMinimoPercepcion, "Tope mínimo")
                @Html.TextBoxFor(model => model.ImporteTopeMinimoPercepcion, new { @class = "span12" })
                @Html.ValidationMessageFor(model => model.ImporteTopeMinimoPercepcion)
                @*----------------------------------------------------------------------------*@
                @Html.LabelFor(model => model.CodigoNormaPercepcion, "Codigo de norma")
                @Html.TextBoxFor(model => model.CodigoNormaPercepcion, new { @class = "span12" })
                @Html.ValidationMessageFor(model => model.CodigoNormaPercepcion)
            </div>
        </div>
        <div style="visibility: hidden; display: none">
            <h6>
                Compras</h6>
            <div class="row-fluid">
                <div class="span2 lightblue">
                    @Html.LabelFor(model => model.IdCuentaPercepcionIIBBCompras, "Cuenta contable")
                    @Html.TextBoxFor(model => model.IdCuentaPercepcionIIBBCompras, new { @class = "span12" })
                    @Html.ValidationMessageFor(model => model.IdCuentaPercepcionIIBBCompras)
                </div>
            </div>
        </div>
        <br />
        <br />
        <div class="row-fluid">
            <div class="span4 lightblue">
                Acumula mensualmente los importes pagados para el calculo del impuesto
            </div>
            <div class="span1 lightblue">
                @Html.RadioButtonFor(model => model.AcumulaMensualmente, "SI") SI
            </div>
            <div class="span1 lightblue">
                @Html.RadioButtonFor(model => model.AcumulaMensualmente, "NO") NO
            </div>
        </div>
        <br />
        <br />
        <div class="row-fluid">
            <div class="span4 lightblue">
                Base sobre la que se aplicará la alícuota del impuesto
            </div>
            <div class="span2 lightblue">
                @Html.RadioButtonFor(model => model.BaseCalculo, "SIN IMPUESTOS") Importe sin impuesto
            </div>
            <div class="span2 lightblue">
                @Html.RadioButtonFor(model => model.BaseCalculo, "TOTAL PAGADO") Importe total
            </div>
        </div>
        <br />
        <br />
        @* <div class="navbar navbar-fixed-bottom">*@
        <div class="row-fluid">
            <div class="span10 lightblue">
                <input type="submit" id="Guardar" value="Aceptar" class="btn btn-primary" />
                @*<input type="button" id="Guardar" value="Borrar" class="butCancela" />*@
                @if (Model.IdIBCondicion > 0)
                { @Html.ActionLink("Borrar", "DeleteConfirmedDirecto", new { id = Model.IdIBCondicion }, new { @class = "btn btn-link" }) 
                }
                @Html.ActionLink("Volver al listado", "Index", null, new { @class = "btn btn-link" })
                @*<input type="file" id="file-id" name="file_name" onchange="theimage()"/>
            <input type="text" name="file_path" id="file-path"/>*@
            </div>
        </div>
        @* </div>*@
        </form>
    </div>
    <!--/.fluid-container-->

}
