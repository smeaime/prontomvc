// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
#pragma warning disable 1591, 3008, 3009
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace ProntoMVC.Controllers
{
    public partial class AutorizacionController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AutorizacionController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected AutorizacionController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DocumentosPorAutoriza()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DocumentosPorAutoriza);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Autorizaciones()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Autorizaciones);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.FileResult Imprimir()
        {
            return new T4MVC_System_Web_Mvc_FileResult(Area, Name, ActionNames.Imprimir);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult Autorizaciones_TX_PorFormulario_Comparativa()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.Autorizaciones_TX_PorFormulario_Comparativa);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult Autorizaciones_TX_PorFormulario_Autorizacion()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.Autorizaciones_TX_PorFormulario_Autorizacion);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Firmar()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Firmar);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.RedirectToRouteResult AddToEmpresa()
        {
            return new T4MVC_System_Web_Mvc_RedirectToRouteResult(Area, Name, ActionNames.AddToEmpresa);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.RedirectToRouteResult RemoveFromEmpresa()
        {
            return new T4MVC_System_Web_Mvc_RedirectToRouteResult(Area, Name, ActionNames.RemoveFromEmpresa);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AutorizacionController Actions { get { return MVC.Autorizacion; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Autorizacion";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Autorizacion";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string ArbolAutorizaciones = "ArbolAutorizaciones";
            public readonly string DocumentosPorAutoriza = "DocumentosPorAutoriza";
            public readonly string Autorizaciones = "Autorizaciones";
            public readonly string Imprimir = "Imprimir";
            public readonly string Autorizaciones_TX_PorFormulario_Comparativa = "Autorizaciones_TX_PorFormulario_Comparativa";
            public readonly string Autorizaciones_TX_PorFormulario_Autorizacion = "Autorizaciones_TX_PorFormulario_Autorizacion";
            public readonly string Firmar = "Firmar";
            public readonly string AddToEmpresa = "AddToEmpresa";
            public readonly string RemoveFromEmpresa = "RemoveFromEmpresa";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string ArbolAutorizaciones = "ArbolAutorizaciones";
            public const string DocumentosPorAutoriza = "DocumentosPorAutoriza";
            public const string Autorizaciones = "Autorizaciones";
            public const string Imprimir = "Imprimir";
            public const string Autorizaciones_TX_PorFormulario_Comparativa = "Autorizaciones_TX_PorFormulario_Comparativa";
            public const string Autorizaciones_TX_PorFormulario_Autorizacion = "Autorizaciones_TX_PorFormulario_Autorizacion";
            public const string Firmar = "Firmar";
            public const string AddToEmpresa = "AddToEmpresa";
            public const string RemoveFromEmpresa = "RemoveFromEmpresa";
        }


        static readonly ActionParamsClass_DocumentosPorAutoriza s_params_DocumentosPorAutoriza = new ActionParamsClass_DocumentosPorAutoriza();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DocumentosPorAutoriza DocumentosPorAutorizaParams { get { return s_params_DocumentosPorAutoriza; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DocumentosPorAutoriza
        {
            public readonly string IdAutoriza = "IdAutoriza";
        }
        static readonly ActionParamsClass_Autorizaciones s_params_Autorizaciones = new ActionParamsClass_Autorizaciones();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Autorizaciones AutorizacionesParams { get { return s_params_Autorizaciones; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Autorizaciones
        {
            public readonly string sidx = "sidx";
            public readonly string sord = "sord";
            public readonly string page = "page";
            public readonly string rows = "rows";
            public readonly string _search = "_search";
            public readonly string searchField = "searchField";
            public readonly string searchOper = "searchOper";
            public readonly string searchString = "searchString";
            public readonly string FechaInicial = "FechaInicial";
            public readonly string FechaFinal = "FechaFinal";
            public readonly string IdObra = "IdObra";
        }
        static readonly ActionParamsClass_Imprimir s_params_Imprimir = new ActionParamsClass_Imprimir();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Imprimir ImprimirParams { get { return s_params_Imprimir; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Imprimir
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_Autorizaciones_TX_PorFormulario_Comparativa s_params_Autorizaciones_TX_PorFormulario_Comparativa = new ActionParamsClass_Autorizaciones_TX_PorFormulario_Comparativa();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Autorizaciones_TX_PorFormulario_Comparativa Autorizaciones_TX_PorFormulario_ComparativaParams { get { return s_params_Autorizaciones_TX_PorFormulario_Comparativa; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Autorizaciones_TX_PorFormulario_Comparativa
        {
            public readonly string IdComprobante = "IdComprobante";
            public readonly string IdFormulario = "IdFormulario";
        }
        static readonly ActionParamsClass_Autorizaciones_TX_PorFormulario_Autorizacion s_params_Autorizaciones_TX_PorFormulario_Autorizacion = new ActionParamsClass_Autorizaciones_TX_PorFormulario_Autorizacion();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Autorizaciones_TX_PorFormulario_Autorizacion Autorizaciones_TX_PorFormulario_AutorizacionParams { get { return s_params_Autorizaciones_TX_PorFormulario_Autorizacion; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Autorizaciones_TX_PorFormulario_Autorizacion
        {
            public readonly string IdAutorizacion = "IdAutorizacion";
        }
        static readonly ActionParamsClass_Firmar s_params_Firmar = new ActionParamsClass_Firmar();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Firmar FirmarParams { get { return s_params_Firmar; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Firmar
        {
            public readonly string IdFormulario = "IdFormulario";
            public readonly string IdComprobante = "IdComprobante";
            public readonly string OrdenAutorizacion = "OrdenAutorizacion";
            public readonly string IdAutorizo = "IdAutorizo";
        }
        static readonly ActionParamsClass_AddToEmpresa s_params_AddToEmpresa = new ActionParamsClass_AddToEmpresa();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddToEmpresa AddToEmpresaParams { get { return s_params_AddToEmpresa; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddToEmpresa
        {
            public readonly string id = "id";
            public readonly string empresa = "empresa";
        }
        static readonly ActionParamsClass_RemoveFromEmpresa s_params_RemoveFromEmpresa = new ActionParamsClass_RemoveFromEmpresa();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RemoveFromEmpresa RemoveFromEmpresaParams { get { return s_params_RemoveFromEmpresa; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RemoveFromEmpresa
        {
            public readonly string id = "id";
            public readonly string empresa = "empresa";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Details = "Details";
                public readonly string Edit = "Edit";
                public readonly string Index = "Index";
            }
            public readonly string Details = "~/Views/Autorizacion/Details.cshtml";
            public readonly string Edit = "~/Views/Autorizacion/Edit.cshtml";
            public readonly string Index = "~/Views/Autorizacion/Index.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_AutorizacionController : ProntoMVC.Controllers.AutorizacionController
    {
        public T4MVC_AutorizacionController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ViewResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ArbolAutorizacionesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ArbolAutorizaciones()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ArbolAutorizaciones);
            ArbolAutorizacionesOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void DocumentosPorAutorizaOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int IdAutoriza);

        [NonAction]
        public override System.Web.Mvc.ActionResult DocumentosPorAutoriza(int IdAutoriza)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DocumentosPorAutoriza);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "IdAutoriza", IdAutoriza);
            DocumentosPorAutorizaOverride(callInfo, IdAutoriza);
            return callInfo;
        }

        [NonAction]
        partial void AutorizacionesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string sidx, string sord, int? page, int? rows, bool? _search, string searchField, string searchOper, string searchString, string FechaInicial, string FechaFinal, string IdObra);

        [NonAction]
        public override System.Web.Mvc.ActionResult Autorizaciones(string sidx, string sord, int? page, int? rows, bool? _search, string searchField, string searchOper, string searchString, string FechaInicial, string FechaFinal, string IdObra)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Autorizaciones);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "sidx", sidx);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "sord", sord);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "rows", rows);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "_search", _search);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "searchField", searchField);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "searchOper", searchOper);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "searchString", searchString);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "FechaInicial", FechaInicial);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "FechaFinal", FechaFinal);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "IdObra", IdObra);
            AutorizacionesOverride(callInfo, sidx, sord, page, rows, _search, searchField, searchOper, searchString, FechaInicial, FechaFinal, IdObra);
            return callInfo;
        }

        [NonAction]
        partial void ImprimirOverride(T4MVC_System_Web_Mvc_FileResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.FileResult Imprimir(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_FileResult(Area, Name, ActionNames.Imprimir);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ImprimirOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void Autorizaciones_TX_PorFormulario_ComparativaOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int IdComprobante, int IdFormulario);

        [NonAction]
        public override System.Web.Mvc.JsonResult Autorizaciones_TX_PorFormulario_Comparativa(int IdComprobante, int IdFormulario)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.Autorizaciones_TX_PorFormulario_Comparativa);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "IdComprobante", IdComprobante);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "IdFormulario", IdFormulario);
            Autorizaciones_TX_PorFormulario_ComparativaOverride(callInfo, IdComprobante, IdFormulario);
            return callInfo;
        }

        [NonAction]
        partial void Autorizaciones_TX_PorFormulario_AutorizacionOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int IdAutorizacion);

        [NonAction]
        public override System.Web.Mvc.JsonResult Autorizaciones_TX_PorFormulario_Autorizacion(int IdAutorizacion)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.Autorizaciones_TX_PorFormulario_Autorizacion);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "IdAutorizacion", IdAutorizacion);
            Autorizaciones_TX_PorFormulario_AutorizacionOverride(callInfo, IdAutorizacion);
            return callInfo;
        }

        [NonAction]
        partial void FirmarOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int IdFormulario, int IdComprobante, int OrdenAutorizacion, int IdAutorizo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Firmar(int IdFormulario, int IdComprobante, int OrdenAutorizacion, int IdAutorizo)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Firmar);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "IdFormulario", IdFormulario);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "IdComprobante", IdComprobante);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "OrdenAutorizacion", OrdenAutorizacion);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "IdAutorizo", IdAutorizo);
            FirmarOverride(callInfo, IdFormulario, IdComprobante, OrdenAutorizacion, IdAutorizo);
            return callInfo;
        }

        [NonAction]
        partial void AddToEmpresaOverride(T4MVC_System_Web_Mvc_RedirectToRouteResult callInfo, System.Guid id, string empresa);

        [NonAction]
        public override System.Web.Mvc.RedirectToRouteResult AddToEmpresa(System.Guid id, string empresa)
        {
            var callInfo = new T4MVC_System_Web_Mvc_RedirectToRouteResult(Area, Name, ActionNames.AddToEmpresa);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "empresa", empresa);
            AddToEmpresaOverride(callInfo, id, empresa);
            return callInfo;
        }

        [NonAction]
        partial void RemoveFromEmpresaOverride(T4MVC_System_Web_Mvc_RedirectToRouteResult callInfo, System.Guid id, string empresa);

        [NonAction]
        public override System.Web.Mvc.RedirectToRouteResult RemoveFromEmpresa(System.Guid id, string empresa)
        {
            var callInfo = new T4MVC_System_Web_Mvc_RedirectToRouteResult(Area, Name, ActionNames.RemoveFromEmpresa);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "empresa", empresa);
            RemoveFromEmpresaOverride(callInfo, id, empresa);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009
